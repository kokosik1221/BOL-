--[[
	Script Name: MASTER SERIES
    Author: kokosik1221
	Last Version: 52404
	02.01.2016
]]--

_G.autoupdate = true
load(Base64Decode("LuaR  “

         N‹   @ F@@ †€@ ÁŔ  ť€ Ä    E  ] €€  @€ @A A€ @  @ F@@ †€@ ÁŔ  ť€ Ä    E  ] €€  @€ @A AŔ @   KŔ J€Â„J€Â…J€B†J€Â†J€B‡J€Â‡J€BJ€ÂJ€B‰J€Â‰J€BŠJ€ÂŠJ€B‹J€Â‹J€BŚJ€ÂŚJ€BŤJ€ÂŤJ€BŽJ€ÂŽJ€BŹJ€ÂŹJ€BJ€ÂJ€B‘J€Â‘J€B’J€Â’J€B“J€Â“J€B”J€Â”J€B•J€Â•J€B–J€Â–J€B—J€Â—J€BJ€ÂJ€B™†ŔL ‡ M‡€€ ›@    € € Ą   €€šĄ@  € ›†ŔM Á  ť@ † N ĺ€  ŠŔ€ś† N ĺŔ  ŠŔ ť† N ĺ  ŠŔ€ť† N ĺ@ ŠŔ ž† N ĺ€ ŠŔ€ž† N ĺŔ ŠŔ ź†ŔO Ŕ € ť @€ĚĐAB ‚ Ý ÂM @€B ÂP ÂJ ‚˘€  #Áü†ŔL ‡ M‡€€ Ă     C    Ă    C    Ă  Q FCQ  V   €€ĂQ A C R €  ¤€ R   @€Q FCQ Ă V   €€ĂQ A C S €  ¦Ă€ Q FCQ  V   €€ĂQ AĂ C ĂS €  ¨C€ Q FCQ C V   €€ĂQ A C T €  ©€ %  Ş%C  Ş%  «%Ă  «%  ¬%C  ¬CB e 
C­CB eĂ 
CśCB e 
C­CB eC 
C«CB e 
C®CB eĂ 
C®CB e 
CŻCB eC 
CŻCB e 
C°CB eĂ 
C°CB e 
C±CB eC 
C±CB e 
C˛CB eĂ 
C˛CB e 
CłCB eC 
CłCB e 
C´CB eĂ 
C´CB e 
CµCB eC 
CµCB e 
C¶CB eĂ 
C¶CB e	 
C·CB eC	 
C·CB e	 
C¸ĂB eĂ	 
C­ĂB e
 
CśĂB eC
 
C­ĂB e
 
C«ĂB eĂ
 
C®ĂB e 
C®ĂB eC 
CŻĂB e 
CŻĂB eĂ 
C°ĂB e 
C¸ĂB eC 
CąĂB e 
CąĂB eĂ 
CşĂB e
 
C°ĂB eC
 
C±ĂB e
 
C±ĂB eĂ
 
C˛ĂB e 
C˛ĂB eC 
CłĂB e 
C´ĂB eĂ 
C´ĂB e 
CµĂB eC 
CşĂB e 
C¸C eĂ 
C­C e 
CśC eC 
C­C e 
C«C eĂ 
C»C e 
C®C eC 
C»C e 
C®C eĂ 
CŻC e 
CŻC eC 
CĽC e 
CĽC eĂ 
C°C e 
C°C eC 
C±C e 
C±C eĂ 
CłC e 
C´C eC 
C´C e 
CµC eĂ 
C¸CC e 
C­CC eC 
CśCC e 
C­CC eĂ 
C«CC e 
C®CC eC 
C˝CC e 
C˝CC eĂ 
C®CC e 
CŻCC eC 
CŻCC e 
CľCC eĂ 
C°CC e 
C°CC eC 
C±CC e 
C±CC eĂ 
C˛CC e 
C˛CC eC 
CłCC e 
C´CC eĂ 
C´CC e 
CµCC eC 
CşCC e 
C·CC eĂ 
C¸C e 
C­C eC 
CśC e 
C­C eĂ 
C«C e 
C®C eC 
CľC e 
CżC eĂ 
CżC e 
C®C eC 
CŻC e 
CŻC eĂ 
CŔC e 
C°C eC 
C°C e 
C±C eĂ 
C±C e 
C˛C eC 
CŔC e 
C˛C eĂ 
CłC e  
C´C eC  
C´C e  
CµC eĂ  
C·C e! 
C¸ĂC eC! 
C­ĂC e! 
CśĂC eĂ! 
C­ĂC e" 
C«ĂC eC" 
C®ĂC e" 
C®ĂC eĂ" 
CŻĂC e# 
CŻĂC eC# 
CÁĂC e# 
CÁĂC eĂ# 
C°ĂC e$ 
C°ĂC eC$ 
C±ĂC e$ 
C˛ĂC eĂ$ 
CłĂC e% 
C´ĂC eC% 
C´ĂC e% 
CµĂC eĂ% 
CÂĂC e& 
C·ĂC eC& 
C¸D e& 
C­D eĂ& 
CśD e' 
C­D eC' 
C«D e' 
C®D eĂ' 
CżD e( 
C®D eC( 
CŻD e( 
CŻD eĂ( 
CÂD e) 
CĂD eC) 
C°D e) 
C°D eĂ) 
C±D e* 
C±D eC* 
C˛D e* 
C˛D eĂ* 
CłD e+ 
C´D eC+ 
C´D e+ 
CµD eĂ+ 
C·D e, 
CµD eC, 
C¶D e, 
C¸CD eĂ, 
C­CD e- 
CśCD eC- 
C­CD e- 
C«CD eĂ- 
C®CD e. 
C®CD eC. 
CŻCD e. 
CŻCD eĂ. 
CĂCD e/ 
CÄCD eC/ 
C°CD e/ 
C°CD eĂ/ 
C±CD e0 
CÄCD eC0 
C±CD e0 
C˛CD eĂ0 
C˛CD e1 
CłCD eC1 
C´CD e1 
CłCD eĂ1 
C´CD e2 
CµCD eC2 
CĹCD e2 
C·CD eĂ2 
CµCD e3 
C¶CD eC3 
C¸D e3 
C­D eĂ3 
CśD e4 
C­D eC4 
C«D e4 
C®D eĂ4 
CĹD e5 
CĆD eC5 
C®D e5 
CŻD eĂ5 
CŻD e6 
C°D eC6 
C°D e6 
CĆD eĂ6 
C±D e7 
C±D eC7 
C˛D e7 
C˛D eĂ7 
CÇD e8 
CÇD eC8 
CłD e8 
C´D eĂ8 
C´D e9 
CµD eC9 
CµD e9 
C¶D eĂ9 
C·D e: 
C¸E eC: 
C­E e: 
CśE eĂ: 
C­E e; 
C«E eC; 
C®E e; 
C®E eĂ; 
CŻE e< 
CŻE eC< 
C°E e< 
C°E eĂ< 
C´E e= 
CµE eC= 
CČE e= 
CČE eĂ= 
CÉE e> 
CÉE eC> 
CĘE e> 
C±E eĂ> 
C±E e? 
C˛E eC? 
C˛E e? 
CµE eĂ? 
C¶E e@ 
C´E eC@ 
CłE e@ 
C¸ĂD eĂ@ 
C­ĂD eA 
CśĂD eCA 
C­ĂD eA 
C«ĂD eĂA 
C®ĂD eB 
C®ĂD eCB 
CŻĂD eB 
CĘĂD eĂB 
CŻĂD eC 
CĽĂD eCC 
CËĂD eC 
C°ĂD eĂC 
C°ĂD eD 
CËĂD eCD 
CĚĂD eD 
CĚĂD eĂD 
CÍĂD eE 
CÍĂD eCE 
C±ĂD eE 
C±ĂD eĂE 
C˛ĂD eF 
CÎĂD eCF 
C˛ĂD eF 
CłĂD eĂF 
C´ĂD eG 
C´ĂD eCG 
CµĂD eG 
C·ĂD eĂG 
C¸CE eH 
C­CE eCH 
CśCE eH 
C­CE eĂH 
C«CE eI 
CÎCE eCI 
C®CE eI 
C®CE eĂI 
CŻCE eJ 
CŻCE eCJ 
CĎCE eJ 
C°CE eĂJ 
C°CE eK 
CĎCE eCK 
CłCE eK 
CĐCE eĂK 
C˛CE eL 
CĐCE eCL 
C˛CE eL 
C±CE eĂL 
C±CE eM 
CłCE eCM 
C´CE eM 
CµCE eĂM 
CşCE eN 
C·CE eCN 
C¸E eN 
C­E eĂN 
CśE eO 
C­E eCO 
C«E eO 
CÎE eĂO 
C®E eP 
C®E eCP 
CŻE eP 
CŻE eĂP 
CŃE eQ 
CĎE eCQ 
C°E eQ 
C°E eĂQ 
C±E eR 
C±E eCR 
C˛E eR 
C˛E eĂR 
CłE eS 
C´E eCS 
CŃE eS 
C´E eĂS 
CµE eT 
CÂE eCT 
C¸ĂE eT 
C­ĂE eĂT 
CśĂE eU 
C­ĂE eCU 
C«ĂE eU 
C®ĂE eĂU 
C®ĂE eV 
CŻĂE eCV 
CŻĂE eV 
CĎĂE eĂV 
C°ĂE eW 
C°ĂE eCW 
CłĂE eW 
CĐĂE eĂW 
C˛ĂE eX 
CĐĂE eCX 
C˛ĂE eX 
C±ĂE eĂX 
CÄĂE eY 
CłĂE eCY 
C´ĂE eY 
CČĂE eĂY 
CµĂE eZ 
CČĂE eCZ 
CŇĂE eZ 
C·ĂE eĂZ 
C¸F e[ 
C­F eC[ 
CśF e[ 
C­F eĂ[ 
C«F e\ 
CŇF eC\ 
CÓF e\ 
C®F eĂ\ 
C®F e] 
CÓF eC] 
CŻF e] 
CŻF eĂ] 
CĎF e^ 
C°F eC^ 
C°F e^ 
CĎF eĂ^ 
CÍF e_ 
CÍF eC_ 
C˛F e_ 
C˛F eĂ_ 
C±F e` 
C±F eC` 
CłF e` 
C´F eĂ` 
CČF ea 
CµF eCa 
CČF ea 
C·F eĂa 
C¸CF eb 
C­CF eCb 
CśCF eb 
C­CF eĂb 
C«CF ec 
C®CF eCc 
C®CF ec 
CŻCF eĂc 
CĘCF ed 
CŻCF eCd 
CĎCF ed 
C°CF eĂd 
C°CF ee 
CĎCF eCe 
CĚCF ee 
CÍCF eĂe 
CÍCF ef 
C˛CF eCf 
CÔCF ef 
C˛CF eĂf 
C±CF eg 
C±CF eCg 
CłCF eg 
C´CF eĂg 
CµCF eh 
C·CF eCh 
C¸ĂF eh 
C­ĂF eĂh 
CśĂF ei 
C­ĂF eCi 
C«ĂF ei 
C®ĂF eĂi 
C®ĂF ej 
CŻĂF eCj 
CŻĂF ej 
C°ĂF eĂj 
CÔĂF ek 
CŐĂF eCk 
CŐĂF ek 
C°ĂF eĂk 
C±ĂF el 
C±ĂF eCl 
C˛ĂF el 
C˛ĂF eĂl 
CłĂF em 
CÖĂF eCm 
C´ĂF em 
C´ĂF eĂm 
CµĂF en 
C·ĂF eCn 
C¸G en 
C­G eĂn 
CśG eo 
C­G eCo 
C«G eo 
CÎG eĂo 
C®G ep 
C®G eCp 
CŻG ep 
CŻG eĂp 
CÖG eq 
C°G eCq 
C°G eq 
CłG eĂq 
C˛G er 
C˛G eCr 
C±G er 
CÄG eĂr 
CłG es 
C´G eCs 
CµG es 
CÖG eĂs 
C·G et 
C¸CG eCt 
C­CG et 
CśCG eĂt 
C­CG eu 
C«CG eCu 
C®CG eu 
C®CG eĂu 
CŻCG ev 
CŻCG eCv 
CÖCG ev 
C°CG eĂv 
CµCG ew 
C¶CG eCw 
C×CG ew 
C×CG eĂw 
CŘCG ex 
CŘCG eCx 
CŮCG ex 
CŮCG eĂx 
CÚCG ey 
CÚCG eCy 
C°CG ey 
CłCG eĂy 
C˛CG ez 
C±CG eCz 
C±CG ez 
C˛CG eĂz 
CŰ%{  ŰCG eC{ 
CŔCG e{ 
CłCG eĂ{ 
C´CG e| 
CµCG eC| 
CÖCG e| 
C·CG eĂ| 
C¸F e} 
C­F eC} 
CśF e} 
C­F eĂ} 
C«F e~ 
C®F eC~ 
C®F e~ 
CŻF eĂ~ 
CŻF e 
C°F eC 
CÜF e 
C°F eĂ 
C±F e€ 
C±F eC€ 
C˛F e€ 
C˛F eĂ€ 
CłF e 
CÖF eC 
C´F e 
C´F eĂ 
CµF e‚ 
C·F eC‚ 
C¸G e‚ 
C­G eĂ‚ 
CśG e 
C­G eC 
C«G e 
C®G eĂ 
C®G e„ 
CŻG eC„ 
CŻG e„ 
C°G eĂ„ 
C°G e… 
C±G eC… 
C±G e… 
C˛G eĂ… 
C˛G e† 
CÜG eC† 
CłG e† 
CÖG eĂ† 
C´G e‡ 
C´G eC‡ 
CµG e‡ 
C·G eĂ‡ 
C¸ĂG e 
C­ĂG eC 
CśĂG e 
C«ĂG eĂ 
C­ĂG e‰ 
CÝĂG eC‰ 
C®ĂG e‰ 
C®ĂG eĂ‰ 
CŻĂG eŠ 
CŻĂG eCŠ 
C°ĂG eŠ 
CÖĂG eĂŠ 
C°ĂG e‹ 
C·ĂG eC‹ 
CłĂG e‹ 
C´ĂG eĂ‹ 
CÝĂG eŚ 
CÄĂG eCŚ 
CŢĂG eŚ 
CŢĂG eĂŚ 
CßĂG eŤ 
CŔĂG eCŤ 
C˛ĂG eŤ 
C¸H eĂŤ 
C­H eŽ 
CśH eCŽ 
C­H eŽ 
C«H eĂŽ 
C®H eŹ 
C®H eCŹ 
CŻH eŹ 
CŻH eĂŹ 
C°H e 
C°H eC 
C±H e 
C±H eĂ 
C˛H e‘ 
C˛H eC‘ 
CÜH e‘ 
CłH eĂ‘ 
CÖH e’ 
C´H eC’ 
C´H e’ 
CµH eĂ’ 
C·H e“ 
C¸CH eC“ 
C­CH e“ 
CśCH eĂ“ 
C­CH e” 
C«CH eC” 
C®CH e” 
C®CH eĂ” 
CŻCH e• 
CŻCH eC• 
C°CH e• 
C°CH eĂ• 
C±CH e– 
C±CH eC– 
C˛CH e– 
C˛CH eĂ– 
CÜCH e— 
CłCH eC— 
CÖCH e— 
C´CH eĂ— 
C´CH e 
CµCH eC 
C·CH e 
C¸H eĂ 
C­H e™ 
CśH eC™ 
C­H e™ 
C«H eĂ™ 
C®H eš 
C®H eCš 
CŻH eš 
CŻH eĂš 
C°H e› 
C°H eC› 
C±H e› 
C±H eĂ› 
C˛H eś 
C˛H eCś 
CÜH eś 
CłH eĂś 
CÖH eť 
C´H eCť 
C´H eť 
CµH eĂť 
C·H ež 
C¸ĂH eCž 
C­ĂH ež 
CśĂH eĂž 
C­ĂH eź 
CÎĂH eCź 
C«ĂH eź 
C®ĂH eĂź 
C®ĂH e  
CŻĂH eC  
CŻĂH e  
CßĂH eĂ  
CŕĂH eˇ 
CŕĂH eCˇ 
C°ĂH eˇ 
C°ĂH eĂˇ 
C±ĂH e˘ 
C±ĂH eC˘ 
C˛ĂH e˘ 
C˛ĂH eĂ˘ 
CłĂH eŁ 
C´ĂH eCŁ 
C´ĂH eŁ 
CµĂH eĂŁ 
C·ĂH e¤ 
C¸I eC¤ 
C­I e¤ 
CśI eĂ¤ 
C­I eĄ 
C«I eCĄ 
C®I eĄ 
C®I eĂĄ 
CáI e¦ 
CáI eC¦ 
CâI e¦ 
CâI eĂ¦ 
CŻI e§ 
CŻI eC§ 
CßI e§ 
CŔI eĂ§ 
CăI e¨ 
C°I eC¨ 
C°I e¨ 
C±I eĂ¨ 
C±I e© 
C˛I eC© 
C˛I e© 
CłI eĂ© 
C´I eŞ 
C´I eCŞ 
CµI eŞ 
C·I eĂŞ 
C¸CI e« 
C­CI eC« 
CśCI e« 
C­CI eĂ« 
C«CI e¬ 
C®CI eC¬ 
C®CI e¬ 
CŻCI eĂ¬ 
CŻCI e­ 
CßCI eC­ 
C°CI e­ 
C°CI eĂ­ 
C±CI e® 
C±CI eC® 
CłCI e® 
C´CI eĂ® 
C´CI eŻ 
CµCI eCŻ 
C·CI eŻ 
C¸I eĂŻ 
C­I e° 
CśI eC° 
C­I e° 
C«I eĂ° 
C®I e± 
C®I eC± 
CŻI e± 
CŻI eĂ± 
CßI e˛ 
CăI eC˛ 
CäI e˛ 
CäI eĂ˛ 
C°I eł 
C°I eCł 
C±I eł 
C±I eĂł 
C˛I e´ 
C˛I eC´ 
CłI e´ 
C´I eĂ´ 
C´I eµ 
CµI eCµ 
C¸ĂI eµ 
C­ĂI eĂµ 
CśĂI e¶ 
C­ĂI eC¶ 
C«ĂI e¶ 
C®ĂI eĂ¶ 
C®ĂI e· 
CŻĂI eC· 
CŻĂI e· 
CßĂI eĂ· 
CäĂI e¸ 
CĺĂI eC¸ 
C°ĂI e¸ 
C°ĂI eĂ¸ 
C±ĂI eą 
C±ĂI eCą 
C˛ĂI eą 
C˛ĂI eĂą 
CłĂI eş 
C´ĂI eCş 
CµĂI eş 
C·ĂI eĂş 
C¸J e» 
C­J eC» 
CśJ e» 
C­J eĂ» 
C«J eĽ 
CĺJ eCĽ 
C®J eĽ 
C®J eĂĽ 
CćJ e˝ 
CŻJ eC˝ 
CŻJ e˝ 
CßJ eĂ˝ 
CłJ eľ 
C°J eCľ 
CÉJ eľ 
CćJ eĂľ 
C˛J eż 
C˛J eCż 
C±J eż 
C±J eĂż 
C´J eŔ 
CµJ eCŔ 
CçJ eŔ 
C°J eĂŔ 
C¸CJ eÁ 
C­CJ eCÁ 
CśCJ eÁ 
C­CJ eĂÁ 
C«CJ eÂ 
C®CJ eCÂ 
C®CJ eÂ 
CŻCJ eĂÂ 
CŻCJ eĂ 
CßCJ eCĂ 
CłCJ eĂ 
C°CJ eĂĂ 
CÉCJ eÄ 
CĘCJ eCÄ 
CĐCJ eÄ 
C˛CJ eĂÄ 
C˛CJ eĹ 
C±CJ eCĹ 
C±CJ eĹ 
C´CJ eĂĹ 
CµCJ eĆ 
C·CJ eCĆ 
C°CJ eĆ 
C¸J eĂĆ 
C­J eÇ 
CśJ eCÇ 
C­J eÇ 
C«J eĂÇ 
C®J eČ 
C˛J eCČ 
CçJ eČ 
CčJ eĂČ 
CčJ eÉ 
CéJ eCÉ 
CéJ eÉ 
CęJ eĂÉ 
CęJ eĘ 
CëJ eCĘ 
C®J eĘ 
CŻJ eĂĘ 
CŻJ eË 
CëJ eCË 
CěJ eË 
C°J eĂË 
CěJ eĚ 
CíJ eCĚ 
CíJ eĚ 
C°J eĂĚ 
CłJ eÍ 
C´J eCÍ 
CµJ eÍ 
CîJ eĂÍ 
C·J eÎ 
C´J eCÎ 
CµJ eÎ 
C¸ĂJ eĂÎ 
C­ĂJ eĎ 
CśĂJ eCĎ 
C­ĂJ eĎ 
C«ĂJ eĂĎ 
C®ĂJ eĐ 
C®ĂJ eCĐ 
CŻĂJ eĐ 
CŻĂJ eĂĐ 
CîĂJ eŃ 
CµĂJ eCŃ 
C¶ĂJ eŃ 
C×ĂJ eĂŃ 
C×ĂJ eŇ 
CŘĂJ eCŇ 
CŘĂJ eŇ 
CŮĂJ eĂŇ 
CŮĂJ eÓ 
CÚĂJ eCÓ 
CÚĂJ eÓ 
C°ĂJ eĂÓ 
C°ĂJ eÔ 
C±ĂJ eCÔ 
C±ĂJ eÔ 
C˛ĂJ eĂÔ 
CłĂJ eŐ 
C´ĂJ eCŐ 
C´ĂJ eŐ 
CµĂJ eĂŐ 
C·ĂJ eÖ 
C¸K eCÖ 
C­K eÖ 
CśK eĂÖ 
C­K e× 
CÎK eC× 
C«K e× 
C®K eĂ× 
C®K eŘ 
CŻK eCŘ 
CŻK eŘ 
CËK eĂŘ 
CďK eŮ 
C°K eCŮ 
C°K eŮ 
C±K eĂŮ 
C±K eÚ 
C˛K eCÚ 
C˛K eÚ 
CďK eĂÚ 
CłK eŰ 
CđK eCŰ 
C´K eŰ 
C´K eĂŰ 
CµK eÜ 
C·K eCÜ 
C¸K eÜ 
C­K eĂÜ 
CśK eÝ 
C­K eCÝ 
C«K eÝ 
C®K eĂÝ 
C®K eŢ 
CŻK eCŢ 
CŻK eŢ 
C°K eĂŢ 
C°K eß 
C±K eCß 
C±K eß 
C˛K eĂß 
CđK eŕ 
CńK eCŕ 
CńK eŕ 
CňK eĂŕ 
CéK eá 
CłK eCá 
C´K eá 
C´K eĂá 
CµK eâ 
C¸CK eCâ 
CśCy eâ 
CóCK eĂâ 
C­CK eă 
CÎCK eCă 
C«CK eă 
C®CK eĂă 
CóCK eä 
C®CK eCä 
CŻCK eä 
CŻCK eĂä 
CôCK eĺ 
C°CK eCĺ 
C°CK eĺ 
CôCK eĂĺ 
CŔCK eć 
C±CK eCć 
C±CK eć 
C˛CK eĂć 
CőCK eç 
CőCK eCç 
CöCK eç 
CöCK eĂç 
CłCK eč 
C´CK eCč 
C÷CK eč 
C´CK eĂč 
CµCK eé 
CµCK eCé 
C·CK eé 
C¸CK eĂé 
C÷CK eę 
CřCK eCę 
CřĂM A< C | eę 
Cś| eĂę 
Ců| eë 
C«| eCë 
Cş| eë 
C·%Ăë  ú| eě 
Cú| eCě 
Cű| eě 
Cű| eĂě 
Cü| eí 
Cü| eCí 
Cý| eí 
Cý| eĂí 
Cţ| eî 
Cţ| eCî 
C˙| eî 
C˙| A@ ĄĂî 
| AC@ Ąď 
ĂM A@ C @  eCď 
Cś@  eď 
C·ĂK eĂď 
C­ĂK eđ 
CśĂK eCđ 
C­ĂK eđ 
C«ĂK eĂđ 
CÎĂK eń 
C®ĂK eCń 
C®ĂK eń 
CŻĂK eĂń 
CŻĂK eň 
C°ĂK eCň 
C°ĂK eň 
C±ĂK eĂň 
C±ĂK eó 
C˛ĂK eCó 
C˛ĂK eó 
CłĂK eĂó 
C´ĂK eô 
CµĂK eCô 
C¸L eô 
C­L eĂô 
CśL eő 
C­L eCő 
C«L eő 
CÎL eĂő 
C®L eö 
C®L eCö 
CŻL eö 
CŻL eĂö 
C°L e÷ 
C°L eC÷ 
C±L e÷ 
C±L eĂ÷ 
C˛L eř 
C˛L eCř 
CłL eř 
C´L eĂř 
C´L eů 
CµL eCů 
C·L eů 
C¸CL eĂů 
C­CL eú 
CśCL eCú 
C­CL eú 
C«CL eĂú 
C®CL eű 
C®CL eCű 
CŻCL eű 
CŻCL AĂ@ ĄĂű 
CL eü 
C°CL eCü 
C°CL eü 
C±CL eĂü 
C±CL eý 
C˛CL eCý 
C˛CL eý 
CłCL eĂý 
C´CL eţ 
C´CL eCţ 
CµCL eţ 
C·CL eĂţ 
C¸L e˙ 
C­L eC˙ 
CśL e˙ 
C­L eĂ˙ 
C«L e 
CÎL eC 
C®L e 
C®L eĂ 
CŻL e
CŻL eC
C°L e
C°L eĂ
C»L AA Ą
L ACA ĄC
L AA Ą
L eĂ
C±L e
C±L eC
C˛L e
C˛L AĂA ĄĂ
L e
CĚL eC
CÍL e
CłL eĂ
C´L e
C´L eC
CµL e
C·L eĂ
C¸B e@CB eC@B e@ĂB eĂ@C e@CC eC@C e@ĂC eĂ@% ý%C ýD e@CD eĂ@D e	@ĂD eC	@E e	@CE eĂ	@E e
@ĂE eC
@F e
@CF eĂ
@F e@ĂF eC@G e@CG eĂ@G e@ĂG eC@H e@CQ ACH CK   Ă  „H AÄH ĄÄ€„FQ € ]„ [   €AI FD € ]„ @€K DI Á„I ĹI AJ EJ Á…J ĆJ AK FK Á†K ÇK AL GL Á‡L ČL AM dD ‹€ÁDM …M AĹM N ÁEN †N AĆN O ÁFO ‡O AÇO P ÁGP P AČP Q ÁHQ ‰Q AÉQ 	R ÁIR ŠR AĘR 
S ÁJS ‹S AËS T ÁKT ŚT AĚT U ÁLU ŤU AÍU 
V ÁMV ŽV AÎV W ÁNW ŹW AĎW X ÁOX X AĐX Y ÁPY ‘Y ¤D ÁÄY Z AEZ …Z ÁĹZ [ AF[ †[ ÁĆ[ \ AG\ ‡\ ÁÇ\ ] AH] ] ÁČ] 	^ AI^ ¤„€	Ë€…^ AĹ^ _ ÁE_ †_ AĆ_ ` ÁF` ‡` AÇ` a ÁGa a AČa b äD€€AEb …b ÁĹb c AFc †c ÁĆc d AGd ‡d ÁÇd e AHe e ÁČe 	f AIf ‰f $E 	K Ĺf Ág Fg A†g Ćg Áh Gh A‡h Çh Ái Hi Ai Či Áj Ij A‰j Éj Á	k Jk AŠk Ęk Á
l Kl A‹l Ël Ám Lm AŚm Ěm Án Mn AŤn Ín Á
o No AŽo Îo Áp Op AŹp Ďp Áq Pq Aq Đq Ár Qr A‘r Ńr Ás dE Es Á…s Ćs At Ft Á†t Çt Au Gu Á‡u b AČu d… ‹€Áv Fv A†v Ćv Áw Gw A‡w Çw Áx Hx Ax Čx Áy Iy A‰y Éy Á	z Jz AŠz Ęz Á
{ K{ A‹{ Ë{ Á| L| AŚ| Ě| Á} M} AŤ} Í} Á
~ ¤E€Ë F~ A†~ Ć~ Á G A‡ Ç Á€ H€ A€ Č€ Á I A‰ É Á	‚ J‚ AŠ‚ Ę‚ Á
 K A‹ Ë ÁË_ „ AL„ Ś„ ÁĚ„ 
… AM… Ť… äE€ AĆ… † ÁF† ‡† AÇ† ‡ ÁG‡ ‡ AČ‡  ÁH ‰ AÉ 	‰ ÁI‰ Š‰ AĘ‰ 
Š ÁJŠ ‹Š AËŠ ‹ ÁK‹ Ś‹ AĚ‹ Ś ÁLŚ ŤŚ $F K ĆŚ ÁŤ GŤ A‡Ť ‡z ÁÇc Čw AČŤ Ž ÁHŽ ‰Ž AÉŽ Én Á	Ź Ęj AJŹ ŠŹ ÁĘŹ  AK ‹ ÁË ‘ Ai L‘ ÁŚ‘ Í‘ A
’ M’ ÁŤ| Îu dF€‹€Ád Gx A‡’ Ç’ ÁÇx ¤F€Ë “ AG“ ‡“ ÁÇ“ ” AH” ” ÁH ‰w AÉ” 	• ÁI• Š• AĘ• 
– ÁJ– K_ A‹– Ë– Á— ĚŠ AL— Ś— ÁŚp Íp AÍ— 
 ÁM Ž AÎ ™ ÁN™ Ź™ AĎ™ š ÁOš š AĐš › ÁP› ‘› AŃ› ś ÁQś ’ś AŇś ť ÁRť “ť AÓť äF ž AGž ‡ž ÁÇž ź AHź ź ÁČź 	  AÉy I  Á‰  Ę  A
ˇ Š| ÁJˇ ‹ˇ A‹r Ëˇ Á˘ Ś AL˘ Ś˘ ÁĚ˘ 
Ł AMŁ ŤŁ ä†€
 AÇŁ ¤ ÁG¤ ¤ $G K€s ÁGs … AH… s Á… ‰u A	b 	~ dG€Ç¤ ĺ
Ŕ†ÇM ÁĄ ťG Ą †‡ ĺG
ŠÇ‡śĄ †‡ ÁGĄ %
ŠĄ †‡ Á‡Ą %Č
Š†ÇM ÁÇĄ ťG ÇĄ †‡ ĺŠÇ‡ś¦ ĺGŔÇĄ †‡ ĺ‡ŠÇ‡ůÇĄ †‡ ÁG¦ %ČŠÇĄ †‡ ĺŠÇ‡ËÇĄ †‡ Á‡¦ %HŠÇĄ †‡ ÁÇ¦ %ŠÇĄ †‡ Á§ %ČŠÇĄ †‡ ÁG§ %ŠÇĄ †‡ Á‡§ %HŠÇĄ †‡ ÁÇ§ %ŠÇĄ †‡ Á¨ %ČŠÇĄ †‡ ÁG¨ %ŠÇĄ †‡ Á‡¨ %HŠÇĄ †‡ ÁÇ¨ %ŠÇĄ †‡ Á© %ČŠÇĄ †‡ ÁG© %ŠÇĄ †‡ Á‡© %HŠÇ© ĺ‡ŔŞ ĺÇŔGŞ ĺŔ‡Ş ĺGŔÇŞ ĺ‡Ŕ« ĺÇŔG« ĺŔ‡« ĺGŔ†ÇP ÁÇ« %Š € °     assert    load 
   Base64Decode 9  G0x1YVIAAQQEBAgAGZMNChoKAAAAAAAAAAAAAQIKAAAABgBAAEFAAAAdQAABBkBAAGUAAAAKQACBBkBAAGVAAAAKQICBHwCAAAQAAAAEBgAAAGNsYXNzAAQNAAAAU2NyaXB0U3RhdHVzAAQHAAAAX19pbml0AAQLAAAAU2VuZFVwZGF0ZQACAAAAAgAAAAgAAAACAAotAAAAhkBAAMaAQAAGwUAABwFBAkFBAQAdgQABRsFAAEcBwQKBgQEAXYEAAYbBQACHAUEDwcEBAJ2BAAHGwUAAxwHBAwECAgDdgQABBsJAAAcCQQRBQgIAHYIAARYBAgLdAAABnYAAAAqAAIAKQACFhgBDAMHAAgCdgAABCoCAhQqAw4aGAEQAx8BCAMfAwwHdAIAAnYAAAAqAgIeMQEQAAYEEAJ1AgAGGwEQA5QAAAJ1AAAEfAIAAFAAAAAQFAAAAaHdpZAAEDQAAAEJhc2U2NEVuY29kZQAECQAAAHRvc3RyaW5nAAQDAAAAb3MABAcAAABnZXRlbnYABBUAAABQUk9DRVNTT1JfSURFTlRJRklFUgAECQAAAFVTRVJOQU1FAAQNAAAAQ09NUFVURVJOQU1FAAQQAAAAUFJPQ0VTU09SX0xFVkVMAAQTAAAAUFJPQ0VTU09SX1JFVklTSU9OAAQEAAAAS2V5AAQHAAAAc29ja2V0AAQIAAAAcmVxdWlyZQAECgAAAGdhbWVTdGF0ZQAABAQAAAB0Y3AABAcAAABhc3NlcnQABAsAAABTZW5kVXBkYXRlAAMAAAAAAADwPwQUAAAAQWRkQnVnc3BsYXRDYWxsYmFjawABAAAACAAAAAgAAAAAAAMFAAAABQAAAAwAQACBQAAAHUCAAR8AgAACAAAABAsAAABTZW5kVXBkYXRlAAMAAAAAAAAAQAAAAAABAAAAAQAQAAAAQG9iZnVzY2F0ZWQubHVhAAUAAAAIAAAACAAAAAgAAAAIAAAACAAAAAAAAAABAAAABQAAAHNlbGYAAQAAAAAAEAAAAEBvYmZ1c2NhdGVkLmx1YQAtAAAAAwAAAAMAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABgAAAAYAAAAGAAAABgAAAAUAAAADAAAAAwAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAIAAAACAAAAAgAAAAIAAAAAgAAAAUAAABzZWxmAAAAAAAtAAAAAgAAAGEAAAAAAC0AAAABAAAABQAAAF9FTlYACQAAAA4AAAACAA0XAAAAhwBAAIxAQAEBgQAAQcEAAJ1AAAKHAEAAjABBAQFBAQBHgUEAgcEBAMcBQgABwgEAQAKAAIHCAQDGQkIAx4LCBQHDAgAWAQMCnUCAAYcAQACMAEMBnUAAAR8AgAANAAAABAQAAAB0Y3AABAgAAABjb25uZWN0AAQRAAAAc2NyaXB0c3RhdHVzLm5ldAADAAAAAAAAVEAEBQAAAHNlbmQABAsAAABHRVQgL3N5bmMtAAQEAAAAS2V5AAQCAAAALQAEBQAAAGh3aWQABAcAAABteUhlcm8ABAkAAABjaGFyTmFtZQAEJgAAACBIVFRQLzEuMA0KSG9zdDogc2NyaXB0c3RhdHVzLm5ldA0KDQoABAYAAABjbG9zZQAAAAAAAQAAAAAAEAAAAEBvYmZ1c2NhdGVkLmx1YQAXAAAACgAAAAoAAAAKAAAACgAAAAoAAAALAAAACwAAAAsAAAALAAAADAAAAAwAAAANAAAADQAAAA0AAAAOAAAADgAAAA4AAAAOAAAACwAAAA4AAAAOAAAADgAAAA4AAAACAAAABQAAAHNlbGYAAAAAABcAAAACAAAAYQAAAAAAFwAAAAEAAAAFAAAAX0VOVgABAAAAAQAQAAAAQG9iZnVzY2F0ZWQubHVhAAoAAAABAAAAAQAAAAEAAAACAAAACAAAAAIAAAAJAAAADgAAAAkAAAAOAAAAAAAAAAEAAAAFAAAAX0VOVgA=    bt 
   ScriptStatus    TGJINOJOMKJ    QDGFKLGLKCF     €–é@   Ahri    Annie    Brand    Diana    Fizz    Galio    Gragas    Lux    Zed    Veigar    Ekko    Graves    MissFortune    Varus 	   Tristana    Ezreal    Rengar    Shaco    Vi    Zac    XinZhao    Elise 	   Malphite    Skarner    Trundle    Blitzcrank    Lulu    Morgana    Zilean    Soraka    Alistar    Braum 
   Gangplank    Olaf    Poppy    Riven    Rumble    DrMundo 	   Renekton    Shen    Fiora    myHero 	   charName    AutoupdaterMsg    Update    class    CScriptUpdate    __init    print 
   CreateSocket 
   Base64Encode    GetOnlineVersion    DownloadUpdate    pairs    gsub    %s+        _G 
   FileExist 	   LIB_PATH    /VPrediction.lua    require    VPrediction    VP 	   VIP_USER    /DivinePred.lua    DivinePred    DP    /HPrediction.lua    HPrediction    HP    /SPrediction.lua    SPrediction    SP    TargetHaveBuff2    OnLoad    OnTick    ComboActive 
   HarassActive    FarmActive    LoadOrb    Menu    Combo    Harass    Farm    JungleFarm    AutoLvl    KillSteall    CastQ    CastW    CastE    CastR    OnDraw    CalcDMG    DmgCalc    OnApplyBuff 
   OnRemoveBuff    OnCreateObj    OnDeleteObj 	   OrbwalkQ    IsReturning    OnProcessSpell 	   OnWndMsg    AutoWR    stackp    stackp2    FlashR    OnProcessAttack    HavePassive    CastRC    AutoQ    AutoW    Combo1    Combo2    WCheck 
   comboQRWE 
   comboRQWE    AllDmg    Escape    CastE2 	   CheckUlt    escape 
   OnSendPacket    Q2JF    AutoQQ    StealJungle    Auto    CastQ2    AutoShield    Swap    SwapR    ComboDamage    WState    RState 
   OnUpdateBuff 
   GetStacks    QDamage    EDamage    RDamage 
   Collision    AutoE 	   HaveStun    IDMG    QDMG    WDMG    RDMG 
   CastEStun    AfterAA 	   AutoHeal 
   CheckBuff    CastR3    CastR2    AutoF 	   CheckULT 
   QRangeUpdate 
   getTarget    forceTarget    Insec 	   CastRAOE    PlaceInitialBox    RotateAroundPoint    Ilumin    Smite 
   ERangeUpdate 
   RemoveAxe 
   GetSource 
   GetRadius 	   InTurret 	   InRadius    InAxeRadius 	   CheckAxe    CheckCatch    CastE33 	   GetAngle 	   autoheal    Damage    CDCheck    CastQ1    CastW1    CastW2    CastE1    Support    QonDash    QonImmobile 
   ExtendedQ    PredictPixPosition    CombinedPos    CombinedPredict    AutoR 
   StunCombo 
   CheckBomb    AutoULT 	   AutoULT2 
   OnNewPath    FlashQ    WDamage    OnProcesSpell    CastLinkedBarel    DetonateBarels    Find1HPBarelToEnemy    Find1HPLinkedBarel    GetMidPoint 	   GetBarel    BarelsCountOnTarget    ONEHPBarelsCountOnTarget    cc    autow    AAMDG    QMDG    RMDG    updatebarrels    AutoAxe    CheckWallStun 	   FindRCel 
   CalcItems 	   CastRVIP    CalculateUltSingle    CalculateUltMultiple    GetClosestEnemy    Vector    lerp    GetRDMG    UseTAH 	   AutoStun    CastECombo    CastRCombo    CastRCombo2    CalcDMGult    OnAnimation    Jump    GetStartEnd    GetWallNear 
   _RivenORB    LoadToMenu    GetAARange 
   isInRange    OrbWalk    ForceTarget    GetTime    WindUpTime 
   CanAttack    CanMove    EvadeStatus    AfterAttack    RegisterAfterAttackCallback    KillableMinion    FarmMinion 
   JungleMinion    _AutoShield    ULT    HaveUltimatePassive    PassiveRadiusPoint    UltimatePassivePos    AADMG 
   BlockMove    CheckOB    Attack    ResetAA    DisableMove    EnableMove    DisableAttacks    EnableAttacks    ForceOrbwalkPosition 
   AddSpellMenu    GetCustomTarget    getHitBoxRadius    GetBestLineFarmPosition    CountObjectsOnLineSegment    CountObjectsNearPos    GetBestCircleFarmPosition    MinionCount 
   CountTeam    EnemyCount    GetMinionCollisionM    GetHeroCollisionM    getHitBoxRadius2    DrawCircleNextLvl    round    DrawCircle2    missedspells.txt    Unknown    writeConfigsspells    dofile    Recall    recall    OdinCaptureChannel 
   LanternWAlly    varusemissiledummy    khazixqevo    khazixwevo    khazixeevo    khazixrevo    braumedummyvoezreal    braumedummyvonami    braumedummyvocaitlyn    braumedummyvoriven    braumedummyvodraven    braumedummyvoashe    azirdummyspell    RegenerationPotion    FlaskOfCrystalWater    ItemCrystalFlask    ItemMiniRegenPotion    PotionOfBrilliance    PotionOfElusiveness    PotionOfGiantStrength    OracleElixirSight    OracleExtractSight    VisionWard 
   SightWard 
   sightward    ItemGhostWard 
   ItemMiniWard 
   ElixirOfRage    ElixirOfIllumination    wrigglelantern    DeathfireGrasp    HextechGunblade    shurelyascrest    IronStylus    ZhonyasHourglass    YoumusBlade 
   randuinsomen 
   RanduinsOmen 	   Mourning    OdinEntropicClaymore    BilgewaterCutlass    QuicksilverSash    HextechSweeper    ItemGlacialSpike    ItemMercurial    ItemWraithCollar 	   ItemSoTD    ItemMorellosBane    ItemPromote    ItemTiamatCleave 	   Muramana    ItemSeraphsEmbrace    ItemSwordOfFeastAndFamine    ItemFaithShaker 
   OdynsVeil 	   ItemHorn    ItemPoroSnack    ItemBlackfireTorch    HealthBomb    ItemDervishBlade    TrinketTotemLvl1    TrinketTotemLvl2    TrinketTotemLvl3    TrinketTotemLvl3B    TrinketSweeperLvl1    TrinketSweeperLvl2    TrinketSweeperLvl3    TrinketOrbLvl1    TrinketOrbLvl2    TrinketOrbLvl3    OdinTrinketRevive    RelicMinorSpotter 
   RelicSpotter    RelicGreaterLantern 
   RelicLantern    RelicSmallLantern    ItemFeralFlare    trinketorblvl2    trinketsweeperlvl2    trinkettotemlvl2    SpiritLantern    RelicGreaterSpotter    JayceStaticField    JayceToTheSkies    JayceThunderingBlow 	   Takedown    Pounce    Swipe    EliseSpiderQCast 
   EliseSpiderW    EliseSpiderEInitial 
   elisespidere    elisespideredescent 	   gnarbigq 	   gnarbigw 	   gnarbige    GnarBigQMissile    CaitlynHeadshotMissile    RumbleOverheatAttack    JarvanIVMartialCadenceAttack 
   ShenKiAttack    MasterYiDoubleStrike    sonaqattackupgrade    sonawattackupgrade    sonaeattackupgrade    NocturneUmbraBladesAttack    NautilusRavageStrikeAttack    ZiggsPassiveAttack    QuinnWEnhanced    LucianPassiveAttack    SkarnerPassiveAttack    KarthusDeathDefiedBuff    AzirTowerClick    azirtowerclick    azirtowerclickchannel 	   TrundleQ    LeonaShieldOfDaybreakAttack    XenZhaoThrust    NautilusAnchorDragMissile    RocketGrabMissile    VayneTumbleAttack    VayneTumbleUltAttack    NidaleeTakedownAttack    ShyvanaDoubleAttackHit    ShyvanaDoubleAttackHitDragon    frostarrow    FrostArrow    MonkeyKingQAttack    MaokaiTrunkLineMissile    FlashFrostSpell    xeratharcanopulsedamage     xeratharcanopulsedamageextended    xeratharcanopulsedarkiron    xeratharcanopulsediextended    SpiralBladeMissile    EzrealMysticShotMissile    EzrealMysticShotPulseMissile    jayceshockblast    BrandBlazeMissile    UdyrTigerAttack    TalonNoxianDiplomacyAttack 
   LuluQMissile    GarenSlash2    VolibearQAttack    dravenspinningattack    karmaheavenlywavec    ZiggsQSpell    UrgotHeatseekingHomeMissile    UrgotHeatseekingLineMissile    JavelinToss    RivenTriCleave 
   namiqmissile 
   NasusQAttack    BlindMonkQOne    ThreshQInternal    threshqinternal    QuinnQMissile    LissandraQMissile    EliseHumanQ 
   GarenQAttack    JinxQAttack 
   JinxQAttack2    yasuoq    xeratharcanopulse2    VelkozQMissile    KogMawQMis    BraumQMissile    KarthusLayWasteA1    KarthusLayWasteA2    KarthusLayWasteA3    karthuslaywastea3    karthuslaywastea2    karthuslaywastedeada1    MaokaiSapling2Boom 
   gnarqmissile    viktorqbuff    KogMawBioArcaneBarrageAttack 
   SivirWAttack    TwitchVenomCaskMissile    gravessmokegrenadeboom    mordekaisercreepingdeath 
   DrainChannel    jaycehypercharge    redcardpreattack    goldcardpreattack    bluecardpreattack    RenektonExecute    RenektonSuperExecute    EzrealEssenceFluxMissile    DariusNoxianTacticsONHAttack    UdyrTurtleAttack    talonrakemissileone 	   LuluWTwo    ObduracyAttack    KennenMegaProc    NautilusWideswingAttack    NautilusBackswingAttack    XerathLocusOfPower    yoricksummondecayed 
   Bushwhack    karmaspiritbondc    SejuaniBasicAttackW    AatroxWONHAttackLife    AatroxWONHAttackPower 
   JinxWMissile    GragasWAttack    braumwdummyspell    syndrawcast    SorakaWParticleMissile    KogMawVoidOozeMissile    ToxicShotAttack    LeonaZenithBladeMissile    PowerFistAttack    VayneCondemnMissile    ShyvanaFireballMissile    maokaisapling2boom    VarusEMissile    CaitlynEntrapmentMissile    jayceaccelerationgate 	   syndrae5    JudicatorRighteousFuryAttack    UdyrBearAttack    RumbleGrenadeMissile    Slash    hecarimrampattack    ziggse2    UrgotPlasmaGrenadeBoom    SkarnerFractureMissile    YorickSummonRavenous    BlindMonkEOne    EliseHumanE    PrimalSurge 
   ViEAttack    LissandraEMissile    yasuodummyspell    XerathMageSpearMissile 
   RengarEFinal    RengarEFinalMAX    KarthusDefileSoundDummy2    Pantheon_GrandSkyfall_Fall    LuxMaliceCannonMis    infiniteduresschannel    JarvanIVCataclysmAttack    jarvanivcataclysmattack    VayneUltAttack    RumbleCarpetBombDummy    ShyvanaTransformLeap    jaycepassiverangedattack    jaycepassivemeleeattack    jaycestancegth    MissileBarrageMissile    SprayandPrayAttack    jaxrelentlessattack    syndrarcasttime    InfernalGuardian    UdyrPhoenixAttack    FioraDanceStrike    xeratharcanebarragedi 
   NamiRMissile    HallucinateFull 
   QuinnRFinale    lissandrarenemy    SejuaniGlacialPrisonCast    yasuordummyspell    xerathlocuspulse    tempyasuormissile    PantheonRFall    blindmonkqtwo    blindmonkwtwo    blindmonketwo    infernalguardianguide    fizzjumptwo    fizzjumpbuffer    gragasbarrelrolltoggle    LeblancSlideM    luxlightstriketoggle    xeratharcanopulseextended    XenZhaoThrust3 
   ziggswtoggle    khazixwlong    khazixelong 
   renektondice    SejuaniNorthernWinds    shyvanafireballdragon2    shyvanaimmolatedragon    talonshadowassaulttoggle    viktorchaosstormguide    zedw2    ZedR2    khazixqlong    LeblancSoulShackleM    UdyrPhoenixStance 
   FrostShot 
   PowerFist    DariusNoxianTacticsONH    EliseR    JaxEmpowerTwo    JaxRelentlessAssault    JayceStanceHtG    JudicatorRighteousFury    kennenlrcancel    KogMawBioArcaneBarrage    LissandraE    MordekaiserMaceOfSpades    mordekaisercotgguide    NasusQ    NocturneParanoia    QuinnR    RengarQ    DeathsCaressFull    SivirW 
   PickACard 
   goldcardlock    redcardlock 
   bluecardlock    FullAutomatic    VayneTumble    MonkeyKingDoubleAttack    YorickSpectral    ViE 
   VorpalSpikes    FizzSeastonePassive    GarenSlash3    HecarimRamp    leblancslidereturn    leblancslidereturnm 	   Obduracy    UdyrTigerStance    UdyrTurtleStance    UdyrBearStance    UrgotHeatseekingMissile    XenZhaoComboTarget    dravenspinning    dravenrdoublecast    FioraDance    LeonaShieldOfDaybreak 
   MaokaiDrain3    NautilusPiercingGaze    RenektonPreExecute    RivenFengShuiEngine    ShyvanaDoubleAttack    shyvanadoubleattackdragon    SyndraW    TalonNoxianDiplomacy    TalonCutthroat    TrundleTrollSmash 
   VolibearQ    AatroxW 	   aatroxw2    JinxQ    GarenQ    XerathArcanopulseChargeUp    XerathLocusOfPower2    velkozqsplitactivate    NetherBlade    GragasQToggle    GragasW    SionW    sionpassivespeed    VarusQ    ZacE    ViQ    SionQ 
   getSpellType 
   SumSpells    Ready    GetSlot 
   ItemsCast    GetSlotItem 
   CastItems 
   HaveTaunt 	   HaveRoot 
   HaveCharm 	   HaveSlow 	   UseBotrk    UseBc    UseHgb    UseRh    UseTi    UseYg    UseRo    UseMs    UseZh 	   HaveBuff    Mikael    Frost    Solari    Twin    Exhaust    Heall    GetPrediction2    LevelSpell S  >   >    	   F @ @  Á€  Á  @   –€]@  €       print    <font color="#ff6600"><b> 
   MasterSeries $   :</b></font> <font color="#FFFFFF">    </font>                          ?   K            
@@€
Ŕ@
@A‚
ŔAF@B †€B ť€€ ‡ŔBV€€ 
@ „e   
@ †e@  
@€†e€  
@ ‡eŔ  
@€‡F D … € Ç @ @ GA ‡A ÇB C GBC ‡‚C ÇÂC ]@€ €    	   UseHttps     Host    raw.githubusercontent.com    VersionPath .   /kokosik1221/BOL-/master/MasterSeries.version    ScriptPath *   /kokosik1221/BOL-/master/MasterSeries.lua 	   SavePath    SCRIPT_PATH    GetCurrentEnv 
   FILE_NAME    CallbackUpdate    CallbackNoUpdate    CallbackNewVersion    CallbackError    CScriptUpdate    F   F       † @ Á@  ť@  €       AutoupdaterMsg     Updating, please don't press F9                          G   G       F @ @  Ĺ € –Ŕ ]@  €       AutoupdaterMsg 4   No Updates Found. You have got the lastest version                            H   H       F @ @  Ŕ     – ]@  €       AutoupdaterMsg    New Version found (    ).                          I   I       F @ @  ]@  €       AutoupdaterMsg #   There was an error while updating.                                                N   \    8   
@ €
Ŕ€€ÁÂ  ›   € € C    €C A ŚĂA D@ @ Dť€Á DB „BAÄ „ Ö„
ŔÁÂ  ›   € € C    €C A ŚĂA D@ @€Dť€Á DB „BAÄ „ Ö„
Ŕ†
€†
Ŕ‡
 ‚‡
@
€‚Ě‚D G@ ÝB€
 Ĺ‰ĆBE %  ÝB    €    
   LocalVersion    Host    VersionPath    /BoL/TCPUpdater/GetScript    5    6 
   .php?script= 
   Base64Encode    &rand=    math    random    ü×—A   ScriptPath 	   SavePath    CallbackUpdate    CallbackNoUpdate    CallbackNewVersion    CallbackError 
   CreateSocket    DownloadStatus "   Connect to Server for VersionInfo    AddTickCallback    Z   Z            @ @  €       GetOnlineVersion                                              ]   _    
   † @ Á@  @ Á@€ A €€ Ö€ť@  €       print    <font color="#FFFFFF">    os    clock    :                           `   r    *   ‡ @ ›@   €†@@ Á€  ť€ 
€ €@€‡Ŕ@ Ś Ať@ 
@Á
@A
 Â†@@ Á€  ť€ 
€ €‡ @ ‡@Bť€€ 
€€‡Ŕ@ Ś€BÁ A ť@ ‡Ŕ@ Ś€BA A ť@ ‡Ŕ@ ŚŔC AA ť@ 
@ ‰
 Â‰
@EŠ
@E‹ €    
   LuaSocket    require    socket    Socket    close     Size    RecvStarted     tcp    settimeout            b    ü×—A   t    connect 
   sx-bol.eu       T@   Url    Started 
   LastPrint        File                          s             Ě@Ŕ A  Ą  Ý€ Á  Ö Ě@ŔA ĄA  Ý€ €AA  ÁÁ $A€U€ QÂMAÂAÖ ß   € 
   A   ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/    gsub    .    0000    %d%d%d?%d?%d?%d?        ==    =       @      đ?   u   y    
   A   Ś@@ ť€ Á€  Á  A á@€Ŕ€ ‚‚NÂ@RB‚‚QBB € €Â B    € V ‚ŕ ü_   € 	          byte        @      đ?      đż       @           1    0                         y   ~    
   U    Ŕ @ €A@  _  A€  Ŕ  Á   Á  ˇŔ€ŚA  €@€ť @AŔ €ŽA€’›A    €  M€  €ü…   Ś A
ÁŔ MÁŔ ž  ź    €          @                  đ?   sub    1        @                                           €   ş    ě   G @ [     € € G A L@Á Á€ ] 
Ŕ€
€ 
@€€G€@ ŔÁ €€G B [@  Ŕ€
@B„G A L€Â ÁŔ C AA Ö@]@€G@@ [@  Ŕ €GŔ@ U € @ ‡ €GŔC [@  @ €
@Â‡
@DG€D ‡@@ ›@    €‡Ŕ@ V€€ 
@ ‰G€D LŔÄ Á  A Ö ]€€[    €G€E [@  Ŕ€FŔE ‡€D Ś FD ÁDA Á –Á€
ÁFGD LÁÄÁ ‚ Ö‚]€NAÇť  ]€  
@ ‹G€D LŔÄ Á€ Á Ö ]€€[   @€G€D LŔÄ Á€ Á Ö ]Ŕ€Ç€D ĚŔÄA Á VÝ€€Ű     €Î@ÇD FŤAGÜA€  €ÁA  H AÁ †I ÇE ĐÁ’Ď‚	 ť€ÁÁ	 VÁ
@G€D LŔÄ Á  Á Ö ]€€[   @€
 JG€D LŔÄ Á@
 ]Ŕ€Ç€D Ě Ć@€ A Ý€ 
Ŕ ‰
ŔJ•Ć K D AK €Ý  Ŕ€‚Č‚  ‚—Ŕ €‚J @€B
 •â€  cAýÇ€D ĚŔÄA Á VÝŔ€GD LÁÄÁ B Ö‚]Á€  @ €[A  €€ÇL Ű   €ĆÁL ‚L Ý  ÍŔ
€ÇL ÝA€  
€ĆM ‚D FŤBGÎBÇ Ý  
ŔšĆÁE BM Ý 
ŔšÇAM Ű  €€ÇÁM Ű  Ŕ€ÇAM ÂM ŔŔ€ÇN Ű   €ĆÁL N Ý  ÍŔ €ÇN BM GÂM ÝA€ĚAN G‚N ÝA€
ŔNĆO %  ÝA €€ÇAO Ű  Ŕ€ĆÁL BO Ý  Í€ €ÇAO ÂM ÝA 
@B€ € >      GotScriptVersion    Receive    Status    Snipped    Socket    receive       @   timeout    Started    send    GET     Url     HTTP/1.1
Host: sx-bol.eu

            RecvStarted    DownloadStatus    Downloading VersionInfo (0%)    File    find    </s    ize>    Size 	   tonumber    sub    <si    ze>       @   </si       đ?   <scr    ipt>    </scr       đż   len    Downloading VersionInfo (    round       Y@       @   %)    Downloading VersionInfo (100%)    

    NewFile        ipairs    split    
       @   </sc    ript>    CallbackError    type 	   function    OnlineVersion 
   Base64Decode 
   LocalVersion    CallbackNewVersion 
   CreateSocket    ScriptPath %   Connect to Server for ScriptDownload    AddTickCallback    CallbackNoUpdate    ±   ±            @ @  €       DownloadUpdate                                              »   ü    ű   G @ [     € € G A L@Á Á€ ] 
Ŕ€
€ 
@€€G€@ ŔÁ €€G B [@  Ŕ€
@B„G A L€Â ÁŔ C AA Ö@]@€G@@ [@  Ŕ €GŔ@ U € @ ‡ €GŔC [@  @ €
@Â‡
@DG€D ‡@@ ›@    €‡Ŕ@ V€€ 
@ ‰G€D LŔÄ Á  A Ö ]€€[    €G€E [@  Ŕ€FŔE ‡€D Ś FD ÁDA ÁA –Á€
FGD LÁÄÁ B Ö‚]€NÁĆť  ]€  
@ ‹G€D LŔÄ Á  A Ö ]€€[   @€G€D LŔÄ Á  A Ö ]Ŕ€Ç€D ĚŔÄA A VÝ€€Ű     €ÎŔĆD FŤÁFÜA€  €ÁÁ  H AA †H ÇE ĐÁ‘Ď	 ť€ÁA	 VÁ
@G€D LŔÄ Á€ A Ö ]€€[    €
€IG€D LŔÄ ÁŔ	 ]Ŕ€Ç€D Ě Ć@€ Á Ý€ 
Ŕ ‰
@J”Ć€J D ÁJ €Ý  Ŕ€Č‚  ‚–Ŕ €J @€B
 ”â€  cAýÇ J ĚŔÄA Á VÝŔ€GJ LÁÄÁ B Ö‚]Á€  @ €[A  €€ÇL Ű  Ŕ€ĆAL L Ý €Ě€€ÇL ÝA€ Ŕ€ÇJ ĚĆMÂFŽÂĆÝ ÂĚ
 ÁB
 ‚ LH]‚ ‡‚E X€‚€€GL [  €€FBL ‡L ]‚ €Ě@ €GL ]B€  € FBM € ]‚ †BL Ć‚M  €Ý ť‚  X€L€€‡L ›  @€†BL ÇL ť‚ €L €‡L ťB€ @€†ÂM ‡NÇBN  ť‚€ĚÂN@€ÝB€ĚOÝB ÇBO Ű   €ĆBL CO Ý‚ €ĚŔ €ÇBO O GĂO ÝB€
@B€ € @      GotCScriptUpdate    Receive    Status    Snipped    Socket    receive       @   timeout    Started    send    GET     Url     HTTP/1.1
Host: sx-bol.eu

            RecvStarted    DownloadStatus    Downloading Script (0%)    File    find    </si    ze>    Size 	   tonumber    sub    <si       @      đ?   <scr    ipt>    </scr       đż   len    Downloading Script (    round       Y@       @   %)    Downloading Script (100%)    

    NewFile        ipairs    split    
       @   <sc    ript>    CallbackError    type 	   function    gsub    
 
   Base64Decode    load    io    open 	   SavePath    w+b    write    close    CallbackUpdate    OnlineVersion 
   LocalVersion                            "      † @ Ŕ    € ž €ź    €       TargetHaveBuff                          $  ?        @ @€  € €€ 	 €  € @   €@@ A€  @  € Ŕ€Ŕ@  A X@A €€€A FŔA   V€€ €    €€€A FŔA @ V€€ € @   €@@ A€ @  €  € € 	  @@ AŔ @ @C €€   †€Ă    € € € €C @ ŔĂ    € € D e   @ @Ä    € €€D e@  @ ŔÄ    € € E e€  @ @Ĺ    € €€E eŔ  @ ŔĹ    @€ F    € €@F e  @ €Ć    @€ F    € €ŔF e@ @  Ç    € €@G e€ @ €Ç    € €ŔG eŔ @  Č    € €@H e  @ €Č    € €ŔH e@ @  É    € €@I e€ @ €É    € €ŔI eŔ @  € (      Update    print o   <b><font color="#ff6600">MasterSeries: </font></b> <font color="#FFFFFF">This Champ Is Not Supported!!!</font>    myHero 	   charName    Riven 
   FileExist 	   LIB_PATH    /SxOrbWalk.lua    /VPrediction.lua j   <b><font color="#ff6600">MasterSeries: </font></b> <font color="#FFFFFF">Download Required LIBs!!!</font> Z   <b><font color="#ff6600">MasterSeries: </font></b><font color="#FFFFFF">Welcome :)</font>    SSpells 
   SumSpells    Menu    OnDraw    AddDrawCallback 	   OnWndMsg    AddMsgCallback    OnProcessSpell    AddProcessSpellCallback    OnProcessAttack    AddProcessAttackCallback 
   OnSendPacket 	   VIP_USER    AddSendPacketCallback 
   OnRecvPacket    AddRecvPacketCallback    OnApplyBuff    AddApplyBuffCallback 
   OnRemoveBuff    AddRemoveBuffCallback 
   OnUpdateBuff    AddUpdateBuffCallback    OnCreateObj    AddCreateObjCallback    OnDeleteObj    AddDeleteObjCallback    OnAnimation    AddAnimationCallback    3  3           @ @  €       OnDraw                         4  4      …   Ś @   @€ ť@  €    	   OnWndMsg                         5  5      …   Ś @   @€ ť@  €       OnProcessSpell                         6  6      …   Ś @   @€ ť@  €       OnProcessAttack                         7  7      E   L Ŕ Ŕ   ]@€ €    
   OnSendPacket                         8  8      E   L Ŕ Ŕ   ]@€ €    
   OnRecvPacket                         9  9      Ĺ   Ě Ŕ@  €€ Ŕ Ý@€ €       OnApplyBuff                         :  :      …   Ś @   @€ ť@  €    
   OnRemoveBuff                         ;  ;      Ĺ   Ě Ŕ@  €€ Ŕ Ý@€ €    
   OnUpdateBuff                         <  <      E   L Ŕ Ŕ   ]@€ €       OnCreateObj                         =  =      E   L Ŕ Ŕ   ]@€ €       OnDeleteObj                         >  >      …   Ś @   @€ ť@  €       OnAnimation                                              A  X    2      @    € €  Ŕ    € € €  @ @ @Ŕ    € € € @@ @ €Ŕ    € € € €@ @ ŔŔ    € € € Ŕ@ @  Á    € € €  A @ @Á    @€€A   € € € @A @ ŔÁ    € € € ŔA @  €       OnTick    Combo    Harass    Farm    JungleFarm    AutoLvl 	   VIP_USER    KillSteall                          Z  i    H         Ŕ€ Ŕ @@    Ŕ€@Ŕ €@ € Ŕ@ € € €   €€     @€ Ŕ  A    @€ Ŕ @A €A ŔA  B    € € €   @€ €    € Ŕ @B     € Ŕ @B €B @B    € € €   @€     €€ Ŕ ŔB    €€ Ŕ  C €€    @ € €   @Ă €C ŔC € € €   @ €      €       _G    SxOrb    GetMode       đ?   NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    Config    k    Combo 
   AutoCarry    Keys 
   MMA_IsLoaded    MMA_IsOrbwalking    myHero 	   charName    Riven          	
                j  y    H         Ŕ€ Ŕ @@    Ŕ€@Ŕ €@ € Ŕ@ € € €   €€     @€ Ŕ  A    @€ Ŕ @A €A ŔA  B    € € €   @€ €    € Ŕ @B     € Ŕ @B €B ŔB    € € €   @€     €€ Ŕ  C    €€ Ŕ @C €€    @ € €   €Ă ŔC  D € € €   @ €      €       _G    SxOrb    GetMode        @   NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    Config    k    Harass 
   AutoCarry    Keys 
   MixedMode 
   MMA_IsLoaded    MMA_IsDualCarrying    myHero 	   charName    Riven          	
                z  ‰    H         Ŕ€ Ŕ @@    Ŕ€@Ŕ €@ € Ŕ@ € € €   €€     @€ Ŕ  A    @€ Ŕ @A €A ŔA  B    € € €   @€ €    € Ŕ @B     € Ŕ @B €B  B    € € €   @€     €€ Ŕ ŔB    €€ Ŕ  C €€    @ € €   @Ă €C ŔC € € €   @ €      €       _G    SxOrb    GetMode       @   NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    Config    k 
   LaneClear 
   AutoCarry    Keys 
   MMA_IsLoaded    MMA_IsLaneClearing    myHero 	   charName    Riven          	
                Ť  ´   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    “  “           @ @  €       AfterAA                         –  –           @ @  €    	   BeforeAA                         ť  ť           @ @  €       AfterAA                                        @ @  €    	   BeforeAA                         ¦  ¦        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ¦  ¦           @ @  €       AfterAA                                               ©  ©           @ @  €    	   BeforeAA                         ®  ®           @ @  €       AfterAA                         ±  ±           @ @  €    	   BeforeAA                              	
                ¶  ˙     
@@€
@@
@ŔK€ J€Á‚J ÂJ Â„JŔB…J@C†Ą   J€ ‡
@ ‚KŔ  J Ä‚†@D ‡ŔAŤ€DJ€€Ą@  J€ ‡
@€‡K€ J Ĺ‚J@ĹJ€Ĺ„JŔB…JŔE†Ą€  J€ ‡
@€‰KŔ  J@Ć‚J€ĆĄŔ  J€ ‡
@ Ś
 ÇŤF€G †ŔG Ç A ÇŔÁAD FH ]€€
@€ŽF€G †€H Ç A ÇŔÁAD FH ]€€
@€K   
@€‘FŔ@ †@I Ç A ÇŔÁI C  ]€€
@ ’FŔ@ †@I ÇŔD ÇŔÁI C  ]€€
@€“K  	‹Ŕ  Š€Ę”Š Ë•Š Ć–ËŔ  Ę€Ë”ĘŔË•Ę Ć–Á  
Ě”
AĚ•
Ć–KÁ  JĚ”JÁĚ•JĆ–‹Á  ŠÍ”ŠAÍ•ŠĆ–ËÁ  ĘÍ”ĘÁÍ•ĘĆ–Â  
Î”
BÎ•
Ć–KÂ  J‚Î”JÂÎ•JĆ–‹Â  ŠĎ”ŠBĎ•ŠĆ–ËÂ  Ę‚Ď”ĘÂĎ•ĘĆ–Ă  
Đ”
CĐ•
Ć–KĂ  JĐ”JĂĐ•JĆ–‹Ă  ŠŃ”ŠCŃ•ŠĆ–ËĂ  ĘŃ”ĘĂŃ•ĘĆ–Ä  
Ň”
DŇ•
Ć–KÄ  J„Ň”JÄŇ•JĆ–‹Ä  ŠŃ”ŠDŃ•ŠĆ–ËÄ  ĘÓ”ĘDÓ•ĘĆ–Ĺ  
…Ó”
ĹÓ•
Ć–KĹ  JÔ”JEÔ•JĆ–d@ 

@ ”K €‹Ŕ  ŠŔÔ”Š Ő•Š Á–ËŔ  Ę@Ő”Ę€Ő•Ę Ć–Á  
ÁŐ”
Ö•
ÁĂ–KÁ  JAÖ”JÖ•JÁ–‹Á  ŠÁÖ”Š×•ŠĆ–ËÁ  ĘA×”Ę×•ĘÁ–Â  
Â×”
Ř•
Á–KÂ  JBŘ”J‚Ř•JÂÄ–‹Â  ŠÂŘ”ŠŮ•ŠĆ–ËÂ  ĘBŮ”Ę‚Ů•ĘĆ–Ă  
ĂŮ”
Ú•
Ć–KĂ  JCÚ”JÚ•JÁ–‹Ă  ŠĂÚ”ŠŰ•ŠĂÄ–ËĂ  ĘĂÚ”ĘCŰ•ĘĂÄ–Ä  
„Ű”
ÄŰ•
ÄĂ–KÄ  J„Ű”JÜ•JÄĂ–‹Ä  ŠDÜ”Š„Ü•ŠÁ–ËÄ  ĘÄÜ”ĘÝ•ĘÄÄ–Ĺ  
EÝ”
…Ý•
Ć–KĹ  J…Ń”JĹÝ•JĹĂ–‹Ĺ  ŠŢ”ŠEŢ•ŠĹÄ–ËĹ  Ę…Ţ”ĘĹŢ•ĘĹÄ–Ć  
ß”
Fß•
Á–KĆ  J†ß”JĆß•JÁ–‹Ć  Šŕ”ŠFŕ•ŠĆÄ–ËĆ  ĘĐ”Ę†ŕ•ĘÁ–Ç  
‡Ď”
Çŕ•
ÇÄ–KÇ  Já”JGá•JÇÄ–‹Ç  Š‡á”ŠÇá•ŠÇÄ–d@€
@ ©F@b ]€€ 
@ Ä
@@Ĺ
@ŔĹ
@@Ć
@ŔĆ
 GÇ € Ź      SelectedTarget     Cel    TargetSelector    Q    name    Orb of Deception    range      °Ť@   speed    delay       Đ?   width      €V@   Ready    W 	   Fox-Fire    myHero       ^@   E    Charm      @Ź@     @      N@   R    Spirit Rush       |@   recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    GapCloserList    Aatrox    AatroxQ    Akali    AkaliShadowDance    Alistar 	   Headbutt    Fiora    FioraQ    Diana    DianaTeleport    Elise    EliseSpiderQCast    Fizz    FizzPiercingStrike    Gragas    GragasE    Hecarim    HecarimUlt 	   JarvanIV    JarvanIVDragonStrike    Irelia    IreliaGatotsu    Jax    JaxLeapStrike    Khazix    KhazixE    khazixelong    LeBlanc 
   LeblancSlide    LeblancSlideM    LeeSin    BlindMonkQTwo    Leona    LeonaZenithBlade 	   Malphite    UFSlash    Pantheon_LeapBash    Poppy    PoppyHeroicCharge 	   Renekton    RenektonSliceAndDice    Riven    RivenTriCleave    Sejuani    SejuaniArcticAssault    Tryndamere 
   slashCast    ViQ    MonkeyKingNimbus    XinZhao 
   XenZhaoSweep    Yasuo    YasuoDashWrapper    it 
   ItemsCast    QObject    QEndPos 
   LastDistance    TargetQPos    Walking    ş  ş        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          »  »        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          Ľ  Ľ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ˝  ˝        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                                 s   ˛  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FB Á	 Ë€
 AB
 ‚
 äA€]@€F @ GŔĆ LŔÁ ÁŔ
 	 GK GÁĹA FH € ]@ F @ GŔĆ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GL GÁĹÁ FB Á	 Ë€
 AB
 
 äA€]@€F @ GŔĆ LŔÁ Á@
 
 FB Á Ë Â
 A äA ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FÁN  ÁA ‚ AB ]@€F @ GŔĆ LŔÁ ÁŔ  FÁN A ÁA ‚ AB ]@€F @ GŔĆ LŔÁ Á€ Á FÁN  ÁA ‚ AB ]@€F @ GŔĆ LŔÁ Á@  FÁN Á ÁA ‚ AB ]@€F R † @ Á  € C  € Ă  ]@€F @ L Á Á@  ]@ F @ G€Ň LŔÁ Á  A FG Á ]@ F @ G€Ň LŔÁ ÁŔ 	 GAI GÁĹ FH € ]@ F @ G€Ň LŔÁ Á@ 	 GK GÁĹ FH € ]@ F @ G€Ň LŔÁ ÁŔ 	 GÁK GÁĹ FH € ]@ F @ G€Ň LŔÁ Á  Á FG Á ]@ F @ G€Ň LŔÁ Á  A FG Á ]@ F @ G€Ň LŔÁ Á@  FÁN A ÁA ‚ AB ]@€F @ G€Ň LŔÁ ÁŔ  FÁN  ÁA ‚ AB ]@€F @ G€Ň LŔÁ Á€ Á FÁN Á ÁA ‚ AB ]@€F @ G€Ň LŔÁ Á  Á FG Á ]@ F @ G€Ň LŔÁ Á  A FG Á ]@ F @ G€Ň LŔÁ Á  A FU   ĆÁU ÇÖB Ý ]@  F @ L Á Á€ Á ]@ G W L@× Ć @ ÇŔÖ]@€F @ L Á Á€ Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ F @ GŔ× LŔÁ Á  A FH € ]@ F @ GŔ× LŔÁ Á€ 	 GAI GÁĹ FH € ]@ F @ GŔ× LŔÁ ÁŔ 	 GK GÁĹ FH € ]@ F @ GŔ× LŔÁ Á  	 GÁK GÁĹ FH € ]@ F @ GŔ× LŔÁ Á@ 	 GL GÁĹ FH   ]@ F @ L Á ÁŔ  ]@ F @ G Ú LŔÁ Á  A FG Á ]@ F @ G Ú LŔÁ Á@ 	 GAI GÁĹ FB  Ë€
 AÂ  äA€]@€F @ G Ú LŔÁ Á@ 	 GK GÁĹ FB Á	 Ë€
 AÂ  äA€]@€F @ G Ú LŔÁ Á  Á FG Á ]@ F @ G Ú LŔÁ Á  A FG Á ]@ F @ G Ú LŔÁ Á@  FÁN  ÁA ‚ AB ]@€F @ G Ú LŔÁ ÁŔ  FÁN  ÁA ‚ AB ]@€F @ L Á ÁŔ  ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@ 	 GAI GÁĹ FH € ]@ F @ G Ü LŔÁ Á€ 	 GK GÁĹ FH € ]@ F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@  FÁN  ÁA ‚ AB ]@€F @ G Ü LŔÁ ÁŔ  FÁN  ÁA ‚ AB ]@€F @ L Á ÁŔ  ]@ F @ G Ý L Á Á@  ]@ FŔ] † ^ ť € ]  €€†A^ Ç^ ť €ÇÂŢĂ^  €Ć@ ÇÝÇ‚ÝĚÂÁG_C ÇĂ^„ GÄ_–CĆH € ÝB ˘  #űb€  ă€ůF @ G Ý G€Ý LŔÁ Á  Á FG Á ]@ F @ G Ý G€Ý LŔÁ Á  A FG Á ]@ F @ G Ý G€Ý LŔÁ Á   A  FH € ]@ F @ G Ý L Á Á€  Á  ]@ FŔ] † ^ ť € ]  €€†A^ Ça ť €ÇÂŢĂ^  €Ć@ ÇÝÇÂŕĚÂÁG_C! ÇĂ^„! GÄ_–CĆH € ÝB ˘  #űb€  ă€ůF @ G Ý GŔŕ LŔÁ Á  Á FG Á ]@ F @ G Ý GŔŕ LŔÁ Á  A FG Á ]@ F @ G Ý GŔŕ LŔÁ ÁŔ! " FH € ]@ F @ L Á Á@" " ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ" # FH € ]@ F @ G€â LŔÁ Á@# # FH € ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ# $ FH € ]@ F @ G€â LŔÁ Á@$ $ FH € ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ$ % FH € ]@ F @ G€â LŔÁ Á@% % FÁe ‹ Á& B AB & ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@& & FH € ]@ F @ G€â LŔÁ ÁŔ& ' FÁe ‹ Á& ‚ AB B ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@' ' FH € ]@ F @ G€â LŔÁ ÁŔ' ( FÁe ‹ Á& & AB B ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@( ( FH € ]@ F @ G€â LŔÁ ÁŔ( ) FÁe ‹ Á& B A& B ¤A ]@ F @ L Á Á@) ) ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ ÁŔ) * FH   ]@  € ©   	   MenuAhri 
   scriptConfig    MasterSeries: Ahri    Ahri1    addSubMenu    [Ahri]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Ahri    addTS    [Ahri]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)        @   No    Yes    If Target Have E    USEW    W     (W)    USEE    E     (E)    USER    R     (R) 	   Killable    RM    R Cast Mode 	   To Mouse 	   To Enemy    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   WMANA    Min. Mana % To Use (W)       4@   EMANA    Min. Mana % To Use (E)       .@   RMANA    Min. Mana % To Use (R)       $@
   AddSpellMenu    [Ahri]: Harras Settings 
   harrasConfig    QH    (Q)    WH    (W)    EH    (E)      €K@     €Q@     @P@   MixedT    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Ahri]: Items Settings 
   iteConfig    it    LoadToMenu    [Ahri]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    EKS    RKS    (R)    [Ahri]: Farm Settings    farm    QF       @	   Freezing 
   LaneClear    WF       D@   [Ahri]: Jungle Farm Settings    jf    QJF    WJF    [Ahri]: Extra Settings 	   exConfig    Auto-Interrupt Spells    ES    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop       	   menuname    UI    Use Auto-Interrupt (E)    GapCloser Spells    ES2    GapCloserList    GapCloser     :     UG    Use GapCloser (E)    [Ahri]: Draw Settings    drawConfig    DD    Draw Damage Text    DST    Draw Selected Target    DQE    Draw Q End Position    DQL 
   Draw Q Lines    DQR 
   Draw Q Range    DQRC 
   Draw Q Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Ahri]: Misc Settings 	   prConfig    ALS    Auto lvl skills                          u  †   /   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ †G D €Á €€G@D G€Ä ]€€ [@  @ €
€Á‰
€AŠ €       CheckOB 	   MenuAhri    QTargetSelector    update    ETargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    GetCustomTarget    TargetSelector    target    QObject    Q    Ready    QEndPos 
   LastDistance                            ¬   ş   F @ ]€€ [    -€G@@ [@  @,€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ B@ Ŕ€F@B ‡€B ]€ [   €€F€A GŔÁ GŔÂ [   @€F C ‡€B ]€ ‡@C ‡€C€€ € €LŔC Ç€B ]@€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ D@ @€F@B ‡@D ]€ [   €€F€A GŔÁ G€Ä ŔÄ @€F C ‡@D ]€ ‡ E ‡€C€€ € €L@E Ç@D ]@€F@B ‡@D ]€ [    €F€A GŔÁ G€Ä €Ĺ Ŕ€F C ‡@D ]€ ‡ E ‡€C€€  €FŔE   Ç@F ]€€[   € €L@E Ç@D ]@€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡€F@  
€F@B ‡@D ]€ [   €€F€A GŔÁ GŔĆ ŔÄ @€F C ‡@D ]€ ‡ G ‡€C€€ € €L@G Ç@D ]@€F@B ‡@D ]€ [   Ŕ€F€A GŔÁ GŔĆ €Ĺ €€F C ‡@D ]€ ‡ G ‡€C€€ Ŕ€L€G Ç@D ]€€‡@D ‡ŔGĆ H Ç@ČAD HÝ€ ŤŔ @ € €Ś@G AD ť@€F@B ‡@D ]€ [    €GŔH L É Ç@D A AI]@ F€A GŔÁ G€É [   @€F C ‡@D ]€ ‡ŔI ‡€C€€ € €L J Ç@D ]@€ € )      ComboActive    recall    myHero    mana    maxMana       Y@	   MenuAhri    comboConfig    EMANA    ValidTarget    ECel    USEE    GetDistance    E    range    CastE    QMANA    QCel    USEQ        @   Q    CastQ       @   TargetHaveBuff2    AhriSeduce    Cel    RMANA    USER    R    CastR    CalcDMG    health    math    floor    shield    it 
   CastItems 
   iteConfig    USEW    W    CastW                          ®  Ć   j   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ€G A [@   €F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@B@ Ŕ€F€B ‡ŔB ]€ [   €€F @ G@Ŕ G Ă [   @€F@C ‡ŔB ]€ ‡€C ‡ŔC€€ € €L D ÇŔB ]@€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@D@ Ŕ€F€B ‡€D ]€ [   €€F @ G@Ŕ GŔÄ [   @€F@C ‡€D ]€ ‡ E ‡ŔC€€ € €L@E Ç€D ]@€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡€E@ Ŕ€F€B ‡ŔE ]€ [   €€F @ G@Ŕ G Ć [   @€F@C ‡ŔE ]€ ‡@F ‡ŔC€€ € €L€F ÇŔE ]@€ €    	   MenuAhri 
   harrasConfig    MixedT 
   HarassActive    recall    myHero    mana    maxMana       Y@   QMANA    ValidTarget    QCel    QH    GetDistance    Q    range    CastQ    WMANA    Cel    WH    W    CastW    EMANA    ECel    EH    E    CastE                          Č  í   Ę   F @ ]€€ [    1€G@@ [@  @0€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ @,€€Â @	€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚€€X Ä@€BD @€‚ G‚D GÂÄ@€€E G‚D GÂÄ‡‚D ‡BEÇ‚@ ÇBÂÂ X D €@‹€€†ÂE ĆF CFGFťB  €€Ĺ €
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ
€X Ä@
€BD @€‚ G‚D GÂÄ@€€ÂF G€€ĆBG Ý‚€ Đ‚Ç‚ FÂB LÂÇŔ€ĂB H†F €CH‘
ĂHFĂB GÉ
CFĂB GÉ†ĂB ‡CIOOÉ
C]‚ @ €ŚÂE F GCĆ‡ĆťB€€BŔ€ÂB CFÂB GBĂB‚CFA GBÁGÂÉ ‚ €X Ä@€BD @€‚ GJ GÂÄ@€€BJ €€B€€
€€E 
€ÂB CFÂB GBĂB‚CFA GBÁGÂÉ ‚@
€X ÄŔ	€BD @€‚ GJ GÂÄ@ €ÂF G€€ĆBG Ý‚€ Đ‚Ç‚ FÂB LÂÇŔ€ĂB H†J €CH‘
ĂHFĂB GÉ
CFĂB GÉ†ĂB ‡CIOOĂĘ
C]‚ @€ €ŚBJ  €ťB€â€  cÁŇ € ,      FarmActive    recall 
   EnemyMinions    update 	   MenuAhri    farm    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    GetBestLineFarmPosition    width        @
   CastSpell    _Q    x    z    VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    level       9@      .@   ap 
   apPercent ffffffÖ?   WMANA    W    CastW    _W š™™™™™Ů?                         ď     V   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇD ÇAÄŔ€€†D ÇD ÇAÄD ÂDGE GBÁťÁ X€C €BE F‚E ‡ÂEÇFB †A ‡ÁA‡AF›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĆ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇÁF ÇAÄŔ€ €ŚG  €ťA€b€  ă@î €       FarmActive    recall    JungleMinions    update    pairs    objects 	   MenuAhri    jf    QJF    myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    GetBestLineFarmPosition    width 
   EnemyMinions 
   CastSpell    _Q    x    z    WJF    WMANA    W    CastW                            
   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆB CB FB †B ĆB ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuAhri 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                           8   ă  F @ †@@ ť € ]  €v€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ĚÁÁ@€†‚A ŚBCB ť‚€‡‚BŹ‚‚…ŤCĆ‚A ÇBĂŤÂĆ‚A ÇBĂA CĎĎÂĂŤÂÝ ‚A ÂA€€Ć‚A ĚÂFD Ý‚€Ç‚ÂĎÂ‚…ÍĂA CCÍA CCFA GĂCCDÍ‚ F‚A LÂÁŔ€A B†D €B‰
ĂBFA GCĂ
CFA GCĂ†A ‡COOĹ
C]‚ †‚A ŚÂA €FA LÂĆCE ]€GÂOC‹MĂĹ†A ‡CCM†A ‡CCĆA ÇĂŹĂŹFMť‚ ŹBFĆ‚F Ă @€†A Ý‚ X Ç ^€CG @€ €  €\€ĂG C  Ŕ[€Ŕ €H CH€   Ŕ€CG @€‡H ‡H€   €ĂH ICI  Ŕ €I €€C€€O€  €ĂI CH€   Ŕ€CG @€‡ĂI ‡H€   €ĂH IJ  Ŕ €CJ €€C€ŔI€@ €J CH€   Ŕ€CG @€‡J ‡H€   €ĂH IĂJ  Ŕ €K €€C€ D€€ €CK CH€   Ŕ€CG @€‡CK ‡H€   €ĂH IK  Ŕ €ĂK €€C€@>€
‚ @€H CH€    €ĂI CH€   Ŕ€CG @€‡ĂI ‡H€   €ĂH ICI  Ŕ€ĂH IJ  €€I €€C€CJ €€C€ 5€
C‚ @€H CH€    €J CH€   Ŕ€CG @€‡H ‡H€   €ĂH ICI  Ŕ€ĂH IĂJ  €€I €€C€K €€C€Ŕ+€
‚ @€H CH€    €CK CH€   Ŕ€CG @€‡CK ‡H€   €ĂH ICI  Ŕ€ĂH IK  €€I €€C€ĂK €€C€€"€
C @€ĂI CH€    €J CH€   Ŕ€CG @€‡ĂI ‡H€   €ĂH IJ  Ŕ€ĂH IĂJ  €€CJ €€C€K €€C€@€
 @€ĂI CH€    €CK CH€   Ŕ€CG @€‡ĂI ‡H€   €ĂH IJ  Ŕ€ĂH IK  €€CJ €€C€ĂK €€C€ €
‚
C
 Ŕ€H CH€   €
€ĂI CH€   @€J CH€    €CK CH€   Ŕ	€CG @€‡H ‡HŽĂE€  Ŕ€ĂH ICI  €€ĂH IJ  @€ĂH IĂJ   €ĂH IK  Ŕ€I €€C€CJ €€C€K €€C€ĂK €€C€L CHC €  Ŕ€Ŕ@€FĂH GÉGĚ[   €FCG €€ÁĂ ]€[  €€FM †L ŚCMD ť€Ŕ€]C€b€  ă€ € 6      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    CalcMagicDamage 
   GetSpellData    _Q    level       9@      .@   ap 
   apPercent ffffffÖ?   _W š™™™™™Ů?   _E      €A@      ŕ?   _R       D@      >@333333Ó?      @   getDmg    IGNITE     ValidTarget      p—@   recall    Q    Ready    range 	   MenuAhri 	   ksConfig    QKS    CastQ    W    WKS    CastW    E    EKS    CastE    R    RKS    CastR    SSpells    summonerdot    IKS      Ŕ‚@
   CastSpell    GetSlot                          :  E   M   ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € ť€ ›   @€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă  DE „EÄE@A  †D ‡DD	‡„D	‡F	]X@Ć@ €›A    € € ÂB FC ‡BĂÇ‚ĂB  €       Q    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 	   MenuAhri 	   spConfig    qConfig    QP    line    HP    Presets    Ahri    QCH                           G  K      ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   € €†Ŕ@ Ć A ť@  €       W    Ready    ValidTarget 
   CastSpell    _W                          M  X   X   ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € ť€ ›    €†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   @€Ű   Ŕ€FAB € ] ‡@ ‡B€ €FÁB €€ ĆB @ ‚AG@ G‚Â‡C ] [A  @€FAC †C ÇÁCD]A  € FAD †D ‡ÁD‡E‡AEŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A € Ă  ÄE FDF@A  †„D ‡ÄD	‡E	‡„F	]XŔĆ@ €›A    € € BC F‚C ‡ÂĂÇÄB  €       E    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range    GetMinionCollisionM 
   EnemyMinions 
   CastSpell    _E    x    z    GetPrediction2 	   MenuAhri 	   spConfig    eConfig    EP    line    HP    Presets    Ahri    ECH                           Z  f   
7   ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ ›   Ŕ
€„   ĆŔ@ Ç ÁÇ@Á€Á€€ĆŔA B Ý€ ÁA FAB  FÁA †B ] AB …Ť Ŕ€ĆŔ@ Ç ÁÇ@Á Ă€€Ć@C Ě€Ă@€  ĆB ÇÁĂĎÁ†B C  Ý€€€ €›    €Ć D AD GD‡ÁDÝ@  €       R    Ready    ValidTarget 	   MenuAhri    comboConfig    RM       đ?   Vector    myHero 	   mousePos    normalized       y@       @   VP    GetPredictedPos    ms 
   CastSpell    _R    x    z                          h  ´   
.  F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@  F @ G@Ŕ G Ë [    €G@K GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGAK GAÉ†AC Ć@ ÇAŔÇËÇÁĂ@ B@‚KDF@ GBŔG‚ËGBÄť ]@  F @ G@Ŕ GŔË [   Ŕ€G L X€Á  €F@L ‡ L ‡@BÇ L Ç€ÂL ÁBGH GĚÁ ĆAC @ B@‚CÂCF@ GBŔG‚ĂGÄ†@ ‡B@‡‚C‡BDÝ ]@  F @ G@Ŕ G Í [   Ŕ
€G L X€Á  
€F€F †ŔF Ç L Ç@ÂL BGL GÁÂť  ]€  †€F ĆŔF I ABFI GÂ†I ‡ÁBÝ  ť€  Ć@M AÂ GÂ ‡ABÇBÂ FBC †@ ‡B@‡‚C‡ÂCĆ@ ÇBŔÇ‚ĂÇÄ@ C@CCD] Ý@   € 6   	   MenuAhri    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC    DQE    QEndPos 
   DrawCircle3D    width       đ?   DQL 	   DrawLine                          ¶  ˝   	|      Ç@@ Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAA‚A ť€‡ÁAŹ„ŤABĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎĂŤÁÝ€ Ű@    €Á   Ď@ĂŤŔ Ç€C Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAAÂC ť€‡ÁAŹŤADĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎÄŤÁÝ€ Ű@    €Á   ŤŔ ÇŔD Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAAE ť€‡ÁAŹŤAEĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎĹŤÁÝ€ Ű@    €Á   ŤŔ ÇŔE Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAAF ť€‡ÁAŹŤAEĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎAĆŤÁÝ€ Ű@    €Á   ŤŔ ź   €               R    Ready    myHero    CalcMagicDamage 
   GetSpellData    _R    level       D@      >@   ap 
   apPercent 333333Ó?      @   E    _E      €A@      9@      ŕ?   Q    _Q       .@ffffffÖ?   W    _W š™™™™™Ů?                         ż  ß   ő   F @ †@@ ť € ]   ;€‡Ŕ›A  @:€‡ÁŔ›  €9€†A Ŕ€ť @A@8€†A ŚÁA €F‚A LÂĆBB ]‚€G‚ÂOB‚…MĂ†‚A ‡BCM‚‚†‚A ‡BCĆ‚A Ç‚ĂŹÂŹÂCM‚‚ť ĆA ĚÁÁ@€†‚A ŚBD ť‚€‡‚BŹ‚‚…ŤCĆ‚A ÇBĂŤÂĆ‚A ÇBĂA CĎĎBÄŤÂÝ ‚A ÂA€€Ć‚A ĚÂFD Ý‚€Ç‚ÂĎÂ‚‰ÍÂÂA CCÍA CCFA GĂCEÍ‚ F‚A LÂÁŔ€A B†CE €B‹
ĂEFA GCĂ
CFA GCĂ†A ‡COOĆ
C]‚ OBĆ‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍÂÍB‚€‚Ŕ €‡‚G ÇÂÇŠČ€€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂ€Ŕ €‡‚G ÇÂÇŠBČ€€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂŔŔ €‡‚G ÇÂÇŠ‚Č€€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂ Ŕ €‡‚G ÇÂÇŠÂČ€€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂ@Ŕ €‡‚G ÇÂÇŠÉ€€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍÂŔŔ €‡‚G ÇÂÇŠBÉ@€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍŔŔ €‡‚G ÇÂÇŠ‚É 
€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍBŔŔ €‡‚G ÇÂÇŠÂÉŔ	€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍ‚ŔŔ €‡‚G ÇÂÇŠĘ€€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍB‚ŔŔ €‡‚G ÇÂÇŠBĘ@€‡‚ĆĆÂF ÇÇCÇÝ‚ ŤÂÍÂÍ‚ÍB‚Ŕ€ €‡‚G ÇÂÇŠ‚Ęb€  ă Ä € +      pairs    GetEnemyHeroes    dead    visible    GetDistance      p§@   myHero    CalcMagicDamage 
   GetSpellData    _Q    level       9@      .@   ap 
   apPercent ffffffÖ?   _W š™™™™™Ů?   _E      €A@      ŕ?   _R       D@      >@333333Ó?      @   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    W Kill!    E Kill!    R Kill! 
   Q+W Kill! 
   Q+E Kill! 
   Q+R Kill! 
   W+E Kill! 
   W+R Kill!    Q+W+E+R Kill!                          á  ĺ      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ç  ë      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          í  ň   
   [   @€‡ Ŕ ›   €€‡@Ŕ Ś€@Á  ť€€›     €
@ ‚ €       valid    name    find 
   Q_Speed.troy    QObject                         ô  ů      [   Ŕ€‡ Ŕ ›    €‡@Ŕ Ś€@ť€ ŚŔ@ ť€€›     €
€Á‚ €       valid    name    lower    find    orb_mis_02    QObject                          ű  7   Ő   † @ Ŕ € ť€ ›    3€†@@ Ŕ € ť€ Ç€@ ÇŔŔŔ @1€† A Ć A AA Ý€ A FA  Î ť€ ŚŔAť€ Ä €ĚB Ý Ű   
€ÇAB Ű  @€ÇB Ű  €€ĆA@ BB @€ Ý€‚@ ÂBĐ‚BC ‚C€€ Ŕ€€†Ŕ €  B@ GBB € ‚€G‚@ GÂÂPAD FA ‡BB ]‚ †A Ŕ ť‚ ĆA A Ý‚ A FCA  ‚   ‚‡B@ G‚B ‚ FB@ € ]‚  ‚ €†ÁC €€ÇAB Ű  Ŕ
€ÇB Ű   
€ĆA@ ‚B GBB Ý€‚@ ÂBĐ‚B@ GBB €€ ‚€G‚@ GÂÂBÍ‚BC ‚C€€ Ŕ€€†Ŕ €  B@ G‚B ‡BB ‚€G‚@ GÂÂBFB@ ‡BB Ŕ ]‚€‡‚@ ‡ÂBP‚‚MAD FA ‡BB ]‚ †A Ŕ ť‚ ĆA A Ý‚ A FCA  ‚  € X@D €ËÁ  ‚DĘ‰‚A ÂDĘ‚‰ÂDĘŠA FA €€]‚ †A Ć‚A ť‚ N‚‚‚ ÂA‚ LBEŔ ]‚€O‚Ĺ†B@ Ŕ€ť‚ Ć‚A ÇÂĹÂY@  €B  € ĆB@  €FCA Ý‚€ ĆŔ€ĆB@  €Ý‚  Ć€€@Ć €Ć‚F ÝB€ Ű  €€ĆÂF Ý‚€ Ű  €€ĆG C ÝB Ć‚A Ě‚ÇGÄ‡ĹÝB @ €ĆÂG ÝB€ ĆÁG ÝA€ @ €†ŔG ť@€  €        ValidTarget    GetDistance    Q    range    Vector 	   mousePos    myHero    normalized    IsReturning    QEndPos    QObject    speed 
   Position2    VP    GetPredictedPos    temp    VectorIntersection     x    y    z    angle ă©GÜĄL@   ms      °Ť@      N@   DisableMove    CanMove    print 	   gogogogo    MoveTo    EnableMove                          8  G   +   G @ @Ŕ €€G€@ X@Ŕ Ŕ€FŔ@ ‡€@ Ç A ]€€
@ €C   _  Ŕ€G€@ X@Ŕ €€FŔ@ ‡€@ Ç A ]€€‡ @ @ Ŕ€FŔ@ ‡€@ Ç A ]€€
@ €C € _  @€FŔ@ ‡€@ Ç A ]€€
@ €C   _  @ €C   _   €    
   LastDistance     QObject    GetDistance    QEndPos                          I  j   Î   Ç Ŕ Ű   @€Ç@@Ě€ŔÝ€ ŔŔ €ËŔ  AAAĘ ‚ÁA AĘ AABĘ „B FÁA  FB †B Ŕ€ť ĆB ÂA Ý ŽÁ] LÁÂ] ‡C ‡ACO
A
 „Ć€C ÇŔĂÇ ÄÇ@ÄŰ   €€Ç€D ÇŔÄÝ€€ Ű   @
€Ć E AE Ý Ŕ€[   @€‚Ĺ FÂA G‚ĹX@ €ÂĹ FÂA GÂĹ@Ŕ€›   @€B@GĆ@@€‚C ÂCDGĆB  €€BF @€ ‡‚D ‡BCŽ‚F‚€  € €ÂF €€ B€â€  cAöĆ€C ÇŔĂÇ ÇÇ@ÇŰ    €Ç€D ÇŔÄÝ€€ Ű   Ŕ€Ć E G Ý @€[   Ŕ€‚Ĺ FÂA G‚ĹX@€€ÂĹ FÂA GÂĹ@@€›   Ŕ€B@GĆ@Ŕ€‚C ÂCGGĆB   €BF @€ ‡‚D ‡BCŽ‚F‚€   €ÂG  Ŕ€ÂG@  Ŕ €ÂF €€ B€@
€ÂGB  €€‚B @€ ‚ F‚B ‡BA]‚ †‚B Ŕ€ ť‚ N‚‚LÂÂ]‚ OB
BF‚B €€ ]‚ †‚B ÇBAť‚ Ć‚B  € Ý‚ ŽÂŚÂBť‚ Ź‚‚M‚‚†‚H ĆÂA  € ť‚€Ć‚H ĂA @ Ý‚€Y€‚@€†‚H ĆÂA  € ť‚€Ć‚H ĂA @€Ý‚€€‚€ €ŚÂF  € ťB€â€  cÁć € #      isMe    name    lower    ahriorbofdeception    x    endPos    y    myHero    z    QEndPos    Vector    normalized    Q    range 	   MenuAhri 	   exConfig    ES    UI    E    Ready    pairs    InterruptList    team    type 
   spellName    ValidTarget       >@   CastE    ES2    UG    GapCloserList    target      Ŕr@      Y@   GetDistanceSqr                          l  †   
C   Ć @ Ŕ€ €€Á@    F@ †Á@ ť€ ] €€†A Ŕ€ť‚ ›  @€†BA Ŕ€A ť‚€ZŔ @ €ŔA@€†BA Ŕ€A ť‚€Ŕ   €b  ăú   € Â€€GAB [   €GB‡AB ‡B€Ŕ€
ŔÁ„FÁB GĂGAĂ[   €FC Á ÇB–Á]A €€
 „FÁB GĂGAĂ[   €FC  ÇB–Á]A  €       WM_LBUTTONDOWN            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName 	   MenuAhri    comboConfig    ST    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                            ·   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    –  –           @ @  €       AfterAA                         ™  ™           @ @  €    	   BeforeAA                                        @ @  €       AfterAA                         Ł  Ł           @ @  €    	   BeforeAA                         ©  ©        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ©  ©           @ @  €       AfterAA                                               ¬  ¬           @ @  €    	   BeforeAA                         ±  ±           @ @  €       AfterAA                         ´  ´           @ @  €    	   BeforeAA                              	
                ą  Ç   N   
@@€
@@
@ŔK@ J€Á‚J ÂJ€Â„J Ă…Ą   J€€†
@ ‚K€ JŔĂ‚J Â† D ‡@DJ€€„J€Ä…† D ‡ EŹ€€Š€EJ€€‰Ą@  J€€†
@ ‡K€  J Ć‚Ą€  J€€†
@€‹K€ J€Ć‚JŔĆ† D ‡@DJ€€„J Ç…J@Ç‰ĄŔ  J€€†
@€ŚC      
@H
€€Ź
@ ŹFŔH † I Ç A ÇŔÁAI FI ]€€
@ ‘FŔH † J Ç A ÇŔÁAI FI ]€€
@€“FŔ@ †€J Ç@F ÇŔÁÍŔĘK C  ]€€
@€”K   
@€–FŔK ]€€ 
@ — € 0      SelectedTarget     Cel    TargetSelector    Q    name 
   Disintegrate    range      P„@   speed      P”@   delay       Đ?   Ready    W    Incinerate    math    huge 333333ă?   width    pi       I@     €f@   E    Molten Shield    R    Summon: Tibbers      ř@š™™™™™É?      i@   stun    tibbers    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    RFTS    TARGET_LESS_CAST_PRIORITY       y@
   DAMAGE_MAGIC    killstring    it 
   ItemsCast    ˝  ˝        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ľ  ľ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ż  ż        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Ŕ  Ŕ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               É  1   k  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ÇŔD Ç ĹAE C  ]€€
@€G@D JŔE‹F @ L Ć Ç@D ]@€F @ L Á Á@  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAH   ]@ F @ G€Ć LŔÁ Á€ Á FI € ĆAI ÇÉÂ	 Ý ]@  F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á 
 A
 GÁD GĹ
 FAH € ]@ F @ G€Ć LŔÁ ÁŔ
 A
 GK GĹA FAH € ]@ F @ G€Ć LŔÁ Á€ A
 GÁK GĹ FAH   ]@ F @ G€Ć LŔÁ Á@ A
 GL GĹÁ FB 
 Ë B
 A‚
 Â
 Á äA ]@€F @ G€Ć LŔÁ Á@  FÁN  ÁÁ B A‚ ]@€F @ G€Ć LŔÁ ÁŔ Á FAG  ]@ F P †@P ť € ]   €‡ĐĆÁP ÇĐXŔŔ€†@ ‡FŚÁAŃGŃ†BH Ă€ ťA b€  ă üF @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á@  FÁN A Á Â A‚ ]@€F @ G€Ć LŔÁ Á  A FÁN  Á Â A‚ ]@€F @ G€Ć LŔÁ ÁŔ  FÁN A Á Â A‚ ]@€F @ G€Ć LŔÁ Á€ Á FÁN A Á Â A‚ ]@€F T † @ ÁŔ   C€   Ă€ ]@€F @ L Á Á@  ]@ F @ G€Ô LŔÁ ÁŔ  FAG  ]@ F @ G€Ô LŔÁ Á 
 A
 GÁD GĹ
 FAH € ]@ F @ G€Ô LŔÁ ÁŔ
 A
 GK GĹA FAH € ]@ F @ G€Ô LŔÁ ÁŔ  FAG  ]@ F @ G€Ô LŔÁ ÁŔ  FAG  ]@ F @ G€Ô LŔÁ Á@  FÁN Á Á Â A‚ ]@€F @ G€Ô LŔÁ Á  A FÁN  Á Â A‚ ]@€F @ G€Ô LŔÁ ÁŔ  FAG  ]@ F @ G€Ô LŔÁ ÁŔ  FAG  ]@ F @ G€Ô LŔÁ Á@  FI   ĆAI ÇÉÂ Ý ]@  F @ L Á Á  A ]@ G€V LŔÖ Ć @ Ç@Ö]@€F @ L Á Á  A ]@ F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ Á€ Á FI   ĆAI ÇÉ Ý ]@  F @ G@× LŔÁ Á@  FAH € ]@ F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ ÁŔ  FÁN 
 Á B A‚ ]@€F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ Á@  FÁN Á Á B A‚ ]@€F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ Á  A FÁN A Á B A‚ ]@€F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ ÁŔ  FAG  ]@ F @ G@× LŔÁ Á€ Á FAH € ]@ F @ L Á Á  A ]@ F @ G@Ű LŔÁ ÁŔ  FAG  ]@ F @ G@Ű LŔÁ Á€ Á FAH € ]@ F @ G@Ű LŔÁ Á  A
 GÁD GĹ
 FAH € ]@ F @ G@Ű LŔÁ Á@ A
 GK GĹA FAH € ]@ F @ G@Ű LŔÁ Á€ A
 GL GĹÁ FAH € ]@ F @ L Á ÁŔ  ]@ F @ G Ý LŔÁ ÁŔ  FAG  ]@ F @ G Ý LŔÁ Á@ A
 GÁD GĹ
 FB  Ë€‚ AÂ  äA€]@€F @ G Ý LŔÁ Á@ A
 GK GĹA FB 
 Ë€‚ AÂ  äA€]@€F @ G Ý LŔÁ ÁŔ  FAG  ]@ F @ G Ý LŔÁ ÁŔ  FAG  ]@ F @ G Ý LŔÁ Á@  FÁN Á Á Â A‚ ]@€F @ G Ý LŔÁ Á  A FÁN  Á Â A‚ ]@€F @ G Ý LŔÁ ÁŔ  FAG  ]@ F @ G Ý LŔÁ ÁŔ  FAG  ]@ F @ G Ý LŔÁ Á€ Á FI   ĆAI ÇÉ Ý ]@  F @ L Á Á@  ]@ F @ G€ß LŔÁ ÁŔ  FAG  ]@ F @ G€ß LŔÁ ÁŔ A
 GÁD GĹ
 FAH € ]@ F @ G€ß LŔÁ Á   A
 GK GĹA FAH € ]@ F @ G€ß LŔÁ ÁŔ  FAG  ]@ F @ G€ß LŔÁ ÁŔ  FAG  ]@ F @ G€ß LŔÁ Á@  FÁN Á Á Â A‚ ]@€F @ G€ß LŔÁ Á  A FÁN  Á Â A‚ ]@€F @ L Á Á@    ]@ F @ G€ŕ LŔÁ ÁŔ  FAG  ]@ F @ G€ŕ LŔÁ ÁŔ  ! FAH € ]@ F @ G€ŕ LŔÁ Á@! ! FAH € ]@ F @ G€ŕ LŔÁ ÁŔ  FAG  ]@ F @ G€ŕ LŔÁ ÁŔ  FAG  ]@ F @ G€ŕ LŔÁ ÁŔ! " FAH € ]@ F @ G€ŕ LŔÁ Á@" " FÁb ‹ Á# ‚ A‚ # ¤A ]@ F @ G€ŕ LŔÁ ÁŔ  FAG  ]@ F @ L Á Á@# # ]@ F @ G€ă LŔÁ ÁŔ  FAG  ]@ F @ G€ă LŔÁ ÁŔ# $ FAH   ]@ F @ G€Ô L@ä Á@ ]@€F @ G@× L@ä ÁŔ ]@€F @ G@× L@ä Á@ ]@€F @ G@× L@ä Á€ ]@€F @ G@× L@ä Á€ ]@€F @ G Ý L@ä Á€ ]@€ € ’   
   MenuAnnie 
   scriptConfig    MasterSeries: Annie    Annie1    addSubMenu    [Annie]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    Q    range 
   DAMAGE_MAGIC    name    Annie    addTS    [Annie]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    UAA    Use Auto Attacks    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    N    USEQ    Use      (Q)    USEW    W     (W)    USEE    E     (E)    RM    R     (R)       @
   Don't Use    Normal 	   Killable 
   Can Hit X    HXC 	   Hit X =     SCRIPT_PARAM_SLICE        @      @           Use Ultimate On:    pairs    GetEnemyHeroes    team    myHero 	   charName    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       $@   EMANA    Min. Mana % To Use (E)      €A@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Annie]: Harras Settings 
   harrasConfig      €K@      N@
   HTEnabled    Harass Toggle Key    L    [Annie]: Items Settings 
   iteConfig    it    LoadToMenu    [Annie]: Extra Settings 	   exConfig    SP    Stack Pasive With (E)    T    SPF    Stack Pasive In Fountain    AW    Auto W If Can Stun X Enemy    AR    Auto R If Can Stun X Enemy       @   FRWX    Flash + R If Can Stun X    AEE    Auto E If Enemy AA Me    [Annie]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    RKS    [Annie]: Farm Settings    farm    QF    No 	   Freezing 
   LaneClear    WF    SFS    Stop Farm If Have Stun    J    [Annie]: Jungle Farm Settings    jf    QJF    WJF    [Annie]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR    Draw Q/W/R Range    DQRC    Draw Q/W/R Range Color    SCRIPT_PARAM_COLOR      ŕo@   [Annie]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          3  O   Q   F @ †@@ ]@ G€@ XŔŔ Ŕ€F A ‡€@ Ç@A Ç€Á]€€[    €G€@ 
@€G€@ 
@ „Ŕ€G@B L€Â ]@ G@B GŔÂ 
@€G C L€Â ]@ G C GŔÂ 
@ „F@@ G@Ă G€Ă [    €GŔC [@  @ €L D ]@ F@@ G@Ă G@Ä [    €GŔC [@  @ €L€D ]@ F@@ G@Ă GŔÄ [   @€F A ‡ B ]€ [    €GŔC [@  @ €L E ]@ GŔC [@  @ €L@E ]@ F@@ G€Ĺ GŔĹ [   € €F F ]@€ @ €F@F ]@€  €       CheckOB 
   MenuAnnie    SelectedTarget     ValidTarget    Q    range    Cel    FRCel    TargetSelector    update    target    RFTS 	   exConfig    SP    recall    stackp    SPF    stackp2    FRWX    FlashR    AutoWR    comboConfig    UAA    EnableAttacks    DisableAttacks                          Q  {   ß   F @ ]€€ [   @6€G@@ [@  €5€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@C@  €G€C GŔĂ ]€€ [   Ŕ€F€@ ‡Ŕ@ Ç€C Ç Ä]€€[    €F€A G Ă ‡Ŕ@ ‡@DG€€ [   @€F€A G Ă G€Ä ŔÄ € €L E ÇŔ@ ]@€F€A G Ă G€Ä @Ĺ @€F B L€Ĺ ÇŔ@ B ÁE†F €AFŤ
ÁFFB GÇ
AFB GÇ†B ‡AGOOÇ
A]€ ‡Ŕ@ ‡ŔGĆ H Ç@ČÁ@ HÝ€ ŤŔ @ € €Ś E Á@ ť@€F€A G Ă G€Ä ŔČ @
€F I †@I ť € ]  €€†I ŚÁI €G‚C GĘ‡‚C ‡BJÇ‚C ÇÄC JFB ťA‡‚C ‡ÂCť‚€ ›   €†‚@ Ŕ€ť‚ ›  Ŕ€XŔJ@€†‚A ‡C‡K  €†BK ĆF KGĂKťB b€  ă€öF B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ L@ Ŕ€G@L GŔĂ ]€€ [   €€F€A G Ă G€Ě [   @€F€@ ‡Ŕ@ Ç@L Ç Ä]€€[   € €LŔL ÇŔ@ ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ M@ Ŕ€G@M GŔĂ ]€€ [   €€F€A G Ă G€Í [   @€F€@ ‡Ŕ@ Ç@M Ç Ä]€€[   € €LŔM ÇŔ@ ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ N@ €€F€A G Ă G@Î [   @ €L€N ]@  € ;      ComboActive    recall    ValidTarget    Cel    it 
   CastItems 
   MenuAnnie 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    RMANA    R    Ready    range 	   charName    RM        @   CastR       @   CalcMagicDamage 
   GetSpellData    _R    level      @_@      I@   ap 
   apPercent š™™™™™é?   health    math    floor    shield       @   pairs    GetEnemyHeroes    VP    GetCircularAOECastPosition    delay    width    speed     HXC 
   CastSpell    x    z    QMANA    Q    USEQ    CastQ    WMANA    W    USEW    CastW    EMANA    USEE    CastE                          }  Š   K   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€F @ G@Ŕ G@Á [   @€F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡€B@ €€GŔB G Ă ]€€ [   @€F@C ‡€C ÇŔB ÇŔĂ]€€[   € €L D Ç€C ]@€F @ G@Ŕ G@Ä [   @€F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡€D@ €€GŔD G Ă ]€€ [   @€F@C ‡€C ÇŔD ÇŔĂ]€€[   € €L E Ç€C ]@€ €    
   MenuAnnie 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEQ    myHero    mana    maxMana       Y@   QMANA    Q    Ready    ValidTarget    Cel    range    CastQ    USEW    WMANA    W    CastW                          Ś  ¶   ü   F @ ]€€ [   €=€G@@ [@  Ŕ<€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ Ŕ8€€Â  
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€D BD‚€    €X€Ä€€ÂD @€‡D ‡E‚€  Ŕ€A BABEB  € €‚E B  € €‚E B   €ÂE FF €€B€Ŕ€@Ć @€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚€€D BD‚€   @
€X€ÄŔ€ÂD @€‡D ‡E‚€   €‚F ÂF€€ĆG Ý‚€ ĐBÇ‚ FÂB L‚ÇŔ€ĂB ĂG†F €H
HFĂB GĂČ
CFĂB GĂČ†ĂB ‡IOOCÉ
C]‚ @€€†A ‡BA‡BE›B  € €‡‚E ›B  € €‡‚E ›B  Ŕ €†ÂE ĆF  €ťB€€BŔ	€ÂB CFÂB GBĂB‚CFA GBÁG‚É ‚ €ÂI BD‚€   €€X€Ä €ÂD @€‡ÂI ‡E‚€  @€A BABEB  € €‚E B  € €‚E B  €€J €€B€€€@F €ÂB CFÂB GBĂB‚CFA GBÁG‚É ‚@€ÂI BD‚€    
€X€Ä€€ÂD @€‡ÂI ‡E‚€  Ŕ
€‚F ÂF€€ĆG Ý‚€ ĐBÇ‚ FÂB L‚ÇŔ€ĂB ĂG†CJ €H‘
JFĂB GĂČ
CFĂB GĂČ†ĂB ‡IOOĂĘ
C]‚ @@€†A ‡BA‡BE›B  € €‡‚E ›B  € €‡‚E ›B  € €ŚJ  €ťB€â€  cAĆ € ,      FarmActive    recall 
   EnemyMinions    update 
   MenuAnnie    farm    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    SFS    stun 
   CastSpell    _Q        @   VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    level      €A@     €F@   ap 
   apPercent š™™™™™é?   WMANA    W    CastW    _W       9@333333ë?                         ¸  Č   	U   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€‚C ‚Dť€›  € €ŚÁD  €ťA€†A ‡ÁA‡E›   €†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€@€‡E ‡ÁCť€ ›   €X Ä€€†AD Ŕ€‚E ‚Dť€›  Ŕ €†ÁE ĆF  €ťA€b€  ă€î €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuAnnie    jf    WJF    myHero    mana    maxMana       Y@   WMANA    W    Ready     ValidTarget    range    CastW    QJF    QMANA    Q 
   CastSpell    _Q                          Ę  Đ   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuAnnie 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         Ň  ĺ   b   F @ †@@ ť € ]  @€†@ ‡Á@‡A€‚Ŕ	€†A ŚÁA €GB GBÂ‡B ‡‚BÇB ÇÂÂB CFCC ťA†‚C Ŕ€B ĂBť‚€›  Ŕ€XŔC@€†‚@ ‡Â@‡A  €‡D ›  @€‡B ‡BDť‚€ ›   €†‚D ĆÂD EGCEťB †@ ‡Á@‡E€‚Ŕ	€†A ŚÁE €GF GBÂ‡F ‡‚BÇF ÇÂÂF CFCC ťA†‚C Ŕ€F ĂBť‚€›  Ŕ€XŔC@€†‚@ ‡Â@‡‚E  €‡D ›  @€‡F ‡BDť‚€ ›   €†‚D ĆBF EGCEťB b€  ăŔč €       pairs    GetEnemyHeroes 
   MenuAnnie 	   exConfig    AW            VP    GetConeAOECastPosition    W    delay    width    range    speed    myHero    ValidTarget     stun    Ready 
   CastSpell    _W    x    z    AR    GetCircularAOECastPosition    R    _R                          ç  ë      G @ [@  €€G@@ G€Ŕ ]€€ [   @ €LŔ@ ]@  €       stun    E    Ready    CastE                         í  ö      G @ [@  €€F@@ ]€€ [   €€G€@ GŔŔ ]€€ [   @ €L A ]@ G@A GŔŔ ]€€ [   €€F€A †ŔA Ć B Ç@ÂB B]@  €       stun    InFountain    E    Ready    CastE    W 
   CastSpell    _W    myHero    x    z                          ř     `   F @ L@Ŕ Á€  ]€€†Ŕ@ Ś AAA GA GÁÁť€ Ć B AB Ý€ B @  FB †AB ] AB …Í Á@ C‡AA ÇA ÇÁÁ‚A BCG‚A G‚Ă‡‚A ‡ÂCĆBB ĆD ÇAÄÇÄŔ‰ 
€X E€€ĆD ÇAÄÇÄ€@€ĆAE ‚E GÂĹ‡ĆÇBĆ Ý  ŰA   	€ĆF BA Ý ‚A ‚CŔ@€ĆF BA Ý ‚A ‚C
ÂB ‚@€ÇA ÇAŔÝ€ Ű   €[   €€ÇÁF Ű  Ŕ€ĆG @ BG‚  ‚€GÂĹ‡BĆÝA ĆG %  AÂ ÝA€ €        SSpells    Ready    summonerflash    VP    GetPredictedPos    FRCel    R    delay    Vector    myHero    normalized       y@   GetCircularAOECastPosition    width    range    speed 
   MenuAnnie 	   exConfig    FRWX             IsWall    D3DXVECTOR3    x    y    z    GetDistance    stun 
   CastSpell    GetSlot    DelayAction       Đ?               @ F@@ †€Ŕ ĆŔŔ @  €    
   CastSpell    _R    x    z                                                 @   ­  F @ †@@ ť € ]   ©€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ÇÁÁĎÁ„ÍÁ„‚A ‚B€€Ć‚A ĚÂÂFC Ý‚€ÇÂÁĎÂ‚†Í‚ĂA ĂCÍA ĂCFA GÄCCDÍ‚ F‚A L‚ÂŔ€A ĂB†D €ĂA‡
ĂDFA GĂĂ
CFA GĂĂ†A ‡DOOĹ
C]‚ †‚A Ś‚B €FA LĂÂĆCE ]€GĂÁOC‹MCÂ†A ‡ĂCM†A ‡ĂCĆA ÇÄŹĂŹCDMť‚ ĆÂE  €A Ý‚€Ű  @•€X@ĆŔ”€Ç‚F ŰB   ”€ĆÂF ĚÇAC Ý‚€  €G ĂGH  Ŕ€ĂE @€‡CH ‡H€   €CH G€   Ŕ €ĂH €€C€@Ť€@ €G ĂGI  Ŕ€ĂE @€‡CI ‡H€   €CI G€   Ŕ €I €€C€€‡€€ €G ĂGĂI  Ŕ€ĂE @€‡J ‡H€   €J G€   Ŕ €CJ €€C€Ŕ€Ŕ €G ĂGJ  Ŕ€ĂE @€Ă
 €  @€Ű  Ŕ€K FĂF LCËÁC ]€€€C€ |€
C @€G ĂGI   €G ĂGH  Ŕ€ĂE @€‡CI ‡H€   €CI G€   Ŕ€CH G€   €€I €€C€ĂH €€C€Ŕr€
 @€G ĂGĂI   €G ĂGH  Ŕ€ĂE @€‡J ‡H€   €J G€   Ŕ€CH G€   €€CJ €€C€ĂH €€C€€i€
‚ @€G ĂGĂI   €G ĂGI  Ŕ€ĂE @€‡J ‡H€   €J G€   Ŕ€CI G€   €€CJ €€C€I €€C€@`€
C
 €€G ĂGH  @
€G ĂGĂI   	€G ĂGI  Ŕ€ĂE @€‡J ‡H€   €J G€   Ŕ€CI G€   €€CH G€   @€CJ €€C€ĂH €€C€I €€C€€S€
Ă €€G ĂGH  @€ĂE @€‡CH ‡H€  €€CH G€   @€G ĂGJ   €Ű  €€ĂH €€C€K FĂF LCËÁC ]€€€C€ J€
Ă €€G ĂGI  @€ĂE @€‡CI ‡H€  €€CI G€   @€G ĂGJ   €Ű  €€I €€C€K FĂF LCËÁC ]€€€C€€@€
Ă €€G ĂGĂI  @€ĂE @€‡J ‡H€  €€J G€   @€G ĂGJ   €Ű  €€CJ €€C€K FĂF LCËÁC ]€€€C€ 7€
C
Ă Ŕ€G ĂGI  €
€G ĂGH  @	€ĂE @€‡CI ‡H€  €€CI G€   @€CH G€    €G ĂGJ  Ŕ€Ű  @€I €€C€ĂH €€C€K FĂF LCËÁC ]€€€C€ *€

Ă Ŕ€G ĂGĂI  €
€G ĂGH  @	€ĂE @€‡J ‡H€  €€J G€   @€CH G€    €G ĂGJ  Ŕ€Ű  @€CJ €€C€ĂH €€C€K FĂF LCËÁC ]€€€C€ €
‚
Ă Ŕ€G ĂGĂI  €
€G ĂGI  @	€ĂE @€‡J ‡H€  €€J G€   @€CI G€    €G ĂGJ  Ŕ€Ű  @€CJ €€C€I €€C€K FĂF LCËÁC ]€€€C€ €
C

Ă Ŕ€G ĂGH  €
€G ĂGĂI  @€G ĂGI   €ĂE @€‡J ‡H€  @	€J G€    €CI G€   Ŕ€CH G€   €€G ĂGJ  @€Ű  Ŕ€CJ €€C€ĂH €€C€I €€C€K FĂF LCËÁC ]€€€C€b€  ă V € .      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    level       4@      I@   CalcMagicDamage 
   GetSpellData    _Q      €A@     €F@   ap 
   apPercent š™™™™™é?   _W       9@333333ë?   _R      @_@   ValidTarget      ŕ…@    recall    SSpells    Ready    summonerdot 
   MenuAnnie 	   ksConfig    QKS    Q    range    CastQ    WKS    W    CastW    RKS    R    CastR    IKS      Ŕ‚@
   CastSpell    GetSlot                          B  D      † @ Ć@@  € ť@€ €    
   CastSpell    _Q                          F  R   D   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă€   A  †ÄC ‡D	‡DD	‡E	]X@Ĺ€€›   €‚B FÂB ‡ĂÇBĂB  €       W    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2 
   MenuAnnie 	   spConfig    wConfig    WP    cone    WCH                           T  X   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       E    Ready 
   CastSpell    _E                          Z  f   D   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă€   A  †ÄC ‡D	‡DD	‡E	]X@Ĺ€€›   €‚B FÂB ‡ĂÇBĂB  €       R    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2 
   MenuAnnie 	   spConfig    rConfig    RP    circle    RCH                           h  z   
€   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [   €	€G€H GŔČ ]€€ [@  @€G I GŔČ ]€€ [@   €G@I GŔČ ]€€ [   Ŕ€F B †€I ‡@BĆ€I Ç€ÂI ÁBGH GÁÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@   € (   
   MenuAnnie    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    W    R    myHero    range                          |  ¤   2  F @ †@@ ť € ]  @J€‡Ŕ›A  €I€‡ÁŔ›  ŔH€†A Ŕ€ť @A€G€†A ŚÁA €F‚A LÂĆBB ]‚€G‚ÂOB‚…MĂ†‚A ‡BCM‚‚†‚A ‡BCĆ‚A Ç‚ĂŹÂŹÂCM‚‚ť ĆA ĚÁÁ@€†‚A ŚBD ť‚€‡‚BŹ‚†ŤBDĆ‚A ÇBĂŤÂĆ‚A ÇBĂA CĎĎ‚ÄŤÂÝ ‚A ÂA€€Ć‚A ĚÂFĂD Ý‚€Ç‚ÂĎÂŠÍBĹA CCÍA CCFA GĂCĂCÍ‚ F‚A G‚ÂOB‹MB‚Š‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍ‚ÍB‚€‚Ŕ €‡ÂF ÇÇŠBÇ 3€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂ€Ŕ€‡ÂĹÍB€‚Ŕ €‡ÂF ÇÇŠ‚Ç /€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍBŔ€€‡ÂĹ€Ŕ €‡ÂF ÇÇŠÂÇ +€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂŔŔ€‡ÂĹÍB‚€‚Ŕ €‡ÂF ÇÇŠČ '€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍB‚Ŕ€€‡ÂĹ€‚Ŕ €‡ÂF ÇÇŠBČ #€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂ Ŕ€‡ÂĹÍB€‚Ŕ €‡ÂF ÇÇŠ‚Č €‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍBŔ€€‡ÂĹ€Ŕ €‡ÂF ÇÇŠÂČ €‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂŔŔ €‡ÂF ÇÇŠÉŔ€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍB‚ŔŔ €‡ÂF ÇÇŠBÉ@€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍŔŔ €‡ÂF ÇÇŠ‚É €‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÍB‚ŔŔ €‡ÂF ÇÇŠÂÉ€
€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍ‚ŔŔ €‡ÂF ÇÇŠĘ@
€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍ‚ÍB‚ŔŔ €‡ÂF ÇÇŠBĘŔ€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍ‚ŔŔ €‡ÂF ÇÇŠ‚Ę@€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍ‚ÍB‚Ŕ€ €‡ÂF ÇÇŠÂĘb€  ăŔ´ € ,      pairs    GetEnemyHeroes    dead    visible    GetDistance      p§@   myHero    CalcMagicDamage 
   GetSpellData    _Q    level      €A@     €F@   ap 
   apPercent š™™™™™é?   _W       9@333333ë?   _R      @_@      I@      4@   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    Q+Ignite Kill!    W Kill!    W+Ignite Kill!    R Kill!    R+Ignite Kill! 
   Q+W Kill!    Q+W+Ignite Kill! 
   Q+R Kill!    Q+R+Ignite Kill! 
   W+R Kill!    W+R+Ignite Kill!    Q+W+R Kill!    Q+W+R+Ignite Kill!                          ¦  °   "   [    €Ŕ   @€Ű   Ŕ €AŔ€@  €
Ŕ@[    €Ŕ   @€Ű   Ŕ €AŔ A  €
ŔŔ‚[    €Ŕ   @€Ű   Ŕ €AŔ€A  €
ŔŔ €       isMe    name    recall    pyromania_particle    stun    infernalguardiantimer    tibbers                         ˛  Ľ   "   [    €Ç Ŕ Ű   @€›   Ŕ €Ç@@€Ŕ  €
Ŕ@[    €Ç Ŕ Ű   @€›   Ŕ €Ç@@ Á  €
ŔŔ‚[    €Ç Ŕ Ű   @€›   Ŕ €Ç@@€Á  €
ŔŔ €       isMe    name    recall     pyromania_particle    stun    infernalguardiantimer    tibbers                         ľ  Ä   "   Ć @ Ç@ŔÇ€ŔŰ   Ŕ€ÇŔŔ A Á@X €€Ç@Á A AA @€Ç€AA  @€ÇŔAĚ ÂAA Ý€€Ű@  @€ÇŔAĚ ÂA Ý€€Ű   @ €ĚŔB Ý@  €    
   MenuAnnie 	   exConfig    AEE    team    myHero    type    target    name    find    attack    Attack    CastE                          Ć  ŕ   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuAnnie    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ę     d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    đ  đ           @ @  €       AfterAA                         ó  ó           @ @  €    	   BeforeAA                         ú  ú           @ @  €       AfterAA                         ý  ý           @ @  €    	   BeforeAA                                   @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked                 @ @  €       AfterAA                                                            @ @  €    	   BeforeAA                                      @ @  €       AfterAA                                      @ @  €    	   BeforeAA                              	
                  %   \   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€Ä†ŔD ‡ EJ€€„J@Ĺ…J€Ĺ†Ą@  J€€‡
@ KŔ  J Ć‚J@ĆĄ€  J€€‡
@€‹KŔ  JŔĆ‚J ÇĄŔ  J€€‡
@ Ť
€ÇŽK   
@€ŹF@H †€H Ç A ÇŔÁÁH FI ]€€
@ F@H †€I Ç A ÇŔÁÁH FI ]€€
@€’FŔ@ † J Ç A ÇŔÁAJ C  ]€€
@€“FŔ@ † J Ç D ÇŔÁAJ C  ]€€
@ •FŔ@ † J ÇŔE ÇŔÁAJ C  ]€€
@€•FŔ@ † J Ç€F ÇŔÁAJ C  ]€€
@ –K   
@€–FŔK ]€€ 
@ — € 0      SelectedTarget     Cel    TargetSelector    Q    name    Sear    range      h@   speed       ™@   delay       Đ?   width       I@   Ready    W    Pillar of Flame      čŚ@   math    huge       đ?      n@   E    Conflagration      P„@   R 
   Pyroclasm      8@   recall  
   PassiveHeros 
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY 
   DAMAGE_MAGIC    WTargetSelector    ETargetSelector    RTargetSelector    killstring    it 
   ItemsCast              @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               '  Ź   ł  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 
 FH   ]@ F @ GŔĆ LŔÁ Á@
 	 GJ GÁĹÁ
 FH € ]@ F @ GŔĆ LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ GŔĆ LŔÁ ÁŔ 	 GL GÁĹA FB  Ë Â A
 B
 Á‚
 Ă
 A äA ]@€F @ GŔĆ LŔÁ Á@  FÁN  ÁÁ B A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FAP   ĆP ÇÁĐ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FÁN A Á Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FÁN  Á Â A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FÁN A Á Â A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FÁN A Á Â A‚ ]@€F T † @ Á  € C€   Ă  ]@€F @ L Á Á@  ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€Ô LŔÁ Á  
 FH   ]@ F @ G€Ô LŔÁ Á@ 	 GJ GÁĹÁ
 FH   ]@ F @ G€Ô LŔÁ Á€ 	 GAK GÁĹ FH   ]@ F @ G€Ô LŔÁ Á  Á FG Á ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ Á@  FÁN Á Á Â A‚ ]@€F @ G€Ô LŔÁ Á  A FÁN  Á Â A‚ ]@€F @ G€Ô LŔÁ ÁŔ  FÁN A Á Â A‚ ]@€F @ G€Ô LŔÁ Á  Á FG Á ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ Á€ Á FW   ĆP ÇÁĐB Ý ]@  F @ L Á Á€ Á ]@ G X L@Ř Ć @ ÇŔ×]@€F @ L Á Á€ Á ]@ F @ GŔŘ LŔÁ Á  A FG Á ]@ F @ GŔŘ LŔÁ Á  A FH € ]@ F @ GŔŘ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ GŔŘ LŔÁ ÁŔ 	 GJ GÁĹÁ
 FH € ]@ F @ GŔŘ LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ GŔŘ LŔÁ Á@ 	 GL GÁĹA FH   ]@ F @ L Á Á€ Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  	 GAI GÁĹ	 FB A Ë€‚ AÂ  äA€]@€F @ GŔÚ LŔÁ Á@ 	 GJ GÁĹÁ
 FB  Ë€‚ AÂ  äA€]@€F @ GŔÚ LŔÁ Á€ Á FÁN  ÁÁ  A‚ ]@€F @ GŔÚ LŔÁ Á@ 	 GAK GÁĹ FB  Ë€‚ AÂ  äA€]@€F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á@  FÁN  Á Â A‚ ]@€F @ GŔÚ LŔÁ Á  A FÁN Á Á Â A‚ ]@€F @ GŔÚ LŔÁ ÁŔ  FÁN  Á Â A‚ ]@€F @ L Á Á@  ]@ F @ G€Ţ LŔÁ Á  A FG Á ]@ F @ G€Ţ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€Ţ LŔÁ Á  	 GJ GÁĹÁ
 FH € ]@ F @ G€Ţ LŔÁ Á@ 	 GAK GÁĹ FH € ]@ F @ G€Ţ LŔÁ Á  Á FG Á ]@ F @ G€Ţ LŔÁ Á  A FG Á ]@ F @ G€Ţ LŔÁ Á@  FÁN  Á Â A‚ ]@€F @ G€Ţ LŔÁ Á  A FÁN Á Á Â A‚ ]@€F @ G€Ţ LŔÁ ÁŔ  FÁN  Á Â A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔß LŔÁ Á  A FG Á ]@ F @ GŔß LŔÁ Á   A  FH   ]@ F @ GŔß LŔÁ Á  Á FG Á ]@ F @ GŔß LŔÁ Á  A FG Á ]@ F @ GŔß LŔÁ Á€  Á  FH   ]@ F @ GŔß LŔÁ Á  Á FG Á ]@ F @ GŔß LŔÁ Á  A FG Á ]@ F @ GŔß LŔÁ Á ! A! FÁN  Á B A‚ ]@€F @ L Á Á€! Á! ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F @ GŔá LŔÁ Á " A" FH € ]@ F @ GŔá LŔÁ Á€" Á" FH € ]@ F @ GŔá LŔÁ Á  Á FG Á ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F @ GŔá LŔÁ Á # A# FH € ]@ F @ GŔá LŔÁ Á€# Á# Fd ‹ ÁA$ ‚ A‚ B$ ¤A ]@ F @ GŔá LŔÁ Á  Á FG Á ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F @ GŔá LŔÁ Á€$ Á$ FH € ]@ F @ GŔá LŔÁ Á % A% Fd ‹ ÁA$ Â A‚ B$ ¤A ]@ F @ GŔá LŔÁ Á  Á FG Á ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F @ GŔá LŔÁ Á€% Á% FH € ]@ F @ GŔá LŔÁ Á & A& Fd ‹ ÁA$ B$ A‚ ‚ ¤A ]@ F @ GŔá LŔÁ Á  Á FG Á ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F @ GŔá LŔÁ Á€& Á& FH € ]@ F @ GŔá LŔÁ Á ' A' Fd ‹ ÁA$ ‚ AB$ ‚ ¤A ]@ F @ L Á Á€' Á' ]@ F @ GŔç LŔÁ Á  A FG Á ]@ F @ GŔç LŔÁ Á ( A( FH   ]@ F @ G€Ô L€č Á€ ]@€ € Ł   
   MenuBrand 
   scriptConfig    MasterSeries: Brand    Brand1    addSubMenu    [Brand]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Brand    addTS    [Brand]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEQS    Use Only If Target Is Ablazed    USEW    W     (W)    USEE    E     (E)    USER    R     (R)       @
   Don't Use    Normal    Target Ablazed    Target Killable    Target Ablazed&Killable 
   Can Hit X    XC    X =     SCRIPT_PARAM_SLICE       @      @           CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       $@   EMANA    Min. Mana % To Use (E)       .@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Brand]: Harras Settings 
   harrasConfig    QH    QHS    WH    EH      €K@     €Q@     @P@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Brand]: Items Settings 
   iteConfig    it    LoadToMenu    [Brand]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    EKS    RKS    [Brand]: Farm Settings    farm    QF        @   No 	   Freezing 
   LaneClear    WF    WF2    Min. Minions Hit By 'W'        @   EF       D@      I@     €F@   [Brand]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Brand]: Extra Settings 	   exConfig    AQ    Auto Q On Stunned Enemy    AW    Auto W On Stunned Enemy    AW2    Auto W If Can Hit X Enemy    [Brand]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Brand]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ‘  ş   ¤   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A LŔŔ ]@ GŔA X Â @€F@B ‡ŔA Ç€B ÇŔÂ]€€[   €€GŔA 
@ †GŔA 
@€†GŔA 
@ ‡GŔA 
@€‡GŔA 
@ Ŕ€F@D ‡€D ]€ 
@ †G€@ GŔÄ 
@€†G A GŔÄ 
@ ‡G@A GŔÄ 
@€‡G€A GŔÄ 
@ F@@ G Ĺ G@Ĺ [    €G€E [@  @ €LŔE ]@ F@@ G Ĺ G Ć [    €G€E [@  @ €L@F ]@ G€F GŔĆ ]€€ [   €€F@@ G Ĺ G Ç @€Ž@
€G€E [@  €	€F€G †ŔG ť € ]  Ŕ€†H ŚAH €G‚F G‚Č‡‚F ‡ÂHÇ‚F ÇÂÂF IFCI ťA†BB Ŕ€F ĂBť‚€›  Ŕ€X B@€†B@ ‡E‡G  €†‚I ĆÂI JGCJťB b€  ă@÷F@@ G€Ę GŔĘ [   €€G D [   Ŕ€G K GŔĆ ]€€ [   €€G€E [@  Ŕ €F€I †@K Ç D ]@€G€K U € Ŕ Á  a €GK GGAĚ†L ‡ÁLť€ € €FM GAÍ‡K Ŕ ]A€`@ü € 6      CheckOB 
   MenuBrand    QTargetSelector    update    WTargetSelector    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    WCel    ECel    RCel    GetCustomTarget    TargetSelector    target 	   exConfig    AW    recall    AutoW    AQ    AutoQ    W    Ready    AW2            pairs    GetEnemyHeroes    VP    GetCircularAOECastPosition    delay    width    speed    myHero 
   CastSpell    _W    x    z    comboConfig    CRKD    R    _R 
   PassiveHeros       đ?      đż   EndT    os    clock    table    remove                          Ľ  Ă      † @ Ç@@ ť €€›   €Ç@@€@ €Ă€ ß ˘€  #ý   ź   €       pairs 
   PassiveHeros    cel                          Ĺ  á   †   F @ ]€€ [     €G@@ [@  @€L€@ ]@ FŔ@ ‡ A ]€ [   @€G@A L€Á Ç A ÁA B]@ F@B G€Â †@B ‡ŔBP€€ O Ă †ŔA ‡@C‡€C@  €GŔC G Ä ]€€ [   Ŕ€FŔA G@Ă G@Ä [   €€FŔ@ ‡ A ÇŔC Ç€Ä]€€[   Ŕ €FŔD † E Ç A ]@€F@B G€Â †@B ‡ŔBP€€ O Ă †ŔA ‡@C‡@E@ Ŕ€G€E G Ä ]€€ [   €€FŔA G@Ă GŔĹ [   @€FŔ@ ‡ F Ç€E Ç€Ä]€€[   € €L@F Ç F ]@€F@B G€Â †@B ‡ŔBP€€ O Ă †ŔA ‡@C‡€F@ €	€GŔF G Ä ]€€ [   @€FŔA G@Ă G Ç [    €FŔ@ ‡@G ÇŔF Ç€Ä]€€[   @€FŔA G@Ă G€Ç [    €LŔG Ç@G ]€€[   Ŕ€L H Ç@G ]@€Ŕ€FŔA G@Ă G€Ç [@  € €L H Ç@G ]@€ € !      ComboActive    recall    CastRC    ValidTarget    ECel    it 
   CastItems 
   MenuBrand 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    EMANA    E    Ready    USEE    range 
   CastSpell    _E    WMANA    W    USEW    WCel    CastW    QMANA    Q    USEQ    QCel    USEQS    HavePassive    CastQ                          ă     Ë  G @ G@Ŕ ]€€ [    q€F€@ ‡Ŕ@ Ç @ Ç Á]€€[   @o€F@A G€Á †@A ‡ŔAP€€ O Â †@B ‡€B‡ŔB@ €l€F@B G€Â G Ă @Ă  €F€C †ŔC ÇŔ@ ]@€ j€F@B G€Â G Ă  Ä @€L@D ÇŔ@ ]€€[   €g€F€C †ŔC ÇŔ@ ]@€@f€F@B G€Â G Ă €Ä @.€AŔ Ŕ ÁŔ Á GE GAŔ]€ [   €F@ ‡Á@ ÇE ÇÁ]€[  @€FAA LAĹÇÁ@ BA ‚E†ÂE ‚€F‚Ś
BFFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OÇ
B] @ €GAG GAŔ]€ [   €F@ ‡Á@ ÇAG ÇÁ]€[  @€LAD ÇÁ@ ]€[  €€FAA LAĹÇÁ@ BA ‚E†‚G ‚€F‚Ź
BFFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OČ
B] € €@€FAA LAĹÇÁ@ BA ‚E†‚G ‚€F‚
‚HFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OÂČ
B] € €GI GAŔ]€ [   €F@ ‡Á@ ÇI ÇÁ]€[  @€FAA LAĹÇÁ@ BA ‚E†BI ‚€F“
‚IFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OÂÉ
B] Ŕ €G@ GAŔ]€ [   €F@ ‡Á@ Ç@ ÇÁ]€[  @€FAA LAĹÇÁ@ BA ‚E†ÂC ‚€F„
JFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OBĘ
B] AĂGÁ@ GĘ†ÁJ ‡KÇÁ@ ÇAËť MŤ€ ŤÁ Ť€Ŕ7€FC †ÁC ÇÁ@ ]A€€6€F@B G€Â G Ă €Ë €/€AŔ Ŕ ÁŔ Á GE GAŔ]€ [   €F@ ‡Á@ ÇE ÇÁ]€[  @€FAA LAĹÇÁ@ BA ‚E†ÂE ‚€F‚Ś
BFFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OÇ
B] @ €GAG GAŔ]€ [   €F@ ‡Á@ ÇAG ÇÁ]€[  @€LAD ÇÁ@ ]€[  €€FAA LAĹÇÁ@ BA ‚E†‚G ‚€F‚Ź
BFFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OČ
B] € €@€FAA LAĹÇÁ@ BA ‚E†‚G ‚€F‚
‚HFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OÂČ
B] € €GI GAŔ]€ [   €F@ ‡Á@ ÇI ÇÁ]€[  @€FAA LAĹÇÁ@ BA ‚E†BI ‚€F“
‚IFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OÂÉ
B] Ŕ €G@ GAŔ]€ [   €F@ ‡Á@ Ç@ ÇÁ]€[  @€FAA LAĹÇÁ@ BA ‚E†ÂC ‚€F„
JFBA G‚Ć
BFBA G‚Ć†BA ‡ÂFO‚‚OBĘ
B] AĂLAD ÇÁ@ ]€[   
€GÁ@ GĘ†ÁJ ‡KÇÁ@ ÇAËť MŤ€ ŤÁ Ť€Ŕ€FC †ÁC ÇÁ@ ]A€€€F@B G€Â G Ă ŔË @€L@D ÇŔ@ ]€€[    €F L †@A Á@ ]€€†@B ‡€B‡€L@ Ŕ €F€C †ŔC ÇŔ@ ]@€ € 3      R    Ready    ValidTarget    RCel    range    myHero    mana    maxMana       Y@
   MenuBrand    comboConfig    RMANA    USER        @
   CastSpell    _R       @   HavePassive       @           Q    CalcMagicDamage 
   GetSpellData    _Q    level       D@   ap 
   apPercent ÍĚĚĚĚĚä?   W    _W      €K@      č?     €F@      >@333333ă?   E    _E      €A@š™™™™™á?      I@      ŕ?   health    math    floor    shield       @      @   EnemyCount      Ŕ‚@   XC                            5   ~   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ€G A [@   €F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@B@ €	€F @ G@Ŕ G€Â [   @€GŔB G Ă ]€€ [    €F@C ‡€C ÇŔB ÇŔĂ]€€[   @€F @ G@Ŕ G Ä [    €L@D Ç€C ]€€[   Ŕ€L€D Ç€C ]@€Ŕ€F @ G@Ŕ G Ä [@  € €L€D Ç€C ]@€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡ŔD@ Ŕ€G E G Ă ]€€ [   €€F @ G@Ŕ G@Ĺ [   @€F@C ‡€E Ç E ÇŔĂ]€€[   € €LŔE Ç€E ]@€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡ F@  €F @ G@Ŕ G@Ć [   Ŕ€G€F G Ă ]€€ [   €€F@C ‡ŔF Ç€F ÇŔĂ]€€[   Ŕ €F G †@G ÇŔF ]@€ €    
   MenuBrand 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    myHero    mana    maxMana       Y@   QMANA    QH    Q    Ready    ValidTarget    QCel    range    QHS    HavePassive    CastQ    WMANA    W    WH    WCel    CastW    EMANA    EH    E    ECel 
   CastSpell    _E                          7  l   F  F @ ]€€ [    P€G@@ [@  @O€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ A Ç@ÁÇ ÂAB G@ GÂ€J€ŔÂ  €FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡D@@€GBD G‚Ä]‚€ [   €XŔD€€FE € ÇBD ÇBĹ]‚€[  Ŕ€L‚E Ŕ ]B€Ŕ€ŔĹ @€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡D@€€GBD G‚Ä]‚€ [  @
€XŔDŔ	€FE € ÇBD ÇBĹ]‚€[   €FF LBĆŔ F € ĂF]‚ †C ŚG  FC LCÇĆG ]€GĂÇOCMČ†C ‡CHM†C ‡CHĆC ÇČŹĂŹĂHMť‚ €‚€ €Ě‚E @ ÝB€ŔÂ€€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡I@Ŕ€GBI G‚Ä]‚€ [  Ŕ€XŔD@€FE € ÇBI ÇBĹ]‚€[  €€L‚I Ŕ ]‚€[  @€FÂI †J Ŕ ]B€ €ŔĹ€€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡I@Ŕ€GBI G‚Ä]‚€ [  €
€XŔD 
€FE € ÇBI ÇBĹ]‚€[  @€FF LBĆŔ F € ĂF]‚ †C ŚG  FC LCÇĆJ ]€GĂÇOC”MCĘ†C ‡CHM†C ‡CHĆC ÇČŹĂŹJMť‚ €‚Ŕ €ĆÂI J @ ÝB€ŔB@€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡ÂJ@€€GK G‚Ä]‚€ [  Ŕ€XŔD@€FE € ÇK ÇBĹ]‚€[  €€FBK ‡K ‡BEÇK Ç‚Ë@ B]Â XŔÄ €ĆA ÇBÁÇÂË€‚Ŕ€ĆÂI L GCĚ‡ĚÝB @€ŔEŔ€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡ÂJ@ €GK G‚Ä]‚€ [  Ŕ
€XŔD@
€FE € ÇK ÇBĹ]‚€[  €€FF LBĆŔ F € ĂF]‚ †C ŚG  FC LCÇĆL ]€GĂÇOC™MÍ†C ‡CHM†C ‡CHĆC ÇČŹĂŹCMMť‚ €‚ €ĆÂI L GCL‡LÝB "  Ł´ € 6      FarmActive    recall 
   EnemyMinions    update 
   MenuBrand    farm    QF    WF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CastQ        @   VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    _Q    level       D@   ap 
   apPercent ÍĚĚĚĚĚä?   EMANA    E    HavePassive 
   CastSpell    _E      €A@š™™™™™á?   WMANA    W    GetBestCircleFarmPosition    width    WF2    _W    x    z      €F@      >@333333ă?                         n     ‡   F @ ]€€ [   @ €G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€†A ‡ÁA‡E›  Ŕ	€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€ €‡E ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇE ÇÄŔ€€†ÁE ÇE ÇÄ‚E FG‚@ GBÁťÁ X D €BF F‚F ‡ÂFÇGB †A ‡ÁA‡AG›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇÇ€€€‡ÁG ‡ÁCť€ ›  @€X ÄŔ€†AD Ŕ€ť ÇC ÇÄŔ €ŚH  €ť€›  Ŕ €†AF ĆAH  €ťA€b€  ă â € "      FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuBrand    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     GetDistance    range    CastQ    WJF    WMANA    W    GetBestCircleFarmPosition    width 
   CastSpell    _W    x    z    EJF    EMANA    E    HavePassive    _E                          Š     	   F @ †@@ ť € ]   €†@ Ŕ€Â@ Ať€›  @€‡Á@ ‡AAť€ ›   €‡A ŚÁA €ť€›  € €ŚB  €ťA€b€  ă ú € 	      pairs    GetEnemyHeroes    ValidTarget    Q    range    Ready    it 	   HaveStun    CastQ                          ’     	   F @ †@@ ť € ]   €†@ Ŕ€Â@ Ať€›  @€‡Á@ ‡AAť€ ›   €‡A ŚÁA €ť€›  € €ŚB  €ťA€b€  ă ú € 	      pairs    GetEnemyHeroes    ValidTarget    W    range    Ready    it 	   HaveStun    CastW                          š      '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuBrand 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _E    _Q    _R    LevelSpell       đ?                         ˘  Ë   ł  F @ †@@ ť € ]  €j€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ĚÁÁ@€†‚A ŚBCB ť‚€‡‚BŹ‚‚…ŤÂBĆ‚A ÇĂŤÂĆ‚A ÇĂA CCĎĎ‚ĂŤÂÝ ÂC €€‚€  €€‚A ÂA€€Ć‚A ĚÂFCD Ý‚€Ç‚ÂĎÂ‰ÍÂÂA CÍA CFA GCĂCĂDÍ‚  @€‚A ÂA€€Ć‚A ĚÂFCD Ý‚€Ç‚ÂĎÂŠÍBĹA CÍA CFA GCĂCEÍ‚  ‚A ÂA€€Ć‚A ĚÂFĂE Ý‚€Ç‚ÂĎÂŚÍĆA CÍA CFA GCĂCCFÍ‚ F‚A LÂÁŔ€A B†F €BŤ
GFA GĂ
CFA GĂ†A ‡CCOOCÇ
C]‚ †‚A ‡‚BŹ‚ŹŤ‚ŽXŔÇ@K€ĆH  €AC Ý‚€Ű  ŔI€Ç‚H ŰB   I€Ŕ@€ÇÂH ÇÉÝ‚€ Ű   €ĆBI  €Ý‚ I @€ ĂIÎĂH J  €ĆBJ Ç‚ĘÇÂĘŰ  Ŕ €ĚK @€ÝB€€;€ĆD Ŕ €ÇBK ÇÉÝ‚€ Ű  Ŕ€ĆBI  €Ý‚ CK J  €ĆBJ Ç‚ĘÇ‚ËŰ  Ŕ €ĚÂK @€ÝB€€5€ @€ÇL ÇÉÝ‚€ Ű   €ĆBI  €Ý‚ L J @€ĆBJ Ç‚ĘÇBĚŰ   €Ć‚L ĂE @€ÝB€€/€@@€ÇÂL ÇÉÝ‚€ Ű   €ĆBI  €Ý‚ ĂL J @€ĆBJ Ç‚ĘÇÍŰ   €Ć‚L F @€ÝB€€)€ĆD ÍÂ‚Ŕ@€ÇÂH ÇÉÝ‚€ Ű   €ÇBK ÇÉÝ‚€ Ű  Ŕ€ĆBI  €Ý‚ CK J  €ĆBJ Ç‚ĘÇÂĘŰ  Ŕ€ĆBJ Ç‚ĘÇ‚ËŰ  €€ĚK @€ÝB€ĚÂK @€ÝB€  €ÍB‚Ŕ€€ÇÂH ÇÉÝ‚€ Ű  @€ÇÂL ÇÉÝ‚€ Ű   €ĆBI  €Ý‚ ĂL J @€ĆBJ Ç‚ĘÇÂĘŰ   €ĆBJ Ç‚ĘÇÍŰ  Ŕ€ĚK @€ÝB€Ć‚L F @€ÝB€€€ĆD ÍB‚Ŕ€€ÇBK ÇÉÝ‚€ Ű  @€ÇÂL ÇÉÝ‚€ Ű   €ĆBI  €Ý‚ ĂL J @€ĆBJ Ç‚ĘÇ‚ËŰ   €ĆBJ Ç‚ĘÇÍŰ  Ŕ€ĚÂK @€ÝB€Ć‚L F @€ÝB€Ŕ€ĆD ÍÂ‚ÍB‚Ŕ€€ÇÂH ÇÉÝ‚€ Ű  @
€ÇBK ÇÉÝ‚€ Ű   	€ÇÂL ÇÉÝ‚€ Ű  Ŕ€ĆBI  €Ý‚ ĂL J  €ĆBJ Ç‚ĘÇÂĘŰ  Ŕ€ĆBJ Ç‚ĘÇ‚ËŰ  €€ĆBJ Ç‚ĘÇÍŰ  @€ĚK @€ÝB€ĚÂK @€ÝB€Ć‚L F @€ÝB€ĆBM ĚÉA
 Ý‚€Ű  Ŕ€€@€CJ JĂM   €H @€ €  €€L FCM LCÎÁ
 ]€€€C€b€  ă€” € :      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    CalcMagicDamage 
   GetSpellData    _Q    level       D@   ap 
   apPercent ÍĚĚĚĚĚä?   HavePassive    wDmg    _W      €K@      č?     €F@      >@333333ă?   _E      €A@š™™™™™á?   _R       Y@      I@      ŕ?      4@    ValidTarget      p—@   recall    Q    Ready    GetDistance    getHitBoxRadius        @   range 
   MenuBrand 	   ksConfig    QKS    CastQ    W    WKS    CastW    E    EKS 
   CastSpell    R    RKS    SSpells    summonerdot    IKS      Ŕ‚@   GetSlot                          Í  Ř   P   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   @€Ű   Ŕ€FB € ] ‡@ ‡AB€ €FB €€ ĆÁA @ BAG@ GBÂ‡ÂB ] [A  @€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AC € Ă    A  †DD ‡„D	‡ÄD	‡„E	]XŔĹ@ €›A    € € C FBC ‡‚ĂÇÂĂB  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range    GetMinionCollisionM 
   EnemyMinions 
   CastSpell    _Q    x    z    GetPrediction2 
   MenuBrand 	   spConfig    qConfig    QP    line    QCH                           Ú  ĺ   E   ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă€   A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € ‚B FÂB ‡ĂÇBĂB  €       W    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2 
   MenuBrand 	   spConfig    wConfig    WP    circle    WCH                           ç  	   
Ü   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@  F @ G@Ŕ G Ë [    €G@K GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGAK GAÉ†AC Ć@ ÇAŔÇËÇÁĂ@ B@‚KDF@ GBŔG‚ËGBÄť ]@   € /   
   MenuBrand    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC                          	  (	     F @ †@@ ť € ]  ŔC€‡Ŕ›A   C€‡ÁŔ›  @B€†A Ŕ€ť @A A€†A ŚÁA €F‚A LÂĆBB ]‚€G‚ÂOB‚…MÂÂ†‚A ‡CM‚‚†‚A ‡CĆ‚A ÇBĂŹÂŹ‚CM‚‚ť ĚÁC @€Ý€Ű  €€ĆA ĚÁÁ@€†‚A ŚBCD ť‚€‡‚BŹ‚‰ŤÂBĆ‚A ÇĂŤÂĆ‚A ÇĂA CCĎĎÂÄŤÂÝ Ŕ@€ĆA ĚÁÁ@€†‚A ŚBCD ť‚€‡‚BŹ‚ŠŤBEĆ‚A ÇĂŤÂĆ‚A ÇĂA CCĎĎ‚ĹŤÂÝ ŔĆA ĚÁÁ@€†‚A ŚBĂE ť‚€‡‚BŹ‚ŚŤFĆ‚A ÇĂŤÂĆ‚A ÇĂA CCĎĎBĆŤÂÝ ‚A ÂA€€Ć‚A ĚÂFF Ý‚€Ç‚ÂĎÂ‚ŤÍÇA CÍA CFA GCĂCCGÍ‚ ‚GGÂÇ†H ‡BHÇ‚Čť‚ M‚‚†D Ť‚Ť@Ŕ €GÂH ‡ÉJBIŔ €GÂÇ†H ‡BHÇ‚Čť‚ M‚‚€Ŕ €GÂH ‡ÉJ‚IŔ€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚†D €‚Ŕ €GÂH ‡ÉJÂI€€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚ŔŔ €GÂH ‡ÉJJ€€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚ ‚Ŕ €GÂH ‡ÉJBJ€€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚†D Ť‚€‚Ŕ €GÂH ‡ÉJ‚J €GÂÇ†H ‡BHÇ‚Čť‚ M‚‚ŤÂ€‚Ŕ €GÂH ‡ÉJÂJŔ
€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚Ť€‚Ŕ €GÂH ‡ÉJK€
€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚†D ŤÂ€‚Ŕ €GÂH ‡ÉJBK €GÂÇ†H ‡BHÇ‚Čť‚ M‚‚†D Ť€‚Ŕ €GÂH ‡ÉJ‚K€€GÂÇ†H ‡BHÇ‚Čť‚ M‚‚†D Ť‚ŤÂŤ€‚€ €GÂH ‡ÉJÂKb€  ă@» € 0      pairs    GetEnemyHeroes    dead    visible    GetDistance      p§@   myHero    CalcMagicDamage 
   GetSpellData    _Q    level       D@   ap 
   apPercent ÍĚĚĚĚĚä?   HavePassive    wDmg    _W      €K@      č?     €F@      >@333333ă?   _E      €A@š™™™™™á?   _R       Y@      I@      ŕ?       @   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    W Kill!    E Kill!    R Kill! 
   Q+W Kill! 
   Q+E Kill! 
   Q+R Kill! 
   W+E Kill! 
   W+R Kill!    Q+W+E+R Kill!                          *	  1	   (   [   €€›    €@FA@ GŔX@Ŕ€Ű   @€ŔŔ@€€A AAGA ‹  Š€ĆAB ÇÂÝ€ ÍÁÂŠÁ„A€[   Ŕ€Ă    €Ű   €€ŔAC €    €
ŔC‡ €       team    myHero    name    brandablaze    table    insert 
   PassiveHeros    cel    EndT    os    clock       @   isMe    find    recall                          3	  7	      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          9	  S	   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuBrand    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ]	  „	   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    c	  c	           @ @  €       AfterAA                         f	  f	           @ @  €    	   BeforeAA                         m	  m	           @ @  €       AfterAA                         p	  p	           @ @  €    	   BeforeAA                         v	  v	        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    v	  v	           @ @  €       AfterAA                                               y	  y	           @ @  €    	   BeforeAA                         ~	  ~	           @ @  €       AfterAA                         	  	           @ @  €    	   BeforeAA                              	
                †	  ®	   ź   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚KŔ  J@Ä‚J€ÄĄ@  J€€‡
@ KŔ  J Ĺ‚J@ĹĄ€  J€€‡
@€‰KŔ  JŔĹ‚J ĆĄŔ  J€€‡
@ ‹C   
ŔFŤ
@€ŚF@G †€G Ç A ÇŔÁÁG FH ]€€
@ ŽF@G †€H Ç A ÇŔÁÁG FH ]€€
@€FŔ@ † I Ç A ÇŔÁAI C  ]€€
@€‘FŔ@ † I ÇŔD ÇŔÁAI C  ]€€
@ “A@
 
@J”
@€“
@@•
@Ŕ•K   
@ –K  	‹Ŕ  ŠŔK—Š@LŠ€E™ËŔ  ĘŔL—Ę MĘ€E™Á  
AM—
M
E™KÁ  JÁM—JNJE™‹Á  ŠAN—ŠNŠE™ËÁ  ĘÁN—ĘOĘE™Â  
BO—
‚O
‚E™KÂ  JÂO—JPJ‚E™‹Â  ŠBP—Š‚PŠ‚E™ËÂ  ĘÂP—ĘQĘ‚E™Ă  
CQ—
Q
E™KĂ  JĂQ—JRJE™‹Ă  ŠCR—ŠRŠE™ËĂ  ĘĂR—ĘSĘE™Ä  
DS—
„S
„E™KÄ  JÄS—JTJ„E™‹Ä  ŠDR—Š„RŠ„E™ËÄ  ĘDT—Ę„TĘ„E™Ĺ  
ĹT—
U
…E™KĹ  JEU—J…UJ…E™d@ 

@€–F V ]€€ 
@€« € Y      SelectedTarget     Cel    TargetSelector    Q    name    Crescent Strike    range       Ś@   speed       ś@   delay ffffffÖ?   width      Ŕg@   Ready    W 
   Pale Cascade       i@   E 	   Moonfall       |@   R    Lunar Rush      Č‰@
   moonlight    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    lasttickchecked    lasthealthchecked            KSEnemy    QMarkTarget    killstring    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    it 
   ItemsCast    Š	  Š	        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ‹	  ‹	        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          Ś	  Ś	        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Ť	  Ť	        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               °	  !
   Ó  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ÇŔD Ç ĹAE C  ]€€
@€G@D JŔE‹F @ L Ć Ç@D ]@€F @ L Á Á@  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAH   ]@ F @ G€Ć LŔÁ Á€ Á FB Á Ë 	 AB	 äA ]@€F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á€	 Á	 GÁD GĹ
 FAH € ]@ F @ G€Ć LŔÁ Á@
 Á	 GJ GĹÁ
 FAH € ]@ F @ G€Ć LŔÁ Á  A FK Á Á BL EA ]@€F @ G€Ć LŔÁ Á€ Á	 GÁL GĹ
 FAH € ]@ F @ G€Ć LŔÁ Á@
 
 FAH € ]@ F @ G€Ć LŔÁ ÁŔ
  FAN   ĆN ÇÁÎ Ý ]@  F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á@  FK Á Á  A ]@€F @ G€Ć LŔÁ Á@  FK Á Á  A ]@€F @ G€Ć LŔÁ Á  A FK  Á  A ]@€F @ G€Ć LŔÁ ÁŔ  FK  Á  A ]@€F@R † @ ÁŔ € C    Ă  ]@€F @ L Á Á€ Á ]@ F @ GŔŇ LŔÁ ÁŔ  FAG  ]@ F @ GŔŇ LŔÁ Á  Á	 GÁD GĹ
 FAH € ]@ F @ GŔŇ LŔÁ Á@ Á	 GJ GĹÁ
 FAH € ]@ F @ GŔŇ LŔÁ Á€ Á	 GAL GĹÁ FAH € ]@ F @ GŔŇ LŔÁ ÁŔ  FAG  ]@ F @ GŔŇ LŔÁ ÁŔ  FAG  ]@ F @ GŔŇ LŔÁ Á@  FK Á Á  A ]@€F @ GŔŇ LŔÁ Á@  FK Á Á  A ]@€F @ GŔŇ LŔÁ Á  A FK  Á  A ]@€F @ GŔŇ LŔÁ ÁŔ  FAG  ]@ F @ GŔŇ LŔÁ ÁŔ  FAG  ]@ F @ GŔŇ LŔÁ Á  A FT   ĆN ÇÁÎÂ Ý ]@  F @ L Á Á  A ]@ G€U LŔŐ Ć @ Ç@Ő]@€F @ L Á Á  A ]@ F @ G@Ö LŔÁ ÁŔ  FAG  ]@ F @ G@Ö LŔÁ Á€ Á FAH € ]@ F @ G@Ö LŔÁ Á  Á	 GÁD GĹ
 FAH € ]@ F @ G@Ö LŔÁ Á@ Á	 GJ GĹÁ
 FAH € ]@ F @ G@Ö LŔÁ Á€ Á	 GÁL GĹ
 FAH € ]@ F @ G@Ö LŔÁ ÁŔ  FAH € ]@ F @ L Á Á@  ]@ F @ G€Ř LŔÁ ÁŔ  FAG  ]@ F @ G€Ř LŔÁ ÁŔ Á	 GÁD GĹ
 FB  Ë€B A‚ Â äA€]@€F @ G€Ř LŔÁ Á  Á	 GJ GĹÁ
 FB A Ë€B A‚ Â äA€]@€F @ G€Ř LŔÁ Á€ Á	 GAL GĹÁ FB Á Ë B AÂ äA ]@€F @ G€Ř LŔÁ ÁŔ  FAG  ]@ F @ G€Ř LŔÁ ÁŔ  FAG  ]@ F @ G€Ř LŔÁ Á@  FK Á Á  A ]@€F @ G€Ř LŔÁ Á@  FK Á Á  A ]@€F @ G€Ř LŔÁ Á  A FK  Á  A ]@€F @ L Á ÁŔ  ]@ F @ G Ű LŔÁ ÁŔ  FAG  ]@ F @ G Ű LŔÁ Á@ Á	 GÁD GĹ
 FAH € ]@ F @ G Ű LŔÁ Á€ Á	 GJ GĹÁ
 FAH € ]@ F @ G Ű LŔÁ ÁŔ Á	 GAL GĹÁ FAH € ]@ F @ G Ű LŔÁ ÁŔ  FAG  ]@ F @ G Ű LŔÁ ÁŔ  FAG  ]@ F @ G Ű LŔÁ Á@  FK Á Á  A ]@€F @ G Ű LŔÁ Á@  FK Á Á  A ]@€F @ G Ű LŔÁ Á  A FK  Á  A ]@€F @ L Á Á  A ]@ F @ G@Ü L Á Á€ Á ]@ F @ G@Ü GŔÜ LŔÁ ÁŔ  FAG  ]@ F ] †@] ť € ]  €€†] ÇÁ] ť €ÇŢ^  €Ć@ ÇBÜÇÂÜĚÂÁGC^ Ç^Ä G_–CĆCH € ÝB ˘  #űb€  ă€ůF @ G@Ü GŔÜ LŔÁ ÁŔ  FAG  ]@ F @ G@Ü GŔÜ LŔÁ ÁŔ  FAG  ]@ F @ G@Ü GŔÜ LŔÁ Á@  FAH € ]@ F @ G@Ü L Á ÁŔ   ]@ F @ G@Ü G ŕ LŔÁ ÁŔ  FAG  ]@ F @ G@Ü G ŕ LŔÁ Á@  Á FB  Ë ‚  AÂ  ! ÁB! äA ]@€F @ G@Ü G ŕ LŔÁ ÁŔ ! FAG  ]@ F @ G@Ü G ŕ LŔÁ ÁŔ Á! FAG  ]@ F @ L Á Á " A" ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ Á€" Á" FAH € ]@ F @ G@â LŔÁ Á # A# FAH € ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ Á€# Á# FAH € ]@ F @ G@â LŔÁ Á $ A$ Fd ‹ ÁÁ$  A Â$ ¤A ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ Á % A% FAH € ]@ F @ G@â LŔÁ Á€% Á% Fd ‹ ÁÁ$  A Â$ ¤A ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ Á & A& FAH € ]@ F @ G@â LŔÁ Á€& Á& Fd ‹ ÁÁ$ Â$ A  ¤A ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ ÁŔ  FAG  ]@ F @ G@â LŔÁ Á ' A' FAH € ]@ F @ G@â LŔÁ Á€' Á' Fd ‹ ÁÁ$  AÂ$  ¤A ]@ F @ L Á Á ( A( ]@ F @ G@č LŔÁ ÁŔ  FAG  ]@ F @ G@č LŔÁ Á€( Á( FAH   ]@ F @ GŔŇ L é Á  ]@€F @ G@Ü GŔÜ L é Á@ ]@€F @ G@č L é Á€( ]@€ € Ą   
   MenuDiana 
   scriptConfig    MasterSeries: Diana    Diana1    addSubMenu    [Diana]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    Q    range 
   DAMAGE_MAGIC    name    Diana    addTS    [Diana]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    CT    Combo Type:    Normal    Misaya    USEQ    Use      (Q)    USEW    W     (W)    USEE    Use 'E' If Dist To Enemy >    SCRIPT_PARAM_SLICE      €q@           E    USER    R     (R)    USER2    Use Only If Have Q Mark    CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       @      Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Diana]: Harras Settings 
   harrasConfig    QH    WH    EH     (E) 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Diana]: Items Settings 
   iteConfig    it    LoadToMenu    [Diana]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS    RKS2    'R' Target Must Have Q Mark    [Diana]: Farm Settings    farm    QF       @   No 	   Freezing 
   LaneClear    WF        @   EF    [Diana]: Jungle Farm    jf    QJF    WJF    EJF    [Diana]: Extra Settings 	   exConfig    Auto-Interrupt Spells    ES    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop       	   menuname    UI    Use Auto-Interrupt (E)    Auto W 	   awConfig    USEW2    Disable    If Take DMG    If Enemy AA    Both 
   Auto W Info: -   Use W When Enemy AA Me Or If I Take Some DMG    [Diana]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Diana]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          #
  4
   7   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ L@A ]@ G€A XŔÁ @€F B ‡€A Ç@B Ç€Â]€€[   €€G€A 
@€…G€A 
@ †G€A 
@€†@€F€C ‡ŔC ]€ 
@€…G€@ G Ä 
@ †G A G Ä 
@€†F@@ G@Ä G€Ä [   €€G C [   Ŕ€GŔD G Ĺ ]€€ [   € €L@E Ç C ]@€ €       CheckOB 
   MenuDiana    QTargetSelector    update    ETargetSelector    WCheck    SelectedTarget     ValidTarget    Q    range    Cel    QCel    ECel    GetCustomTarget    TargetSelector    target    comboConfig    CRKD    R    Ready    CastR                          6
  >
      F @ ]€€ [   @€G@@ [@  €€F€@ GŔŔ G Á @Á € €L€A ]@ €€F€@ GŔŔ G Á ŔÁ @ €L B ]@  € 	      ComboActive    recall 
   MenuDiana    comboConfig    CT       đ?   Combo1        @   Combo2                          @
  _
   ¶   F @ ‡@@ ]€ [   @€G€@ LŔŔ Ç@@ A AA]@ F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡ŔB@ Ŕ€G C G@Ă ]€€ [   €€F A G€Â G€Ă [   @€F @ ‡@@ Ç C ÇŔĂ]€€[   € €L D Ç@@ ]@€F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡@D@ Ŕ€G€D G@Ă ]€€ [   Ŕ€F A G€Â GŔÄ [   €€F @ ‡@@ Ç€D ÇŔĂ]€€[   Ŕ€F A G€Â G Ĺ [@  € €L@E Ç@@ ]@€G€E [   Ŕ€F A G€Â GŔÄ [   €€F @ ‡@@ Ç€D ÇŔĂ]€€[   Ŕ€F A G€Â G Ĺ [   €€G€D G@Ă ]€€ [   @€GŔE [   €€G@@ ‡ŔE €€ € €L@E Ç@@ ]@€F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡ F@ €€G@F G@Ă ]€€ [   @€F A G€Â G€Ć @€Ť €F @ ‡ G Ç@F ÇŔĂ]€€[   @€F@G ‡ G ]€ † A ‡€B‡€F@ @ €L€G ]@ F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡ŔG@ €€G H G@Ă ]€€ [   @€F A G€Â G@Č [    €F @ ‡ G Ç H ÇŔĂ]€€[   @ €L€H ]@  € #      ValidTarget    QCel    it 
   CastItems 
   MenuDiana 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    QMANA    Q    Ready    USEQ    range    CastQ    RMANA    R    USER    USER2    CastR 
   moonlight    QMarkTarget    EMANA    E    USEE            ECel    GetDistance    CastE    WMANA    W    USEW    CastW                          a
  
   ·   F @ ‡@@ ]€ [   @€G€@ LŔŔ Ç@@ A AA]@ F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡ŔB@  €G C G@Ă ]€€ [@  Ŕ€G€C G@Ă ]€€ [   €€F A G€Â GŔĂ [   @€F @ ‡@@ Ç€C Ç Ä]€€[   € €L@D Ç@@ ]@€G€C G@Ă ]€€ [   @€F A G€Â GŔĂ [    €F @ ‡@@ Ç C Ç Ä]€€[   @€F€D † A ‡ŔD‡ E‡@EÇ@@ C EGC GÁĹ‡C ‡DÇC ÇĆ‚A AB   Ă€   A †A ‡ĂD‡E‡F] [   €€›    €A BÁF  €€@ GA@ ‡C ‡D€  Ŕ €G e  A A€G FÁG ‡Č ÇAČ A F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡€H@ €€GŔH G@Ă ]€€ [   @€F A G€Â G É [    €F @ ‡@I ÇŔH Ç Ä]€€[   @ €L€I ]@ F€A GŔÁ †€A ‡ BP€€ O@Â † A ‡€B‡ŔI@ €€G J G@Ă ]€€ [   @€F A G€Â G@Ę @ • €F @ ‡@I Ç J Ç Ä]€€[   @€FŔJ ‡@I ]€ † A ‡€B‡@J@ @ €L K ]@  € -      ValidTarget    QCel    it 
   CastItems 
   MenuDiana 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    QMANA    R    Ready    Q    USEQ    range    CastQ    GetPrediction2 	   spConfig    qConfig    QP    delay    width    speed    circle    QCH    USER    DelayAction š™™™™™ą?
   CastSpell    _Q    x    z    WMANA    W    USEW    ECel    CastW    EMANA    E    USEE            GetDistance    CastE    n
  p
        @ F@@ †€Ŕ @€ €    
   CastSpell    _R    QCel                                                
  •
   h   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@B@ Ŕ€G€B GŔÂ ]€€ [   €€F @ G@Ŕ G Ă [   @€F@C ‡€C Ç€B ÇŔĂ]€€[   € €L D Ç€C ]@€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@D@ €€G€D GŔÂ ]€€ [   @€F @ G@Ŕ GŔÄ [    €F@C ‡ E Ç€D ÇŔĂ]€€[   @ €L@E ]@ F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡€E@ €€GŔE GŔÂ ]€€ [   @€F @ G@Ŕ G Ć [    €F@C ‡ E ÇŔE ÇŔĂ]€€[   @ €L@F ]@  €    
   MenuDiana 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    myHero    mana    maxMana       Y@   QMANA    Q    Ready    QH    ValidTarget    QCel    range    CastQ    WMANA    W    WH    ECel    CastW    EMANA    E    EH    CastE                          —
  Â
   ˙   F @ ]€€ [   @>€G@@ [@  €=€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ A Ç@ÁÇ ÂAB G@ GÂŔ8€ŔÂ €
€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡D@Ŕ€GBD G‚Ä]‚€ [  €€XŔD €FE € ÇBD ÇBĹ]‚€[  @€F‚E ‡BD ‡BEÇBD ÇÂĹ@ B]Â XŔÄŔ€€Ś@€ĆBF F GĂĆ‡ÇÝB Ŕ€ Ć @€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡D@€€GBD G‚Ä]‚€ [  @
€XŔDŔ	€FE € ÇBD ÇBĹ]‚€[   €FBG L‚ÇŔ ĂG € H]‚ †C ŚBH  FC LČĆF ]€GĂČOC’MCÉ†C ‡IM†C ‡IĆC ÇĂÉŹĂŹJMť‚ €‚€ €ĚBJ @ ÝB€ŔBŔ€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡‚J@ €GÂJ G‚Ä]‚€ [  Ŕ€XŔD@€FE € ÇÂJ ÇBĹ]‚€[  €€LK ]B Ŕ€ F@€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡‚J@€€GÂJ G‚Ä]‚€ [  @
€XŔDŔ	€FE € ÇÂJ ÇBĹ]‚€[   €FBG L‚ÇŔ ĂG € H]‚ †C ŚBH  FC LČĆCK ]€GĂČOC—MĂË†C ‡IM†C ‡IĆC ÇĂÉŹĂŹLMť‚ ŹÂB€‚@ €ĚK ÝB  Ć€€XŔÂ @ €ŔB€€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡BL@Ŕ€G‚L G‚Ä]‚€ [  €€XŔD €FE € Ç‚L ÇBĹ]‚€[  @ €LÂL ]B "  ŁAĆ € 4      FarmActive    recall 
   EnemyMinions    update 
   MenuDiana    farm    QF    WF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    GetBestCircleFarmPosition    width        @
   CastSpell    _Q    x    z    VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    level      €A@      9@   ap 
   apPercent ffffffć?   CastQ    WMANA    W    CastW    _W       (@      $@š™™™™™É?   EMANA    E    CastE                          Ä
  Ů
   	s   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€‚C ‚Dť€›  € €ŚÁD  €ťA€†A ‡ÁA‡E›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€Ŕ€‡E ‡ÁCť€ ›  €€X Ä €†AD Ŕ€‚E ‚Dť€›  @ €ŚÁE ťA †A ‡ÁA‡F›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĆ€Ŕ€‡F ‡ÁCť€ ›  €€X Ä €†AD Ŕ€‚F ‚Dť€›  @ €ŚÁF ťA b€  ă ç €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuDiana    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CastQ    WJF    WMANA    W    CastW    EJF    EMANA    E    CastE                          Ű
  ĺ
   (   G @ †@@ ť€€ Ž€@€€ @€F A G@Á 
@€F@@ ]€€ 
@ €G€A GŔÁ ]€€ [   @€F B G@Â G€Â GŔÂ X Ă @€F B G@Â G€Â GŔÂ @Ă @€G€C [@  €€GŔ@ † A ‡@A@ @ €LŔC ]@  €       lasttickchecked 
   GetTickCount      @@   lasthealthchecked    myHero    health    W    Ready 
   MenuDiana 	   exConfig 	   awConfig    USEW2        @      @   recall    CastW                          ç
  í
   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA ÁA FB †ÁA ĆAB ÂA F‚A †ÂA Ć‚A CB FA †A ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuDiana 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _Q    _E    _R    LevelSpell       đ?                         ď
     Ý   F @ †@@ ť € ]   5€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ĚÁÁ@€†‚A ŚBCB ť‚€‡‚BŹ‚‚…ŤCĆ‚A ÇBĂŤÂĆ‚A ÇBĂA CĎĎÂĂŤÂÝ ‚A ÂA€€Ć‚A ĚÂFD Ý‚€Ç‚ÂĎÂ‚Í‚ÄA CCÍA CCFA GĂCĂDÍ‚ EF‚A LÂÁŔ€A B†CE €B‹
ĂEFA GCĂ
CFA GCĂ†A ‡COOĆ
C]‚ †‚A ‡‚BŹ‚‚ŚŤ‚ŤXŔĆ "€ĆG  €AC Ý‚€Ű  € €Ć‚G ĚÂÇA Ý‚€Ű   €€€€CH HĂH  @€G @€	 €  Ŕ€CI FG LÉÁ ]€€€C€Ŕ€ĂI ĂG€   @€ŔŔ€CH HJ  €€G @€‡ĂI ‡CJ€  Ŕ €J €€C€ €ĂJ ĂG€    € €€CH HK  @€G @€‡ĂJ ‡CJ€  € €CK C €€K ĂG€   €€@ €CH HĂK  Ŕ€G @€‡K ‡CJ€   €CH HLC  Ŕ €CL €€C€€€K ĂG€   @€@Ŕ€CH HĂK  €€G @€‡K ‡CJ€  Ŕ€CH HL  €€
@™ĂL   € €CL €€C€b€  ă Ę € 4      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    CalcMagicDamage 
   GetSpellData    _Q    level      €A@      9@   ap 
   apPercent ffffffć?   _W       (@      $@š™™™™™É?      @   _R       N@      D@333333ă?      4@      I@    ValidTarget      p—@   SSpells    Ready    summonerdot 
   MenuDiana 	   ksConfig    IKS      Ŕ‚@
   CastSpell    GetSlot    Q    QKS    range    CastQ    W    WKS    CastW    R    RKS    RKS2    CastR    KSEnemy 
   moonlight                          
     E   ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă€   A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € ‚B FÂB ‡ĂÇBĂB  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 
   MenuDiana 	   spConfig    qConfig    QP    circle    QCH                                   F @ †@@ ]@  €    
   CastSpell    _W                                  F @ †@@ ]@  €    
   CastSpell    _E                            !      † @ Ć@@  € ť@€ €    
   CastSpell    _R                          #  >   
Ű   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    	€LŔD ]@ F E †@E ť € ]  Ŕ€†E Ŕ€ť ›  €€‡ÁE ÇĆ‡ÁX€A@€†AF ĆF BÂG‚Â‡ÂÂÝ ť  ĆÁF ÂE GĆBA ‡BBŽBGÇ‚BÎ‚ÇĂ ÝA b€  ă@řF @ G@Ŕ G Č [    €G@H G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGAH GÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G@É [    €G€I G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGI GÉ†AC Ć@ ÇAŔÇÁÉÇÁĂ@ B@ÂIDF@ GBŔGÂÉGBÄť ]@  F @ G@Ŕ G Ę [    €G@J G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGAJ GÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@‚JDF@ GBŔG‚ĘGBÄť ]@  F @ G@Ŕ GŔĘ [    €G K G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGK GÉ†AC Ć@ ÇAŔÇAËÇÁĂ@ B@BKDF@ GBŔGBËGBÄť ]@   € .   
   MenuDiana    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC                          @  \   Ę   F @ †@@ ť € ]  @0€‡Ŕ›A  €/€‡ÁŔ›  Ŕ.€†A Ŕ€ť @A€-€†A ŚÁA €F‚A LÂĆBB ]‚€G‚ÂOB‚…MĂ†‚A ‡BCM‚‚†‚A ‡BCĆ‚A Ç‚ĂŹÂŹÂCM‚‚ť ĆA ĚÁÁ@€†‚A ŚBD ť‚€‡‚BŹ‚‚Ť‚DĆ‚A ÇBĂŤÂĆ‚A ÇBĂA CĎĎÂÄŤÂÝ ĎĹ‚A ÂA€€Ć‚A ĚÂFCE Ý‚€Ç‚ÂĎÂ‹ÍÂĹA CCÍA CCFA GĂCFÍ‚ F‚A G‚ÂOB‚ŚMBŤ‡ÂĆĆG ÇBÇÇÝ‚ ŤÂÍÂÍ‚ÍB‚€‚Ŕ €‡ÂG ÇČŠBČŔ€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂ@Ŕ €‡ÂG ÇČŠ‚ČŔ€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂ€Ŕ €‡ÂG ÇČŠÂČŔ€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂŔŔ €‡ÂG ÇČŠÉŔ€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂ Ŕ €‡ÂG ÇČŠBÉŔ€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂÍ‚ŔŔ €‡ÂG ÇČŠ‚É€	€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂÍÂŔŔ €‡ÂG ÇČŠÂÉ@€‡ÂĆĆG ÇBÇÇÝ‚ ŤÂÍŔŔ €‡ÂG ÇČŠĘ €‡ÂĆĆG ÇBÇÇÝ‚ ŤÂÍÂÍ‚Ŕ€ €‡ÂG ÇČŠBĘb€  ăŔÎ € *      pairs    GetEnemyHeroes    dead    visible    GetDistance      p§@   myHero    CalcMagicDamage 
   GetSpellData    _Q    level      €A@      9@   ap 
   apPercent ffffffć?   _W       (@      $@š™™™™™É?      @   _R       N@      D@333333ă?      4@      I@   health    math    floor    shield    killstring 
   networkID    Harass Him!!! 
   Ignite Kill!    Q Kill!    W Kill!    R Kill! 
   W+R Kill! 
   Q+W Kill! 
   Q+R Kill!    Q+W+R Kill!                          ^  f   "   [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á[    €Ŕ   @€AA X € €A  Ŕ€AŔ@Á €  @ €
 A„
€€„ € 
      isMe    name    find    recall    QCel    KSEnemy    dianamoonlight 
   moonlight    QMarkTarget                         h  p      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á[   @€Ç@A XŔ€ € €Ç€A Ŕ€ Ŕ€Ç@@Ě€ŔAÁ Ý€€Ű   @ €
 A„
€Â„ €       isMe    name    find    recall     QCel    KSEnemy    dianamoonlight 
   moonlight    QMarkTarget                          r  x   )   Ć @ Ç@ŔÇ€ŔÇŔŔX Á@€Ć @ Ç@ŔÇ€ŔÇŔŔ@ÁŔ€Ç€A ÇŔÁÝ€€ Ű   €€Ç Â AB B @€Ç€BAB  @€ÇŔBĚ ĂAA Ý€€Ű@  @€ÇŔBĚ ĂA Ý€€Ű   @ €ĚŔC Ý@  €    
   MenuDiana 	   exConfig 	   awConfig    USEW2       @      @   W    Ready    type    myHero    target    name    find    attack    Attack    CastW                          z  „   4   Ć @ Ç@ŔÇ€ŔÇŔŔŰ    €Ç A Ç@ÁÝ€€ Ű   Ŕ	€Ć€A ÁA Ý @€[   Ŕ€Â FBB GÂX@€€‚Â FBB G‚Â@@€›   Ŕ€ÂBGĂ@Ŕ€@ B@‚@GĂB   €BC @€ ‡A ‡‚C‚€  @ €ÂC B â€  cÁö €    
   MenuDiana 	   exConfig    ES    UI    E    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    range    CastE                          †      
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuDiana    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ş  Ń   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    °  °           @ @  €       AfterAA                         ł  ł           @ @  €    	   BeforeAA                         ş  ş           @ @  €       AfterAA                         ˝  ˝           @ @  €    	   BeforeAA                         Ă  Ă        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    Ă  Ă           @ @  €       AfterAA                                               Ć  Ć           @ @  €    	   BeforeAA                         Ë  Ë           @ @  €       AfterAA                         Î  Î           @ @  €    	   BeforeAA                              	
                Ó  a
   |	  
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚K€  JŔÂ‚Ą@  J€€„
@ …K€ J@Ă‚J€Ă† D ‡@DJ€€‡JŔD‰J@EŠĄ€  J€€„
@ †K@ JŔĹ‚J€Ă† D ‡@DJ€€‡JŔD‰J FŠ
@ ‹K€ J€Ć‚JŔĆJ Ç‡JŔD‰J@GŠĄŔ  J€€„
@€ŚK   
@ Ź
 ČŹD   
@@‘
@€F I †@I Ç A ÇŔÁI FÁI ]€€
@€‘F I †@J Ç A ÇŔÁI FÁI ]€€
@ ”K  †ŔJ Ć K AK FK d@ 
@ •K    Á€  AA d@ 
@€—K 
 ‹Ŕ  ŠŔL™Š AšŠ€ÍšJ€€‹Ŕ  ŠŔL™Š CšŠ€ÍšJ€€›‹Ŕ  Š@N™Š AšŠ€ÍšJ€ ś‹Ŕ  Š@N™Š€BšŠ€ÍšJ€ ť‹Ŕ  Š@N™Š CšŠ€ÍšJ€€ť‹Ŕ  Š@N™Š@FšŠ€ÍšJ€ ž‹Ŕ  Š€O™Š AšŠŔĎšJ€€ž‹Ŕ  Š€O™Š CšŠ€ÍšJ€  ‹Ŕ  Š€O™Š@FšŠŔĎšJ€€ ‹Ŕ  ŠŔP™Š AšŠŔĎšJ€ ˇ‹Ŕ  ŠŔP™Š€BšŠŔĎšJ€ ˘‹Ŕ  Š€Q™Š AšŠ€ÍšJ€€˘‹Ŕ  Š€Q™Š€BšŠ€ÍšJ€€Ł‹Ŕ  Š€Q™Š CšŠ€ÍšJ€ ¤‹Ŕ  Š€Q™Š@FšŠ€ÍšJ€€¤‹Ŕ  ŠŔR™Š AšŠ€ÍšJ€ Ą‹Ŕ  ŠŔR™Š CšŠŔĎšJ€ ¦‹Ŕ  ŠŔR™Š@FšŠ€ÍšJ€€¦‹Ŕ  ŠŔS™Š AšŠŔĎšJ€ §‹Ŕ  ŠŔS™Š€BšŠŔĎšJ€ ¨‹Ŕ  ŠŔS™Š@FšŠŔĎšJ€€¨‹Ŕ  ŠŔT™Š€BšŠ€ÍšJ€ ©‹Ŕ  ŠŔT™Š@FšŠ€ÍšJ€ Ş‹Ŕ  Š€U™Š AšŠ€ÍšJ€€Ş‹Ŕ  Š€U™Š CšŠ€ÍšJ€€«‹Ŕ  Š€U™Š@FšŠ€ÍšJ€ ¬‹Ŕ  Š€V™Š AšŠ€ÍšJ€€¬‹Ŕ  Š€V™Š€BšŠ€ÍšJ€€­‹Ŕ  Š€V™Š CšŠŔĎšJ€ ®‹Ŕ  Š€V™Š@FšŠŔĎšJ€€®‹Ŕ  ŠŔW™Š AšŠ€ÍšJ€ Ż‹Ŕ  ŠŔW™Š AšŠ€ÍšJ€ °‹Ŕ  ŠŔW™Š@FšŠ€ÍšJ€€°‹Ŕ  ŠŔX™Š AšŠ€ÍšJ€ ±‹Ŕ  ŠŔX™Š€BšŠ€ÍšJ€ ˛‹Ŕ  ŠŔX™Š CšŠ€ÍšJ€€˛‹Ŕ  ŠŔX™Š@FšŠŔĎšJ€ ł‹Ŕ  Š Z™Š AšŠ€ÍšJ€€ł‹Ŕ  Š Z™Š€BšŠ€ÍšJ€€´‹Ŕ  Š Z™Š CšŠŔĎšJ€ µ‹Ŕ  Š Z™Š@FšŠ€ÍšJ€€µ‹Ŕ  Š@[™Š AšŠ€ÍšJ€ ¶‹Ŕ  Š@[™Š€BšŠ€ÍšJ€ ·‹Ŕ  Š@[™Š CšŠŔĎšJ€€·‹Ŕ  Š@[™Š@FšŠŔĎšJ€ ¸‹Ŕ  Š€\™Š AšŠ€ÍšJ€€¸‹Ŕ  Š€\™Š€BšŠ€ÍšJ€€ą‹Ŕ  Š€\™Š CšŠ€ÍšJ€ ş‹Ŕ  Š€\™Š@FšŠ€ÍšJ€€ş‹Ŕ  ŠŔ]™Š AšŠŔĎšJ€ »‹Ŕ  ŠŔ]™Š CšŠŔĎšJ€ Ľ‹Ŕ  ŠŔ]™Š@FšŠŔĎšJ€€Ľ‹Ŕ  ŠŔ^™Š AšŠ€ÍšJ€ ˝‹Ŕ  ŠŔ^™Š€BšŠ€ÍšJ€ ľ‹Ŕ  ŠŔ^™Š CšŠ€ÍšJ€€ľ‹Ŕ  ŠŔ^™Š@FšŠŔĎšJ€ ż‹€  Š `™Š AšJ€€ż‹Ŕ  Š `™Š€BšŠ€ÍšJ€€Ŕ‹Ŕ  ŠŔ`™Š CšŠŔĎšJ€ Á‹Ŕ  ŠŔ`™Š@FšŠŔĎšJ€ Â‹Ŕ  Š€a™Š AšŠŔĎšJ€€Â‹Ŕ  Š€a™Š€BšŠ€ÍšJ€€Ă‹Ŕ  Š€a™Š CšŠ€ÍšJ€ Ä‹Ŕ  Š€a™Š AšŠ€ÍšJ€€Ä‹Ŕ  Š€a™Š€BšŠ€ÍšJ€ Ĺ‹Ŕ  Š€a™Š CšŠŔĎšJ€€Ĺ‹Ŕ  Š€a™Š CšŠŔĎšJ€ Ć‹Ŕ  Š€c™Š AšŠ€ÍšJ€€Ć‹Ŕ  Š€c™Š CšŠŔĎšJ€€Ç‹Ŕ  Š€c™Š@FšŠ€ÍšJ€ Č‹Ŕ  Š€d™Š AšŠ€ÍšJ€€Č‹Ŕ  Š€d™Š€BšŠ€ÍšJ€€É‹Ŕ  Š€d™Š CšŠŔĎšJ€ Ę‹Ŕ  Š€d™Š@FšŠ€ÍšJ€€Ę‹Ŕ  ŠŔe™Š AšŠŔĎšJ€ Ë‹Ŕ  ŠŔe™Š€BšŠŔĎšJ€ Ě‹Ŕ  ŠŔe™Š CšŠŔĎšJ€€Ě‹Ŕ  ŠŔe™Š@FšŠ€ÍšJ€ Í‹Ŕ  Š g™Š AšŠŔĎšJ€€Í‹Ŕ  Š g™Š@FšŠŔĎšJ€€Î‹Ŕ  ŠŔg™Š AšŠŔĎšJ€ Ď‹Ŕ  ŠŔg™Š CšŠ€ÍšJ€ Đ‹Ŕ  ŠŔg™Š CšŠ€ÍšJ€€Đ‹Ŕ  ŠŔg™Š@FšŠ€ÍšJ€ Ń‹Ŕ  Š i™Š AšŠ€ÍšJ€€Ń‹Ŕ  Š i™Š CšŠ€ÍšJ€€Ň‹Ŕ  Š i™Š@FšŠ€ÍšJ€ Ó‹Ŕ  Š j™Š AšŠŔĎšJ€€Ó‹Ŕ  Š j™Š@FšŠ€ÍšJ€€Ô‹Ŕ  ŠŔj™Š AšŠ€ÍšJ€ Ő‹Ŕ  ŠŔj™Š CšŠ€ÍšJ€ Ö‹Ŕ  ŠŔj™Š@FšŠŔĎšJ€€Ö‹Ŕ  ŠŔk™Š AšŠ€ÍšJ€ ×‹Ŕ  ŠŔk™Š AšŠ€ÍšJ€ Ř‹Ŕ  ŠŔk™Š€BšŠŔĎšJ€€Ř‹Ŕ  ŠŔk™Š€BšŠ€ÍšJ€ Ů‹Ŕ  ŠŔk™Š CšŠ€ÍšJ€€Ů‹Ŕ  ŠŔk™Š@FšŠ€ÍšJ€ Ú‹Ŕ  Š€m™Š AšŠ€ÍšJ€€Ú‹Ŕ  Š€m™Š AšŠ€ÍšJ€€Ű‹Ŕ  Š€m™Š CšŠ€ÍšJ€ Ü‹Ŕ  Š€m™Š@FšŠ€ÍšJ€€Ü‹Ŕ  ŠŔn™Š AšŠ€ÍšJ€ Ý‹Ŕ  ŠŔn™Š€BšŠ€ÍšJ€ Ţ‹Ŕ  ŠŔn™Š€BšŠ€ÍšJ€€Ţ‹Ŕ  ŠŔn™Š@FšŠ€ÍšJ€ ß‹Ŕ  Š p™Š AšŠ€ÍšJ€€ß‹Ŕ  Š p™Š€BšŠ€ÍšJ€€ŕ‹Ŕ  Š p™Š@FšŠ€ÍšJ€ á‹Ŕ  Š q™Š AšŠ€ÍšJ€€á‹Ŕ  Š q™Š€BšŠ€ÍšJ€€â‹Ŕ  Š q™Š CšŠ€ÍšJ€ ă‹Ŕ  Š r™Š AšŠŔĎšJ€€ă‹Ŕ  Š r™Š CšŠŔĎšJ€€ä‹Ŕ  Š r™Š@FšŠ€ÍšJ€ ĺ‹Ŕ  Š s™Š AšŠ€ÍšJ€€ĺ‹Ŕ  Š s™Š€BšŠŔĎšJ€€ć‹Ŕ  ŠŔs™Š AšŠ€ÍšJ€ ç‹Ŕ  ŠŔs™Š CšŠ€ÍšJ€ č‹Ŕ  ŠŔs™Š@FšŠ€ÍšJ€€č‹Ŕ  ŠŔt™Š AšŠŔĎšJ€ é‹Ŕ  ŠŔt™Š ĂęŠ€ÍšJ€ ę‹Ŕ  ŠŔu™Š AšŠŔĎšJ€ ë‹Ŕ  ŠŔu™Š€BšŠ€ÍšJ€ ě‹Ŕ  ŠŔu™Š CšŠŔĎšJ€€ě‹Ŕ  ŠŔu™Š AšŠ€ÍšJ€ í‹Ŕ  ŠŔu™Š€BšŠ€ÍšJ€€í‹Ŕ  ŠŔu™Š CšŠ€ÍšJ€ î‹Ŕ  Š€w™Š€BšŠ€ÍšJ€€î‹Ŕ  Š€w™Š@FšŠ€ÍšJ€€ď‹Ŕ  Š@x™Š AšŠ€ÍšJ€ đ‹Ŕ  Š@x™Š€BšŠ€ÍšJ€ ń‹Ŕ  Š@x™Š CšŠ€ÍšJ€€ń‹Ŕ  Š@x™Š@FšŠ€ÍšJ€ ň‹Ŕ  Š€y™Š AšŠ€ÍšJ€€ň‹Ŕ  Š€y™Š€BšŠŔĎšJ€€ó‹Ŕ  Š@z™Š AšŠŔĎšJ€ ô‹Ŕ  Š@z™Š€BšŠ€ÍšJ€ ő‹Ŕ  Š@z™Š CšŠ€ÍšJ€€ő‹Ŕ  Š@z™Š@FšŠ€ÍšJ€ ö‹Ŕ  Š€{™Š AšŠŔĎšJ€€ö‹Ŕ  Š€{™Š€BšŠ€ÍšJ€€÷‹Ŕ  Š€{™Š CšŠŔĎšJ€ ř‹Ŕ  Š€{™Š@FšŠ€ÍšJ€€ř‹Ŕ  ŠŔ|™Š AšŠŔĎšJ€ ů‹Ŕ  ŠŔ|™Š CšŠ€ÍšJ€ ú‹€  Š€}™Š AšJ€€ú‹Ŕ  Š€}™Š€BšŠ€ÍšJ€€ű‹Ŕ  Š€}™Š@FšŠ€ÍšJ€ ü‹Ŕ  Š€~™Š AšŠŔĎšJ€€ü‹Ŕ  Š€~™Š€BšŠ€ÍšJ€€ý‹Ŕ  Š€~™Š CšŠ€ÍšJ€ ţ‹Ŕ  Š€~™Š AšŠŔĎšJ€€ţ‹Ŕ  Š€~™Š€BšŠ€ÍšJ€ ˙‹Ŕ  Š€~™Š CšŠ€ÍšJ€€˙ @ ËŔ  A@ Ę ™Ę AšĘ€ÍšJŔ €@ ËŔ  A@ Ę ™Ę€BšĘ€ÍšJŔ Ŕ@ ËŔ  A@ Ę ™Ę CšĘ€ÍšJŔ  A ËŔ  A@ Ę ™Ę@FšĘ€ÍšJŔ @A ËŔ  A Ę ™Ę AšĘŔĎšJŔ ŔA ËŔ  A Ę ™Ę€BšĘ€ÍšJŔ  B ËŔ  A Ę ™Ę CšĘ€ÍšJŔ @B ËŔ  A Ę ™Ę@FšĘŔĎšJŔ €B ËŔ  A Ę ™Ę@FšĘ€ÍšJŔ ŔB ËŔ  A Ę ™Ę@FšĘ€ÍšJŔ  C ËŔ  AC Ę ™Ę AšĘ€ÍšJŔ €C ËŔ  AC Ę ™Ę€BšĘ€ÍšJŔ ŔC ËŔ  AC Ę ™Ę CšĘ€ÍšJŔ  D ËŔ  AC Ę ™Ę@FšĘŔĎšJŔ @D ËŔ  AC Ę ™Ę AšĘŔĎšJŔ €D ËŔ  AC Ę ™Ę€BšĘ€ÍšJŔ ŔD ËŔ  AC Ę ™Ę CšĘ€ÍšJŔ  E ËŔ  AE Ę ™Ę AšĘ€ÍšJŔ €E ËŔ  AE Ę ™Ę CšĘ€ÍšJŔ ŔE ËŔ  AE Ę ™Ę CšĘ€ÍšJŔ  F ËŔ  AE Ę ™Ę@FšĘ€ÍšJŔ @F ËŔ  F Ę ™Ę AšĘ€ÍšJŔ ŔF ËŔ  F Ę ™Ę€BšĘ€ÍšJŔ  G ËŔ  F Ę ™Ę CšĘ€ÍšJŔ @G ËŔ  F Ę ™Ę@FšĘ€ÍšJŔ €G ËŔ  ÁG Ę ™Ę AšĘŔĎšJŔ  H ËŔ  ÁG Ę ™Ę€BšĘ€ÍšJŔ @H ËŔ  ÁG Ę ™Ę@FšĘ€ÍšJŔ €H ËŔ  ÁH Ę ™Ę AšĘ€ÍšJŔ  I ËŔ  ÁH Ę ™Ę€BšĘŔĎšJŔ @I ËŔ  ÁH Ę ™Ę CšĘŔĎšJŔ €I ËŔ  ÁI Ę ™Ę AšĘ€ÍšJŔ  J ËŔ  ÁI Ę ™Ę CšĘ€ÍšJŔ @J ËŔ  ÁI Ę ™Ę CšĘ€ÍšJŔ €J ËŔ  ÁI Ę ™Ę@FšĘ€ÍšJŔ ŔJ ËŔ  K Ę ™Ę AšĘŔĎšJŔ @K ËŔ  K Ę ™Ę CšĘ€ÍšJŔ €K ËŔ  K Ę ™Ę@FšĘ€ÍšJŔ ŔK ËŔ  L Ę ™Ę AšĘŔĎšJŔ @L ËŔ  L Ę ™Ę€BšĘ€ÍšJŔ €L ËŔ  L Ę ™Ę CšĘŔĎšJŔ ŔL ËŔ  L Ę ™Ę@FšĘŔĎšJŔ  M ËŔ  AM Ę ™Ę AšĘ€ÍšJŔ €M ËŔ  AM Ę ™Ę€BšĘŔĎšJŔ ŔM ËŔ  AM Ę ™Ę CšĘ€ÍšJŔ  N ËŔ  AM Ę ™Ę@FšĘ€ÍšJŔ @N ËŔ  N Ę ™Ę AšĘŔĎšJŔ ŔN ËŔ  O Ę ™Ę AšĘŔĎšJŔ @O ËŔ  O Ę ™Ę CšĘ€ÍšJŔ €O ËŔ  O Ę ™Ę@FšĘ€ÍšJŔ ŔO ËŔ  P Ę ™Ę AšĘ€ÍšJŔ @P ËŔ  P Ę ™Ę CšĘ€ÍšJŔ €P ËŔ  P Ę ™Ę@FšĘŔĎšJŔ ŔP ËŔ  Q Ę ™Ę AšĘ€ÍšJŔ @Q ËŔ  Q Ę ™Ę€BšĘ€ÍšJŔ €Q ËŔ  Q Ę ™Ę@FšĘ€ÍšJŔ ŔQ ËŔ  R Ę ™Ę AšĘ€ÍšJŔ @R ËŔ  R Ę ™Ę€BšĘŔĎšJŔ €R ËŔ  R Ę ™Ę CšĘ€ÍšJŔ ŔR ËŔ  R Ę ™Ę@FšĘ€ÍšJŔ  S ËŔ  AS Ę ™Ę AšĘ€ÍšJŔ €S ËŔ  AS Ę ™Ę€BšĘŔĎšJŔ ŔS ËŔ  AS Ę ™Ę CšĘ€ÍšJŔ  T ËŔ  AT Ę ™Ę AšĘ€ÍšJŔ €T ËŔ  AT Ę ™Ę CšĘ€ÍšJŔ ŔT ËŔ  AT Ę ™Ę@FšĘŔĎšJŔ  U ËŔ  AU Ę ™Ę AšĘ€ÍšJŔ €U ËŔ  AU Ę ™Ę€BšĘ€ÍšJŔ ŔU ËŔ  AU Ę ™Ę CšĘ€ÍšJŔ  V ËŔ  AU Ę ™Ę AšĘ€ÍšJŔ @V ËŔ  AU Ę ™Ę€BšĘ€ÍšJŔ €V ËŔ  AU Ę ™Ę CšĘ€ÍšJŔ ŔV ËŔ  W Ę ™Ę AšĘ€ÍšJŔ @W ËŔ  W Ę ™Ę CšĘŔĎšJŔ €W ËŔ  ÁW Ę ™Ę CšĘŔĎšJŔ  X ËŔ  ÁW Ę ™Ę@FšĘ€ÍšJŔ @X ËŔ  X Ę ™Ę AšĘ€ÍšJŔ ŔX ËŔ  X Ę ™Ę CšĘŔĎšJŔ  Y ËŔ  AY Ę ™Ę AšĘ€ÍšJŔ €Y ËŔ  AY Ę ™Ę€BšĘ€ÍšJŔ ŔY ËŔ  AY Ę ™Ę@FšĘ€ÍšJŔ  Z ËŔ  AZ Ę ™Ę AšĘŔĎšJŔ €Z ËŔ  AZ Ę ™Ę€BšĘŔĎšJŔ ŔZ ËŔ  AZ Ę ™Ę CšĘ€ÍšJŔ  [ ËŔ  A[ Ę ™Ę AšĘ€ÍšJŔ €[ ËŔ  A[ Ę ™Ę CšĘŔĎšJŔ Ŕ[ ËŔ  \ Ę ™Ę AšĘ€ÍšJŔ @\ ËŔ  \ Ę ™Ę CšĘŔĎšJŔ €\ ËŔ  Á\ Ę ™Ę AšĘ€ÍšJŔ  ] ËŔ  Á\ Ę ™Ę CšĘŔĎšJŔ @] ËŔ  Á\ Ę ™Ę@FšĘ€ÍšJŔ €] ËŔ  Á] Ę ™Ę AšĘ€ÍšJŔ  ^ ËŔ  Á] Ę ™Ę€BšĘ€ÍšJŔ @^ ËŔ  Á] Ę ™Ę CšĘ€ÍšJŔ €^ ËŔ  Á^ Ę ™Ę AšĘ€ÍšJŔ  _ ËŔ  Á^ Ę ™Ę CšĘ€ÍšJŔ @_ ËŔ  _ Ę ™Ę AšĘ€ÍšJŔ Ŕ_ ËŔ  _ Ę ™Ę AšĘ€ÍšJŔ  ` ËŔ  _ Ę ™Ę€BšĘ€ÍšJŔ @` ËŔ  _ Ę ™Ę@FšĘ€ÍšJŔ €` ËŔ  _ Ę ™Ę@FšĘ€ÍšJŔ Ŕ` ËŔ  a Ę ™Ę AšĘ€ÍšJŔ @a ËŔ  a Ę ™Ę CšĘ€ÍšJŔ €a ËŔ  a Ę ™Ę@FšĘ€ÍšJŔ Ŕa ËŔ  b Ę ™Ę AšĘŔĎšJŔ @b ËŔ  b Ę ™Ę€BšĘŔĎšJŔ €b ËŔ  b Ę ™Ę CšĘŔĎšJŔ Ŕb ËŔ  c Ę ™Ę AšĘ€ÍšJŔ @c ËŔ  c Ę ™Ę@FšĘ€ÍšJŔ €c ËŔ  Ác Ę ™Ę AšĘ€ÍšJŔ  d ËŔ  Ác Ę ™Ę€BšĘ€ÍšJŔ @d ËŔ  Ác Ę ™Ę CšĘŔĎšJŔ €d ËŔ  Ád Ę ™Ę AšĘŔĎšJŔ  e ËŔ  Ád Ę ™Ę CšĘ€ÍšJŔ @e ËŔ  e Ę ™Ę CšĘ€ÍšJŔ Ŕe ËŔ  e Ę ™Ę@FšĘ€ÍšJŔ  f ËŔ  Af Ę ™Ę AšĘ€ÍšJŔ €f ËŔ  Af Ę ™Ę€BšĘ€ÍšJŔ Ŕf ËŔ  Af Ę ™Ę CšĘŔĎšJŔ  g ËŔ  Ag Ę ™Ę AšĘŔĎšJŔ €g ËŔ  Ág Ę ™Ę AšĘ€ÍšJŔ  h ËŔ  Ah Ę ™Ę AšĘ€ÍšJŔ €h ËŔ  Ah Ę ™Ę CšĘ€ÍšJŔ Ŕh ËŔ  Ah Ę ™Ę@FšĘŔĎšJŔ  i ËŔ  Ai Ę ™Ę AšĘŔĎšJŔ €i ËŔ  Ai Ę ™Ę€BšĘ€ÍšJŔ Ŕi ËŔ  Ai Ę ™Ę CšĘ€ÍšJŔ  j ËŔ  Ai Ę ™Ę@FšĘ€ÍšJŔ @j ËŔ  j Ę ™Ę AšĘ€ÍšJŔ Ŕj ËŔ  j Ę ™Ę CšĘŔĎšJŔ  k ËŔ  Ak Ę ™Ę AšĘŔĎšJŔ €k ËŔ  Ak Ę ™Ę€BšĘ€ÍšJŔ Ŕk ËŔ  Ak Ę ™Ę CšĘŔĎšJŔ  l ËŔ  Ak Ę ™Ę@FšĘ€ÍšJŔ @l ËŔ  l Ę ™Ę AšĘ€ÍšJŔ Ŕl ËŔ  l Ę ™Ę€BšĘ€ÍšJŔ  m ËŔ  l Ę ™Ę CšĘ€ÍšJŔ @m ËŔ  l Ę ™Ę@FšĘŔĎšJŔ €m ËŔ  Ám Ę ™Ę€BšĘ€ÍšJŔ  n ËŔ  Ám Ę ™Ę CšĘŔĎšJŔ @n ËŔ  n Ę ™Ę€BšĘ€ÍšJŔ Ŕn ËŔ  n Ę ™Ę CšĘŔĎšJŔ  o ËŔ  n Ę ™Ę@FšĘ€ÍšJŔ @o ËŔ  o Ę ™Ę AšĘŔĎšJŔ Ŕo ËŔ  p Ę ™Ę AšĘ€ÍšJŔ @p ËŔ  p Ę ™Ę CšĘ€ÍšJŔ €p ËŔ  p Ę ™Ę@FšĘ€ÍšJŔ Ŕp ËŔ  q Ę ™Ę€BšĘ€ÍšJŔ @q ËŔ  q Ę ™Ę CšĘŔĎšJŔ €q ËŔ  q Ę ™Ę@FšĘŔĎšJŔ Ŕq ËŔ  r Ę ™Ę AšĘŔĎšJŔ @r ËŔ  r Ę ™Ę@FšĘŔĎšJŔ €r ËŔ  Ár Ę ™Ę CšĘ€ÍšJŔ  s ËŔ  As Ę ™Ę AšĘ€ÍšJŔ €s ËŔ  Ás Ę ™Ę€BšĘ€ÍšJŔ  t ËŔ  Ás Ę ™Ę€BšĘ€ÍšJŔ @t ËŔ  Ás Ę ™Ę CšĘ€ÍšJŔ €t ËŔ  Át Ę ™Ę AšĘ€ÍšJŔ  u ËŔ  Át Ę ™Ę€BšĘ€ÍšJŔ @u ËŔ  Át Ę ™Ę CšĘ€ÍšJŔ €u ËŔ  Át Ę ™Ę@FšĘ€ÍšJŔ Ŕu ËŔ  v Ę ™Ę AšĘ€ÍšJŔ @v ËŔ  v Ę ™Ę CšĘ€ÍšJŔ €v ËŔ  v Ę ™Ę@FšĘŔĎšJŔ Ŕv ËŔ  w Ę ™Ę AšĘ€ÍšJŔ @w ËŔ  w Ę ™Ę CšĘ€ÍšJŔ €w ËŔ  w Ę ™Ę@FšĘ€ÍšJŔ Ŕw ËŔ  x Ę ™Ę CšĘŔĎšJŔ @x ËŔ  x Ę ™Ę AšĘŔĎšJŔ Ŕx ËŔ  x Ę ™Ę€BšĘ€ÍšJŔ  y ËŔ  x Ę ™Ę CšĘ€ÍšJŔ @y ËŔ  x Ę ™Ę@FšĘŔĎšJŔ €y ËŔ  Áy Ę ™Ę AšĘŔĎšJŔ  z ËŔ  Áy Ę ™Ę AšĘŔĎšJŔ @z ËŔ  Áy Ę ™Ę AšĘŔĎšJŔ €z ËŔ  Áy Ę ™Ę€BšĘ€ÍšJŔ Ŕz ËŔ  Áy Ę ™Ę CšĘ€ÍšJŔ  { ËŔ  Áy Ę ™Ę@FšĘ€ÍšJŔ @{ ËŔ  { Ę ™Ę AšĘ€ÍšJŔ Ŕ{ ËŔ  { Ę ™Ę@FšĘŔĎšJŔ  | ËŔ  A| Ę ™Ę AšĘŔĎšJŔ €| ËŔ  A| Ę ™Ę€BšĘ€ÍšJŔ Ŕ| ËŔ  A| Ę ™Ę CšĘ€ÍšJŔ  } ËŔ  A| Ę ™Ę@FšĘ€ÍšJŔ @} ËŔ  } Ę ™Ę AšĘŔĎšJŔ Ŕ} ËŔ  } Ę ™Ę CšĘ€ÍšJŔ  ~ ËŔ  } Ę ™Ę@FšĘ€ÍšJŔ @~ ËŔ  ~ Ę ™Ę AšĘ€ÍšJŔ Ŕ~ ËŔ  ~ Ę ™Ę€BšĘŔĎšJŔ   ËŔ  ~ Ę ™Ę CšĘ€ÍšJŔ @ ËŔ   Ę ™Ę AšĘŔĎšJŔ Ŕ ËŔ   Ę ™Ę@FšĘŔĎšJŔ  € ËŔ  A€ Ę ™Ę AšĘ€ÍšJŔ €€ ËŔ  A€ Ę ™Ę CšĘŔĎšJŔ Ŕ€ ËŔ  A€ Ę ™Ę@FšĘ€ÍšJŔ   ËŔ  A€ Ę ™Ę@FšĘ€ÍšJŔ @ ËŔ   Ę ™Ę AšĘ€ÍšJŔ Ŕ ËŔ   Ę ™Ę€BšĘ€ÍšJŔ  ‚ ËŔ   Ę ™Ę CšĘ€ÍšJŔ @‚ ËŔ   Ę ™Ę@FšĘŔĎšJŔ €‚ ËŔ  Á‚ Ę ™Ę CšĘŔĎšJŔ   ËŔ  Á‚ Ę ™Ę@FšĘ€ÍšJŔ @ ËŔ   Ę ™Ę AšĘ€ÍšJŔ Ŕ ËŔ   Ę ™Ę AšĘ€ÍšJŔ  „ ËŔ   Ę ™Ę AšĘ€ÍšJŔ @„ ËŔ   Ę ™Ę CšĘŔĎšJŔ €„ ËŔ   Ę ™Ę@FšĘ€ÍšJŔ Ŕ„ ËŔ  … Ę ™Ę AšĘ€ÍšJŔ @… ËŔ  … Ę ™Ę€BšĘ€ÍšJŔ €… ËŔ  … Ę ™Ę CšĘŔĎšJŔ Ŕ… ËŔ  † Ę ™Ę AšĘ€ÍšJŔ @† ËŔ  † Ę ™Ę€BšĘ€ÍšJŔ €† ËŔ  † Ę ™Ę CšĘ€ÍšJŔ Ŕ† ËŔ  ‡ Ę ™Ę AšĘ€ÍšJŔ @‡ ËŔ  ‡ Ę ™Ę@FšĘŔĎšJŔ €‡ ËŔ  Á‡ Ę ™Ę AšĘ€ÍšJŔ   ËŔ  Á‡ Ę ™Ę€BšĘ€ÍšJŔ @ ËŔ  Á‡ Ę ™Ę CšĘ€ÍšJŔ € ËŔ  Á‡ Ę ™Ę@FšĘ€ÍšJŔ Ŕ ËŔ  ‰ Ę ™Ę AšĘŔĎšJŔ @‰ ËŔ  ‰ Ę ™Ę CšĘŔĎšJŔ €‰ ËŔ  Á‰ Ę ™Ę AšĘ€ÍšJŔ  Š ËŔ  Á‰ Ę ™Ę CšĘ€ÍšJŔ @Š ËŔ  Á‰ Ę ™Ę@FšĘ€ÍšJŔ 
@ A€Š ŔŠ †€  ť€€ 
€€  € ,     SelectedTarget     Cel    TargetSelector    Q    name    Urchin Strike    range      0@   Ready    W    Seastone Trident    E    Playful       y@   speed    math    huge    delay       Đ?   width       t@   E2 
   Trickster      ŕp@   R    Chum the Waters      P”@     Ŕ’@      T@   killstring    recall     Bpos    Hpos 
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    Spells    _Q    _W    _E    _R    Spells2    DodgeSpells    AatroxQ 	   charName    Aatrox 
   spellSlot 
   SpellType 
   skillshot    AatroxE    AhriOrbofDeception    Ahri    AhriFoxFire    AhriSeduce    AhriTumble 
   AkaliMota    Akali    castcel    AkaliShadowSwipe    AkaliShadowDance 
   Pulverize    Alistar 	   Headbutt    BandageToss    Amumu    AuraofDespair    Tantrum    CurseoftheSadMummy    FlashFrost    Anivia 
   Frostbite 
   GlacialStorm 
   Disintegrate    Annie    Incinerate    InfernalGuardian    Volley    Ashe    EnchantedCrystalArrow    RocketGrab    Blitzcrank 
   PowerFist    StaticField    BrandBlaze    Brand 
   BrandFissure    BrandConflagration    BrandWildfire    BraumQ    Braum 
   BraumQMissle    BraumR    CaitlynPiltoverPeacemaker    Caitlyn    CaitlynYordleTrap    CaitlynEntrapment    CaitlynAceintheHole    CassiopeiaNoxiousBlast    Cassiopeia    CassiopeiaMiasma    CassiopeiaTwinFang    CassiopeiaPetrifyingGaze    Rupture    Chogath    FeralScream 
   VorpalSpikes    Feast    PhosphorusBomb    Corki    CarpetBomb    GGun    MissileBarrage 
   DariusCleave    Darius    DariusAxeGrabCone    DariusExecute 	   DianaArc    Diana 
   DianaOrbs    DianaVortex    DianaTeleport    InfectedCleaverMissileCast    DrMundo 
   BurningAgony    DravenDoubleShot    Draven    DravenRCast    EliseHumanQ    Elise    EliseHumanW    EliseHumanE    EliseSpiderQCast 
   EliseSpiderW    EliseSpiderEInitial    elisespideredescent 	   EvelynnQ    Evelynn 	   EvelynnE 	   EvelynnR    EzrealMysticShot    Ezreal    EzrealEssenceFlux    EzrealArcaneShift    EzrealTruehotBarrage    Terrify 
   FiddleSticks    Drain    FiddlesticksDarkWind 
   Crowstorm    FioraQ    Fiora    FioraDance    FizzPiercingStrike    Fizz 	   FizzJump    FizzJumptwo    FizzMarinerDoom    GalioResoluteSmite    Galio    GalioRighteousGust    GalioIdolOfDurand    Parley 
   Gangplank    CannonBarrage    GarenQ    Garen    GarenE    GarenR    GnarQ    Gnar 	   GnarBigQ    GnarWStack 	   GnarBigW 	   GnarBigE 	   GnarBigR    GragasBarrelRoll    Gragas    gragasbarrelrolltoggle    GragasBodySlam    GragasExplosiveCask    GravesClusterShot    Graves    GravesSmokeGrenade    gravessmokegrenadeboom    GravesChargeShot    HecarimRapidSlash    Hecarim 	   HecarimW    HecarimUlt    HeimerdingerQ 
   Heimerdinger    HeimerdingerW    HeimerdingerE    IreliaGatotsu    Irelia    IreliaEquilibriumStrike    IreliaTranscendentBlades    HowlingGale    Janna    SowTheWind    JarvanIVDragonStrike 	   JarvanIV    JarvanIVDemacianStandard    JarvanIVCataclysm    JaxLeapStrike    Jax    JaxCounterStrike 
   spellslot    JayceToTheSkies    Jayce    JayceStaticField    JayceThunderingBlow    jayceshockblast    jaycehypercharge    jayceaccelerationgate    JinxW    Jinx 
   JinxRWrapper 	   LayWaste    Karthus    WallOfPain    Defile 
   FallenOne    KarmaQ    Karma    KarmaSpiritBind 
   NullLance 	   Kassadin    NetherBlade    ForcePulse 	   RiftWalk 
   KatarinaQ 	   Katarina 
   KatarinaW 
   KatarinaE 
   KatarinaR    JudicatorReckoning    Kayle    JudicatorRighteousFury    KennenShurikenHurlMissile1    Kennen    KennenBringTheLight    KennenShurikenStorm     KhazixQ    Khazix    KhazixW    KhazixE    khazixqlong    khazixwlong    khazixelong    KogMawCausticSpittle    KogMaw    KogMawBioArcanBarrage    KogMawVoidOoze    KogMawLivingArtillery    LeblancChaosOrb    Leblanc 
   LeblancSlide    LeblancSoulShackle    LeblancChaosOrbM    LeblancSlideM    LeblancSoulShackleM    BlindMonkQOne    LeeSin    BlindMonkWOne    BlindMonkEOne    BlindMonkRKick    blindmonkqtwo    blindmonkwtwo    blindmonketwo    LeonaShieldOfDaybreak    Leona    LeonaZenithBlade    LeonaZenithBladeMissle    LeonaSolarFlare    LissandraQ 
   Lissandra    LissandraW    LissandraE    LissandraR    LucianQ    Lucian    LucianW    LucianR    LuluQ    Lulu    LuluW    LuluE    LuxLightBinding    Lux    LuxLightStrikeKugel    luxlightstriketoggle    LuxMaliceCannon 
   SeismicShard 	   Malphite 
   Landslide    UFSlash    AlZaharCalloftheVoid 	   Malzahar    AlZaharNullZone    AlZaharMaleficVisions    AlZaharNetherGrasp    MaokaiTrunkLine    Maokai    MaokaiUnstableGrowth    MaokaiSapling2 
   MaokaiDrain3    AlphaStrike 	   MasterYi    MissFortuneRicochetShot    MissFortune    MissFortuneScattershot    MissFortuneBulletTime    MordekaiserMaceOfSpades    Mordekaiser     MordekaiserSyphoneOfDestruction    MordekaiserChildrenOfTheGrave    DarkBindingMissile    Morgana    TormentedSoil 
   SoulShackles    NamiQ    Nami    NamiW    NamiE    NamiR    NasusQ    Nasus    NasusW    NasusE    NautilusAnchorDrag 	   Nautilus    NautilusSplashZone    NautilusGandLine    JavelinToss    Nidalee 
   Bushwhack    PrimalSurge 	   Takedown    Pounce    Swipe    NocturneDuskbringer 	   Nocturne    NocturneUnspeakableHorror 	   IceBlast    Nunu 
   AbsoluteZero    OlafAxeThrowCast    Olaf    OlafRecklessStrike    OrianaIzunaCommand    Orianna    OrianaDissonanceCommand    OrianaDetonateCommand    Pantheon_Throw 	   Pantheon    Pantheon_LeapBash    Pantheon_Heartseeker    PoppyDevastatingBlow    Poppy    PoppyHeroicCharge    QuinnQ    Quinn    QuinnE 
   PowerBall    Rammus    PuncturingTaunt 	   Tremors2    RenektonCleave 	   Renekton    RenektonPreExecute    RenektonSliceAndDice    RengarQ    Rengar    RengarE    RivenTriCleav    Riven    RivenTriCleave_03    RivenMartyr    RivenFengShuiEngine    rivenizunablade    RumbleFlameThrower    Rumble 
   RumbeGrenade    RumbleCarpetBomb 	   Overload    Ryze    RunePrison 
   SpellFlux    SejuaniArcticAssault    Sejuani    SejuaniGlacialPrisonStart    Deceive    Shaco 
   JackInTheBox    TwoShivPoisen    ShenVorpalStar    Shen    ShenShadowDash    ShyvanaFireball    Shyvana    ShyvanaTransformCast    PoisenTrail    Singed 
   MegaAdhesive    Fling    CrypticGaze    Sion    SivirQ    Sivir    SkarnerVirulentSlash    Skarner    SkarnerFracture    SkarnerImpale    SonaHymnofValor    Sona    SonaAriaofPerseverance    SonaSongofDiscord    SonaCrescendo 	   Starcall    Soraka    InfuseWrapper    SwainDecrepify    Swain    SwainShadowGrasp 
   SwainTorment    SwainMetamorphism    SyndraQ    Syndra 	   SyndraW     SyndraE    SyndraR 
   TalonRake    Talon    TalonCutthroat    Shatter    Taric    Dazzle    TaricHammerSmash 
   BlindingDart    Teemo    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    RocketJump 	   Tristana    DetonatingShot    BusterShot    TrundleTrollSmash    Trundle    TrundlePain 
   slashCast    Tryndamere 
   WildCards    TwistedFate    TwitchVenomCask    Twitch    TwitchVenomCaskMissle    Expunge    UdyrTigerStance    Udyr    UdyrTurtleStance    UdyrBearStance    UdyrPhoenixStance    UrgotHeatseekingMissile    Urgot    UrgotPlasmaGrenade    UrgotSwap2    VarusQ    Varus    VarusE    VarusR 
   VayneCondemm    Vayne    VeigarBalefulStrike    Veigar    VeigarDarkMatter    VeigarEventHorizon    VeigarPrimordialBurst    VelkozQ    Velkoz    VelkozQMissle    velkozqplitactive    VelkozW    VelkozE    VelkozR    ViQ    Vi    ViR    ViktorPowerTransfer    Viktor    ViktorGravitonField    ViktorDeathRa    ViktorChaosStorm    VladimirTransfusion 	   Vladimir    VladimirTidesofBlood    VladimirHemoplague 
   VolibearQ 	   Volibear 
   VolibearW 
   VolibearE    HungeringStrike    Warwick    InfiniteDuress    MonkeyKingDoubleAttack    MonkeyKing    MonkeyKingNimbus    MonkeyKingSpinToWin    monkeykingspintowinleave    XerathArcanoPulseChargeUp    Xerath    XerathArcaneBarrage2    XerathMageSpear    XerathLocusOfPower2 
   XenZhaoSweep 	   Xin Zhao 
   XenZhaoParry    YasuoQW    Yasuo 	   yasuoq2w 	   yasuoq3w    YasuoDashWrapper    YasuoRKnockUpComboW    YorickSpectral    Yorick    YorickDecayed    YorickRavenous    ZacQ    Zac    ZacW    ZacE    ZedShuriken    Zed    zedult    ZiggsQ    Ziggs    ZiggsW    ZiggsE    ZiggsR 	   TimeBomb    Zilean 	   TimeWarp 
   ZyraQFissure    Zyra    ZyraGraspingRoots    ZyraBrambleZone    it 
   ItemsCast    ×  ×        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          Ř  Ř        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          Ů  Ů        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Ű  Ű        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               c
  Ó
   ô  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ÇŔD Ç ĹAE C  ]€€
@€G@D JŔE‹F @ L Ć Ç@D ]@€F @ L Á Á@  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAH   ]@ F @ G€Ć LŔÁ Á€ Á FB Á Ë 	 AB	 äA ]@€F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á€	 Á	 GÁD GĹ
 FAH € ]@ F @ G€Ć LŔÁ Á@
 Á	 GJ GĹÁ
 FAH € ]@ F @ G€Ć LŔÁ Á  Á	 GAK GĹ FAH € ]@ F @ G€Ć LŔÁ ÁŔ Á	 GL GĹA FB  Ë€Â A
 B
 äA€]@€F @ G€Ć LŔÁ Á€
 Á
 FN   ĆAN ÇÎÂ Ý ]@  F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á  A FO Á ÁÁ  AÂ ]@€F @ G€Ć LŔÁ Á@  FO Á ÁÁ  AÂ ]@€F @ G€Ć LŔÁ Á  A FO  ÁÁ  AÂ ]@€F @ G€Ć LŔÁ ÁŔ  FO A ÁÁ  AÂ ]@€F€R † @ ÁŔ   C  € Ă€ ]@€F @ L Á ÁŔ  ]@ F @ G Ó LŔÁ ÁŔ  FAG  ]@ F @ G Ó LŔÁ Á€	 Á	 GÁD GĹ
 FAH € ]@ F @ G Ó LŔÁ Á@
 Á	 GJ GĹÁ
 FAH € ]@ F @ G Ó LŔÁ Á  Á	 GAK GĹ FAH € ]@ F @ G Ó LŔÁ ÁŔ  FAG  ]@ F @ G Ó LŔÁ ÁŔ  FAG  ]@ F @ G Ó LŔÁ Á  A FO A ÁÁ  AÂ ]@€F @ G Ó LŔÁ Á@  FO  ÁÁ  AÂ ]@€F @ G Ó LŔÁ Á  A FO Á ÁÁ  AÂ ]@€F @ G Ó LŔÁ ÁŔ  FAG  ]@ F @ G Ó LŔÁ ÁŔ  FAG  ]@ F @ G Ó LŔÁ Á  A FT   ĆAN ÇÎÂ Ý ]@  F @ L Á Á  A ]@ G€U LŔŐ Ć @ Ç@Ő]@€F @ L Á Á  A ]@ F @ G@Ö LŔÁ ÁŔ  FAG  ]@ F @ G@Ö LŔÁ Á€ Á FAH € ]@ F @ G@Ö LŔÁ Á  Á	 GÁD GĹ
 FAH € ]@ F @ G@Ö LŔÁ Á@ Á	 GJ GĹÁ
 FAH € ]@ F @ G@Ö LŔÁ Á€ Á	 GAK GĹ FAH   ]@ F @ G@Ö LŔÁ ÁŔ Á	 GL GĹA FAH € ]@ F @ L Á Á  A ]@ F @ G@Ř LŔÁ ÁŔ  FAG  ]@ F @ G@Ř LŔÁ Á€ Á	 GÁD GĹ
 FB Á Ë€Â A B äA€]@€F @ G@Ř LŔÁ Á€ Á	 GJ GĹÁ
 FB Á Ë Â AB äA ]@€F @ G@Ř LŔÁ ÁŔ Á	 GAK GĹ FB Á Ë Â AB äA ]@€F @ G@Ř LŔÁ Á  Á	 GAZ GĹ FAH   ]@ F @ G@Ř LŔÁ ÁŔ  FAG  ]@ F @ G@Ř LŔÁ ÁŔ  FAG  ]@ F @ G@Ř LŔÁ Á  A FO A ÁÁ  AÂ ]@€F @ G@Ř LŔÁ Á@  FO  ÁÁ  AÂ ]@€F @ G@Ř LŔÁ Á  A FO Á ÁÁ  AÂ ]@€F @ L Á ÁŔ  ]@ F @ G Ű LŔÁ ÁŔ  FAG  ]@ F @ G Ű LŔÁ Á@ Á	 GÁD GĹ
 FAH € ]@ F @ G Ű LŔÁ Á€ Á	 GJ GĹÁ
 FAH € ]@ F @ G Ű LŔÁ ÁŔ Á	 GAK GĹ FAH € ]@ F @ G Ű LŔÁ Á  Á	 GAZ GĹ FAH   ]@ F @ G Ű LŔÁ ÁŔ  FAG  ]@ F @ G Ű LŔÁ ÁŔ  FAG  ]@ F @ G Ű LŔÁ Á  A FO A ÁÁ  AÂ ]@€F @ G Ű LŔÁ Á@  FO  ÁÁ  AÂ ]@€F @ G Ű LŔÁ Á  A FO Á ÁÁ  AÂ ]@€F @ L Á Á@  ]@ F @ G€Ü L Á ÁŔ  ]@ F @ G€Ü G Ý LŔÁ ÁŔ  FAG  ]@ F@] †€] ť € ]   	€†A] ÇÁ] ť€€Ç^ CŢ€ €EÇŰ  €€Ć@ Ç‚ÜÇÝĚÂÁF^ ŚCŢ  ť€‡E] Ă Ć^ ßÝ D F„^ ‡„_ ‡D	]„ –CĆCH € ÝB ˘  #‚÷b€  ă öF @ G€Ü G Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ü G Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ü G Ý LŔÁ ÁŔ   FAH € ]@ F @ G€Ü L Á Á@    ]@ F @ G€Ü G€ŕ LŔÁ ÁŔ  FAG  ]@ F @ G€Ü G€ŕ LŔÁ ÁŔ  ! FN   ĆAN ÇÎÂ Ý ]@  F @ G€Ü G€ŕ LŔÁ Á@! Á	 GAK GĹ FAH € ]@ F @ G€Ü G€ŕ LŔÁ Á€! Á	 GÁD GĹ
 FAH € ]@ F @ L Á ÁŔ! " ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ Á@" " FAH € ]@ F @ G â LŔÁ ÁŔ" # FAH € ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ Á@# # FAH € ]@ F @ G â LŔÁ ÁŔ# $ FAd ‹ Á$ Â AÂ$ Â ¤A ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ Á % A% FAH € ]@ F @ G â LŔÁ Á€% Á% FAd ‹ Á$ Â AÂ ‚$ ¤A ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ Á & A& FAH € ]@ F @ G â LŔÁ Á€& Á& FAd ‹ Á$ ‚$ AÂ Â ¤A ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ ÁŔ  FAG  ]@ F @ G â LŔÁ Á ' A' FAH € ]@ F @ G â LŔÁ Á€' Á' FAd ‹ Á$ Â A‚$ Â ¤A ]@ F @ L Á Á ( A( ]@ F @ G@č LŔÁ ÁŔ  FAG  ]@ F @ G@č LŔÁ Á€( Á( FAH   ]@ F @ G Ó L é Á  ]@€ € Ą   	   MenuFizz 
   scriptConfig    MasterSeries: Fizz    Fizz1    addSubMenu    [Fizz]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    Q    range 
   DAMAGE_MAGIC    name    Fizz    addTS    [Fizz]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    CT    Combo Type    Q>R>W>E    R>Q>W>E    USEQ    Use     (Q)    USEW    W    (W)    USEE    E    (E)    USER    R    (R)       @   No    Yes 	   Killable    FU    Cast Ult To Target    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE               Y@   WMANA    Min. Mana % To Use (W)       4@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R)       @
   AddSpellMenu    [Fizz]: Harras Settings 
   harrasConfig       D@     €K@      I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Fizz]: Items Settings 
   iteConfig    it    LoadToMenu    [Fizz]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    EKS    RKS    [Fizz]: Farm Settings    farm    QF        @	   Freezing 
   LaneClear    WF    EF    EF2    E2    (E2)    [Fizz]: Jungle Farm Settings    jf    QJF    WJF    EJF    EJF2    [Fizz]: Extra Settings 	   exConfig    [Fizz]: Evade    ES    pairs    GetEnemyHeroes    Spells    DodgeSpells 
   GetSpellData 	   tostring    Dodge  	   charName     Spell     Spells2    AE    Enable    [Fizz]: Escape    escape    ESCAPE    Escape Key    EUE    EUQ    [Fizz]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DAAR    Draw AA Range    DAARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@      i@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Fizz]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          Ő
  č
   G   F @ †@@ ]@ G€@ GŔŔ ]€€ [   @€F@@ G Á G@Á €Á  €GŔA ‡€@ ‡ BJ€ „Ŕ €GŔA ‡@B ‡ BJ€ „G€B XŔÂ @€F C ‡€B ÇŔA Ç Â]€€[   € €G€B 
@€†@€GŔA L€Ă ]@ GŔA GŔĂ 
@€†F@@ G Ä G@Ä G€Ä [    €GŔD [@  @ €L E ]@ F@@ G Á G@Ĺ [    €FŔD [@  @€F C ‡@C Ç€@ Ç Â]€€[   € €L€E Ç@C ]@€ €       CheckOB 	   MenuFizz    R    Ready    comboConfig    CT        @   TargetSelector    range    Q    SelectedTarget     ValidTarget    Cel    update    target 	   exConfig    escape    ESCAPE    recall    Escape    FU    CastR                          ę
  ő
   &   F @ ]€€ [    €G@@ [   @€G€@ [@  €€FŔ@ ‡@@ Á  ]€€[   @€G@A L€Á Ç@@ ÁA B]@ FŔA G@Â G€Â ŔÂ € €L C ]@ €€FŔA G@Â G€Â @Ă @ €L€C ]@  €       ComboActive    Cel    recall    ValidTarget      ŕ…@   it 
   CastItems 	   MenuFizz 
   iteConfig    comboConfig    CT       đ?
   comboQRWE        @
   comboRQWE                          ÷
     š   F @ G@Ŕ G€Ŕ [    €FŔ@ G Á †Ŕ@ ‡@AP€€ O€Á † @ ‡@@‡ŔA@ @€F B ‡@B Ç€B ÇŔÂ]€€[   € €L C Ç@B ]@€F @ G@Ŕ G@Ă €Ă  €F B ‡@B ÇŔC ÇŔÂ]€€[   @€FŔ@ G Á †Ŕ@ ‡@AP€€ O€Á † @ ‡@@‡ D@ € €L@D Ç@B ]@€F @ G@Ŕ G@Ă €Ä @€F B ‡@B ÇŔC ÇŔÂ]€€[   €€FŔ@ G Á †Ŕ@ ‡@AP€€ O€Á † @ ‡@@‡ D@ Ŕ€LŔD Ç@B ]€€‡@B ‡ EĆ@E Ç€ĹAB ÁEÝ€ ŤŔ @ € €Ś@D AB ť@€F @ G@Ŕ G Ć [    €FŔ@ G Á †Ŕ@ ‡@AP€€ O€Á † @ ‡@@‡@F@ @€F B ‡@B ĆŔ@ ÇŔÂÍ€Ć]€€[   @ €LŔF ]@ F @ G@Ŕ G Ç [   €€FŔ@ G Á †Ŕ@ ‡@AP€€ O€Á † @ ‡@@‡@G@ Ŕ€F B ‡@B Ç€G ÇŔÂÍŔÇ]€€[   € €L H Ç@B ]@€F@H ‡@B ĆŔ@ ]€€@ ‘€ €LŔH Ç@B ]@€ € $   	   MenuFizz    comboConfig    USEQ    myHero    mana    maxMana       Y@   QMANA    ValidTarget    Cel    Q    range    CastQ    USER        @   R    RMANA    CastR       @   AllDmg    health    math    floor    shield    USEW    WMANA       ^@   CastW    USEE    EMANA    E       I@   CastE    GetDistance       t@   CastE2                            1   š   F @ G@Ŕ G€Ŕ ŔŔ  €F A ‡@A Ç€A ÇŔÁ]€€[   @€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡ C@ € €L@C Ç@A ]@€F @ G@Ŕ G€Ŕ €Ă @€F A ‡@A Ç€A ÇŔÁ]€€[   €€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡ C@ Ŕ€LŔC Ç@A ]€€‡@A ‡ DĆ@D Ç€ÄAA ÁDÝ€ ŤŔ @ € €Ś@C AA ť@€F @ G@Ŕ G Ĺ [    €F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡@E@ @€F A ‡@A Ç€E ÇŔÁ]€€[   € €LŔE Ç@A ]@€F @ G@Ŕ G Ć [    €F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡@F@ @€F A ‡@A Ć B ÇŔÁÍ€Ć]€€[   @ €LŔF ]@ F @ G@Ŕ G Ç [   €€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡@G@ Ŕ€F A ‡@A Ç€G ÇŔÁÍŔÇ]€€[   € €L H Ç@A ]@€F@H ‡@A Ć B ]€€@ ‘€ €LŔH Ç@A ]@€ € $   	   MenuFizz    comboConfig    USER        @   ValidTarget    Cel    R    range    myHero    mana    maxMana       Y@   RMANA    CastR       @   AllDmg    health    math    floor    shield    USEQ    QMANA    Q    CastQ    USEW    WMANA       ^@   CastW    USEE    EMANA    E       I@   CastE    GetDistance       t@   CastE2                          3  C   
›      Á     A  ‹€ÁA  ‚  AÂ   ÁB ¤A€ÇA ÇÁÁÝ€ Ű  €€ĆB  € G‚A GBÂÝ€Ű  Ŕ€ĆB ĚÁÂ@€ †‚B ŚCCC ť‚€‡‚C‡‚Ć‚B ÇÂĂŤÂĆ‚B ÇÄŤÂĆ‚B ÇÄB CDĎĎ‚ÄŤÂÝ € €ÇÁD ÇÁÁÝ€ Ű  @€ĆB  € F‚B GBÂMĹÝ€Ű  @€ĆB ĚÁÂ@€ †‚B ŚCCE ť‚€‡‚CŹ‚‹Ť‚EĆ‚B ÇÄŤÂĆ‚B ÇÄB CDĎĎÂĹŤÂÝ Ŕ €ÇF ÇÁÁÝ€ Ű   €ĆB  € GF GBÂÝ€Ű  @€ĆB ĚÁÂ@€ †‚B ŚCCF ť‚€‡‚CŹ‚ŤŤÂFĆ‚B ÇÄŤÂĆ‚B ÇÄB CDĎĎÇŤÂÝ  €ÇAG ÇÁÁÝ€ Ű   €ĆB  € GBG GBÂÝ€Ű  @€ĆB ĚÁÂ@€ †‚B ŚCG ť‚€‡‚CŹ‚‚ŹŤHĆ‚B ÇÄŤÂĆ‚B ÇÄB CDĎĎBČŤÂÝ @€ÍÁ ÍÍAß  € "                 $@      9@      D@     €K@     €Q@   Q    Ready    ValidTarget    range    myHero    CalcMagicDamage 
   GetSpellData    _Q    level 
   addDamage    ap 
   apPercent ffffffÖ?   W      @e@   _W       @333333Ó?   E    _E       I@      4@      č?   R    _R      @_@     ŔR@      đ?                         E  f   ă   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    6€G A X@Á @5€G€A [@  €4€FŔA L Â Ć@B ]€€G€Â †ŔA Ś BÁB ť€€‡€BĆŔA Ě ÂFC Ý€€Ç€Â@ A@ACF@ GAŔGĂ†@ ‡A@‡ÁC   €[A  €€›A   €ĆÁA ÇÂÂA DĐ‚ĎAÄ@ B@‚DŔ@€ĆÁD A GE GBĹÝ€Ű  €€ĆÁA ÇÂŔ € €ĚE GA ÝA€   
€[  €€›A   €ĆÁA ÇÂÂA DĐ‚ĎAÄ@ B@‚DŔ@	€ĆÁA ÇÂÂA DĐ‚ĎAÄ@ B@ÂEŔ€€ÇF ÇAĆÝ€ Ű  @€ÇE ÇAĆÝ€ Ű   €ĆÁD A GE GBĹÝ€Ű  @€ĆÁA ÇÂ
B Ŕ €ĚF ÝA ĚE GA ÝA€  €€[   €›  €€ĆÁA ÇÂÂA DĐ‚ĎAÄ@ B@‚DŔŔ€ĆÁA ÇÂÂA DĐ‚ĎAÄ@ B@ÂEŔ €ĆÁA ÇÂÂA DĐ‚ĎAÄ@ B@ÂFŔ@€ÇF ÇAĆÝ€ Ű  @€ÇE ÇAĆÝ€ Ű   €ĆÁD A GE GBĹÝ€Ű  @€ĆÁA ÇÂ
B 
Â ŔŔ€ĚF ÝA ĆÁA ÇAÇ
ŔŽĚE GA ÝA€ÇG ÇAĆÝ€ Ű  @€ĆH ÂA Ý H GG ‚ FH †ÂA ]‚ BBH‚ G‚G GBĹBÍ‚
ŔŹĆH C GÂG GÂČ‡ÂG ‡IÝA 
@ÁŹ
@AŽ € %   	   MenuFizz 
   harrasConfig 
   HTEnabled 
   HarassActive    Cel     recall    myHero 
   GetSpellData    _Q    mana    _W    _E    USEQ    USEW    USEE    maxMana       Y@   QMANA    ValidTarget    Q    range    CastQ    WMANA    W    Ready    CastW    EMANA    Hpos    pos    E    Bpos    Vector    normalized 
   CastSpell    x    z                          h  ”   Ţ   F @ ]€€ [    6€G@@ [@  @5€F€@ LŔŔ Ć A ]€€‡@A Ś€Ať@ †ŔA ‡ B‡@BĆŔA Ç ÂÇ€ÂÁA BÁBFC ‡AA ‡AC]€/€€C@€†‚@ ‡ÂCĆ‚@ ÇÄÂŹBDĆÂA ÇÂÇ‚Ä€‚€€‡ÂD ‡Eť‚€ ›  Ŕ€X@Ĺ@€†‚E Ŕ€ĂD ĂEť‚€›  €€†F ĆBF  €ťB€@€€FŔ€†‚@ ‡ÂCĆ‚@ ÇÄÂŹBDĆÂA ÇÂÇ‚Ä€‚ €‡ÂD ‡Eť‚€ ›  Ŕ€X@Ĺ@€†‚E Ŕ€ĂD ĂEť‚€›  €
€†ÂF ŚG €FCG ]€ PÇť‚ Ë€Ă A C Á Ä äB€@ I€€Ć@ ĚĂŔFDF Ý€ÇCÉÇĂ„@ „IÍ„„@ ÄIÍ„„@ ÄIF„@ GĘDDJÍ„  Ŕ €FF †CF Ŕ€]C€€Ć€€†‚@ ‡ÂCĆ‚@ ÇÄÂŹBDĆÂA ÇÂÇ‚Ę€‚Ŕ€‡ÂJ ‡Eť‚€ ›  €€X@Ĺ €†‚E Ŕ€ĂJ ĂEť‚€›  @ €ŚK ťB €F@€‡BK ‡Eť‚€ ›   
€X@Ĺ€€†‚E Ŕ€CK ĂEť‚€›  Ŕ
€†‚K ÇBK ÇÂĹCK ĂKGCA GCĂťÂ X@E@€ŔŤŔ€Ě @LŔ€@ ĂCF@ GÄCCDFĂA GÂGĚ  €F FA ‡ĂLÇMC ĂA BCM  Ŕ€Ě €M €F FA ‡ĂLÇMC b  ăĎ € 7      FarmActive    recall    myHero 
   GetSpellData    _E 
   EnemyMinions    update 	   MenuFizz    farm    QF    WF    EF    pairs    objects       @   mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range 
   CastSpell    _Q        @   VP    GetPredictedHealth    GetLatency      @Ź@      $@      9@      D@     €K@     €Q@   CalcMagicDamage    level 
   addDamage    ap 
   apPercent ffffffÖ?   WMANA    W    CastW    E    GetBestCircleFarmPosition    width    name 	   FizzJump    EMANA    x    z    EF2    fizzjumptwo                          –  ¶   
‹   F @ ]€€ [   @!€G@@ [@  € €G€@ LŔŔ ]@ F A L@Á Ć€A ]€€†ŔA Ç€@ Ç Âť  €ĆAB ÇÂÇÁÂŰ  €€ĆA ÇĂA BCĐ‚ĎĂBB ‚BÂCŔŔ€X D@€ĆAD   Ý ‚D ÂD ‚€ €ĚE @ ÝA€ĆAB ÇÂÇAĹŰ  €€ĆA ÇĂA BCĐ‚ĎĂBB ‚B‚EŔŔ€X D@€ĆAD   Ý A ÂD
ÂE ‚@ €ĚF ÝA ĆAB ÇÂÇAĆŰ  Ŕ
€ÇF ÇÁĆÝ€ Ű  €€X D €ĆAD   Ý ‚F ÂD ‚@
€ĆG ‚F ÂDG‚F GBÇ‡‚@ ‡BÝÁ X ÄŔ€G‚Ç ŔÇŔ€FA GĂ†A ‡BCP‚‚O‚Ă†BB ‡‚B‡H@ €FBH †‚A Ç‚ČĂČ]B FBB GÉGBÉ[  Ŕ€G‚Ç €É €FBH †‚A Ç‚ČĂČ]B ˘€  #â € '      FarmActive    recall    JungleMinions    update    myHero 
   GetSpellData    _E    pairs    objects 	   MenuFizz    jf    QJF    mana    maxMana       Y@   QMANA     GetDistance    Q    range    CastQ    WJF    WMANA       ^@   CastW    EJF    E    Ready    GetBestCircleFarmPosition    width    name 	   FizzJump    EMANA 
   CastSpell    x    z    farm    EF2    fizzjumptwo                          ¸  Ç   	C   F @ G@Ŕ G€Ŕ GŔŔ [   Ŕ€G A G@Á ]€€ [   €€F€A †ŔA Ć B Ç@ÂB B]@ F @ G@Ŕ G€Ŕ GŔÂ [   €€G C G@Á ]€€ [   @€G@C L€Ă ]@ FŔC ‡@C ‡ D] Ŕ€†AD Ŕ€C ‚Dť€›   €XŔÄ€€†E Ŕ€B ť€ÇC ÇÄŔ€ €ŚAE  €ťA€b€  ă@úF€E LŔĹ Ć B Ç@ÂB B]@  €    	   MenuFizz 	   exConfig    escape    EUE    E    Ready 
   CastSpell    _E 	   mousePos    x    z    EUQ    Q 
   EnemyMinions    update    pairs    objects    ValidTarget    range     GetDistance    CastQ    myHero    MoveTo                          É  Ď   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuFizz 	   prConfig    ALS    myHero    level    GetHeroLeveled    _E    _W    _Q    _R    LevelSpell       đ?                         Ń       F @ †@@ ť € ]   €‡ŔĆÁ@ ÇÁBÁÝ ŤÁË€‚ AÂ  ÁB  äA€ÂB C‚€    €BC ‚C€€ĆBC ĚÂĂFD Ý‚€ÇBÄÇÂ‚CC DÍCC ĂDÍCC ĂDFCC GĹCCEÍ‚ B    €‚ FBC L‚ĂŔ€CC ĂC†ĂE €CDŚ
FFCC GĂÄ
CFCC GĂÄ†CC ‡EOOCĆ
C]‚ †BC Ś‚C €FCC LĂĂĆF ]€GCÄOCŤMÇ†CC ‡ĂDM†CC ‡ĂDĆCC ÇĹŹĂŹCGMť‚ ĆBC Ě‚Ă@€†CC ŚĂC„G ť€‡CDŹŹŤHĆCC ÇĂÄŤĂĆCC ÇĂÄDC EĎ„ĎCČŤĂÝ‚ CC CDŽ
ŤX€ČŔb€FĂH €€Á	 ]€[  @a€GCI [C  €`€ Ŕ€FĂH €€ÇĂB ÇÉ]€[   €FĂI GĘGCĘ[  Ŕ €LJ Ŕ€]C€€U€@Ŕ€FĂH €€ĆCC ÇÉÍĂĘ]€[  Ŕ€FĂI GĘGË[  €€LCK ]C FCC LËŔ€]C€ P€€€€FĂH €€ÇĂK ÇÉÍĂĆ]€[  €€FĂI GĘGĚ[  @€GĂK GĂ]€ [   €FĂH €€ÇĂK ÇÉÍĂĆ]€[   €X€Č€€GCĚ†L ‡CLX€@€GĂĚ[C  € €LM Ŕ€]C€FCM €€ĆCC ]€@›@D€X€ČŔC€GCĚ†L ‡CLX€€B€GĂĚ[C  ŔA€LĂM Ŕ€]C€Ŕ@€ŔŔ€FĂH €€ÇN ÇÉ]€[   €FĂI GĘGCÎ[  Ŕ €LN Ŕ€]C€@<€MC@ €GĂB GĂ]€ [  Ŕ€GĂN GĂ]€ [  €€FĂH €€ÇĂB ÇÉ]€[  Ŕ€FĂI GĘGCĘ[  €€FĂI GĘGË[  @€LCK ]C LJ Ŕ€]C€@3€M@Ŕ€GĂB GĂ]€ [  €€GĂK GĂ]€ [  @€FĂH €€ÇĂB ÇÉ]€[  €€FĂI GĘGCĘ[  @
€FĂI GĘGĚ[   €LJ Ŕ€]C€GĂK GĂ]€ [   €FĂH €€ÇĂK ÇÉÍĂĆ]€[   €X€Č€€GCĚ†L ‡CLX€@€GĂĚ[C  € €LM Ŕ€]C€FCM €€ĆCC ]€@› #€X€Č€"€GCĚ†L ‡CLX€@!€GĂĚ[C  € €LĂM Ŕ€]C€€€MĂ@@€GĂB GĂ]€ [   €GN GĂ]€ [  Ŕ€FĂH €€ÇĂB ÇÉ]€[   €FĂI GĘGCĘ[  Ŕ€FĂI GĘGCÎ[  €€LN Ŕ€]C€LJ Ŕ€]C€@€MC‚@@	€GĂN GĂ]€ [   €GN GĂ]€ [  Ŕ€FĂH €€ĆCC ÇÉÍĂĘ]€[  Ŕ€FĂI GĘGCÎ[  €€FĂI GĘGË[  @€LN Ŕ€]C€LCK ]C FCC LËŔ€]C€ €MCMĂ‚@ €GĂB GĂ]€ [  Ŕ	€GĂN GĂ]€ [  €€GN GĂ]€ [  @€FĂH €€ÇĂB ÇÉ]€[  €€FĂI GĘGCÎ[  @€FĂI GĘGCĘ[   €FĂI GĘGË[  Ŕ€LN Ŕ€]C€LCK ]C LJ Ŕ€]C€FO LĂÁC ]€[  Ŕ€ @€†ĂI ‡J‡O›   €†ĂH Ŕ€Ä ť€›  €€†P ĆO ĚCĐAD Ý€ €ťC€b€  ă € € B      pairs    GetEnemyHeroes    health    math    floor    shield       $@      9@      D@     €K@     €Q@   Q    Ready    myHero    CalcMagicDamage 
   GetSpellData    _Q    level 
   addDamage    ap 
   apPercent ffffffÖ?           _W       @333333Ó?   _E       I@      4@      č?   _R      @_@     ŔR@      đ?    ValidTarget      p—@   recall    range 	   MenuFizz 	   ksConfig    QKS    CastQ       ^@   WKS    CastW    Attack    E    EKS    team    player    dead    CastE    GetDistance       t@   CastE2    R    RKS    CastR    W    SSpells    summonerdot    IKS      Ŕ‚@
   CastSpell    GetSlot                               
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       Q    Ready 
   CastSpell    _Q                               	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                                L   † @ Ś@@@ ť€€ÇŔ@ Ç ÁÝ€€ Ű   @€Ç@A€Á€€ĆŔA Ě Â@€ ‡Á@ ‡ABÇÁ@ ÇÂÂ@ ÂBF@ Ý Ű   €€   €†C Ŕ€ť ÇÁ@ ÇAĂŔ@€†C Ć@ ÂĂGÄťA  € †AD ĆD ÇÁÄÇĹÇAĹ € GÂ@ GBÂ‡Â@ ‡‚BÇÂ@ ÇBĂĂ@ ĂBF@  Ă  € D  Ä  Ć„D ÇÄÄ	ÇĹ	ÇÄĹ	ťX F@ €ŰA    € € F‚C †‚@ ÇÂCD]B  €       myHero 
   GetSpellData    _E    E    Ready    name 	   FizzJump    VP 
   IsDashing    delay    width    speed    GetDistance    range 
   CastSpell    x    z    GetPrediction2 	   MenuFizz 	   spConfig    eConfig    EP    circle    ECH                           "  .   L   † @ Ś@@@ ť€€ÇŔ@ Ç ÁÝ€€ Ű   @€Ç@A€Á€€ĆŔA Ě Â@€ ‡AB ‡BÇAB ÇÁÂBB CF@ Ý Ű   €€   €†AC Ŕ€ť ÇAB ÇĂŔ@€†ÁC Ć@ ÄGBÄťA  € †D ĆÁD ÇĹÇAĹÇĹ € GBB G‚Â‡BB ‡ÂBÇBB Ç‚ĂCB CF@ Ă Ă  € D  Ä  ĆÄD ÇĹ	ÇDĹ	ÇĆ	ťX@F@ €ŰA    € € FÂC †‚@ ÇDCD]B  €       myHero 
   GetSpellData    _E    E    Ready    name    fizzjumptwo    VP 
   IsDashing    E2    delay    width    speed    GetDistance    range 
   CastSpell    x    z    GetPrediction2 	   MenuFizz 	   spConfig    eConfig    EP    circle    ECH                           0  A   `   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € [  @€›  Ŕ€‚E @€‚ F‚E †ÂA ]‚ BÂE‚ FÇĂFÍŔ‚ŚÇÇĆÍŔ‚ŤÇBĂFÍŔ‚ŽĆ‚B ĂB FCF †CG ÝB  €       R    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2 	   MenuFizz 	   spConfig    rConfig    RP    line    RCH     Vector    normalized    unpack    posX       Y@   posY    y    posZ                          C  ^   
Ř   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €F B †€H ‡@BĆ€H Ç€ÂH ÁBFH GÁČMÉ†AC Ć@ ÇAŔÇAÉÇÁĂ@ B@BIDF@ GBŔGBÉGBÄť ]@  F @ G@Ŕ G€É [    €GŔI G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGÁI GÁČ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGJ GÁČ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@  F @ G@Ŕ G Ë [    €G@K G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGAK GÁČ†AC Ć@ ÇAŔÇËÇÁĂ@ B@‚KDF@ GBŔG‚ËGBÄť ]@   € /   	   MenuFizz    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      @ź@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DAAR    myHero    range      @P@   DAARC    DQR    Q    Ready    DER    E    DERC    DRR    R    DRRC                          `  ‚   Ĺ   F @ †@@ ť € ]   /€‡Ŕ›A  @.€‡ÁŔ›  €-€‡ÁĆAA ÇÁÂÁÝ ŤÁË€ AB ‚ ÁÂ  äA€BC ‚C‚€    €ÂC D€€ĆÂC ĚBÄFD Ý‚€ÇÂÄÇÂ‚ĂC EÍĂC CEÍĂC CEFĂC GĹCĂEÍ‚ B    € FÂC LÄŔ€ĂC CD†CF €ĂDŤ
FFĂC GCĹ
CFĂC GCĹ†ĂC ‡EOOĂĆ
C]‚ †ÂC ŚD €FĂC LCÄĆG ]€GĂÄOCŽMÇ†ĂC ‡CEM†ĂC ‡CEĆĂC ÇĹŹĂŹĂGMť‚ ĆÂC ĚÄ@€†ĂC ŚCDH ť€‡ĂDŹŤHĆĂC ÇCĹŤĂĆĂC ÇCĹÄC „EĎ„ĎĂČŤĂÝ‚ 
C

Ă€Ŕ €I GCÉ
É€€ Ŕ €I GCÉ
ĂÉ €@Ŕ €I GCÉ
Ę€
€€Ŕ €I GCÉ
CĘ €ŔŔ €I GCÉ
Ę€
€
C Ŕ €I GCÉ
ĂĘŔ€
 Ŕ €I GCÉ
Ë €
Ă Ŕ €I GCÉ
CË@€
‚ Ŕ €I GCÉ
Ë€€
Ă‚ Ŕ €I GCÉ
ĂËŔ€
C

Ă € €I GCÉ
Ěb€  ă Đ € 1      pairs    GetEnemyHeroes    dead    visible    health    math    floor    shield       $@      9@      D@     €K@     €Q@   Q    Ready    myHero    CalcMagicDamage 
   GetSpellData    _Q    level 
   addDamage    ap 
   apPercent ffffffÖ?           _W       @333333Ó?   _E       I@      4@      č?   _R      @_@     ŔR@      đ?   killstring 
   networkID    Harass Him!!!    Q Kill!    W Kill!    E Kill!    R Kill! 
   Q+W Kill! 
   Q+E Kill! 
   Q+R Kill! 
   E+W Kill! 
   R+W Kill!    Q+W+E+R Kill!                          „        [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         Š  Ž      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                            ˛   
đ   Ć @ Ç@ŔÇ€ŔÇŔŔŰ    :€Ç A Ç@ÁÝ€€ Ű   Ŕ8€[   @8€Ç€Á ÁA AX  7€ĆŔA Ç ÂŰ@   6€Ç@Â ÁA AB Ŕ4€›   @4€Á@ A @C† …Ŕ …Ç@Â ÁA AB  €Ç€C ÁCÇ Ű   Ŕ
€Ć @ Ç@ŔÇ€ŔÁCÇ Ű    €Ć€D  € GÁCÝŔ€ Ŕ Ć@D XŔÄ@€Ć@D X Ĺ€ €Ć@D @Ĺ  € € Ć D X€Ĺ €Ć D XŔĹ@€Ć D X Á€ €Ć D  Ć €Ć@F Ć Ç D Ç Ç@ÂŔ …Ć@F Ć Ç D Ç ÇŔÂŔ€…Ć@F Ć Ç D Ç Ç ĂŔ †ĆŔA ÁFÁA GÁ@ !€ÂA  @ €ÁĆ †€€  GÇ†B @C€€‡AG €€‡AG‡GÇÇXŔ  €A  €  €†B ŔG@€†H Ŕ€ BHFÂB †C Ŕ€ €ť€  Ŕ€†B €H@€†ÁH Ŕ€ BHFÂB †C Ŕ€ €ť€  €€†B  I@€†AI Ŕ€ BHFÂB †C Ŕ€ €ť€  @€†B ŔD@€†I Ŕ€ BHFÂB †C Ŕ€ €ť€   
€†B  E@€†ÁI Ŕ€ BHFÂB †C Ŕ€ €ť€  Ŕ	€†B @E €†H Ŕ€ BHFÂB †C Ŕ€ €ť€A @€†H Ŕ€ J @€ ‚ ‚HGBHBFÂB †C Ŕ€ €ť€  Ŕ€†B @J €†I ÇAH € FÂB †C Ŕ€ €ť€    Ŕ €†J ĺ  Â
 ťA€ € ,   	   MenuFizz 	   exConfig    ES    AE    E    Ready    team    myHero    dead    type 	   shottype    radius    maxdistance            DodgeSpells    name 
   spelltype 	   casttype 
   getSpellType       @      @      @   Q    W    R 
   skillData 	   charName    health    boundingRadius    target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   DelayAction š™™™™™É?   «  ­        @ F@@ †€@ ‡Ŕ@Ć€@ Ç Á@  €    
   CastSpell    _E 	   mousePos    x    z                                               ´  Î   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuFizz    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ř  ˙   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    Ţ  Ţ           @ @  €       AfterAA                         á  á           @ @  €    	   BeforeAA                         č  č           @ @  €       AfterAA                         ë  ë           @ @  €    	   BeforeAA                         ń  ń        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ń  ń           @ @  €       AfterAA                                               ô  ô           @ @  €    	   BeforeAA                         ů  ů           @ @  €       AfterAA                         ü  ü           @ @  €    	   BeforeAA                              	
                  (   ¨   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚KŔ  J@Ä‚J€ÄĄ@  J€€‡
@ K€ J Ĺ‚J@ĹJ€Â„J Ă…J€Ĺ†Ą€  J€€‡
@€‰KŔ  J Ć‚J@ĆĄŔ  J€€‡
@€‹C   
 ÇŤ
@ ŤAŔ 
ŔGŹ
@€ŽF@H †€H Ç A ÇŔÁÁH FI ]€€
@ F@H †€I Ç A ÇŔÁÁH FI ]€€
@€’FŔ@ † J Ç A ÇŔÁAJ C  ]€€
@€“FŔ@ † J ÇŔD ÇŔÁAJ C  ]€€
@ •FŔ@ † J ÇŔE ÇŔÁAJ C  ]€€
@€•K   
@ –F€K ]€€ 
@€–K  	‹Ŕ  Š@LŠŔL™ŠŔEšËŔ  Ę@MĘ€M™ĘŔEšÁ  
ÁM
N™
ÁEšKÁ  JANJN™JÁEš‹Á  ŠÁNŠO™ŠÁEšËÁ  ĘAOĘO™ĘÁEšÂ  
ÂO
P™
ÂEšKÂ  JBPJ‚P™JÂEš‹Â  ŠÂPŠQ™ŠÂEšËÂ  ĘBQĘ‚Q™ĘÂEšĂ  
ĂQ
R™
ĂEšKĂ  JCRJR™JĂEš‹Ă  ŠĂRŠS™ŠĂEšËĂ  ĘCSĘS™ĘĂEšÄ  
ÄS
T™
ÄEšKÄ  JDTJ„T™JÄEš‹Ä  ŠÄRŠS™ŠÄEšËÄ  ĘÄTĘU™ĘÄEšĹ  
EU
…U™
ĹEšKĹ  JĹUJV™JĹEšd@ 

@€— € Y      SelectedTarget     Cel    TargetSelector    Q    name    Resolute Smite    range      xŽ@   speed      “@   delay       Đ?   width       i@   Ready    W    Bulwark      Č‰@   E    Righteous Gust      p’@     €V@   R    Idol of Durand      Đ@   ultbuff    recall     lasttickchecked    lasthealthchecked         
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY 
   DAMAGE_MAGIC    ETargetSelector    RTargetSelector    killstring    it 
   ItemsCast    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale              @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               *  Ź   \  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 	 GJ GÁĹÁ
 FB  Ë€B A‚ Â äA€]@€F @ GŔĆ LŔÁ Á  	 GAL GÁĹ FH € ]@ F @ GŔĆ LŔÁ ÁŔ 
 FAM 
 ÁÁ
  AÂ
 ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FAM Á
 ÁÁ
 Â AÂ
 ]@€F @ GŔĆ LŔÁ Á  A FAM  ÁÁ
 Â AÂ
 ]@€F @ GŔĆ LŔÁ ÁŔ  FAM A ÁÁ
 Â AÂ
 ]@€F @ GŔĆ LŔÁ Á€ Á FAM  ÁÁ
 Â AÂ
 ]@€F Q † @ Á  € C  € Ă  ]@€F @ L Á Á@  ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ ÁŔ 	 GÁI GÁĹ
 FH € ]@ F @ G€Ń LŔÁ Á  	 GAL GÁĹ FH € ]@ F @ G€Ń LŔÁ Á  Á FG Á ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ Á@  FAM A ÁÁ
 Â AÂ
 ]@€F @ G€Ń LŔÁ ÁŔ  FAM  ÁÁ
 Â AÂ
 ]@€F @ G€Ń LŔÁ Á  Á FG Á ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ ÁŔ  FAS   ĆS ÇÁÓ Ý ]@  F @ L Á Á@  ]@ GŔT L Ő Ć @ Ç€Ô]@€F @ L Á Á@  ]@ F @ G€Ő LŔÁ Á  A FG Á ]@ F @ G€Ő LŔÁ ÁŔ 	 GAL GÁĹ FH € ]@ F @ G€Ő LŔÁ Á  	 GJ GÁĹÁ
 FH € ]@ F @ G€Ő LŔÁ Á@  FÁV   ĆS ÇÁÓ Ý ]@  F @ L Á Á@  ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ ÁŔ  FH € ]@ F @ G€× LŔÁ Á@ 	 GÁI GÁĹ
 FH € ]@ F @ G€× LŔÁ Á€ 	 GAL GÁĹ FH € ]@ F @ G€× LŔÁ ÁŔ 	 GY GÁĹA FH   ]@ F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  	 GÁI GÁĹ
 FB  Ë€B AB ‚ äA€]@€F @ GŔŮ LŔÁ ÁŔ 	 GAL GÁĹ FB  Ë€B AB ‚ äA€]@€F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á@  FAM  ÁÁ
 Â AÂ
 ]@€F @ GŔŮ LŔÁ ÁŔ  FAM  ÁÁ
 Â AÂ
 ]@€F @ L Á Á@  ]@ F @ G€Ű LŔÁ Á  A FG Á ]@ F @ G€Ű LŔÁ ÁŔ 	 GÁI GÁĹ
 FH € ]@ F @ G€Ű LŔÁ Á  	 GAL GÁĹ FH € ]@ F @ G€Ű LŔÁ Á  Á FG Á ]@ F @ G€Ű LŔÁ Á  A FG Á ]@ F @ G€Ű LŔÁ Á@  FAM  ÁÁ
 Â AÂ
 ]@€F @ G€Ű LŔÁ ÁŔ  FAM  ÁÁ
 Â AÂ
 ]@€F @ L Á Á@  ]@ F @ G€Ü L Á ÁŔ  ]@ F@] †€] ť € ]  €€†Á] Ç^ ť €ÇBŢC^  €Ć@ Ç‚ÜÇÝĚÂÁG^Ă ÇC^ GD_–CĆH € ÝB ˘  #űb€  ă€ůF @ G€Ü G Ý LŔÁ Á  Á FG Á ]@ F @ G€Ü G Ý LŔÁ Á  A FG Á ]@ F @ G€Ü G Ý LŔÁ Á€ Á FH € ]@ F @ L Á Á   A  ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á€  Á  FH € ]@ F @ G@ŕ LŔÁ Á ! A! FH € ]@ F @ G@ŕ LŔÁ Á  Á FG Á ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á€! Á! FH € ]@ F @ G@ŕ LŔÁ Á " A" Fb ‹ ÁÁ" Â
 AÂ
 Â" ¤A ]@ F @ G@ŕ LŔÁ Á  Á FG Á ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á # A# FH € ]@ F @ G@ŕ LŔÁ Á€# Á# Fb ‹ ÁÁ" Â AÂ
 Â" ¤A ]@ F @ G@ŕ LŔÁ Á  Á FG Á ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á $ A$ FH € ]@ F @ G@ŕ LŔÁ Á€$ Á$ Fb ‹ ÁÁ" Â" AÂ
 Â
 ¤A ]@ F @ G@ŕ LŔÁ Á  Á FG Á ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á % A% FH € ]@ F @ G@ŕ LŔÁ Á€% Á% Fb ‹ ÁÁ" Â
 AÂ" Â
 ¤A ]@ F @ L Á Á & A& ]@ F @ G@ć LŔÁ Á  A FG Á ]@ F @ G@ć LŔÁ Á€& Á& FH   ]@ F @ G€Ń L ç ÁŔ ]@€ € ť   
   MenuGalio 
   scriptConfig    MasterSeries: Galio    Galio1    addSubMenu    [Galio]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Galio    addTS    [Galio]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    RC #   Disable Block Move With RightClick    USEQ    Use     Q     (Q)    USEW    W     (W)       @   No    Normal    If Come DMG    USEE    E     (E)    USER    Use (R) If X Enemy Around Me:    SCRIPT_PARAM_SLICE        @              @   QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       4@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Galio]: Harras Settings 
   harrasConfig    QH    EH       D@      I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Galio]: Items Settings 
   iteConfig    it    LoadToMenu    [Galio]: Escape Settings 	   esConfig    ESE    ESW 
   ESEnabled    Escape    SCRIPT_PARAM_ONKEYDOWN    J    [Galio]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS    R     (R)    [Galio]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    EF       N@   [Galio]: Jungle Farm    jf    QJF    EJF    [Galio]: Extra Settings 	   exConfig    Auto-Interrupt Spells    ES    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop       	   menuname    UI    Use Auto-Interrupt (R)    [Galio]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Galio]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ‘  ©   E   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡G€D †ŔD ť€€ Ž E€€ @€F€E GŔĹ 
@€ŠFŔD ]€€ 
@ ‰L F ]@ F@@ G@Ć G€Ć [    €GŔF [@  @ €L G ]@  €       CheckOB 
   MenuGalio    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    lasttickchecked 
   GetTickCount      @@   lasthealthchecked    myHero    health 	   CheckUlt 	   esConfig 
   ESEnabled    recall    escape                          «  Î   ß   F @ ]€€ [   @6€G@@ [@  €5€G€@ [@  Ŕ4€FŔ@ ‡ A ]€ [   @€G@A L€Á Ç A ÁA B]@ FŔA G@Â G€Â [   €€FŔ@ ‡ A ]€ [   @€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ŔC@ €€G D G@Ä ]€€ [   @€F€D ‡ A ]€ ‡ D ‡ŔD€€ € €L E Ç A ]@€G@E G@Ä ]€€ [   Ŕ€FŔA G@Â G€Ĺ ŔĹ €€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ F@ Ŕ€FŔ@ ‡ A ]€ [   €€F€D ‡ A ]€ ‡ D ‡ŔDŽ@F€€ € €F€F †ŔF ]@ G@E G@Ä ]€€ [    	€FŔA G@Â G€Ĺ  Ç Ŕ€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ F@  €FŔ@ ‡ A ]€ [   Ŕ€F€D ‡ A ]€ ‡ D ‡ŔDŽ@F€€ Ŕ€G@G †ŔB ‡€G@ € €F€F †ŔF ]@ FŔA G@Â GŔÇ [   €€FŔ@ ‡ H ]€ [   @€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡@H@ €€G€H G@Ä ]€€ [   @€F€D ‡ H ]€ ‡€H ‡ŔD€€ € €LŔH Ç H ]@€FŔA G@Â G É @€’ €FŔ@ ‡€I ]€ [   Ŕ	€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ŔI@  €F J †ŔB Ç@J ÇŔÄ]€€‡@@ ›@   €‡@J ‡@Dť€€ ›   Ŕ€†€D Ç€I ť€ Ç@J ÇŔÄŔ  €†ŔA ‡@B‡ I@ Ŕ €
€Ę€†€F ĆŔJ ť@  € ,      ComboActive    ultbuff    recall    ValidTarget    QCel    it 
   CastItems 
   MenuGalio 
   iteConfig    comboConfig    USEQ    myHero    mana    maxMana       Y@   QMANA    Q    Ready    GetDistance    range    CastQ    W    USEW        @   WMANA       i@
   CastSpell    _W       @   lasthealthchecked    health    USEE    ECel    EMANA    E    CastE    USER            RCel    RMANA    EnemyCount    R    _R                          Đ  Ý   [   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€G@A X€Á Ŕ€F @ G@Ŕ GŔÁ [   €€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡ C@ Ŕ€G@C G€Ă ]€€ [   €€FŔC ‡@A ]€ [   @€F D ‡@A ]€ ‡@C ‡@D€€ € €L€D Ç@A ]@€GŔD X€Á Ŕ€F @ G@Ŕ G Ĺ [   €€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡@E@ Ŕ€G€E G€Ă ]€€ [   €€FŔC ‡ŔD ]€ [   @€F D ‡ŔD ]€ ‡€E ‡@D€€ € €LŔE ÇŔD ]@€ €    
   MenuGalio 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QCel     QH    myHero    mana    maxMana       Y@   QMANA    Q    Ready    ValidTarget    GetDistance    range    CastQ    ECel    EH    EMANA    E    CastE                          ß     č   F @ ]€€ [   €8€G@@ [@  Ŕ7€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ Ŕ3€€Â €
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ€D BD‚€   €€X€Ä €ÂD @€‡D ‡E‚€  @€BE GD GĹ‡D ‡‚EÇ‚@ ÇBÂÂ X€DŔ€@‚‹@€†F ĆBF FGĂFťB Ŕ€ŔĹ @€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚€€D BD‚€   @
€X€ÄŔ	€ÂD @€‡D ‡E‚€   €G BG€€Ć‚G Ý‚€ ĐÂÇ‚ FÂB LČŔ€ĂB CH†CF €H‘
IFĂB GCÉ
CFĂB GCÉ†ĂB ‡IOOĂÉ
C]‚ @€ €ŚJ  €ťB€€B 
€ÂB CFÂB GBĂB‚CFA GBÁGBĘ ‚@€‚J BD‚€    €X€Ä€€ÂD @€‡‚J ‡E‚€  Ŕ€ÂJ G‚J GĹ‡‚J ‡‚EÇ‚@ ÇBÂÂ X€D@€†F ĆK FGĂFťB Ŕ€ŔE@€ÂB CFÂB GBĂB‚CFA GBÁGBĘ ‚€€‚J BD‚€   @
€X€ÄŔ	€ÂD @€‡‚J ‡E‚€   €G BG€€Ć‚G Ý‚€ ĐÂÇ‚ FÂB LČŔ€ĂB CH†K €H–
KFĂB GCÉ
CFĂB GCÉ†ĂB ‡IOOĂË
C]‚ @€ €ŚL  €ťB€â€  cAË € 1      FarmActive    recall 
   EnemyMinions    update 
   MenuGalio    farm    QF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    GetBestCircleFarmPosition    width        @
   CastSpell    _Q    x    z    VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    level      €K@      9@   ap 
   apPercent 333333ă?   CastQ    EMANA    E    GetBestLineFarmPosition    _E      €F@      .@      ŕ?   CastE                          	     	[   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A G@Á G€Á [   €€FŔA G Â †ŔA ‡@BP€€ O€Â † A ‡@A‡ŔB@ Ŕ€F C ‡€@ ‡@C]  €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€b€  ă űF A G@Á G Ĺ [   €€FŔA G Â †ŔA ‡@BP€€ O€Â † A ‡@A‡@E@ Ŕ€F C ‡€@ ‡@C]  €‡E ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇE ÇÄŔ€ €ŚÁE  €ťA€b€  ă ű €       FarmActive    recall    JungleMinions    update 
   MenuGalio    jf    QJF    myHero    mana    maxMana       Y@   QMANA    pairs    objects    Q    Ready     GetDistance    range    CastQ    EJF    EMANA    E    CastE                            "      G @ [   Ŕ €F@@ ]@€ F€@ ]@€  €       ultbuff    DisableMove    DisableAttacks                          $  ,      F @ G@Ŕ G€Ŕ [   €€FŔ@ † A Ć@A Ç€ÁAA ÁA]@ F @ G@Ŕ G Â [   € €FŔ@ †@B ]@ F€B LŔÂ Ć@A Ç€ÁAA ÁA]@  €    
   MenuGalio 	   esConfig    ESE 
   CastSpell    _E 	   mousePos    x    z    ESW    _W    myHero    MoveTo                          .  4   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuGalio 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         6  [   7  G @ [@  €L€G@@ [@  ŔK€F€@ †Ŕ@ ť € ]   J€‡ÁĆAA ÇÁÂÁÝ ŤÁĆB  €Ý BB ‚B€€ĆBB ĚÂÂA Ý‚€ÇBĂĎÂ‡ÍÂĂCB DÍ‚ FBB L‚ÂŔ€CB ĂB €CC‰
EFCB GÄOCŠ
C]‚ †BB Ś‚B €FCB LĂÂÁ ]€GCĂOC‹MĂĹ†CB ‡DŹMť‚ ĆBB ÇBĂĎÂŚÍÂ‚ŚX€Ć ;€ĂF @€ €  €9€ @€CG G€    €CG ĂG  €H CHH  Ŕ €ĂH €€C€ /€@@€I G€    €I ĂG  €H CHCI  Ŕ €I €€C€ *€€@€ĂI G€    €ĂI ĂG  €H CHJ  Ŕ €CJ FJ C  %€
C €€CG G€   @€I G€    €CG ĂG  €H CHCI  Ŕ€H CHH  €€ĂH €€C€I €€C€€€
 €€CG G€   @€ĂI G€    €ĂI ĂG  €H CHJ  Ŕ€H CHH  €€ĂH €€C€CJ FJ C  €
‚ €€I G€   @€ĂI G€    €ĂI ĂG  €H CHCI  Ŕ€H CHJ  €€I €€C€CJ FJ C €€
C
 €
€CG G€   @	€I G€    €ĂI G€   Ŕ€ĂI ĂG Ŕ€H CHJ  €€H CHH  @€H CHCI   €ĂH €€C€I €€C€CJ FJ C ĂJ G €  Ŕ€Ŕ@€FH GCČGCË[   €€Ë€€FCJ †ĂJ ŚĂK ť€Ŕ€]C€b€  ă µ € 0      ultbuff    recall    pairs    GetEnemyHeroes    health    math    floor    shield    GetDistance    myHero    CalcDamage 
   GetSpellData            level      €K@      9@   ap 333333ă?       @     €F@      .@      ŕ?      @     €[@      4@      I@    ValidTarget      p—@   Q    Ready    range 
   MenuGalio 	   ksConfig    QKS    CastQ    E    EKS    CastE    R    RKS 
   CastSpell    _R    SSpells    summonerdot    IKS      Ŕ‚@   GetSlot                          ]  f   @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă€   A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    Q    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 
   MenuGalio 	   spConfig    qConfig    QP    circle    QCH                           h  q   @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă€   A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    E    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2 
   MenuGalio 	   spConfig    eConfig    EP    line    ECH                           s  Ž   
Ű   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €GŔD G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁD GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGF GĹ†AC Ć@ ÇAŔÇAĆÇÁĂ@ B@BFDF@ GBŔGBĆGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@  F @ G@Ŕ G Č [    	€L@H ]@ F€H †ŔH ť € ]  Ŕ€†I Ŕ€ť ›  €€‡AI ÇÉ‡ÁX€A@€†ÁI ĆJ BÂG‚Â‡ÂÂÝ ť  ĆAJ BI G‚ÉBA‚
 ‡BBŽÂJÇ‚BÎËC ÝA b€  ă@ř € .   
   MenuGalio    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC    DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA                           ©   ˇ   F @ †@@ ť € ]   &€‡Ŕ›A  @%€‡ÁŔ›  €$€†A ŚAA €FA L‚ÁÁÂ ]‚€GÂOB‚„M‚Â†A ‡ÂBŹ‚†M‚‚ť ĆA ĚAÁ@€†A Ś‚AC ť‚€‡BŹ‚‡ŤÂCĆA ÇÂÂĎÂŤÂÝ A BA€€ĆA Ě‚ÁAC Ý‚€ÇÂĎÂ‰Í‚ÄA ĂB†Í‚ GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŤÂŤ@Ŕ €GÂE ‡ĆJBFŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚€Ŕ €GÂE ‡ĆJ‚FŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŔŔ €GÂE ‡ĆJÂFŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ ‚Ŕ €GÂE ‡ĆJGŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŤÂ€‚Ŕ €GÂE ‡ĆJBG€	€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚Ť€‚Ŕ €GÂE ‡ĆJ‚G@€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚Ť‚€‚Ŕ €GÂE ‡ĆJÂG €GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŤÂŤ€‚€ €GÂE ‡ĆJHb€  ă Ů € !      pairs    GetEnemyHeroes    dead    visible    myHero    CalcDamage 
   GetSpellData            level      €K@      9@   ap 333333ă?       @     €F@      .@      ŕ?      @     €[@   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill!    R Kill! 
   Q+E Kill! 
   Q+R Kill! 
   E+R Kill!    Q+E+R Kill!                          «  ł      [   Ŕ€Ŕ    €Ű   €€AŔ€@Ŕ €Á@ A€ A A€ [   Ŕ€Ŕ    €Ű   €€AŔAA €    €
ŔA €       isMe    name    GalioIdolOfDurand    DisableMove    DisableAttacks    find    recall                          µ  ľ      [    €Ç Ŕ Ű   @€›   Ŕ€Ç@@€Ŕ €ĆŔ@ Ý@€ Ć A Ý@€ 
€Á‚[   Ŕ€Ç Ŕ Ű    €›   €€Ç@@ĚŔÁA Ý€€Ű     €
€A„ € 	      isMe    name    GalioIdolOfDurand    EnableAttacks    EnableMove    ultbuff     find    recall                          Ŕ  Ä      ‡ @ ›   € €†@@ Ŕ € ť@  €       ultbuff 
   BlockMove                          Ć  Ń   6   Ć @ Ç@ŔÇ€ŔÇŔŔŰ   €€Ç A Ç@ÁÝ€€ Ű   @
€Ć€A ÁA Ý Ŕ€[   @€Â FBB GÂX@ €‚Â FBB G‚Â@Ŕ€›   @€ÂBGĂ@@€@ B@‚@GĂB  €€BC @€ ‡‚C ‡ÂC‚€  Ŕ €
@D‚D FÂD B â€  cAö €    
   MenuGalio 	   exConfig    ES    UI    E    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    R    range    ultbuff 
   CastSpell    _R                          Ó  đ   
T   Ć @ Ŕ€  €Ć@@ Ç€ŔÇŔŔŰ   Ŕ €Ç A Ű     €
@A‚Ć€A Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔÁŰ   €€Á    FAB †B ť€ ] €€†ÂB Ŕ€ť‚ ›  @€†C Ŕ€CC ť‚€ZŔ @ €€C@€†C Ŕ€CC ť‚€Ŕ   €b  ăú   €ŔĂ€€GD [   €GAD‡D ‡AD€Ŕ€
€CFA@ GŔGÁÁ[   €FD Á ÇAD–Á]A €€
 FA@ GŔGÁÁ[   €FD  ÇAD–Á]A  €       WM_RBUTTONDOWN 
   MenuGalio    comboConfig    RC    ultbuff     WM_LBUTTONDOWN    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ú  !   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks                   @ @  €       AfterAA                                      @ @  €    	   BeforeAA                         
  
           @ @  €       AfterAA                         
  
           @ @  €    	   BeforeAA                                   @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked                 @ @  €       AfterAA                                                            @ @  €    	   BeforeAA                                      @ @  €       AfterAA                                      @ @  €    	   BeforeAA                              	
                #  J   ¨   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€  J@Ä‚Ą@  J€€‡
@ K€ JŔÄ‚J ĹJ€Â„J Ă…J@Ĺ†Ą€  J€€‡
@ ‰K€ JŔĹ‚J ĆJ€Â„J Ă…J@Ć†ĄŔ  J€€‡
@ ‹D   
@ŔŤ
@ Ť
@GŽFŔG † H Ç A ÇŔÁAH FH ]€€
@ ŹFŔG † I Ç A ÇŔÁAH FH ]€€
@€‘FŔ@ †€I Ç A ÇŔÁÁI C  ]€€
@€’FŔ@ †€I Ç€D ÇŔÁÁI C  ]€€
@ ”FŔ@ †€I Ç€E ÇŔÁÁI C  ]€€
@€”K   
@ •K  	‹Ŕ  Š@K–ŠŔK—Š€EËŔ  Ę@L–Ę€L—Ę€EÁ  
ÁL–
M—
EKÁ  JAM–JM—JE‹Á  ŠÁM–ŠN—ŠEËÁ  ĘAN–ĘN—ĘEÂ  
ÂN–
O—
‚EKÂ  JBO–J‚O—J‚E‹Â  ŠÂO–ŠP—Š‚EËÂ  ĘBP–Ę‚P—Ę‚EĂ  
ĂP–
Q—
EKĂ  JCQ–JQ—JE‹Ă  ŠĂQ–ŠR—ŠEËĂ  ĘCR–ĘR—ĘEÄ  
ÄR–
S—
„EKÄ  JDS–J„S—J„E‹Ä  ŠÄQ–ŠR—Š„EËÄ  ĘÄS–ĘT—Ę„EĹ  
ET–
…T—
…EKĹ  JĹT–JU—J…Ed@ 

@€•F€U ]€€ 
@€Ş € W      SelectedTarget     Cel    TargetSelector    Q    name    Barrel Roll    range      Š@   speed      @Ź@   delay 333333Ó?   width      Ŕr@   Ready    W 
   Drunken Rage    E 
   Body Slam      P„@     @e@   R    Explosive Cask      ř‘@      y@   barrel 
   barrelmis    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector    killstring    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    it 
   ItemsCast    '  '        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          (  (        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          )  )        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          *  *        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               L  ´   ‚  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 	 GJ GÁĹÁ
 FH € ]@ F @ GŔĆ LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ GŔĆ LŔÁ ÁŔ 	 GL GÁĹA FB  Ë Â A
 B
 Á‚
 äA ]@€F @ GŔĆ LŔÁ ÁŔ
  FAN  ÁÁ ‚ AÂ ]@€F @ GŔĆ LŔÁ Á  A FO   ĆÁO ÇĐB Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€ Á FAN  ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á  A FAN  ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ ÁŔ  FAN A ÁÁ  AÂ ]@€F€S † @ Á  € C  € Ă€ ]@€F @ L Á ÁŔ  ]@ F @ G Ô LŔÁ Á  A FG Á ]@ F @ G Ô LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ G Ô LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ G Ô LŔÁ Á  Á FG Á ]@ F @ G Ô LŔÁ Á  A FG Á ]@ F @ G Ô LŔÁ Á€ Á FAN A ÁÁ  AÂ ]@€F @ G Ô LŔÁ Á  A FAN  ÁÁ  AÂ ]@€F @ G Ô LŔÁ Á  Á FG Á ]@ F @ G Ô LŔÁ Á  A FG Á ]@ F @ G Ô LŔÁ ÁŔ  FAU   ĆÁO ÇĐ‚ Ý ]@  F @ L Á ÁŔ  ]@ G@V L€Ö Ć @ Ç Ö]@€F @ L Á ÁŔ  ]@ F @ G × LŔÁ Á  A FG Á ]@ F @ G × LŔÁ Á@  FAN Á ÁÁ ‚ AÂ ]@€F @ G × LŔÁ Á  Á FG Á ]@ F @ G × LŔÁ Á  A FG Á ]@ F @ G × LŔÁ Á  A FAN Á ÁÁ ‚ AÂ ]@€F @ L Á Á€ Á ]@ F @ GŔŘ LŔÁ Á  A FG Á ]@ F Y †@Y ť € ]  @€†Y ÇÁY ťŔ€ÇÚZ Ŕ€Ć@ ÇÂŘĚÂÁGCZ ÇZÄ G[–CĆH € ÝB ˘  #Bűb€  ăŔůF @ GŔŘ LŔÁ Á  Á FG Á ]@ F @ GŔŘ LŔÁ Á  A FG Á ]@ F @ GŔŘ LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@  FH € ]@ F @ G Ü LŔÁ ÁŔ 	 GÁI GÁĹ
 FH € ]@ F @ G Ü LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ G Ü LŔÁ Á@ 	 GL GÁĹA FH   ]@ F @ L Á Á€ Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á  	 GÁI GÁĹ
 FB  Ë€Â AB ‚ äA€]@€F @ GŔÝ LŔÁ ÁŔ 	 GJ GÁĹÁ
 FB Á Ë Â A äA ]@€F @ GŔÝ LŔÁ Á@ 	 GAK GÁĹ FB  Ë€Â AB ‚ äA€]@€F @ GŔÝ LŔÁ Á  Á FG Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á€ Á FAN Á ÁÁ  AÂ ]@€F @ GŔÝ LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ GŔÝ LŔÁ Á  A FAN Á ÁÁ  AÂ ]@€F @ L Á Á   A  ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á€  	 GÁI GÁĹ
 FH € ]@ F @ G@ŕ LŔÁ ÁŔ  	 GJ GÁĹÁ
 FH € ]@ F @ G@ŕ LŔÁ Á ! 	 GAK GÁĹ FH € ]@ F @ G@ŕ LŔÁ Á  Á FG Á ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á€ Á FAN Á ÁÁ  AÂ ]@€F @ G@ŕ LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ G@ŕ LŔÁ Á  A FAN Á ÁÁ  AÂ ]@€F @ L Á Á@! ! ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ ÁŔ! " FH € ]@ F @ G€á LŔÁ Á@" " FH € ]@ F @ G€á LŔÁ Á  Á FG Á ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ ÁŔ" # FH € ]@ F @ G€á LŔÁ Á@# # FÁc ‹ Á$ Â AÂ $ ¤A ]@ F @ G€á LŔÁ Á  Á FG Á ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ Á@$ $ FH € ]@ F @ G€á LŔÁ ÁŔ$ % FÁc ‹ Á$ $ AÂ Â ¤A ]@ F @ G€á LŔÁ Á  Á FG Á ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ Á@% % FH € ]@ F @ G€á LŔÁ ÁŔ% & FÁc ‹ Á$ Â A$ Â ¤A ]@ F @ L Á Á@& & ]@ F @ G€ć LŔÁ Á  A FG Á ]@ F @ G€ć LŔÁ ÁŔ& ' FH   ]@ F @ G Ô L@ç ÁŔ ]@€ € ž   
   MenuGragy 
   scriptConfig    MasterSeries: Gragas    Gragas1    addSubMenu    [Gragas]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Gragas    addTS    [Gragas]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    ADQ    Auto Detonate (Q)    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    USER    R     (R)        @   No    Normal 	   Killable 
   Can Hit X    HXC    X =     SCRIPT_PARAM_SLICE       @           CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       4@   EMANA    Min. Mana % To Use (E)       .@   RMANA    Min. Mana % To Use (R)       $@
   AddSpellMenu    [Gragas]: Harras Settings 
   harrasConfig      €F@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Gragas]: Items Settings 
   iteConfig    it    LoadToMenu    [Gragas]: Extra Settings 	   exConfig    ARF    Auto (R) If Can Hit X       @   AQF    Auto (Q) If Can Hit X "   [Gragas]: Auto-Interrupt Settings    iConfig    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop       	   menuname    UI    Use Auto-Interrupt (E)    [Gragas]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS    [Gragas]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    WF    Yes    EF       @      D@   [Gragas]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Gragas]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Gragas]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ¶  Ě   B   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡F@@ G€Ä GŔÄ [   @ €L E ]@ F@@ G€Ä G@Ĺ [    €G€C [   @€G€E [@  € €LŔE Ç€C ]@€ €       CheckOB 
   MenuGragy    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    R    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    comboConfig    ADQ    AutoQQ    CRKD    recall    CastR                          Î  ě   	ć   F @ ]€€ [    8€G@@ [@  @7€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€@ ‡ B ]€ [    €G@B G€Â ]€€ [   Ŕ€FŔB ‡ B ]€ ‡@B ‡ C€€  €F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡@D‡€D@ @€F€A G@Ä GŔÄ  Ĺ Ŕ €L@E Ç B ]@€ €F€A G@Ä GŔÄ €Ĺ  €LŔE Ç B ]€€‡ B ‡ FĆ@F Ç€ĆB ÁFÝ€ ŤŔ @ €	€Ś@E B ť@€€€F€A G@Ä GŔÄ  Ç @€F@G L€Ç Ç B AB ÁGGAB GČ‡AB ‡CÇAB ÇAČBC ]@F@ ‡B ] [  Ŕ€X€Č @€FA GAÄGÁČŔ€ €FI †AI ÇÉ ÂÉ ]A F€@ ‡Ŕ@ ]€ [   €€G J G€Â ]€€ [   @€F€A G@Ä G@Ę [    €FŔB ‡Ŕ@ ]€ ‡ J ‡ C€€ @€F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡@D‡€J@ € €LŔJ ÇŔ@ ]@€F€@ ‡ K ]€ [   €€G@K G€Â ]€€ [   @€F€A G@Ä G€Ë [    €FŔB ‡ K ]€ ‡@K ‡ C€€ @€F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡@D‡ŔK@ € €L L Ç K ]@€F€@ ‡ K ]€ [   Ŕ	€G@L G€Â ]€€ [   €€F€A G@Ä G€Ě [   @€FŔB ‡ K ]€ ‡@K ‡ C€€ €€G J G€Â ]€€ [@  @€G@K G€Â ]€€ [@   €F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡@D‡ŔL@ @ €L M ]@  € 5      ComboActive    recall    ValidTarget    QCel    it 
   CastItems 
   MenuGragy 
   iteConfig    RCel    R    Ready    GetDistance    range    myHero    mana    maxMana       Y@   comboConfig    RMANA    USER        @   CastR       @   AllDmg    health    math    floor    shield       @   VP    GetCircularAOECastPosition    delay    width    speed     HXC 
   CastSpell    _R    x    z    Q    USEQ    QMANA    CastQ    ECel    E    USEE    EMANA    CastE    W    USEW    WMANA    CastW                          î  ý   ~      Á     A  ‡A@ ‡@ť€ ›   €†Á@ Ŕ€ B@ Ať€›  @€†AA ŚA € FBA LÂÁĆB ]‚€GBÂOB…M‚Â†BA ‡ÂBM‚‚†BA ‡ÂBĆBA ÇĂŹÂŹBCM‚‚ť €  ‡C ‡@ť€ ›   €†Á@ Ŕ€ BA A
ÂCť€›    €Á   ‡D ‡@ť€ ›   €†Á@ Ŕ€ D Ať€›  @€†AA ŚA € FBA LÂÁĆBD ]‚€GBÂOB‰MÂÄ†BA ‡ÂBM‚‚†BA ‡ÂBĆBA ÇĂŹÂŹBCM‚‚ť   ‡E ‡@ť€ ›  @€†Á@ Ŕ€ E A
BEť€›  @€†AA ŚA € FBA LÂÁĆ‚E ]‚€GBÂOB‚‹MÂĹ†BA ‡ÂBM‚‚†BA ‡ÂBĆBA ÇĂŹÂŹFM‚‚ť @ ŤÁ ŤŤAź  €               Q    Ready    ValidTarget    range    myHero    CalcMagicDamage 
   GetSpellData    _W    level       D@   ap 
   apPercent 333333ă?   W      @e@   E    _E       I@      >@   R       i@   _R       Y@ffffffć?                         ˙     U   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €€G A [@  Ŕ€F @ G@Ŕ G@Á [   €€F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡€B@ Ŕ€FŔB ‡ C ]€ [   €€G@C G€Ă ]€€ [   @€FŔC ‡ C ]€ ‡@C ‡ D€€ € €L@D Ç C ]@€F @ G@Ŕ G€Ä [   €€F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡ŔD@ Ŕ€FŔB ‡ E ]€ [   €€G@E G€Ă ]€€ [   @€FŔC ‡ E ]€ ‡@E ‡ D€€ € €L€E Ç E ]@€ €    
   MenuGragy 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEQ    myHero    mana    maxMana       Y@   QMANA    ValidTarget    QCel    Q    Ready    GetDistance    range    CastQ    USEE    EMANA    ECel    E    CastE                            9   ţ   F @ ]€€ [    >€G@@ [@  @=€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ A Ç@ÁÇ ÂAB G@ GÂ€8€ŔÂ €
€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡D@Ŕ€GBD G‚Ä]‚€ [   €XŔD€€FE € ÇBD ÇBĹ]‚€[  Ŕ€F‚E ‡BD ‡BEÇBD ÇÂĹ@ B]Â XŔÄ@€€ŚŔ€ĆBF F GĂĆ‡ÇÝB @€ Ć Ŕ€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡D@ €GBD G‚Ä]‚€ [  Ŕ
€XŔD@
€FE € ÇBD ÇBĹ]‚€[  €€FBG L‚ÇŔ ĂG € H]‚ †C ŚBH  FC LČĆF ]€GĂČOC’MÉ†C ‡CIM†C ‡CIĆC ÇÉŹĂŹĂIMť‚ €‚ €ĆBF F GĂF‡GÝB ŔÂ €FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡J@@€GBJ G‚Ä]‚€ [   €XŔD€€FE € ÇBJ ÇBĹ]‚€[  Ŕ€L‚J Ŕ ]B€Ŕ€ Ć@€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡J@€€GBJ G‚Ä]‚€ [  @
€XŔDŔ	€FE € ÇBJ ÇBĹ]‚€[   €FBG L‚ÇŔ ĂG € H]‚ †C ŚBH  FC LČĆĂJ ]€GĂČOC–MCË†C ‡CIM†C ‡CIĆC ÇÉŹĂŹĂIMť‚ €‚€ €Ě‚J @ ÝB€ F€€FC GBĂ†C ‡‚CP‚‚OÂĂ†A ‡BA‡‚K@Ŕ€GÂK G‚Ä]‚€ [  €€XŔD €FE € ÇBJ ÇBĹ]‚€[  @ €LL ]B "  ŁĆ € 1      FarmActive    recall 
   EnemyMinions    update 
   MenuGragy    farm    QF    WF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    GetBestCircleFarmPosition    width        @
   CastSpell    _Q    x    z    VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    level       D@   ap 
   apPercent 333333ă?   EMANA    E    CastE    _E       I@      >@   WMANA    W    CastW                          ;  T   ‹   F @ ]€€ [   @!€G@@ [@  € €G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€†A ‡ÁA‡E›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€Ŕ	€‡E ‡ÁCť€ ›  €€X Ä €†AD Ŕ€ť ÇE ÇÄŔ@€†ÁE ÇE ÇÄ‚E FG‚@ GBÁťÁ X DŔ€BB BF†‚F ‚€ÂFX G €BG F‚F ‡‚GÇÂGB H e  B B€†A ‡ÁA‡H›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇÁČ€Ŕ€‡I ‡ÁCť€ ›  €€X Ä €†AI Ŕ€‚C ‚Dť€›  @ €ŚI ťA b€  ă á € '      FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuGragy    jf    EJF    myHero    mana    maxMana       Y@   EMANA    E    Ready     GetDistance    range    CastE    QJF    QMANA    Q    GetBestCircleFarmPosition    width 
   GetSpellData    _Q    name    GragasQToggle 
   CastSpell    x    z    DelayAction        @   WJF    WMANA    W    ValidTarget    CastW    J  J           @ @  €       Q2JF                                              V  Z      F @ L@Ŕ Ć€@ ]€€GŔŔ  Á € €F@A †€@ ]@  €       myHero 
   GetSpellData    _Q    name    GragasQToggle 
   CastSpell                          \  d   	   F @ †@@ ť € ]  €€[   €‡@ ›  @€†Á@ Ç@  €ť€ÇA ÇAÁŔ@€†A ŚÁAB ť€‡AB€B€ €†ÁB ĆB ťA b€  ă€ů €       pairs    GetEnemyHeroes    barrel    GetDistance    Q    width    myHero 
   GetSpellData    _Q    name    gragasqtoggle 
   CastSpell                          f  l   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuGragy 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         n  ˇ   Ĺ  F @ †@@ ť € ]  ŔT€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ĚÁÁ@€†‚A ŚBCB ť‚€‡‚BŹ‚‚…ŤÂBĆ‚A ÇĂŤÂĆ‚A ÇĂA CCĎĎ‚ĂŤÂÝ ‚A ÂA€€Ć‚A ĚÂFĂC Ý‚€Ç‚ÂĎÂÍBÄA CÍA CFA GCĂCCÍ‚ F‚A LÂÁŔ€A B†D €B‰
ĂDFA GĂ
CFA GĂ†A ‡CCOOĹ
C]‚ †‚A ‡‚BŹ‚‚ŠŤ‚Ć‚E  €AĂ Ý‚€Ű   A€X Ć€@€ÇBF ŰB  Ŕ?€Ć‚F ĚÂĆA Ý‚€Ŕ €CG GĂG  Ŕ€H @€ GCH GČ@ €CH ĂF€   Ŕ €ĂH €€C€ 9€Ŕ €CG GI  Ŕ€H @€ GCI GČ@ €CI ĂF€   Ŕ €I €€C€@3€@ €CG GĂI  Ŕ€H @€ GJ GČ@ €J ĂF€   Ŕ €CJ €€C€€-€
‚ @€CG GĂG   €CG GI  Ŕ€H @€ GCI GČ@ €CH ĂF€   Ŕ€CI ĂF€   €€I €€C€ĂH €€C€@$€
C‚ @€CG GĂG   €CG GĂI  Ŕ€H @€ GCH GČ@ €CH ĂF€   Ŕ€J ĂF€   €€ĂH €€C€CJ €€C€ €
C @€CG GI   €CG GĂI  Ŕ€H @€ GCI GČ@ €CI ĂF€   Ŕ€J ĂF€   €€I €€C€CJ €€C€Ŕ€
‚
C €€CG GĂG  @
€CG GI   	€CG GĂI  Ŕ€H @€ GCI GČ@ €CH ĂF€   Ŕ€CI ĂF€   €€J ĂF€   @€I €€C€ĂH €€C€CJ €€C€ €€€€CG GJ  @€H @€ ŔJ €Ű  €€K FF LCËÁ ]€€€C€b€  ă@ŞF @ †@@ ť € ]  @€†AG ‡K‡ÁK€Ŕ
€‡AH ‡ÁFť€ ›  €	€†E Ŕ€ť ›  @€†H Ŕ€ť ÇAH ÇČŔ€€†AL ŚL €GBH GÂĚ‡BH ‡MÇBH Ç‚ČCH CMFA ťAX FŔ€†BG ‡‚K‡ÂK €€Ŕ› €†K ĆBB ĂMGNťB †AG ‡K‡AN€Ŕ
€‡J ‡ÁFť€ ›  €	€†E Ŕ€ť ›  @€†H Ŕ€ť ÇJ ÇČŔ€€†AL ŚN €GJ GÂĚ‡J ‡MÇJ Ç‚ČJ CMFA ťAX FŔ€†BG ‡‚K‡BN €€Ŕ› €†K Ć‚D ĂMGNťB b€  ăŔć € ;      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    CalcDamage 
   GetSpellData    _Q    level       D@   ap 
   apPercent 333333ă?   _E       I@      >@   _R       Y@ffffffć?      4@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 
   MenuGragy 	   ksConfig    QKS    GetDistance    Q    range    CastQ    EKS    E    CastE    RKS    R    CastR    IKS      Ŕ‚@
   CastSpell    GetSlot 	   exConfig    AQF            VP    GetCircularAOECastPosition    delay    width    speed        @   x    z    ARF    GetLineAOECastPosition                          Ł  ®   G   † @ Ś@@@ ť€€‡Ŕ@X A€€†@A Ś€A € GÁA GÂ‡ÁA ‡ABÇÁA ÇÂ@ ť ›   €€Ű    €FÁB € ] ‡ÁA ‡C€@€FAC †@ ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ ÂA BGÂA GBÂ‡ÂA ‡CÇÂA Ç‚Â@ AC   Ă€   AÄ †DD ‡„D	‡ÄD	‡„E	]XŔĹ@ €›A    € € BC F‚@ ‡‚ĂÇÂĂB  €       myHero 
   GetSpellData    _Q    name    GragasQToggle    VP 
   IsDashing    Q    delay    width    speed    GetDistance    range 
   CastSpell    x    z    GetPrediction2 
   MenuGragy 	   spConfig    qConfig    QP    circle    QCH                           °  ˛      F @ †@@ ]@  €    
   CastSpell    _W                          ´  ˝   K   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   @€Ű   Ŕ€FÁA € ] ‡@ ‡B€ €FAB €€ ĆA ‚@ AG‚@ GÂ‡‚B ] [A  @€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A € Ă    A„  †D ‡DD	‡„D	‡DE	]X€Ĺ@ €›A    € € ÂB FC ‡BĂÇ‚ĂB  €       VP 
   IsDashing    E    delay    width    speed    myHero    GetDistance    range    GetMinionCollisionM 
   EnemyMinions 
   CastSpell    _E    x    z    GetPrediction2 
   MenuGragy 	   spConfig    eConfig    EP    line    ECH                           ż  Ě   W   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă€   A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BE @€‚ FBE †‚A ]‚ B‚E‚ ÂEÇÂÂCFÍŔŚÇÂĆCĆÍŔŤÇĂCFÍŔŽĆBB CG FF †G ÝB  €       VP 
   IsDashing    R    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2 
   MenuGragy 	   spConfig    rConfig    RP    circle    RCH     Vector    normalized    unpack    posX      Ŕb@   posY    y    posZ    _Q                          Î  ć   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@   € ,   
   MenuGragy    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          č     ¶   A   †@@ ‡€@Á   a€+€FA@ LÁŔŔ ]€‡Á›A  Ŕ)€‡AÁ›   )€†A ŚÁA €F‚A LÂĆBB ]‚€G‚ÂOB‚…MÂÂ†‚A ‡CM‚‚†‚A ‡CĆ‚A ÇBĂŹÂŹ‚CM‚‚ť ĆA ĚÁÁ@€†‚A ŚBĂC ť‚€‡‚BŹ‚ŤBDĆ‚A ÇĂŤÂĆ‚A ÇĂA CCĎĎ‚ĂŤÂÝ ‚A ÂA€€Ć‚A ĚÂFD Ý‚€Ç‚ÂĎÂ‚‰ÍÂÄA CÍA CFA GCĂCEÍ‚ GBĹ†‚E ‡ÂEÇĆť‚ M‚‚ŤÂŤ@Ŕ €GBF ‡‚ĆJÂFŔ€GBĹ†‚E ‡ÂEÇĆť‚ M‚‚€Ŕ €GBF ‡‚ĆJGŔ€GBĹ†‚E ‡ÂEÇĆť‚ M‚‚ŔŔ €GBF ‡‚ĆJBGŔ€GBĹ†‚E ‡ÂEÇĆť‚ M‚‚ ‚Ŕ €GBF ‡‚ĆJ‚GŔ€GBĹ†‚E ‡ÂEÇĆť‚ M‚‚ŤÂ€‚Ŕ €GBF ‡‚ĆJÂG€	€GBĹ†‚E ‡ÂEÇĆť‚ M‚‚Ť€‚Ŕ €GBF ‡‚ĆJH@€GBĹ†‚E ‡ÂEÇĆť‚ M‚‚Ť‚€‚Ŕ €GBF ‡‚ĆJBH €GBĹ†‚E ‡ÂEÇĆť‚ M‚‚ŤÂŤ€‚€ €GBF ‡‚ĆJ‚H`ŔÓ € #         đ?   heroManager    iCount    GetHero    dead    visible    myHero    CalcDamage 
   GetSpellData    _Q    level       D@   ap 
   apPercent 333333ă?   _E       I@      >@   _R       Y@ffffffć?   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill!    R Kill! 
   Q+E Kill! 
   Q+R Kill! 
   E+R Kill!    Q+E+R Kill!                                  [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         
        [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                               4   Ć @ Ç@ŔÇ€ŔŰ   @€ÇŔ@ Ç ÁÝ€€ Ű    
€Ć@A A Ý €€[    €ÂÁ FB GÂÁX@Ŕ€BÂ FB GBÂ@€€›    €‚BGÂÂ@ €@ B@CGÂÂB  @€BC @€ ‡Â@ ‡‚C‚€  € €ÂC €€ B€â€  cö €    
   MenuGragy    iConfig    UI    E    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ES    ValidTarget    range    CastE                            #      [    €‡ Ŕ Ś@@  ť€€›   €€‡ Ŕ Ś@@Á  ť€€›     €
@ ‚[    €‡ Ŕ Ś@@  ť€€›   €€‡ Ŕ Ś@@A ť€€›     €
@  €       name    find    Gragas    Q_Mis 
   barrelmis    Q_Ally    barrel                         %  *      [    €‡ Ŕ ›   @€‡@Ŕ Ś€@Á  ť€€›   Ŕ€‡@Ŕ Ś€@ ť€€›   @ €
€Á‚
€Á €       valid    name    find    Gragas    Q_End    barrel  
   barrelmis                         ,  F   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuGragy    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          P  w   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    V  V           @ @  €       AfterAA                         Y  Y           @ @  €    	   BeforeAA                         `  `           @ @  €       AfterAA                         c  c           @ @  €    	   BeforeAA                         i  i        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    i  i           @ @  €       AfterAA                                               l  l           @ @  €    	   BeforeAA                         q  q           @ @  €       AfterAA                         t  t           @ @  €    	   BeforeAA                              	
                y  ±   î   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€ÄJ€Â„J Ă…JŔÄ†Ą@  J€€‡
@ K€ J@Ĺ‚J€ĹJŔĹ„J Ă…J Ć†Ą€  J€€‡
@ ŠK€ J€Ć‚JŔĆ† G ‡@GJ€€„J€Ç…JŔÇ†ĄŔ  J€€‡
@€Ś
@H
ŔH‘F@I †€I Ç A ÇŔÁÁI FJ ]€€
@ ’F@I †€J Ç A ÇŔÁÁI FJ ]€€
@€”F@I †€J Ç@F ÇŔÁÁI FK ]€€
@€•FŔ@ †€K Ç A ÇŔÁÁK C  ]€€
@€–FŔ@ †€K Ç E ÇŔÁÁK C  ]€€
@ FŔ@ †€K Ç@F ÇŔÁÁK C  ]€€
@€K   
@ ™K €‹Ŕ  Š@MšŠŔM›Š AśËŔ  Ę@NšĘ€N›Ę@FśÁ  
ÁNš
O›
DśKÁ  JAOšJO›JAś‹Á  ŠÁOšŠP›ŠAFśËÁ  ĘAPšĘP›ĘAśÂ  
ÂPš
Q›
AśKÂ  JBQšJ‚Q›JEś‹Â  ŠÂQšŠR›ŠBFśËÂ  ĘBRšĘ‚R›ĘBFśĂ  
ĂRš
S›
CFśKĂ  JCSšJS›JAś‹Ă  ŠĂSšŠT›ŠEśËĂ  ĘĂSšĘCT›ĘEśÄ  
„Tš
ÄT›
DśKÄ  J„TšJU›JDś‹Ä  ŠDUšŠ„U›ŠAśËÄ  ĘÄUšĘV›ĘEśĹ  
EVš
…V›
EFśKĹ  JĹVšJW›JDś‹Ĺ  ŠEWšŠ…W›ŠEśËĹ  ĘĹWšĘX›ĘEśĆ  
FXš
†X›
AśKĆ  JĆXšJY›JAś‹Ć  ŠFYšŠ†Y›ŠEśËĆ  ĘĆYšĘZ›ĘAśÇ  
GZš
‡Z›
EśKÇ  JÇZšJ[›JEś‹Ç  ŠG[šŠ‡[›ŠEśd@€
@€™F \ ]€€ 
@€·K   
@€¸A€ †€\ ‡Ŕ\Á€ a@€F\ LÝŔ ]€[  Ŕ€‡AÝĆÁI ÇAÝŔ€ €‡A\ ÇÝŠÁÝ` ü € x      SelectedTarget     Cel    TargetSelector    Q    name    Light Binding    range      “@   speed      Ŕ’@   delay       Đ?   width       T@   Ready    W    Prismatic Barrier      \’@     €[@   E    Lucent Singularity      0‘@     P”@     ŕu@   R    Final Spark      Ş@   math    huge       đ?     Ŕg@   recall     x         
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE 
   KSMinions    MINION_SORT_HEALTH_ASC    QTargetSelector    TARGET_LESS_CAST_PRIORITY 
   DAMAGE_MAGIC    ETargetSelector    RTargetSelector    killstring    GapCloserList 	   charName    Aatrox 
   spellName    AatroxQ 	   menuname    Akali    AkaliShadowDance    Alistar 	   Headbutt    Fiora    FioraQ    Diana    DianaTeleport    Elise    EliseSpiderQCast    Fizz    FizzPiercingStrike    Gragas    GragasE    Hecarim    HecarimUlt 	   JarvanIV    JarvanIVDragonStrike    Irelia    IreliaGatotsu    Jax    JaxLeapStrike    Khazix    KhazixE    khazixelong    LeBlanc 
   LeblancSlide    LeblancSlideM    LeeSin    BlindMonkQTwo    Leona    LeonaZenithBlade 	   Malphite    UFSlash 	   Pantheon    Pantheon_LeapBash    Poppy    PoppyHeroicCharge 	   Renekton    RenektonSliceAndDice    Riven    RivenTriCleave    Sejuani    SejuaniArcticAssault    Tryndamere 
   slashCast    Vi    ViQ    MonkeyKing    MonkeyKingNimbus    XinZhao 
   XenZhaoSweep    Yasuo    YasuoDashWrapper    it 
   ItemsCast 
   shouldshield    heroManager    iCount    GetHero    team 
   networkID    }  }        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ~  ~        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          €  €        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ł  3   !  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 
 FH   ]@ F @ GŔĆ LŔÁ ÁŔ
 	 GK GÁĹA FH   ]@ F @ GŔĆ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GL GÁĹÁ FB 
 Ë B
 A‚
 Â
 Á C A äA ]@€F @ GŔĆ LŔÁ ÁŔ  FAO  ÁÁ Â A ]@€F @ GŔĆ LŔÁ Á@  FÁP   ĆQ ÇAŃ‚ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FAO Á Á B A ]@€F @ GŔĆ LŔÁ Á€ Á FAO  Á B A ]@€F @ GŔĆ LŔÁ Á@  FAO Á Á B A ]@€F @ GŔĆ LŔÁ Á  A FAO Á Á B A ]@€F€T † @ Á  € C  € Ă€ ]@€F @ L Á ÁŔ  ]@ F @ G Ő LŔÁ Á  A FG Á ]@ F @ G Ő LŔÁ ÁŔ A FH   ]@ F @ G Ő LŔÁ Á  Á FG Á ]@ F @ G Ő LŔÁ Á  A FG Á ]@ F @ G Ő LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ G Ő LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ G Ő LŔÁ Á  Á FG Á ]@ F @ G Ő LŔÁ Á  A FG Á ]@ F @ G Ő LŔÁ ÁŔ  FAO  Á B A ]@€F @ G Ő LŔÁ Á@  FAO Á Á B A ]@€F @ G Ő LŔÁ Á  Á FG Á ]@ F @ G Ő LŔÁ Á  A FG Á ]@ F @ G Ő LŔÁ Á  A FV   ĆQ ÇAŃÂ Ý ]@  F @ L Á Á  A ]@ G€W LŔ× Ć @ Ç@×]@€F @ L Á Á  A ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ F @ G@Ř LŔÁ Á€ Á FH € ]@ F @ G@Ř LŔÁ Á  A FAO Á Á B A ]@€F @ G@Ř LŔÁ Á  Á FG Á ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ AŔ †€Y ‡ŔYÁŔ a@€FY LÚŔ ]€‡AÚĆÁD ÇAÚŔ €†@ ‡AXŚÁA‚ÚG‚ÚÂ V‚‚†BO Á  AC  ťA€` úF @ L Á Á@  ]@ F @ G€Ű LŔÁ Á  A FG Á ]@ F @ G€Ű LŔÁ ÁŔ  FAO A Á Â A ]@€F @ G€Ű LŔÁ Á  Á FG Á ]@ F @ G€Ű LŔÁ Á  A FG Á ]@ F @ G€Ű LŔÁ Á€ Á FAO A Á Â A ]@€F @ L Á Á  A ]@ F @ G@Ý LŔÁ Á  A FG Á ]@ F @ G@Ý LŔÁ Á€ Á FV   ĆQ ÇAŃ Ý ]@  F @ G@Ý LŔÁ Á@  FH € ]@ F @ G@Ý LŔÁ ÁŔ  FH € ]@ F @ G@Ý LŔÁ Á@  FH € ]@ F @ G@Ý LŔÁ ÁŔ   FH € ]@ F @ G@Ý LŔÁ Á@    FB Á Ë€Â  A! B! äA€]@€F @ L Á Á€! Á! ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F b †@b ť € ]  @€†b ÇÁb ťŔ€Ç‚ÚZ Ŕ€Ć@ ÇÂáĚÂÁGcC# ÇZ„# GÄc–CĆH € ÝB ˘  #Bűb€  ăŔůF @ GŔá LŔÁ Á  Á FG Á ]@ F @ GŔá LŔÁ Á  A FG Á ]@ F @ GŔá LŔÁ Á $ A$ FH € ]@ F @ L Á Á€$ Á$ ]@ F @ GŔä LŔÁ Á  A FG Á ]@ F @ GŔä LŔÁ Á % A% FH € ]@ F @ GŔä LŔÁ Á€% 	 GÁI GÁĹÁ% FH € ]@ F @ GŔä LŔÁ Á & 	 GÁK GÁĹA& FH € ]@ F @ GŔä LŔÁ Á€& 	 GL GÁĹÁ& FH   ]@ F @ L Á Á ' A' ]@ F @ G@ç LŔÁ Á  A FG Á ]@ F @ G@ç LŔÁ Á€' 	 GÁI GÁĹ
 FB  Ë€B
 AÂ' ( äA€]@€F @ G@ç LŔÁ Á@( 	 GÁK GÁĹ FB 
 Ë€B
 AÂ' ( äA€]@€F @ G@ç LŔÁ Á  Á FG Á ]@ F @ G@ç LŔÁ Á  A FG Á ]@ F @ G@ç LŔÁ ÁŔ  FAO  Á B A ]@€F @ G@ç LŔÁ Á@  FAO Á Á B A ]@€F @ L Á Á€( Á( ]@ F @ GŔč LŔÁ Á  A FG Á ]@ F @ GŔč LŔÁ Á ) 	 GÁI GÁĹ
 FH € ]@ F @ GŔč LŔÁ Á@) 	 GÁK GÁĹ FH € ]@ F @ GŔč LŔÁ Á  Á FG Á ]@ F @ GŔč LŔÁ Á  A FG Á ]@ F @ GŔč LŔÁ ÁŔ  FAO  Á B A ]@€F @ GŔč LŔÁ Á@  FAO Á Á B A ]@€F @ L Á Á€) Á) ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á * A* FH € ]@ F @ GŔé LŔÁ Á€* Á* FH € ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á + A+ FH € ]@ F @ GŔé LŔÁ Á€+ Á+ Fl ‹ ÁA,  A B, ¤A ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á€, Á, FH € ]@ F @ GŔé LŔÁ Á - A- Fl ‹ ÁA,  A B, ¤A ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á€- Á- FH € ]@ F @ GŔé LŔÁ Á . A. Fl ‹ ÁA,  A‚.  ¤A ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ ÁŔ. / FH € ]@ F @ L Á Á@/ / ]@ F @ G€ď LŔÁ Á  A FG Á ]@ F @ G€ď LŔÁ ÁŔ/ 0 FH   ]@ F @ G Ő L@đ Á  ]@€F @ G@Ý L@đ Á€ ]@€ € Â      MenuLux 
   scriptConfig    MasterSeries: Lux    Lux1    addSubMenu    [Lux]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Lux    addTS    [Lux]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    UPC    Use Passive In Combo    USEQ    Use     Q     (Q)    USEQ2    Cast If See 1 Collision    USEW    W     (W)    USEE    E     (E)    USER    R     (R)       @   No    Normal 	   Killable    Hit X    Have'Q'    Have'Q'&Killable    USERX    X =     SCRIPT_PARAM_SLICE        @      @           CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       9@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Lux]: Harras Settings 
   harrasConfig    Use Passive In Harass      €F@      I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Lux]: Items Settings 
   iteConfig    it    LoadToMenu    [Lux]: Shield Settings 
   shieldConfig    UAS    Enable Auto Shield    ASMP    Min. Mana % To Use Auto Shield    heroManager    iCount    GetHero    team 	   charName 
   Min. HP%        D@   [Lux]: Extra Settings 	   exConfig    ARF    Auto (R) If Can Hit X       @   AEF    Auto (E) If Can Hit X    [Lux]: Jungle Steal Settings 	   jsConfig 
   JSEnabled    Use Jungle Steal    H    JSB    Steal Baron With (R)    JSD    Steal Dragon With (R)    JSBL    Steal Blue With (R)    JSR    Steal Red With (R)    JST    Steal Team:    Enemy    My Team    Both    [Lux]: Anti-GapCloser Settings 	   gpConfig    ipairs    GetEnemyHeroes    pairs    GapCloserList 
   spellName    GapCloser     :  	   menuname    UG    Use GapCloser (Q)    [Lux]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    (Q)    EKS    (E)    RKS    (R)    [Lux]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    EF    [Lux]: Jungle Farm Settings    jf    QJF    EJF    [Lux]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color       i@   DRR    Draw R Range MiniMap    [Lux]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          5  R   	_   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡F@@ G€Ä GŔÄ [    €G€C [   @€G E [@  € €L@E Ç€C ]@€L€E ]@ LŔE ]@ L F ]@ F@F †€F ť € ]  €€[   €‡ÁF ›  @€†G ÇÁF  €ť€ÇAG ÇÇŔ@€†ÁG ŚHBH ť€‡HŔH€ €†I ĆAH ťA b€  ă€ů € %      CheckOB    MenuLux    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    comboConfig    CRKD    recall    CastR    StealJungle    Auto    AutoShield    pairs    GetEnemyHeroes    eobject    GetDistance    E    width    myHero 
   GetSpellData    _E    name    LuxLightstrikeToggle 
   CastSpell                          T  •   X  F @ ]€€ [   €T€G@@ [@  ŔS€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€@ ‡Ŕ@ ]€ [    €F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@C@ @€F€A G Ă G€Ă [    €F€@ ‡Ŕ@ ÁŔ ]€€[   € €L D Ć B ]@€F€@ ‡Ŕ@ ]€ [   Ŕ€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@D@  €F€A G Ă G€Ä [   €€FŔD ‡Ŕ@ ]€ † B ‡ EŤ@E€€ €€F€E Ŕ ÇŔ@ ]€€[     € 
€F€A G Ă G Ć [   Ŕ€F€A G Ă G@Ć [@  €€FŔD ‡Ŕ@ ]€ ‡€F ‡ E€€ Ŕ €LŔF ÇŔ@ ]@€Ŕ€F€A G Ă G Ć [   €€F€A G Ă G@Ć [   @€FŔD ‡Ŕ@ ]€ ‡€F ‡ E€€ € €L G ÇŔ@ ]@€F€@ ‡@G ]€ [   @€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡€G@ €€F€A G Ă G€Ä [   €€FŔD ‡@G ]€ † B ‡ EŤ@E€€ €€F€E Ŕ Ç@G ]€€[     €€€F€A G Ă GŔÇ [   @€FŔD ‡@G ]€ ‡ H ‡ E€€ € €L@H Ç@G ]@€F€@ ‡€H ]€ [   @(€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ŔH@ €%€F€A G Ă G€Ä [   €€FŔD ‡€H ]€ † B ‡ EŤ@E€€ €€F€E Ŕ Ç€H ]€€[     €€ €G I G@É ]€€ [   @€FŔD ‡€H ]€ ‡ I ‡ E€€ €€F€@ ‡€H ]€ [   @€F€A G Ă G€É ŔÉ € €L J Ç€H ]@€F€A G Ă G€É @Ę Ŕ€G€H G€Ę †ŔJ ‡ KÇ€H Ç@Ëť€ M€€ Ś€K H ť€€€€ € €L J Ç€H ]@€F€A G Ă G€É ŔË €	€F L †@L ť € ]  Ŕ€†L ŚÁL €GI GÍ‡I ‡BMÇI ÇĹI MFB ťA†‚@ Ŕ€ť‚ ›  @€XŔMŔ€†‚A ‡C‡N €€Ŕ“ €†BN Ć‚N ĂNGOťB b€  ă@÷F€A G Ă G€É @Ď  €F€E € Ç€H ]€€[   € €L J Ç€H ]@€F€A G Ă G€É ŔĎ @€G€H G€Ę †ŔJ ‡ KÇ€H Ç@Ëť€ M€€ Ś€K H ť€€€€  €F€E € Ç€H ]€€[   € €L J Ç€H ]@€ € @      ComboActive    recall    ValidTarget    QCel    it 
   CastItems    MenuLux 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    WMANA    USEW      @@   CastW    QMANA    UPC    GetDistance    range      @P@   TargetHaveBuff2    luxilluminatingfraulein    USEQ    USEQ2    Q    CastQ    CastQ2    ECel    EMANA    USEE    E    CastE    RCel    RMANA    R    Ready    USER        @   CastR       @   health    math    floor    shield    CalcDMG       @   pairs    GetEnemyHeroes    VP    GetLineAOECastPosition    delay    width    speed     USERX 
   CastSpell    _R    x    z       @   LuxLightBindingMis       @                         —  Ş   s   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€F@A ‡€A ]€ [   @€FŔA G Â †ŔA ‡@BP€€ O€Â † @ ‡@@‡ŔB@ €€F @ G@Ŕ G Ă [   €€F@C ‡€A ]€ †ŔA ‡€CŤŔC€€ €€F D @ Ç€A ]€€[     €€€F @ G@Ŕ G€Ä [   @€F@C ‡€A ]€ ‡ŔD ‡€C€€ € €L E Ç€A ]@€F@A ‡@E ]€ [   @€FŔA G Â †ŔA ‡@BP€€ O€Â † @ ‡@@‡€E@ €€F @ G@Ŕ G Ă [   €€F@C ‡@E ]€ †ŔA ‡€CŤŔC€€ €€F D @ Ç@E ]€€[     €€€F @ G@Ŕ GŔĹ [   @€F@C ‡@E ]€ ‡ F ‡€C€€ € €L@F Ç@E ]@€ €       MenuLux 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    myHero    mana    maxMana       Y@   QMANA    UPC    GetDistance    range      @P@   TargetHaveBuff2    luxilluminatingfraulein    USEQ    Q    CastQ    ECel    EMANA    USEE    E    CastE                          ¬  Ő   Í   F @ ]€€ [   Ŕ1€G@@ [@   1€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ  -€€Â Ŕ€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚ €X Ä@€BD @€‚ G‚D GÂÄ@€€E €€B€€
€@Ĺ  
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@
€X ÄŔ	€BD @€‚ G‚D GÂÄ@ €‚E ÂE€€ĆF Ý‚€ ĐBĆ‚ FÂB L‚ĆŔ€ĂB ĂF†G €CGŹ
ĂGFĂB GČ
CFĂB GČ†ĂB ‡CHOOČ
C]‚ @€ €ŚE  €ťB€€BŔ	€ÂB CFÂB GBĂB‚CFA GBÁGÂČ ‚ €I GBI GÂÄ‡BI ‡‚IÇ‚@ ÇBÂÂ X D@€@…Ŕ€†ÂB ŚÂFĂI ť‚€‡J@J €†‚J ĆÂI ĂJGKťB †BK ĺ   ťB€@€@EŔ
€ÂB CFÂB GBĂB‚CFA GBÁGÂČ ‚ €X Ä€
€BD @€‚ GBI GÂÄ@Ŕ€‚E ÂE€€ĆF Ý‚€ ĐBĆ‚ FÂB L‚ĆŔ€ĂB ĂF†ĂI €CG—
LFĂB GČ
CFĂB GČ†ĂB ‡CHOOCĚ
C]‚ @@€Ś‚L  €ťB€†‚J ĆÂI ťB â€  cŇ € 3      FarmActive    recall 
   EnemyMinions    update    MenuLux    farm    QF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    CastQ        @   VP    GetPredictedHealth    GetLatency      @Ź@   CalcMagicDamage 
   GetSpellData    _Q    level       I@      $@   ap 
   apPercent ffffffć?   EMANA    GetBestCircleFarmPosition    E    width    _E    name    LuxLightStrikeKugel 
   CastSpell    x    z    DelayAction       ŕ?     €F@      .@333333ă?   CastE    Ä  Č        @ @@ †€@ €€Ŕ@  A € €@A F€@ @  €       myHero 
   GetSpellData    _E    name    LuxLightstrikeToggle 
   CastSpell                                               ×  í   X   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›   	€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€@€†C ÇÁC ÇÄÂC BDG‚@ GBÁťÁ X€DŔ€BB ÂD†E ‚€BE€E €ÂE FE ‡FÇBFB ‚F e  Â B€†A ‡ÁA‡G›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAÇ€Ŕ€X€Ä@€†G Ŕ€ť ÇÁG ÇÄŔ€ €ŚH  €ťA€b€  ăŔí € !      FarmActive    recall    JungleMinions    update    pairs    objects    MenuLux    jf    EJF    myHero    mana    maxMana       Y@   EMANA    GetBestCircleFarmPosition    E    range    width  
   GetSpellData    _E    name    LuxLightStrikeKugel 
   CastSpell    x    z    DelayAction       ŕ?   QJF    QMANA    GetDistance    Q    CastQ    ŕ  ä        @ @@ †€@ €€Ŕ@  A € €@A F€@ @  €       myHero 
   GetSpellData    _E    name    LuxLightstrikeToggle 
   CastSpell                                               ď  2   ă   G @ L@Ŕ ]@ F€@ GŔŔ G Á [   @6€F€@ GŔŔ G@Á [    €F€A ‡ @ ‡ŔA] @€†@ ‡Á@‡B@BŔ€‡ÂXŔB€ €‡Â C€€@† €†@ ‡Á@‡B€C@€†ÁC ‡D@D €‡ÂŔB@ €@†€€†ÁC ‡D€D€€‡Â CŔ€@†@€†@ ‡Á@‡BŔD €†ÁC ‡D@D €‡Â C@ €@†Ŕ€†ÁC ‡D€DŔ €‡ÂŔB  €@†b€  ăŔđF€@ GŔŔ G Ĺ [    €F€A ‡ @ ‡ŔA] @€†@ ‡Á@‡B@BŔ€‡ÂX@E€ €‡Â€E€€@† €†@ ‡Á@‡B€C@€†ÁC ‡D@D €‡Â@E@ €@†€€†ÁC ‡D€D€€‡Â€EŔ€@†@€†@ ‡Á@‡BŔD €†ÁC ‡D@D €‡Â€E@ €@†Ŕ€†ÁC ‡D€DŔ €‡Â@E  €@†b€  ăŔđF€@ GŔŔ GŔĹ [   €€F€A ‡ @ ‡ŔA] Ŕ €‡Â F  €@†b€  ă@ţF€@ GŔŔ G@Ć [   €€F€A ‡ @ ‡ŔA] Ŕ €‡Â€F  €@†b€  ă@ţF@C [   €
€FŔF †@C Ç G Ç@Ç]€€[   Ŕ€F€G LŔÇ Ć@C Á A ]€€†ŔC Ś@HAC FÁC LČĆÁH ]€GÉOAMÄ†ÁC ‡AIM†ÁC ‡AIĆÁC ÇÉŹÁŹÁIMť€ €€ €€Ć J ÁH FAC GAĘ†AC ‡JÝ@  € +   
   KSMinions    update    MenuLux 	   jsConfig 
   JSEnabled    JSR    pairs    objects    JST       @   name 
   SRU_Red4.1.1    SRU_Red10.1.1    monster        @   myHero    team       Y@      i@      đ?   JSBL    SRU_Blue1.1.1    SRU_Blue7.1.1    JSD    SRU_Dragon6.1.1    JSB    SRU_Baron12.1.1    ValidTarget    R    range    VP    GetPredictedHealth            CalcMagicDamage 
   GetSpellData    _R    level    ap 
   apPercent       č?
   CastSpell    x    z                          4  G   j   F @ †@@ ť € ]  @€†@ ‡Á@‡A€‚Ŕ
€‡A ‡ÁAť€ ›  €	€†B Ŕ€ť ›  @€†AB Ŕ€ť ÇA ÇÂŔ€€†ÁB ŚC €G‚A GBĂ‡‚A ‡‚CÇ‚A Ç‚ÂA ĂCFD ťAX@DŔ€†‚@ ‡Â@‡A €€Ŕ‰ €†ÂD ĆE CEGEťB †@ ‡Á@‡ÁE€‚Ŕ
€‡F ‡ÁAť€ ›  €	€†B Ŕ€ť ›  @€†AB Ŕ€ť ÇF ÇÂŔ€€†ÁB ŚAF €GF GBĂ‡F ‡‚CÇF Ç‚ÂF ĂCFD ťAX@DŔ€†‚@ ‡Â@‡ÂE €€Ŕ‰ €†ÂD Ć‚F CEGEťB b€  ăŔć €       pairs    GetEnemyHeroes    MenuLux 	   exConfig    AEF            E    Ready    ValidTarget    GetDistance    range    VP    GetCircularAOECastPosition    delay    width    speed    myHero         @
   CastSpell    _E    x    z    ARF    R    GetLineAOECastPosition    _R                          I  O   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FÁA †ÁA ĆAB ÂA F‚A †ÂA Ć‚A CB FA †A ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuLux 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         Q  f   á   F @ †@@ ť € ]   6€†@ ‡Á@‡A›A  €€†@ ‡Á@‡AA›A  @€†@ ‡Á@‡A›A   €†@ ‡Á@‡ÁA›   1€†B Ŕ€BB ‚Bť€›  @/€XŔÂŔ.€‡C ›A   .€†AC ŚCÂ ť€ĆD ĚAÄ@€†D Ś‚DĂD ť‚€‡EŹ‚‚ŠŤ‚EĆD ÇÂĹŤÂĆD ÇÂĹD FĎĎBĆŤÂÝ D BD€€ĆD Ě‚ÄFF Ý‚€ÇĹĎÂ‚ŤÍÇD ĂEÍD ĂEFD GĆCCGÍ‚ FD LBÄŔ€D D†G €EŹ
HFD GĂĹ
CFD GĂĹ†D ‡FOOCČ
C]‚ †D ‡EŹ‚‘Ť‚‚ŠÇÂČI CIGÉ ÍŔ €ÇÂI Ç‚ĂÝ‚€ Ű  Ŕ€ĆJ  €Ý‚ ĂI B  €Ć‚@ ÇÂŔÇÁŰ  Ŕ €ĚBJ @€ÝB€ €ÇÂČI CIGÉ Í ‚ €Ç‚J Ç‚ĂÝ‚€ Ű  Ŕ€ĆJ  €Ý‚ J B  €Ć‚@ ÇÂŔÇBÁŰ  Ŕ €ĚÂJ @€ÝB€Ŕ
€ÇÂČI CIGÉ Í@‚ €ÇBB Ç‚ĂÝ‚€ Ű  Ŕ€ĆJ  €Ý‚ CB B  €Ć‚@ ÇÂŔÇ‚ÁŰ  Ŕ €ĚK @€ÝB€€€ÇÂČI CIGÉ Í€‚€€›   €ĆJ  €Ý‚ @ËŔ€Ć‚@ ÇÂŔÇÂÁŰ  €€Ć‚K CC ĂKĂ €@€ÝB€b€  ă É € 0      pairs    GetEnemyHeroes    MenuLux 	   ksConfig    QKS    EKS    RKS    IKS    ValidTarget    R    range     recall    SSpells    Ready    summonerdot    myHero    CalcMagicDamage 
   GetSpellData    _Q    level       I@      $@   ap 
   apPercent ffffffć?   _E      €F@      .@333333ă?   _R       Y@      i@      č?      4@   health    math    floor    shield    Q    GetDistance    CastQ    E    CastE    CastR      Ŕ‚@
   CastSpell    GetSlot                          h  s   X   ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € ť€ ›    €†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   @€Ű   Ŕ€FAB € ] ‡@ ‡B€ €FÁB €€ ĆB @ ‚AG@ G‚Â‡C ] [A  @€FAC †C ÇÁCD]A  € FAD †D ‡ÁD‡E‡AEŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A € Ă  ÄE FDF@A  †„D ‡ÄD	‡E	‡„F	]XŔĆ@ €›A    € € BC F‚C ‡ÂĂÇÄB  €       Q    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range    GetMinionCollisionM 
   EnemyMinions 
   CastSpell    _Q    x    z    GetPrediction2    MenuLux 	   spConfig    qConfig    QP    line    HP    Presets    Lux    QCH                           u     I   [   @€‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ ›   Ŕ€„   ĆŔ@  € FA ‡@ ‡AAÇ@ ÇÁÂA ÝŔ FB €€ ĆA @ BAG@ G‚Á]Á€Ő @ÂŔ€ĆB A GBBÝ€@ ‚AY ‚€€Ő @ÂŔ€ĆB A GBBÝ€@ ‚A ‚Ŕ€ĆÁB ĚĂ@€ ‡@ ‡BCÇ@ ÇBÁ@ AG@ GĂ†A ÝŰ   €†ÂC ĆD CÄGÄťB  €       Q    Ready    ValidTarget    GetMinionCollisionM    myHero    width    range 
   EnemyMinions    GetHeroCollisionM       đ?   GetDistance    VP    GetLineCastPosition    delay    speed 
   CastSpell    _Q    x    z                            ‡      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       W    Ready 
   CastSpell    _W    x    z                          ‰  ”   T   ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € ť€ ›    €†Ŕ@ Ś AAA ť€€‡€AŔA@€† B Ś@B € G@ GÂ‡@ ‡ÁBÇ@ ÇĂÂ@ ť ›   €€Ű    €FAC € ] ‡@ ‡C€@€FÁC †AA ÇDBD]A  € FD †ÁD ‡E‡AE‡EŔ€ @ ‚BG@ GÂÂ‡@ ‡‚CÇ@ ÇĂĂ@ AĂ   Ă€ F DF„F@A  †ÄD ‡E	‡DE	‡ÄF	]X Ç@ €›A    € € ÂC FBA ‡ÄÇBÄB  €       E    Ready    ValidTarget    myHero 
   GetSpellData    _E    name    LuxLightStrikeKugel    VP 
   IsDashing    delay    width    speed    GetDistance    range 
   CastSpell    x    z    GetPrediction2    MenuLux 	   spConfig    eConfig    EP    circle    HP    Presets    Lux    ECH                           –  ˇ   M   ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € ť€ ›   @€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă€ DE „EÄE@A  †D ‡DD	‡„D	‡F	]X@Ć@ €›A    € € ÂB FC ‡BĂÇ‚ĂB  €       R    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2    MenuLux 	   spConfig    rConfig    RP    line    HP    Presets    Lux    RCH                           Ł  ľ   
É   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@  F @ G@Ŕ G Ë [   @€F@K † I ‡@BĆ I Ç€ÂI ÁBGK GAÉ]@€ € /      MenuLux    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      @ź@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    DrawCircleMinimap    R                          Ŕ  ę   $  F @ †@@ ť € ]  ŔF€‡Ŕ›A   F€‡ÁŔ›  @E€†A ŚAA €FA L‚ÁĆÂA ]‚€GÂOB‚„M‚Â†A ‡ÂBM‚‚†A ‡ÂBĆA ÇĂŹÂŹBCM‚‚ť ĆA ĚAÁ@€†A Ś‚AC ť‚€‡BŹ‚‚‡ŤDĆA ÇÂÂŤÂĆA ÇÂÂA CĎĎBÄŤÂÝ A BA€€ĆA Ě‚ÁFD Ý‚€ÇÂĎÂ‚‰ÍĹA ĂBÍA ĂBFA GĂCCEÍ‚ FA GÂOB‹MB‚„‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍ‚ÍB‚€‚Ŕ €‡ÂF ÇÇŠBÇŔ0€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂ€Ŕ €‡ÂF ÇÇŠ‚ÇŔ-€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂŔŔ €‡ÂF ÇÇŠÂÇŔ*€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂ Ŕ €‡ÂF ÇÇŠČŔ'€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂ@Ŕ €‡ÂF ÇÇŠBČŔ$€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍBŔŔ €‡ÂF ÇÇŠ‚Č€!€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍB‚ŔŔ €‡ÂF ÇÇŠÂČ@€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍBŔŔ €‡ÂF ÇÇŠÉ €‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂŔŔ €‡ÂF ÇÇŠBÉŔ€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍŔŔ €‡ÂF ÇÇŠ‚É€€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍ‚ŔŔ €‡ÂF ÇÇŠÂÉ@€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍB‚ŔŔ €‡ÂF ÇÇŠĘŔ
€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÍB‚ŔŔ €‡ÂF ÇÇŠBĘ@
€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍ‚ÍB‚ŔŔ €‡ÂF ÇÇŠ‚ĘŔ€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍ‚ŔŔ €‡ÂF ÇÇŠÂĘ@€‡ÂĹĆF ÇBĆĆÝ‚ ŤÂÍÂÍ‚ÍB‚Ŕ€ €‡ÂF ÇÇŠËb€  ă@¸ € -      pairs    GetEnemyHeroes    dead    visible    myHero    CalcMagicDamage 
   GetSpellData    _Q    level       I@      $@   ap 
   apPercent ffffffć?   _E      €F@      .@333333ă?   _R       Y@      i@      č?      4@   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill!    R Kill! 
   Ignite Kill!    Q+Ignite Kill!    E+Ignite Kill!    R+Ignite Kill! 
   Q+E Kill! 
   Q+R Kill! 
   E+R Kill!    Q+E+Ignite Kill!    Q+R+Ignite Kill!    E+R+Ignite Kill!    Q+E+R Kill!    Q+E+R+Ignite Kill!                          ě  ň   	]      Ç@@ Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAA‚A ť€‡ÁAŹ„ŤABĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎĂŤÁÝ€ Ű@    €Á   ŤŔ Ç@C Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAA‚C ť€‡ÁAŹ‡ŤDĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎAÄŤÁÝ€ Ű@    €Á   ŤŔ Ç€D Ç€ŔÝ€€ Ű   €€ĆŔ@ Ě Á@€ †Á@ ŚAAÂD ť€‡ÁAŹŠŤAEĆÁ@ ÇÂŤÁĆÁ@ ÇÂÂ@ ÂBĎ‚ĎĹŤÁÝ€ Ű@    €Á   ŤŔ ź   €               R    Ready    myHero    CalcMagicDamage 
   GetSpellData    _R    level       Y@      i@   ap 
   apPercent       č?   E    _E      €F@      .@333333ă?   Q    _Q       I@      $@ffffffć?                         ô  ř      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ú  ţ      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                                	q   A   †@@ ‡€@Á   a@€FA@ LÁŔŔ ]€[  €€‡ÁĆAA ÇÁŔ@€†A ‡ÁAÇÂ‡Á›  Ŕ€†A ‡ÁAÇÂ‡Á€„@€‡ÂÇÁÂÁŹCĆA ÇÁÁÂÇ‚€Ŕ€‡AC ÇĂ‡ÁŔC€ €‡AC ÇĂŠÄ†A ‡ÁA‡AD›  —Á€†D ›A  —€[  —
€‡ÁĆAA ÇÁŔ—A€†A ‡ÁAÇÂ‡Á›  —Á
€†A ‡ÁAÇÂ‡Á€„—A	€‡AC ÇĂ‡Á D—€‡ÂÇÁÂÁŹCĆA ÇÁÁÂÇ‚Ŕ—€†ÁD Ŕ€ť ÇE ÇAĹŔ—Á€†AA ‡EĆAA ÇÁĹÁŹCĆA ÇÁÁÇĆ€—€†AF ĺ  ‚ ťA€—Á˙` ĺ €          đ?   heroManager    iCount    GetHero    team    myHero    MenuLux 
   shieldConfig 	   charName            health 
   maxHealth       Y@
   shouldshield 
   networkID     UAS    recall    GetDistance    W    range    mana    maxMana    ASMP    DelayAction š™™™™™É?   
  
    	    @ F@@ †€Ŕ ĆŔŔ @  AF@Á 
€Á  €    
   CastSpell    _W    x    z 
   shouldshield 
   networkID                                                   '   r   Ć @ Ç@ŔÇ€ŔŰ   Ŕ€ÇŔ@ Ç ÁÝ€€ Ű   €€Ć@A A Ý  €[   €€ÂÁ FB GÂÁX@@€BÂ FB GBÂ@ €›   €€‚BGÂÂ@€€@ B@GÂÂB   €C @€ ‡Â@ ‡BCŽ‚C‚€   €ÂC  Ŕ€ÂCD  Ŕ €BD €€ B€@
€ÂCB  €€‚D @€ ‚ F‚D ‡ÂD]‚ †‚D Ŕ€ ť‚ N‚‚LĹ]‚ OB‚Š
BF‚D €€ ]‚ †‚D ÇÂDť‚ Ć‚D  € Ý‚ ŽÂŚEť‚ Ź‚‹M‚‚†ÂE ĆB  € ť‚€ĆÂE B @ Ý‚€Y€‚@€†ÂE ĆB  € ť‚€ĆÂE B @€Ý‚€€‚€ €ŚBD  € ťB€â€  cç €       MenuLux 	   gpConfig    UG    Q    Ready    pairs    GapCloserList    team    myHero    type    name 
   spellName    ValidTarget    range       >@   target    isMe    CastQ    Vector    endPos    normalized      Ŕr@      Y@   GetDistanceSqr                          )  -      [   Ŕ€‡ Ŕ ›    €‡@Ŕ Ś€@Á  ť€€›   €€‡@Ŕ Ś€@ ť€€›     €
@€‚ €       valid    name    find    Lux    E_mis.troy    eobject                         /  3      [   Ŕ€‡ Ŕ ›    €‡@Ŕ Ś€@Á  ť€€›   €€‡@Ŕ Ś€@ ť€€›     €
€Á‚ €       valid    name    find    Lux    E_mis.troy    eobject                          5  O   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuLux    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Y  €   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    _  _           @ @  €       AfterAA                         b  b           @ @  €    	   BeforeAA                         i  i           @ @  €       AfterAA                         l  l           @ @  €    	   BeforeAA                         r  r        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    r  r           @ @  €       AfterAA                                               u  u           @ @  €    	   BeforeAA                         z  z           @ @  €       AfterAA                         }  }           @ @  €    	   BeforeAA                              	
                ‚  ć   ň  
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K@ J@Ä‚J€Ä†ŔD ‡ EJ€€„J Ă…Ą@  J€€‡
@ KŔ  J€Ĺ‚JŔĹĄ€  J€€‡
@€ŠKŔ  J@Ć‚J€ĆĄŔ  J€€‡
@ ŚC      Ă   
ŔGŹ
Ŕ€Ž
€ Ž
@€ŤA@	 @	 Á@	 A	 
@I’
 ‘
Ŕ ‘
€€
@ FŔI † J Ç A ÇŔÁAJ FJ ]€€
@ “FŔI † K Ç A ÇŔÁAJ FJ ]€€
@€•D   
@@—
@€–K   
@€—K  †@L Ć€L ÁL FM d@ 
@ K    Á  A A d@ 
@€šFŔ@ †ŔM Á  AN C  ]€€
@ ›K€ ‹Ŕ  Š@OžŠ FźŠ ĐźJ€€ť‹Ŕ  Š€PžŠ FźŠŔĐźJ€€ ‹Ŕ  Š@QžŠ FźŠ ĐźJ€ ˘‹Ŕ  ŠŔQžŠ FźŠ ĐźJ€ Ł‹Ŕ  Š@RžŠ FźŠŔĐźJ€ ¤‹Ŕ  ŠŔRžŠ FźŠ ĐźJ€ Ą‹Ŕ  Š@SžŠ FźŠ ĐźJ€ ¦‹Ŕ  ŠŔSžŠ FźŠŔĐźJ€ §‹Ŕ  Š@TžŠ FźŠ ĐźJ€ ¨‹Ŕ  ŠŔTžŠ FźŠŔĐźJ€ ©‹Ŕ  Š@UžŠ FźŠ ĐźJ€ Ş‹Ŕ  ŠŔUžŠ FźŠŔĐźJ€ «‹Ŕ  Š@VžŠ FźŠ ĐźJ€ ¬‹Ŕ  ŠŔVžŠ FźŠŔĐźJ€ ­‹Ŕ  Š@WžŠ FźŠŔĐźJ€ ®‹Ŕ  ŠŔWžŠ FźŠŔĐźJ€ Ż‹Ŕ  Š@XžŠ FźŠ ĐźJ€ °‹Ŕ  ŠŔXžŠ FźŠ ĐźJ€ ±‹Ŕ  Š@YžŠ FźŠ ĐźJ€ ˛‹Ŕ  ŠŔYžŠ FźŠŔĐźJ€ ł‹Ŕ  Š@ZžŠ FźŠ ĐźJ€ ´‹Ŕ  ŠŔZžŠ FźŠ ĐźJ€ µ‹Ŕ  Š@[žŠ FźŠ ĐźJ€ ¶‹Ŕ  ŠŔ[žŠ FźŠŔĐźJ€ ·‹Ŕ  Š@\žŠ FźŠ ĐźJ€ ¸‹Ŕ  ŠŔ\žŠ FźŠ ĐźJ€ ą‹Ŕ  Š@]žŠ FźŠ ĐźJ€ ş‹Ŕ  ŠŔ]žŠ FźŠ ĐźJ€ »‹Ŕ  Š@^žŠ FźŠ ĐźJ€ Ľ‹Ŕ  ŠŔ^žŠ FźŠ ĐźJ€ ˝‹Ŕ  Š@_žŠ FźŠ ĐźJ€ ľ‹Ŕ  ŠŔ_žŠ FźŠ ĐźJ€ ż‹Ŕ  Š@`žŠ FźŠ ĐźJ€ Ŕ‹Ŕ  ŠŔ`žŠ FźŠ ĐźJ€ Á‹Ŕ  Š@ažŠ FźŠ ĐźJ€ Â‹Ŕ  ŠŔažŠ FźŠ ĐźJ€ Ă‹Ŕ  Š@bžŠ FźŠŔĐźJ€ Ä‹Ŕ  ŠŔbžŠ FźŠ ĐźJ€ Ĺ‹Ŕ  Š@cžŠ FźŠ ĐźJ€ Ć‹Ŕ  ŠŔcžŠ FźŠ ĐźJ€ Ç‹Ŕ  Š@džŠ FźŠ ĐźJ€ Č‹Ŕ  ŠŔdžŠ FźŠ ĐźJ€ É‹Ŕ  Š@ežŠ FźŠŔĐźJ€ Ę‹Ŕ  ŠŔežŠ FźŠ ĐźJ€ Ë‹Ŕ  Š@fžŠ FźŠ ĐźJ€ Ě‹Ŕ  ŠŔfžŠ FźŠŔĐźJ€ Í‹Ŕ  Š@gžŠ FźŠ ĐźJ€ Î‹Ŕ  ŠŔgžŠ FźŠ ĐźJ€ Ď‹Ŕ  Š@hžŠ FźŠŔĐźJ€ Đ‹Ŕ  ŠŔhžŠ FźŠ ĐźJ€ Ń‹Ŕ  Š@ižŠ FźŠ ĐźJ€ Ň‹Ŕ  ŠŔižŠ FźŠ ĐźJ€ Ó‹Ŕ  Š@jžŠ FźŠ ĐźJ€ Ô‹Ŕ  ŠŔjžŠ FźŠ ĐźJ€ Ő‹Ŕ  Š@kžŠ FźŠ ĐźJ€ Ö‹Ŕ  ŠŔkžŠ FźŠ ĐźJ€ ×‹Ŕ  Š@lžŠ FźŠŔĐźJ€ Ř‹Ŕ  ŠŔlžŠ FźŠ ĐźJ€ Ů‹Ŕ  Š@mžŠ FźŠ ĐźJ€ Ú‹Ŕ  ŠŔmžŠ FźŠŔĐźJ€ Ű‹Ŕ  Š@nžŠ FźŠ ĐźJ€ Ü‹Ŕ  ŠŔnžŠ FźŠ ĐźJ€ Ý‹Ŕ  Š@ožŠ FźŠŔĐźJ€ Ţ‹Ŕ  ŠŔožŠ FźŠŔĐźJ€ ß‹Ŕ  Š@pžŠ FźŠŔĐźJ€ ŕ‹Ŕ  ŠŔpžŠ FźŠ ĐźJ€ á‹Ŕ  Š@qžŠ FźŠŔĐźJ€ â‹Ŕ  ŠŔqžŠ FźŠ ĐźJ€ ă‹Ŕ  Š@ržŠ FźŠŔĐźJ€ ä‹Ŕ  ŠŔržŠ FźŠ ĐźJ€ ĺ‹Ŕ  Š@sžŠ FźŠ ĐźJ€ ć‹Ŕ  ŠŔsžŠ FźŠŔĐźJ€ ç‹Ŕ  Š@tžŠ FźŠ ĐźJ€ č‹Ŕ  Š@tžŠ FźŠ ĐźJ€ é‹Ŕ  Š užŠ FźŠŔĐźJ€€é‹Ŕ  Š€užŠ FźŠ ĐźJ€€ę‹Ŕ  Š vžŠ FźŠ ĐźJ€€ë‹Ŕ  Š€vžŠ FźŠŔĐźJ€€ě‹Ŕ  Š wžŠ FźŠ ĐźJ€€í‹Ŕ  Š€wžŠ FźŠ ĐźJ€€î
@ ťF x ]€€ 
@€ď € á      SelectedTarget     Cel    TargetSelector    Q    name    Razor Shuriken    range       Ś@   speed      š@   delay       Đ?   width       H@   Ready    W    Living Shadow      ŕ…@   math    huge    E 
   Shadow Slash       r@   R    Death Mark      @	   DeadMark    recall    WCasted    RCasted     idmg    qdmg    edmg    rdmg    qdmg2         
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    WShadow    RShadow    killstring    Spells    _Q    _W    _E    _R    Spells2    TargetSelectorH    TARGET_LESS_CAST_PRIORITY       ™@   DAMAGE_PHYSICAL    interputtspells    AhriTumble 	   charName    Ahri 
   spellSlot 
   SpellType 
   skillshot    AkaliShadowDance    Akali    castcel    CurseoftheSadMummy    Amumu 
   GlacialStorm    Anivia    InfernalGuardian    Annie    EnchantedCrystalArrow    Ashe    StaticField    Blitzcrank    BrandWildfire    Brand    BraumR    Braum    CaitlynAceintheHole    Caitlyn    CassiopeiaPetrifyingGaze    Cassiopeia    Feast    Chogath    MissileBarrage    Corki    DariusExecute    Darius    DianaTeleport    Diana    DravenRCast    Draven 	   EvelynnR    Evelynn    EzrealTruehotBarrage    Ezreal 
   Crowstorm 
   FiddleSticks    FioraDance    Fiora    FizzMarinerDoom    Fizz    GalioIdolOfDurand    Galio    CannonBarrage 
   Gangplank    GarenR    Garen 	   GnarBigR    Gnar    GragasExplosiveCask    Gragas    GravesChargeShot    Graves    HecarimUlt    Hecarim    IreliaTranscendentBlades    Irelia    JarvanIVCataclysm 	   JarvanIV 
   JinxRWrapper    Jinx 
   FallenOne    Karthus 	   RiftWalk 	   Kassadin 
   KatarinaR 	   Katarina    KennenShurikenStorm     Kennen    KogMawLivingArtillery    KogMaw    BlindMonkRKick    LeeSin    LeonaSolarFlare    Leona    LissandraR 
   Lissandra    LucianR    Lucian    LuxMaliceCannon    Lux    UFSlash 	   Malphite    AlZaharNetherGrasp 	   Malzahar 
   MaokaiDrain3    Maokai    MissFortuneBulletTime    MissFortune    MordekaiserChildrenOfTheGrave    Mordekaiser 
   SoulShackles    Morgana    NamiR    Nami    NautilusGandLine 	   Nautilus 
   AbsoluteZero    Nunu    OrianaDetonateCommand    Orianna 	   Tremors2    Rammus    rivenizunablade    Riven    RumbleCarpetBomb    Rumble    SejuaniGlacialPrisonStart    Sejuani    ShyvanaTransformCast    Shyvana    SkarnerImpale    Skarner    SonaCrescendo    Sona    SwainMetamorphism    Swain    SyndraR    Syndra    TaricHammerSmash    Taric 
   ThreshRPenta    Thresh    BusterShot 	   Tristana    TrundlePain    Trundle    UrgotSwap2    Urgot    VarusR    Varus    VeigarPrimordialBurst    Veigar    VelkozR    Velkoz    ViR    Vi    ViktorChaosStorm    Viktor    VladimirHemoplague 	   Vladimir    InfiniteDuress    Warwick    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave    XerathLocusOfPower2    Xerath 
   XenZhaoParry 	   Xin Zhao    YasuoRKnockUpComboW    Yasuo    zedult    Zed    ZiggsR    Ziggs    ZyraBrambleZone    Zyra    it 
   ItemsCast    †  †        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ‡  ‡        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                                    @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ‰  ‰        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               č  N   =  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ÇŔD Ç ĹAE C  ]€€
@€G@D JŔE‹F @ L Ć Ç@D ]@€F @ L Á Á@  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAH   ]@ F @ G€Ć LŔÁ Á€ Á FAH € ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ Á 	 A	 GI GĹÁ	 FAH € ]@ F @ G€Ć LŔÁ Á 
 A
 FAH € ]@ F @ G€Ć LŔÁ Á€
 Á
 FAH € ]@ F @ G€Ć LŔÁ Á  A FAH € ]@ F @ G€Ć LŔÁ Á€ Á FL A Á Â A‚ ]@€F @ G€Ć LŔÁ Á 
 A
 FAH € ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ  FAG  ]@ F @ G€Ć LŔÁ ÁŔ 
 FAG  ]@ AŔ †ŔM ‡ NÁŔ a €FÁM LAÎŔ ]€‡ÎĆÁN ÇÎXŔŔ€†@ ‡FŚÁAĎGĎ†BH Ă€ ťA `@űF@O † @ ÁŔ € C    Ă  ]@€F @ L Á Á€ Á ]@ F @ GŔĎ LŔÁ ÁŔ  FAG  ]@ F @ GŔĎ LŔÁ Á  A GÁD GĹ FAH € ]@ F @ GŔĎ LŔÁ Á 	 A GI GĹÁ	 FAH € ]@ F @ GŔĎ LŔÁ ÁŔ A GQ GĹA FAH € ]@ F @ GŔĎ LŔÁ ÁŔ  FAG  ]@ F @ GŔĎ LŔÁ ÁŔ  FAG  ]@ F @ GŔĎ LŔÁ Á€ Á FR   ĆAR ÇŇÂ Ý ]@  F @ GŔĎ LŔÁ Á  A FR   ĆAR ÇŇ‚ Ý ]@  F @ L Á ÁŔ  ]@ F @ G Ô LŔÁ ÁŔ  FAG  ]@ F @ G Ô LŔÁ Á@  FAH € ]@ F @ G Ô LŔÁ ÁŔ A GÁD GĹ FAH € ]@ F @ G Ô LŔÁ Á  A GQ GĹA FAH € ]@ F @ L Á Á@  ]@ GŔU L Ö Ć @ Ç€Ő]@€F @ L Á Á@  ]@ F @ G€Ö LŔÁ ÁŔ  FAG  ]@ F @ G€Ö LŔÁ ÁŔ A GÁD GĹ FB  Ë€B A‚ Â äA€]@€F @ G€Ö LŔÁ Á  A GI GĹÁ	 FB  Ë B AÂ äA ]@€F @ G€Ö LŔÁ Á@ A GQ GĹA FB  Ë€B A‚ Â äA€]@€F @ L Á ÁŔ  ]@ F @ G Ů LŔÁ ÁŔ  FAG  ]@ F @ G Ů LŔÁ Á@ A GÁD GĹ FAH € ]@ F @ G Ů LŔÁ Á€ A GI GĹÁ	 FAH € ]@ F @ G Ů LŔÁ ÁŔ A GQ GĹA FAH € ]@ F @ L Á Á  A ]@ F @ G@Ú LŔÁ ÁŔ  FAG  ]@ F€Z †ŔZ ť € ]  Ŕ€†Z Ç[ ť@€ÇB[ Ű€ €EÇŰ  @€Ć@ ÇBÚĚÂÁFĂ[ ŚŰ  ť€‡E]  ĆĂ[ ĎÝ D FÄ[ ‡„\ ‡D	]„ –CĆCH € ÝB ˘  #Â÷b€  ă@öF @ G@Ú LŔÁ ÁŔ  FAG  ]@ F @ G@Ú LŔÁ ÁŔ  FAG  ]@ F @ G@Ú LŔÁ ÁŔ  FAH € ]@ F @ L Á Á@  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAH € ]@ F @ G€Ý LŔÁ Á@  FAH € ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAH € ]@ F @ G€Ý LŔÁ Á@  FÁ_ ‹ Á  ‚ A‚   ¤A ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ Á@    FAH € ]@ F @ G€Ý LŔÁ ÁŔ  ! FÁ_ ‹ Á  ‚ A‚   ¤A ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ Á@! ! FAH € ]@ F @ G€Ý LŔÁ ÁŔ! " FÁ_ ‹ Á    A‚ ‚ ¤A ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ Á@" " FAH € ]@ F @ G€Ý LŔÁ ÁŔ" # FÁ_ ‹ Á  ‚ A  ‚ ¤A ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ Á@# # FAH € ]@ F @ G€Ý LŔÁ ÁŔ# $ FÁ_ ‹ Á  ‚ A  ‚ ¤A ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ ÁŔ  FAG  ]@ F @ G€Ý LŔÁ Á@$ $ FAH € ]@ F @ G€Ý LŔÁ ÁŔ$ % FÁ_ ‹ Á  ‚ A  ‚ ¤A ]@ F @ L Á Á@% % ]@ F @ G€ĺ LŔÁ ÁŔ  FAG  ]@ F @ G€ĺ LŔÁ ÁŔ% & FAH   ]@ F @ G€ĺ LŔÁ Á@& & FÁf   ĆAR ÇŇ' Ý ]@  F @ GŔĎ L@ç Á  ]@€F @ G@Ú L@ç ÁŔ ]@€ € ž      MenuZed 
   scriptConfig    MasterSeries: Zed    Zed1    addSubMenu    [Zed]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    Q    range    DAMAGE_PHYSICAL    name    Zed    addTS    [Zed]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    IAU    Use Items After ULT    USEW    Enable     W     (W)    USW    Use W Swap To Get Closer    UWC    Don't Use W When Can Cast ULT    DW +   Dash With W If Distance To Enemy > R Range    RHP    Swap With ULT If HP < %    SCRIPT_PARAM_SLICE       .@              Y@   RS '   Swap With R If Target Can Dead By Mark    Use Ultimate On:    heroManager    iCount    GetHero    team    myHero 	   charName 
   AddSpellMenu    [Zed]: Harras Settings 
   harrasConfig    USEQ    Use      (Q)    USEE    E     (E)    HMW !   Use Only If Target Is In W Range    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    T 
   HTEnabled    Harass Toggle Key    L    [Zed]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    [Zed]: Items Settings 
   iteConfig    it    LoadToMenu    [Zed]: Farm Settings    farm    QF        @   No 	   Freezing 
   LaneClear    WF    EF       @   [Zed]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Zed]: Evade Settings 	   exConfig    pairs    GetEnemyHeroes    Spells    interputtspells 
   GetSpellData 	   tostring    Dodge      Spell     Spells2    UIS    Enable    [Zed]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DHR    Draw Harass Max Range    DHRC    Draw Harass Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    DS 
   Draw Shadows    DSC    Draw Shadows Color    [Zed]: Misc Settings 	   prConfig    ALS    Auto lvl skills    EE    Escape    SCRIPT_PARAM_ONKEYDOWN    J 
   permaShow                          P  q      F @ †@@ ]@ G€@ LŔŔ ]@ G€@ G@Á 
@ ‚G€A XŔÁ @€F B ‡€A Ç@B Ç€Â]€€[   € €G€A 
@€…@€G@B LŔŔ ]@ G@B G@Á 
@€…G C G@Ă ]€€ [    €G€C G@Ă ]€€ [   Ŕ€G@B ‡€C ‡€BÇ C Ç€ÂŤŔ J€ …@ €G@B JŔC…F@D L€Ä ĆŔD ]€€G Ĺ @ F@D L€Ä Ć€E ]€€G Ĺ @€ŠF@D L€Ä Ć F ]€€G Ĺ @€‹F@@ G@Ć G€Ć [    €GŔF [@  @€G G [   €€L@G ]€ €Ç € €FŔG † H ]@ F@@ G@Č G€Č [   @€G C G@Ă ]€€ [   €€LŔH ]€  É €€F@D †@I Ć€I ÇŔÉAD ÁIÎ 
 FI GAĘ†AD ‡AJNť€ Ś€Jť€ ŹŔJM€€ †ŔG Ć€E ÁÉ GAĘ ť@ LŔH ]€ X É € €FŔG †€E ]@ F@D L Ë Ć€I ÇŔÉI AJ]@  € -      CheckOB    MenuZed    TargetSelectorH    update    CelH    target    SelectedTarget     ValidTarget    TargetSelector    range    Cel    W    Ready    R       Ś@   QMana    myHero 
   GetSpellData    _Q    mana    WMana    _W    EMana    _E    comboConfig    RS    recall 	   DeadMark    RState        @
   CastSpell    _R 	   prConfig    EE    WState       đ?   Vector 	   mousePos    x            z    normalized      ŕ…@   MoveTo                          s  ˘   p  F @ ]€€ [    Z€G@@ X€Ŕ @Y€GŔ@ [@  €X€F A @ Ç@@ ]€€[   @€F A € Ç@@ ]€€[@  ŔS€FŔA ‡@@ ]€ [   Ŕ€G B G@Â ]€€ [   €€F€B GŔÂ † C Ć@C ŤŔ @ Ŕ€F€C ‡@@ ]€ ‡ B ‡ŔC€€ €€L D ]€ @Ä €€F€D GŔÄ ‡@@ ‡ EG€€ [   @€L@E Ç@@ ]@€@€F€C ‡@@ ]€ ‡ B ‡ŔCŤ€E@ @€F€C ‡@@ ]€ ŔĹ  €F€D GŔÄ G Ć [   Ŕ	€F€D GŔÄ G@Ć [   €€L D ]€ @Ä €€F€B †€F Ç@@ ÇŔĆB ÁFÎ  GA@ GAÇ†B ‡AGNť€ Ś€Gť€ ŹŔGM€€ Ś H  € ť@€†€D ‡ŔDÇ@@ Ç Ĺ‡Ŕ ›   € €Ś@E A@ ť@€F€D GŔÄ G@Ć [   €
€F€D GŔÄ G@Č [   @€F A € Ç@@ ]€€[   Ŕ
€F€B GŔÂ †ŔH Ć C ŤŔ @ €€F€C ‡@@ ]€ ‡ I ‡ŔCY€€  €F€B GŔÂ †ŔH Ć@C ŤŔ @ €€F€C ‡@@ ]€ ‡@I ‡ŔCÇ€I ÇŔĂŤŔ €€  €F€B †€F Ç@@ ť€ Ć€B ŽŔ Ś€Gť€ ŹŔIN€€ Ś H  € ť@€F€D GŔÄ G@Ć [   €€F€D GŔÄ G@Č [   @€F€B L Ę Ć@J ]€€G€Ę X Ç  €F€B L Ę Ć@J ]€€G€Ę Z@€@€F€B LŔĘ Ć@J ]€€† K X€€ €€F€B LŔĘ Ć@J ]€€†@K €€ @€F€B GŔÂ †ŔH Ć C ŤŔ @ €€F€C ‡@@ ]€ ‡ I ‡ŔCY€€  €F€B GŔÂ †ŔH Ć@C ŤŔ @  €F€C ‡@@ ]€ ‡@I ‡ŔCÇ€I ÇŔĂŤŔ €€ € €L H Ç@@ ]@€F€D GŔÄ G@Ć [   €	€F€D GŔÄ G@Č [@  @€F€B GŔÂ †ŔH Ć C ŤŔ @ €€F€C ‡@@ ]€ ‡ I ‡ŔCY€€  €F€B GŔÂ †ŔH Ć@C ŤŔ @  €F€C ‡@@ ]€ ‡@I ‡ŔCÇ€I ÇŔĂŤŔ €€ € €L H Ç@@ ]@€L€K Ç@@ ]@€F€B LŔĘ Ć@J ]€€† K X€€ €€F€B LŔĘ Ć@J ]€€†@K X€€ Ŕ €L D ]€ X@Ä € €LŔK Ç@@ ]@€F€D GŔÄ G Ě [@  Ŕ€FŔA ‡@@ ]€ [   €€G@L L€Ě Ç@@ D ÁL]@ @€F€D GŔÄ G Ě [    €FŔA ‡@@ ]€ [   Ŕ€F A € Ç@@ ]€€[   @€G@L L€Ě Ç@@ D ÁL]@ F€D GŔÄ G Í [   @ €L@M ]@ L€M ]@  € 7      ComboActive    Cel     recall    TargetHaveBuff2    JudicatorIntervention 
   Undying Rage    ValidTarget    R    Ready    myHero    mana    QMana    EMana    GetDistance    range    RState       đ?   MenuZed    comboConfig 	   charName    CastR       N@     P”@   DW    USEW    Vector    x            z    normalized      ŕ…@   CastW    UWC    zedrtargetmark    WMana    Q    W    E       y@
   GetSpellData    _R    level    CanUseSpell    NOTLEARNED 	   COOLDOWN    CastE    CastQ    IAU    it 
   CastItems 
   iteConfig    USW    Swap    SwapR                          ¤  Ż   !   G @ [    €F@@ ‡€@ Ç @ ]€€†@@ Ç€@ ť€ €€Ŕ€[   @€†@@ Ç€@ A ť€€€€ Ŕ€‡@A ‡€Ať€€ ›   €€ŚŔA ť€  B€ €†@B Ć€B ť@  €       WShadow    GetDistance    Cel      ŕu@   myHero    W    Ready    WState        @
   CastSpell    _W                          ±  µ      L @ ]€ @Ŕ @€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ B€€ € €F@B †€B ]@  €       RState        @   myHero    health 
   maxHealth       Y@   MenuZed    comboConfig    RHP 
   CastSpell    _R                          ·     (  F @ G@Ŕ G€Ŕ † @ ‡@@‡Ŕ@Ć @ Ç@ŔÇ ÁAA FA ]€  €…€F@ GBŔGÂÁ[  @B€FB € ÇBB Ç‚Â]‚€[  €‚€F@ GBŔGÂÂ[B  Ŕ €FC ]‚€ [  @€€GBC [B  €€[   @€›@  Ŕ€Ű   @€L‚C Ŕ ]B€LÂC Ŕ ]B€[@  Ŕ€›@  @€Ű   Ŕ€FD GBÄ†‚D @€ €LÂC Ŕ ]B€[   €€›@   €Ű@  €€FD GBÄ†ÂD @@€FB € ÇE Ç‚Â]‚€[  € €L‚C Ŕ ]B€[   €€›    €Ű@  €€FB € ]‚ [  @
€GE GBĹ]‚€ [   €GBB GBĹ]‚€ [  Ŕ
€FD GBÄ†ÂD Ć‚E ŤÂ@ 	€FÂE € ĆD ]‚€‡E ‡‚B@ €FÂE € ĆD ]‚€ Ć€€FD †BF Ç‚FD FÎĂ GG†D ‡GNť‚ ŚBGť‚ Ź‚GM‚‚ŚÂG  €ťB€Ś‚C   ťB€Ŕ€GE GBĹ]‚€ [  €€FD GBÄ†ÂD @@€FB € ÇE Ç‚Â]‚€[  € €L‚C Ŕ ]B€[    ^€›   €]€Ű    ]€FB € ]‚ [  €
€FÂE € ĆD ]‚€ Ć €FÂE € ĆD ]‚€@€
€FD †BF Ç‚FD FÎĂ GG†D ‡GNť‚ ŚBGť‚ Ź‚GM‚‚‡E ‡BEť‚€ ›  €€‡BB ‡BEť‚€ ›  @€†D ‡BDĆÂD E Í€‚€ €ŚÂG  €ťB€ŚÂC   ťB€Ś‚C   ťB€ 	€FB € ]‚ [  Ŕ€FÂE € ĆD ]‚€ Č@€GE GBĹ]‚€ [  €€GBB GBĹ]‚€ [  @€FD GBÄ†ÂD Ć‚E ŤÂ@€ €LÂG Ŕ ]B€LÂC Ŕ ]B€L‚C Ŕ ]B€GBB GBĹ]‚€ [B  €C€L‚C Ŕ ]B€LÂC Ŕ ]B€ŔA€FB € Á ]‚€[  @@€F@ GBŔGÂÂ[B  Ŕ €FC ]‚€ [   >€GBC [B  @=€[   @€›@  Ŕ€Ű   @€L‚C Ŕ ]B€LÂC Ŕ ]B€[@  Ŕ€›@  @€Ű   Ŕ€FD GBÄ†‚D @€ €LÂC Ŕ ]B€[   €€›@   €Ű@  €€FD GBÄ†ÂD @@€FB € ÇE Ç‚Â]‚€[  € €L‚C Ŕ ]B€[   €€›    €Ű@  €€FB € ]‚ [  @
€GE GBĹ]‚€ [   €GBB GBĹ]‚€ [  Ŕ
€FD GBÄ†ÂD Ć‚E ŤÂ@ 	€FÂE € ĆD ]‚€‡E ‡‚B@ €FÂE € ĆD ]‚€ Ć€€FD †BF Ç‚FD FÎĂ GG†D ‡GNť‚ ŚBGť‚ Ź‚GM‚‚ŚÂG  €ťB€Ś‚C   ťB€Ŕ€GE GBĹ]‚€ [  €€FD GBÄ†ÂD @@€FB € ÇE Ç‚Â]‚€[  € €L‚C Ŕ ]B€[   Ŕ€›   @€Ű   Ŕ€FB € ]‚ [  €
€FÂE € ĆD ]‚€ Ć €FÂE € ĆD ]‚€@€
€FD †BF Ç‚FD FÎĂ GG†D ‡GNť‚ ŚBGť‚ Ź‚GM‚‚‡E ‡BEť‚€ ›  €€‡BB ‡BEť‚€ ›  @€†D ‡BDĆÂD E Í€‚€ €ŚÂG  €ťB€ŚÂC   ťB€Ś‚C   ťB€ 	€FB € ]‚ [  Ŕ€FÂE € ĆD ]‚€ Č@€GE GBĹ]‚€ [  €€GBB GBĹ]‚€ [  @€FD GBÄ†ÂD Ć‚E ŤÂ@€ €LÂG Ŕ ]B€LÂC Ŕ ]B€L‚C Ŕ ]B€GBB GBĹ]‚€ [B  @€L‚C Ŕ ]B€LÂC Ŕ ]B€"  Ły € !      MenuZed 
   harrasConfig    USEQ    USEW    USEE    pairs    GetEnemyHeroes    HMW    ValidTarget    W    range 
   HTEnabled 
   HarassActive    recall    CastQ    CastE    myHero    mana    EMana    QMana    Q    Ready    WMana    GetDistance       ™@   Vector    x            z    normalized      ŕ…@   CastW       Ś@                           F   Ą   F @ ]€€ [   Ŕ'€G@@ [@   '€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ A Ç@ÁÇ ÂAB G@ GÂ@"€ŔÂ Ŕ€GC GBĂ]‚€ [  €
€X€C 
€FÂC € ÇC ÇÄ]‚€[  @€FBD ‡C ‡DÇC Ç‚Ä@ B]Â X€ĂŔ€€‚‰@€ĆE CE GĹ‡ĂĹÝB Ŕ€ŔÄ @€X€CŔ€FÂC € ÇC ÇÄ]‚€[   €FF LBĆŔ F € ĂF]‚ †G Á   FCG ť‚ €‚€ €Ě‚G @ ÝB€ŔÂ €X€C€	€FÂC € ÇÂG ÇÄ]‚€[  Ŕ€LH Ŕ ]B€Ŕ€ŔÄ@€X€CŔ€FÂC € ÇÂG ÇÄ]‚€[   €FF LBĆŔ F € ĂF]‚ †G ÁÂ   FCG ť‚ €‚€ €ĚH @ ÝB€ŔD€€XŔÂ @ €ŔÂ€€FBG GBČ†‚H ĆÂH ŤÂY@€€FBG GBČ†‚H ĆI ŤÂ@ €FBI ‡‚I ‡DÇÂG ÇÄ@ B]Â X€Ă€ €ĚÂI @€ÝB€"  ŁÁÜ € (      FarmActive    recall 
   EnemyMinions    update    MenuZed    farm    QF    WF    EF    pairs    objects       @   Q    Ready     ValidTarget    range    GetBestLineFarmPosition    width        @
   CastSpell    _Q    x    z    VP    GetPredictedHealth    GetLatency      @Ź@   getDmg    myHero    CastQ    E    CastE    mana    WMana    QMana    EMana    GetBestCircleFarmPosition    W    CastW                          H  `   [   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›   €‡AB ‡Bť€ ›  Ŕ€XŔÂ@€†C Ŕ€BB BCť€›  €€†C ÇAB ÇAĂBB ÂCG‚@ GBÁťÁ XŔB €D FBD ‡‚DÇÂDB †A ‡ÁA‡E›   €†AE ‡EĆÁE F Í‚Y€€€†AE ‡EĆÁE BF Í‚€€ €ŚF  €ťA€†A ‡ÁA‡ÁF›  Ŕ€XŔÂ@€†C Ŕ€G BCť€›  € €ŚAG  €ťA€b€  ă í €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuZed    jf    QJF    Q    Ready     ValidTarget    range    GetBestLineFarmPosition    width 
   CastSpell    _Q    x    z    WJF    myHero    mana    WMana    QMana    EMana    CastW    EJF    E    CastE                          b  h   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuZed 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         j  „   ¶   F @ †@@ ť € ]  @+€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĚA @€ÝA€XŔÁ€(€ĆB  €AB Ý€Ű   '€ĆB ĚÁÂA Ý€BC   €‚C ÂCD  Ŕ€B @€B ‚€  @€Ű  Ŕ€‚D F‚B LÂÄÁ ]‚€€€B€  €E  @€‚C ÂCBE   €‚E ÂB‚€   Ŕ €ÂE €€B€Ŕ€F  @€‚C ÂCBF   €‚F ÂB‚€   Ŕ €ÂF €€B€€€F GE 
B @€B @€‡‚E ‡G‚€  €€‚C ÂCBF  @€‚C ÂCBE   €‚F ÂB‚€   Ŕ€‚E ÂB‚€   €€ÂF €€B€ÂE €€B€Ŕ
€F GE 
BGBC 
B  €Ű  €€B @€‡‚E ‡G‚€  Ŕ	€‚C ÂCBF  €€‚C ÂCBE  @€‚C ÂCD   €‚F ÂB‚€   Ŕ€‚E ÂB‚€   €€Ű   €ÂF €€B€ÂE €€B€‚D F‚B LÂÄÁ ]‚€€€B€b€  ăŔÓ €       pairs    GetEnemyHeroes    health    math    floor    shield    ComboDamage     ValidTarget      @ź@   SSpells    Ready    summonerdot    idmg    MenuZed 	   ksConfig    IKS      Ŕ‚@
   CastSpell    GetSlot    edmg    EKS    E    CastE    qdmg2    QKS    Q    CastQ    range                          †  ›   |   † @ Ś@@  ť€€XŔ@@€† A Ś@A@ A@  €ť€  Ć€A XŔ   €@   € ›    €Ć A Ç ÂĎŔ€„ÍŔ …
Ŕ€ÇŔB Ç ĂÝ€€ Ű   @€Ç@C Ç ĂÝ€€ Ű    €ĆŔC Á @€ †A Á Ý€€Ď@Ä
Ŕ ‡ €ÇŔB Ç ĂÝ€€ Ű   Ŕ€Ç@C Ç ĂÝ€€ Ű@  €€ĆŔC Á @€ †A Á Ý€€
Ŕ ‡ÇŔD Ç ĂÝ€€ Ű   €€ĆŔC Á @€ †A Á Ý€€
Ŕ ŠÇ@E Ç ĂÝ€€ Ű   €€ĆŔC A @€ †A Á Ý€€
Ŕ ‹Ć A ĚŔĹFF Ý€€Ç ÂĎ@ĆÍ€ĆE GE 
AGC 
AGÁA AĎ 
Ŕ ‹ÇŔB Ç ĂÝ€€ Ű   €€ĆŔC Á @€ †A Á Ý€€
Ŕ€ŤÇŔA C Í E Í E Í ÁF Í ß   €       SSpells    GetSlot    summonerdot     myHero    CanUseSpell    READY    idmg    level       4@      I@   Q    Ready    W    qdmg    getDmg       @ÍĚĚĚĚĚü?      đ?   E    edmg    R    rdmg 
   GetSpellData    _R 333333Ă?š™™™™™©?   qdmg2                          ť  ×   ˛  ‡ @ Ç@@ @ Á@€   @j€A @€     i€AA @€  G@ GÁRÁÁ@Ŕ€B AB€€ Ç@ ÇÂ‚@ ÂBG‚@ GĂ†BC   €€[   €ĆC   Ý ‚@ ‚A ‚@€ĆÁC D GBD‡‚DÝA  € ĆÁD E BE‚EÂE@€ ‡‚@ ‡‚BÇ‚@ ÇÂÂ@ AG@ GĂ†CC Á   C  †DF ‡„F	‡ÄF	‡„@	Á„  E EE
…E
G
ÝX@Ç@ €B    € € †‚C Ŕ€CC ť‚€Ç‚@ Ç‚Á€‚  € € †ÂC ĆD CÄGÄťB  T€X@G@*€G  €)€X@Ç )€Ç  @(€AA @ €€ €FAA €€Ŕ€ ]€@Ŕ€B AB€€ Ç@ ÇÂ‚@ ÂBG‚@ GĂ€   €€[   €ĆC   Ý ‚@ ‚A ‚@€ĆÁC D GBD‡‚DÝA  € ĆÁD E BE‚EÂE@€ ‡‚@ ‡‚BÇ‚@ ÇÂÂ@ AG@ GĂ€ Á   C  †DF ‡„F	‡ÄF	‡„@	Á„  E EE
…E
G
ÝX@Ç@ €B    € € †‚C Ŕ€  ť‚€Ç‚@ Ç‚Á€‚  € € †ÂC ĆD CÄGÄťB  <€B AB€€ Ç@ ÇÂ‚@ ÂBG‚@ GĂ€€  €€[   €ĆC   Ý ‚@ ‚A ‚@€ĆÁC D GBD‡‚DÝA  € ĆÁD E BE‚EÂE@€ ‡‚@ ‡‚BÇ‚@ ÇÂÂ@ AG@ GĂ€€Á   C  †DF ‡„F	‡ÄF	‡„@	Á„  E EE
…E
G
ÝX@Ç@ €B    € € †‚C Ŕ€ €ť‚€Ç‚@ Ç‚Á€‚  € € †ÂC ĆD CÄGÄťB  )€X@G €G  @€@ÇŔ€B AB€€ Ç@ ÇÂ‚@ ÂBG‚@ GĂ€   €€[   €ĆC   Ý ‚@ ‚A ‚@€ĆÁC D GBD‡‚DÝA  € ĆÁD E BE‚EÂE@€ ‡‚@ ‡‚BÇ‚@ ÇÂÂ@ AG@ GĂ€ Á   C  †DF ‡„F	‡ÄF	‡„@	Á„  E EE
…E
G
ÝX@Ç@ €B    € € †‚C Ŕ€  ť‚€Ç‚@ Ç‚Á€‚  € € †ÂC ĆD CÄGÄťB @€X@ÇŔ€Ç   €@G€€B AB€€ Ç@ ÇÂ‚@ ÂBG‚@ GĂ€€  €€[   €ĆC   Ý ‚@ ‚A ‚@€ĆÁC D GBD‡‚DÝA  € ĆÁD E BE‚EÂE@€ ‡‚@ ‡‚BÇ‚@ ÇÂÂ@ AG@ GĂ€€Á   C  †DF ‡„F	‡ÄF	‡„@	Á„  E EE
…E
G
ÝX@Ç@ €B    € € †‚C Ŕ€ €ť‚€Ç‚@ Ç‚Á€‚  € € †ÂC ĆD CÄGÄťB  €       WShadow    RShadow    Q    Ready    ValidTarget    GetDistanceSqr    range        @   VP 
   IsDashing    delay    width    speed    myHero    GetDistance 
   CastSpell    _Q    x    z    GetPrediction2    MenuZed 	   spConfig    qConfig    QP    line    HP    Presets    Zed    QCH     valid                          Ů  Ý      ‡ @ ‡@@ť€€ ›    €Ś€@ ť€ Ŕ@ €† A Ć@A Á GÁÁ ť@  €       W    Ready    WState       đ?
   CastSpell    _W    x    z                          ß  ĺ   '   ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € Á@ ť€€Ç @ Ç ÁZŔ @€‡@A ›   Ŕ€†€@ Ŕ € AA ť€€Ç @ Ç ÁZŔ €€‡€A ›   €€†€@ Ŕ € A ť€€Ç @ Ç ÁŔ € €†ŔA Ć B ť@  € 	      E    Ready    GetDistance    myHero    range    RShadow    WShadow 
   CastSpell    _E                          ç  é      † @ Ć@@  € ť@€ €    
   CastSpell    _R                          ë  ń      F @ L@Ŕ Ć€@ ]€€GŔŔ L Á ]€ X@Á € €A€ _  €€F @ L@Ŕ Ć€@ ]€€GŔŔ L Á ]€ @Á @ €AŔ _   €       myHero 
   GetSpellData    _W    name    lower    zedw2       đ?       @                         ó  ů   &   F @ L@Ŕ Ć€@ ]€€†Ŕ@ €€ Ŕ€F @ L Á Ć€@ ]€€G@Á L€Á ]€ XŔÁ € €A  _  @€F @ L@Ŕ Ć€@ ]€€†Ŕ@ €€ €€F @ L Á Ć€@ ]€€G@Á L€Á ]€ ŔÁ @ €A@ _   € 
      myHero    CanUseSpell    _R    READY 
   GetSpellData    name    lower    zedr2       đ?       @                         ű  #   
?  F @ G@Ŕ G€Ŕ [   @€GŔ@ X Á €€GŔ@ G@Á [@  €€F€A ‡Ŕ@ ‡ŔAÇŔ@ Ç ÂÁ@ ABA †ÁB Ć@ ÇAŔÇĂÇAĂ@ B@C‚CF@ GBŔGĂGÂĂť ]@  F @ G@Ŕ G Ä [   @	€F@D †€D ť € ]  €€ŚÁD ťA †E Ŕ€B ť€›  €€‡E ÇÁĹ‡ÁX A@€†F ĆAF ÂÁGÂ‡BÂÝ ť  ĆF ‚E GÂĹBAÂ ‡ÂAŽGÇBÎBÇ ÝA b€  ă€÷F @ G@Ŕ GŔÇ [   Ŕ€F€A † H ‡ŔAĆ H Ç ÂH ABGAH GČ†ÁB Ć@ ÇAŔÇÁČÇAĂ@ B@ÂH‚CF@ GBŔGÂČGÂĂť ]@  F @ G@Ŕ G É [    €G@I G€É ]€€ [   Ŕ€F€A † H ‡ŔAĆ H Ç ÂH ABGAI GČ†ÁB Ć@ ÇAŔÇĂÇAĂ@ B@C‚CF@ GBŔGĂGÂĂť ]@  F @ G@Ŕ GŔÉ [    €G J G€É ]€€ [   Ŕ€F€A † H ‡ŔAĆ H Ç ÂH ABGJ GČ†ÁB Ć@ ÇAŔÇAĘÇAĂ@ B@BJ‚CF@ GBŔGBĘGÂĂť ]@  F @ G@Ŕ G€Ę [    €GŔJ G€É ]€€ [   Ŕ€F€A † H ‡ŔAĆ H Ç ÂH ABGÁJ GČ†ÁB Ć@ ÇAŔÇËÇAĂ@ B@K‚CF@ GBŔGËGÂĂť ]@  F @ G@Ŕ G@Ë [    €G€K G€É ]€€ [   Ŕ€F€A † H ‡ŔAĆ H Ç ÂH ABGK GČ†ÁB Ć@ ÇAŔÇÁËÇAĂ@ B@ÂK‚CF@ GBŔGÂËGÂĂť ]@  F @ G@Ŕ G Ě [   @€G@L [   Ŕ€F F †@F Ç@L ÇŔÁAL BGAL GAÂť  ]€  †€F Á€ Á GÁÁ NÁĚ‡Â ŽAGĆÁB @ B@MBCF@ GBŔGÍG‚Ă†@ ‡B@‡M‡ÂCÝ ť@  G@M [   Ŕ€F F †@F Ç@M ÇŔÁAM BGAM GAÂť  ]€  †€F Á€
 Á GÁÁ NÁĚ‡Â ŽAGĆÁB @ B@MBCF@ GBŔGÍG‚Ă†@ ‡B@‡M‡ÂCÝ ť@   € 7      MenuZed    drawConfig    DST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DHR    myHero    TargetSelectorH    range    DHRC    DQR    Q    Ready    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC    DS    WShadow 	   W Shadow       I@   DSC    RShadow 	   R Shadow                          %  ;   	„   A   †@@ ‡€@Á   a €FA@ LÁŔŔ ]€‡Á›A  @€‡AÁ›  €€ŚA  €ťA€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇÁB ŔŔ €‡C ÇAĂŠĂ€€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇÁC ŔŔ €‡C ÇAĂŠÄ@€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇÁC ÂB Í‚ŔŔ €‡C ÇAĂŠAÄ€€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇÁC ÂB Í‚‚D Í‚ŔŔ €‡C ÇAĂŠÁÄ@
€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇE ÂB Í‚BE Í‚ŔŔ €‡C ÇAĂŠĹ 	€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇE ÂB Í‚BE Í‚‚D Í‚ŔŔ €‡C ÇAĂŠÁĹ@€‡ÁÁĆB ÇAÂ‚ÂÝ ŤÁÇE ÂB Í‚BE Í‚‚D Í‚€€ €‡C ÇAĂŠĆ`@ŕ €          đ?   heroManager    iCount    GetHero    dead    visible    ComboDamage    health    math    floor    shield    edmg    killstring 
   networkID    E Kill!    qdmg2    Q Kill! 
   Q+E Kill!    idmg    Q+E+Ignite Kill!    qdmg    rdmg    R+Q+E Kill!    R+Q+E+Ignite Kill!    Harass Him !!!                          =  A      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         C  G      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          I  W   1   ‡ Ŕ ›   @€‡@Ŕ Ś€@Á  ť€€›   Ŕ€‡ Á Ć@A Ç ÁŔ €€‡€A ›@   €‡ŔA ›   @ €
@ €€‡ B ›@  Ŕ €‡@B ›     €
@ „‡ Ŕ ›   Ŕ€‡@Ŕ Ś€Bť€ Ś€@Á ť€€›   Ŕ€
@C††€C ÁŔ  AA  ÁÁ ť@  €       valid    name    find    Shadow    team    myHero    WShadow    WCasted    RShadow    RCasted    lower    zed_base_r_buf_tell.troy 	   DeadMark    PrintAlert    Target Now Dead By Mark!!!       @     ŕo@     €K@                                 Y  f   -   ‡ Ŕ ›    €‡@Ŕ Ś€@Á  ť€€›   €€‡ Ŕ ›    €‡ A ›   @€‡@A ›   € €
€A‚
ŔÁ‚€€‡ Ŕ ›   Ŕ€‡ B ›    €‡@B ›   @ €
€A„
ŔÁ„‡ Ŕ ›    €‡@Ŕ Ś€Bť€ Ś€@Á ť€€›     €
ŔA† € 
      valid    name    find    CloneDeath    WShadow    WCasted      RShadow    RCasted    lower    zed_base_r_buf_tell.troy 	   DeadMark                         h  ’   
  Ç @ Ç@ŔÝ€€ Ű   @<€Ć€@ ÇŔŔÇ ÁŰ    ;€[   €:€Ç@Á A AAX @9€Ć€A ÇŔÁŰ@  @8€Ç Â A B  7€›   €6€Á    Ă… …Ŕ€„Ç Â A B  €Ç@C CÇ Ű   Ŕ
€Ć€@ ÇŔŔÇŔĂCÇ Ű    €Ć€D  € GCÝŔ€ Ŕ Ć@D XŔÄ@€Ć@D X Ĺ€ €Ć@D @Ĺ  € € Ć D X€Ĺ €Ć D XŔĹ@€Ć D X Ć€ €Ć D  Ŕ €Ć@F Ć Ç D Ç Ç ÂŔ€„Ć@F Ć Ç D Ç Ç€ÂŔ …Ć@F Ć Ç D Ç ÇŔÂŔ€…Ć€A AÁFA GAÁ@@#€ÁÁA  €"€ÁĆ †Ŕ!€@GŽÇFAB  ĂŔ€GÁG[  €€GÁGGČ‡ČX€  €CA  C€ @Ž €FAB @Č@€FH €€ ÇÁH‚B FÂB €€Ŕ ]€@ŽŔ€FAB  É@€FAI €€ ÇÁH‚B FÂB €€Ŕ ]€@Ž€€FAB €É@€FÁI €€ ÇÁH‚B FÂB €€Ŕ ]€@Ž@€FAB ŔÄ@€FJ €€ ÇÁH‚B FÂB €€Ŕ ]€@Ž 
€FAB  Ĺ@€FAJ €€ ÇÁH‚B FÂB €€Ŕ ]€@ŽŔ	€FAB @Ĺ €FH €€ ÇÁH‚B FÂB €€Ŕ ]€[A   €FH €€ ĆJ  € Ý ĎÉÂHÎ‚‚B FÂB €€Ŕ ]€@ŽŔ€FAB ŔĘ €FJ ‡ÁHŔ€ ‚B FÂB €€Ŕ ]€@ŽFG [  €€FK €€ Ç@ ÇAË]€[  Ŕ €FK Ą  ÁÁ ]A€[   €€Ç Ě Ű   Ŕ €Ç€C@Ě  €
ŔL™[   €€Ç Ě Ű   Ŕ €Ç€C Í  €
ŔĚš € 6      R    Ready    MenuZed 	   exConfig    UIS    team    myHero    dead    type 	   shottype    radius    maxdistance            interputtspells    name    IS 
   spelltype 	   casttype 
   getSpellType       @      @      @   Q    W    E 
   skillData 	   charName    health    hitchampion     boundingRadius    target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   ValidTarget    range    DelayAction 333333Ă?   isMe    ZedW    WCasted    zedult    RCasted    „  †           @ … € @€ €       CastR                                              ”  ®   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuZed    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ·  Ţ   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ˝  ˝           @ @  €       AfterAA                         Ŕ  Ŕ           @ @  €    	   BeforeAA                         Ç  Ç           @ @  €       AfterAA                         Ę  Ę           @ @  €    	   BeforeAA                         Đ  Đ        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    Đ  Đ           @ @  €       AfterAA                                               Ó  Ó           @ @  €    	   BeforeAA                         Ř  Ř           @ @  €       AfterAA                         Ű  Ű           @ @  €    	   BeforeAA                              	
                ŕ  ô   d   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€Ä†ŔD ‡ EJ€€„J@Ĺ…J€Ĺ†Ą@  J€€‡
@ KŔ  J Ć‚J@ĆĄ€  J€€‡
@€‹KŔ  JŔĆ‚J@ĆĄŔ  J€€‡
@ Ť
@GŽFŔG † H Ç A ÇŔÁAH FH ]€€
@ ŹFŔG † I Ç A ÇŔÁAH FH ]€€
@€‘FŔ@ †€I Ç A ÇŔÁÁI C  ]€€
@€’FŔ@ †€I Ç D ÇŔÁÁI C  ]€€
@ ”FŔ@ †€I ÇŔE ÇŔÁÍ€ĘÁI C  ]€€
@€”K   
@€•K  †@K Ć€K ÁK FL d@ 
@ –K    Á  Á A d@ 
@€FŔL ]€€ 
@ ™
@@šK   
@€š € 6      SelectedTarget     Cel    TargetSelector    Q    name    Razor Shuriken    range      p‡@   speed      0ˇ@   delay       Đ?   width       N@   Ready    W    Living Shadow      š@   math    huge       @      i@   E 
   Shadow Slash       y@   R    Death Mark    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY 
   DAMAGE_MAGIC    WTargetSelector    ETargetSelector      Ŕb@   killstring    Spells    _Q    _W    _E    _R    Spells2    it 
   ItemsCast    RCLONE    PStacks    ä  ä        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ĺ  ĺ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ć  ć        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ç  ç        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ö  P     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH € ]@ F @ GŔĆ LŔÁ Á@	 	 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ ÁŔ	 
 FH € ]@ F @ GŔĆ LŔÁ Á@
 
 FH € ]@ F @ GŔĆ LŔÁ ÁŔ
  FAK  ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á@  FB Á Ë€
 AB
 ‚
 äA€]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ ÁŔ
  FH € ]@ F @ GŔĆ LŔÁ Á@  FAK Á ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á@  FAK  ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FAK  ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á@  FAK Á ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ ÁŔ  FAK A ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á€ Á FAK Á ÁÁ  AÂ ]@€F @ L Á Á  A ]@ F @ G@Ň LŔÁ Á  A FG Á ]@ F @ G@Ň LŔÁ Á€ Á GS GÁĹA FH € ]@ F @ G@Ň LŔÁ Á€ Á GÁS GÁĹ FB Á Ë€
 AB
 ‚
 äA€]@€F @ G@Ň LŔÁ Á  Á FG Á ]@ F @ G@Ň LŔÁ Á  A FG Á ]@ F @ G@Ň LŔÁ ÁŔ  FAK A ÁÁ  AÂ ]@€F @ G@Ň LŔÁ ÁŔ  FAK  ÁÁ  AÂ ]@€F @ G@Ň LŔÁ Á  Á FG Á ]@ F @ G@Ň LŔÁ Á  A FG Á ]@ F @ G@Ň LŔÁ ÁŔ  FAU   ĆU ÇÁŐ Ý ]@  F@V † @ Á  € C€   Ă  ]@€F @ L Á Á€ Á ]@ G W L@× Ć @ ÇŔÖ]@€F @ L Á Á€ Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ F @ GŔ× LŔÁ Á  A FH € ]@ F @ GŔ× LŔÁ Á€ Á GS GÁĹA FH € ]@ F @ GŔ× LŔÁ ÁŔ Á GÁS GÁĹ FH € ]@ F @ GŔ× LŔÁ Á  Á GAY GÁĹ FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ú LŔÁ Á  A FG Á ]@ F @ G Ú LŔÁ Á@ Á GS GÁĹA FH € ]@ F @ G Ú LŔÁ Á€ Á GÁS GÁĹ FH € ]@ F @ G Ú LŔÁ Á  Á FG Á ]@ F @ G Ú LŔÁ Á  A FG Á ]@ F @ G Ú LŔÁ ÁŔ  FAK  ÁÁ  AÂ ]@€F @ G Ú LŔÁ ÁŔ  FAK  ÁÁ  AÂ ]@€F @ L Á ÁŔ  ]@ F @ G Ű LŔÁ Á  A FG Á ]@ F @ G Ű LŔÁ Á@ Á GS GÁĹA FH € ]@ F @ G Ű LŔÁ Á€ Á GÁS GÁĹ FH € ]@ F @ G Ű LŔÁ Á  Á FG Á ]@ F @ G Ű LŔÁ Á  A FG Á ]@ F @ G Ű LŔÁ ÁŔ  FAK  ÁÁ  AÂ ]@€F @ G Ű LŔÁ ÁŔ  FAK  ÁÁ  AÂ ]@€F @ L Á ÁŔ  ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@  FH € ]@ F @ G Ü LŔÁ ÁŔ  FH € ]@ F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@  FH € ]@ F @ G Ü LŔÁ ÁŔ  FA^ ‹ Á  A‚ ‚ ¤A ]@ F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ ÁŔ  FH € ]@ F @ G Ü LŔÁ Á@  FA^ ‹ Á Â A ‚ ¤A ]@ F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ ÁŔ   FH € ]@ F @ G Ü LŔÁ Á@    FA^ ‹ Á  AÂ Â ¤A ]@ F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ ÁŔ  ! FH € ]@ F @ G Ü LŔÁ Á@! ! FA^ ‹ Á ‚ AÂ Â ¤A ]@ F @ L Á ÁŔ! " ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á@" " FH   ]@  € ‹   	   MenuEkko 
   scriptConfig    MasterSeries: Ekko    Ekko1    addSubMenu    [Ekko]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Ekko    addTS    [Ekko]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use (Q) Always    USEQ2 #   Use (Q) When Have 2 Passive Stacks    USEW    Use (W) Always    USEW2    Use (W) On Stunned Targets    USEW3     Use (W) When Can Hit Targets >=    SCRIPT_PARAM_SLICE       @              @   USEE    Use (E)        @   No 
   To Target 	   To Mouse    USER2 "   Use (R) When Target Can Be Killed    USER3    Use (R) When HP <=       .@      Y@   USER4     Use (R) When Can Hit Targets >=    QMANA    Min. Mana % To Use (Q)    WMANA    Min. Mana % To Use (W)    EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R)    [Ekko]: Harras Settings 
   harrasConfig    QH    Use     Q     (Q)    EH    E     (E)      €F@      I@   MixedT    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L 
   AddSpellMenu    [Ekko]: Items Settings 
   iteConfig    it    LoadToMenu    [Ekko]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS    R     (R)    [Ekko]: Farm Settings    farm    QF    EF    [Ekko]: Jungle Farm Settings    jf    QJF    EJF    [Ekko]: Draw Settings    drawConfig    DST    Draw Selected Target    DD    Draw DMG Text    DCR    Draw Clone    DCRC    Draw Clone Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    [Ekko]: Misc Settings 	   prConfig    ALS    Auto lvl skills                          R  b   -   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡ €       CheckOB 	   MenuEkko    QTargetSelector    update    WTargetSelector    ETargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    WCel    ECel    GetCustomTarget    TargetSelector    target                          d  ž   C  F @ ]€€ [   @O€G@@ [@  €N€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ B@  
€F€A GŔÁ G@Â [    €F€B ‡ŔB ]€ [   Ŕ€G C G@Ă ]€€ [   € €L€C ÇŔB ]@€F€A GŔÁ GŔĂ [   @€F€B ‡ŔB ]€ [    €G C G@Ă ]€€ [   Ŕ€L D ÇŔB ]€€@€€ €L€C ÇŔB ]@€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ B@  €F€A GŔÁ G€Ä [    €F€B ‡ŔD ]€ [   Ŕ€G E G@Ă ]€€ [   € €L@E ÇŔD ]@€F€A GŔÁ G€Ĺ [   €€F€B ‡ŔD ]€ [   @€G E G@Ă ]€€ [    €GŔE L Ć ÇŔD ]€€[   € €L@E ÇŔD ]@€F€A GŔÁ G@Ć @ Ť@
€F€B ‡ŔD ]€ [    €G E G@Ă ]€€ [   Ŕ
€FŔF † G ť € ]   	€†AG ŚG €GE GÂÇ‡E ‡HÇE ÇBČE HF@ ťA‡E ‡BCť‚€ ›  €€†‚B Ŕ€ť‚ ›  @€XŔHŔ€†‚A ‡ÂA‡BF €€Ŕ €†I ĆBI IGĂIťB b€  ă öF€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ J@ €€F€A GŔÁ G@Ę X€Ć @€F€B ‡€J ÇŔJ Ç@Č]€€[   €€GŔJ G@Ă ]€€ [   @€L K Ç€J A ÁAAJ]@ F€@ L@Ë Ç€J ]@€F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡€K@ @€F€A GŔÁ GŔË [   Ŕ
€F€B ‡ŔB ]€ [   €	€G L G@Ă ]€€ [   @€G@L [   €€L€L ÇŔB ]€€ŚŔL ÁB ť€€Ě M GÁB Ý€€ÁB AMFM GÁÍ‡ÁB ‡N] 
AMA MÁ€@@€AN GAL ‡ÁB €GL GAČ@@ €N A F€A GŔÁ GŔÎ @ ŤŔ€G@L [    €G L G@Ă ]€€ [   Ŕ€F O ‡@L Ç L Ç@Č]€€†€A ‡ŔA‡ŔN@ @ €Ś€N ť@ F€A GŔÁ G@Ď @ ź€€F€B ‡ŔB ]€ [   @€G L G@Ă ]€€ [    €F€@ G@Í †€@ ‡ŔOP€€ O@Á †€A ‡ŔA‡@O€€ @ €L€N ]@  € @      ComboActive    recall    myHero    mana    maxMana       Y@	   MenuEkko    comboConfig    QMANA    USEQ    ValidTarget    QCel    Q    Ready    CastQ    USEQ2 
   GetStacks        @   USEW    WCel    W    CastW    USEW2    it 	   HaveStun    USEW3       đ?   pairs    GetEnemyHeroes    VP    GetCircularAOECastPosition    delay    width    range    speed  
   CastSpell    _W    x    z    EMANA    USEE    ECel    E    CastE    Attack    RMANA    USER2    R    RCLONE    QDamage    RDamage    EDamage    health    math    floor    shield    GetDistance    CastR    USER4    EnemyCount    USER3         
   maxHealth                             ©   L   F @ ]€€ [@   €F@@ G€Ŕ GŔŔ [   @€G A [@  €€F@@ G€Ŕ G@Á [   Ŕ€F€A ‡ŔA ]€ [   €€G B G@Â ]€€ [   @€F€B GŔÂ †€B ‡ CP€€ O@Ă †@@ ‡€@‡€C@ € €LŔC ÇŔA ]@€F@@ G€Ŕ G Ä X@Ä  €F€A ‡€D ÇŔD Ç Ĺ]€€[   @€GŔD G@Â ]€€ [    €F€B GŔÂ †€B ‡ CP€€ O@Ă †@@ ‡€@‡@E@ @€L€E Ç€D A@ @D]@  €    
   HarassActive 	   MenuEkko 
   harrasConfig    MixedT    recall    QH    ValidTarget    QCel    Q    Ready    myHero    mana    maxMana       Y@   QMANA    CastQ    EH       đ?   ECel    E    range    EMANA    CastE                          «  Ľ   T   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›   €‡AB ‡Bť€ ›  Ŕ€†ÁB ‡CĆÁB ÇAĂÁŹCĆA ÇÁÁÇÁĂ€ €†D ÇAB ÇAÄBB ‚DG‚@ GBÁťÁ XŔD€€ŔŠ €BE F‚E ‡ÂEÇFB †A ‡ÁA‡AF›  €€†ÁB ‡CĆÁB ÇAĂÁŹCĆA ÇÁÁÇĆ€Ŕ€†ÁF Ŕ€G BDť€›   €†AE ĆAG ÂĹGĆťA b€  ăŔî €       FarmActive    recall 
   EnemyMinions    update    pairs    objects 	   MenuEkko    farm    QF    Q    Ready    myHero    mana    maxMana       Y@   QMANA    GetBestLineFarmPosition    range    width        @
   CastSpell    _Q    x    z    EF    EMANA    ValidTarget    E    _E                          ľ  Ď   T   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›   €‡AB ‡Bť€ ›  Ŕ€†ÁB ‡CĆÁB ÇAĂÁŹCĆA ÇÁÁÇÁĂ€ €†D ÇAB ÇAÄBB ‚DG‚@ GBÁťÁ XŔD€€ŔŠ €BE F‚E ‡ÂEÇFB †A ‡ÁA‡AF›  €€†ÁB ‡CĆÁB ÇAĂÁŹCĆA ÇÁÁÇĆ€Ŕ€†ÁF Ŕ€G BDť€›   €†AE ĆAG ÂĹGĆťA b€  ăŔî €       FarmActive    recall    JungleMinions    update    pairs    objects 	   MenuEkko    jf    QJF    Q    Ready    myHero    mana    maxMana       Y@   QMANA    GetBestLineFarmPosition    range    width        @
   CastSpell    _Q    x    z    EJF    EMANA    ValidTarget    E    _E                          Ń  ×   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuEkko 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         Ů  î   w   F @ †@@ ť € ]  €€†@ Ŕ€Â@ A
BAť€›  €€‡ÁĆÁA ÇÂBÂÝ ŤÁĆB ÇÁÂĎÁ†ÍÁ†‚C ÂC ‚€LBD Ŕ€]‚€Ś‚D  €ť‚€ĚÂD @€Ý‚€E CEE  Ŕ€Ŕ@€  Ŕ€ĂE FC LĆÁ ]€€€C€€€E CECF   €€€€F ĂC€   @€ĂE FĂF ‡ÇÇCÇC B G€€C€ 
€E CEĂG  €€@ €Ă@ ĂC€   Ŕ €H €€C€ €E CECH  Ŕ€Ŕ@€H ĂC€    €ĂH   @€I GĂH €€€GH GÁ@@ €CI C b€  ă€ă € &      pairs    GetEnemyHeroes    ValidTarget    Q    range       Y@   health    math    floor    shield    myHero    level       4@      I@   SSpells    Ready    summonerdot    QDamage    EDamage    RDamage 	   MenuEkko 	   ksConfig    IKS 
   CastSpell    GetSlot    EKS    E    _E    x    z    Attack    QKS    CastQ    RKS    R    RCLONE    GetDistance    CastR                          đ  ÷      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á[    €Ŕ   @€Ű   Ŕ€AŔ@A €  @ €A A€  €       isMe    name    find    recall    ekkoe    ResetAA                          ů         [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á[   €€Ç@Á A AA @€Ç@@ŔÁ€ €Ç B AÂ Ę€B €       isMe    name    find    recall     type    myHero    EkkoStacks    PStacks 
   networkID                                   @@@€ €@ GÁŔ 
Á€ €       name    EkkoStacks    PStacks 
   networkID                           
      ‡ @ Ç@Ŕ ‡Ŕ ›@    €€  ź   €       PStacks 
   networkID                                         ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMA„†@ ‡ABM†@ ‡ABĆ@ ÇÂŹÁŹÁBMť€ ›@    €  ź   € 
      Q    Ready    myHero    CalcMagicDamage 
   GetSpellData    _Q    level       .@     €F@   ap 
   apPercent š™™™™™ą?                                         ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMA„†@ ‡ABM†@ ‡ABĆ@ ÇÂŹÁŹÁBMť€ ›@    €  ź   € 
      E    Ready    myHero    CalcMagicDamage 
   GetSpellData    _E    level       >@      4@   ap 
   apPercent š™™™™™É?                                         ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMA„†@ ‡ABM†@ ‡ABĆ@ ÇÂŹÁŹÁBMť€ ›@    €  ź   € 
      R    Ready    myHero    CalcMagicDamage 
   GetSpellData    _R    level      Ŕb@      I@   ap 
   apPercent ÍĚĚĚĚĚô?                                   !   @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă€   A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    Q    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 	   MenuEkko 	   spConfig    qConfig    QP    line    QCH                           #  ,   @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă€   A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    W    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2 	   MenuEkko 	   spConfig    wConfig    WP    circle    WCH                           .  4       @@€Ć@@ @ GÁŔ ‡Á Ý@ €€Ć@@ @ FAA GÁŔ†AA ‡AÝ@  €           @
   CastSpell    _E    x    z 	   mousePos                          6  8      F @ †@@ ]@  €    
   CastSpell    _R                          :  >      [   Ŕ€‡ Ŕ ›    €‡@Ŕ €@@€‡ŔŔ Ć A ÇŔŔŔ   €
@€‚ €       valid    name    Ekko    team    myHero    RCLONE                          @  D      [   Ŕ€‡ Ŕ ›    €‡@Ŕ €@@€‡ŔŔ Ć A ÇŔŔŔ   €
€Á‚ €       valid    name    Ekko    team    myHero    RCLONE                           F  `   S   F @ †@@ ť € ]  €€‡Ŕ›A  Ŕ€‡ÁŔ›   €‡ÁĆAA ÇÁÂÁÝ ŤÁĚB @€Ý€BB €€‚€L‚B Ŕ€]‚€Ť‚ŤB€Ŕ €‡ÂB ÇĂŠBĂ@€ŔŔ €‡ÂB ÇĂŠ‚ĂŔ	€ Ŕ €‡ÂB ÇĂŠÂĂ@€@Ŕ €‡ÂB ÇĂŠÄŔ€Ť‚€Ŕ €‡ÂB ÇĂŠBÄ €ŤB‚€Ŕ €‡ÂB ÇĂŠ‚Ä@€ŤB€Ŕ €‡ÂB ÇĂŠÂÄ€€Ť‚ŤB€€ €‡ÂB ÇĂŠĹb€  ă€ě €       pairs    GetEnemyHeroes    dead    visible    health    math    floor    shield    QDamage    EDamage    RDamage    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill!    R Kill! 
   Q+E Kill! 
   Q+R Kill! 
   E+R Kill!    Q+E+R Kill!                          b  €     F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   Ŕ€GŔD [    €F B ‡ŔD ‡@BÇŔD Ç€ÂÁD ÁBGE GAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  FŔE † F Ć@F Ç@ÂAF BFAF GÁÂť  ]€  †ŔE Ć F ÁD ABGÁD GÂ‡ÁD ‡ÁBÝ  ť€  Ć€F AÂ GÂ ‡ABÇBÂ FÂF †@ ‡B@‡‚E‡GĆ@ ÇBŔÇ‚ĹÇÂĂ@ C@EDF@ GCŔGĹGCÄ]€Ý@  F @ G@Ŕ G@Ç [    €G€G GŔÇ ]€€ [   Ŕ€F B †@F ‡@BĆ@F Ç€ÂAF ÁBGG GAĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G Č [    €G@H GŔÇ ]€€ [   Ŕ€F B †@F ‡@BĆ@F Ç€ÂAF ÁBGAH GAĹ†AC Ć@ ÇAŔÇČÇÁĂ@ B@‚HDF@ GBŔG‚ČGBÄť ]@  F @ G@Ŕ GŔČ [    €G I GŔÇ ]€€ [   Ŕ€F B †@F ‡@BĆ@F Ç€ÂAF ÁBGI GAĹ†AC Ć@ ÇAŔÇAÉÇÁĂ@ B@BIDF@ GBŔGBÉGBÄť ]@  F @ G@Ŕ G€É [   @	€LŔI ]@ F J †@J ť € ]   €†J Ŕ€Â
 ť€›  €€‡K ÇAË‡ÁX€A@€†ÁE ĆF BÂG‚Â‡ÂÂÝ ť  ĆK K GBËBAÂ ‡BBŽLÇ‚BÎBĚ ÝA b€  ă ř € 3   	   MenuEkko    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DCR    RCLONE    R    range    DCRC    WorldToScreen    D3DXVECTOR3    myHero 	   DrawLine    ARGB       đ?   DQR    Q    Ready    DWR    W    DWRC    DER    E    DERC    DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget       ™@   killstring 
   networkID 	   DrawText       4@     €A@      $@   ŕ˙˙ďA                         ‚  ś   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuEkko    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                             Ç   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ¦  ¦           @ @  €       AfterAA                         ©  ©           @ @  €    	   BeforeAA                         °  °           @ @  €       AfterAA                         ł  ł           @ @  €    	   BeforeAA                         ą  ą        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ą  ą           @ @  €       AfterAA                                               Ľ  Ľ           @ @  €    	   BeforeAA                         Á  Á           @ @  €       AfterAA                         Ä  Ä           @ @  €    	   BeforeAA                              	
                É      ä   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€Ä†ŔD ‡ EJ€€„J@Ĺ…J€Ĺ†Ą@  J€€‡
@ K€ J Ć‚J@Ć†ŔD ‡ EJ€€„J€Ć…JŔĆ†Ą€  J€€‡
@€‹KŔ  J@Ç‚J€ÇĄŔ  J€€‡
@ ŽC   
@H
@€Ź
ŔH‘F@I †€I Ç A ÇŔÁÁI FJ ]€€
@ ’F@I †€J Ç A ÇŔÁÁI FÁJ ]€€
@€”FŔ@ †@K Ç A ÇŔÁK C  ]€€
@ –FŔ@ †@K Ç D ÇŔÁK C  ]€€
@€—FŔ@ †@K ÇŔE ÇŔÁK C  ]€€
@ FŔ@ †@K Ç G ÇŔÁK C  ]€€
@€K   
@ ™F M ]€€ 
@€™K €‹Ŕ  ŠŔM›Š@NśŠ AťËŔ  ĘŔN›Ę OśĘ GťÁ  
AO›
Oś
DťKÁ  JÁO›JPśJAť‹Á  ŠAP›ŠPśŠGťËÁ  ĘÁP›ĘQśĘAťÂ  
BQ›
‚Qś
AťKÂ  JÂQ›JRśJÂEť‹Â  ŠBR›Š‚RśŠGťËÂ  ĘÂR›ĘSśĘGťĂ  
CS›
Sś
GťKĂ  JĂS›JTśJAť‹Ă  ŠCT›ŠTśŠĂEťËĂ  ĘCT›ĘĂTśĘĂEťÄ  
U›
DUś
DťKÄ  JU›J„UśJDť‹Ä  ŠÄU›ŠVśŠAťËÄ  ĘDV›Ę„VśĘÄEťĹ  
ĹV›
Wś
GťKĹ  JEW›J…WśJDť‹Ĺ  ŠĹW›ŠXśŠĹEťËĹ  ĘEX›Ę…XśĘĹEťĆ  
ĆX›
Yś
AťKĆ  JFY›J†YśJAť‹Ć  ŠĆY›ŠZśŠĆEťËĆ  ĘFZ›Ę†ZśĘAťÇ  
ÇZ›
[ś
ÇEťKÇ  JG[›J‡[śJÇEť‹Ç  ŠÇ[›Š\śŠÇEťd@€
@€šK  ‹@  Š€\śË@  ĘŔ\śA  
]śKA  JA]śd@ 
@€¸ € v      SelectedTarget     Cel    TargetSelector    Q    name    Baleful Strike    range      PŽ@   speed      @ź@   delay       Đ?   width      €Q@   Ready    W    Dark Matter      °Ť@   math    huge       đ?      l@   E    Event Horizon      p‡@š™™™™™é?     ŕu@   R    Primordial Burst      P„@   recall    ECasted  
   ECastTime         
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_HEALTH_ASC    JungleMinions    MINION_JUNGLE    MINION_SORT_MAXHEALTH_DEC    QTargetSelector    TARGET_LESS_CAST_PRIORITY 
   DAMAGE_MAGIC    WTargetSelector    ETargetSelector    RTargetSelector    killstring    it 
   ItemsCast    GapCloserList 	   charName    Aatrox 
   spellName    AatroxQ 	   menuname    Akali    AkaliShadowDance    Alistar 	   Headbutt    Fiora    FioraQ    Diana    DianaTeleport    Elise    EliseSpiderQCast    Fizz    FizzPiercingStrike    Gragas    GragasE    Hecarim    HecarimUlt 	   JarvanIV    JarvanIVDragonStrike    Irelia    IreliaGatotsu    Jax    JaxLeapStrike    Khazix    KhazixE    khazixelong    LeBlanc 
   LeblancSlide    LeblancSlideM    LeeSin    BlindMonkQTwo    Leona    LeonaZenithBlade 	   Malphite    UFSlash 	   Pantheon    Pantheon_LeapBash    Poppy    PoppyHeroicCharge 	   Renekton    RenektonSliceAndDice    Riven    RivenTriCleave    Sejuani    SejuaniArcticAssault    Tryndamere 
   slashCast    Vi    ViQ    MonkeyKing    MonkeyKingNimbus    XinZhao 
   XenZhaoSweep    Yasuo    YasuoDashWrapper    TeleSpells    PantheonRFall 
   Crowstorm    gate    summonerteleport    Í  Í        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          Î  Î        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          Ď  Ď        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Đ  Đ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                                 r   Ş  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FB A Ë€‚ AÂ  äA€]@€F@L †€L ť € ]   €†@ ‡ÁFŚÁAÂĚA	 ‡M ‡ÂEÁB
 ĂĚV†‚H Ă€ ťA b€  ă üF @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€
 Á
 FN A Á Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FN  Á Â A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FN  Á Â A‚ ]@€F @ GŔĆ LŔÁ Á@  FN  Á Â A‚ ]@€FŔP † @ Á  € C€   Ă  ]@€F @ L Á Á  A ]@ F @ G@Ń LŔÁ Á  A FG Á ]@ F @ G@Ń LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ G@Ń LŔÁ ÁŔ 	 GJ GÁĹA
 FH € ]@ F @ G@Ń LŔÁ Á  Á FG Á ]@ F @ G@Ń LŔÁ Á  A FG Á ]@ F @ G@Ń LŔÁ Á€
 Á
 FN  Á Â A‚ ]@€F @ G@Ń LŔÁ Á  A FN A Á Â A‚ ]@€F @ G@Ń LŔÁ Á  Á FG Á ]@ F @ G@Ń LŔÁ Á  A FG Á ]@ F @ G@Ń LŔÁ Á€ Á FS   ĆAS ÇÓÂ Ý ]@  F @ L Á Á  A ]@ G€T LŔÔ Ć @ Ç@Ô]@€F @ L Á Á  A ]@ F @ G@Ő LŔÁ Á  A FG Á ]@ F @ G@Ő LŔÁ Á€ Á FH € ]@ F @ G@Ő LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ G@Ő LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ G@Ő LŔÁ Á€ 	 GM GÁĹÁ FH   ]@ F @ L Á Á  A ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á€ 	 GAI GÁĹ	 FB Á Ë€‚ A B äA€]@€F @ G@× LŔÁ Á€ 	 GJ GÁĹA
 FB Á Ë€‚ A B äA€]@€F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á€
 Á
 FN  Á Â A‚ ]@€F @ G@× LŔÁ Á  A FN  Á Â A‚ ]@€F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ ÁŔ  FS   ĆAS ÇÓB Ý ]@  F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ GŔŮ LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á€
 Á
 FN  Á Â A‚ ]@€F @ GŔŮ LŔÁ Á  A FN  Á Â A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔÚ L Á Á  A ]@ F @ GŔÚ G@Ű LŔÁ Á  A FG Á ]@ F@L †€L ť € ]  €€†[ ÇÁ[ ť €ÇÂĚĂL  €Ć@ ÇÂÚÇBŰĚÂÁG\C ÇĂL„ GÄ\–CĆH € ÝB ˘  #űb€  ă€ůF @ GŔÚ G@Ű LŔÁ Á  Á FG Á ]@ F @ GŔÚ G@Ű LŔÁ Á  A FG Á ]@ F @ GŔÚ G@Ű LŔÁ Á  A FH € ]@ F @ GŔÚ L Á Á€ Á ]@ F @ GŔÚ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÚ GŔÝ LŔÁ Á  A FH € ]@ F @ GŔÚ GŔÝ LŔÁ Á€ Á FN Á Á B A‚ ]@€F @ GŔÚ L Á Á  A ]@ F @ GŔÚ G@ß LŔÁ Á  A FG Á ]@ F @ GŔÚ G@ß LŔÁ Á€ Á FH € ]@ F @ GŔÚ G@ß LŔÁ Á   A  FN A Á B A‚ ]@€F @ L Á Á€  Á  ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á ! A! FH € ]@ F @ GŔŕ LŔÁ Á€! Á! FH € ]@ F @ GŔŕ LŔÁ Á  Á FG Á ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á " A" FH € ]@ F @ GŔŕ LŔÁ Á€" Á" Fc ‹ ÁA# ‚ A‚ B# ¤A ]@ F @ GŔŕ LŔÁ Á  Á FG Á ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á€# Á# FH € ]@ F @ GŔŕ LŔÁ Á $ A$ Fc ‹ ÁA# Â A‚ B# ¤A ]@ F @ GŔŕ LŔÁ Á  Á FG Á ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á€$ Á$ FH € ]@ F @ GŔŕ LŔÁ Á % A% Fc ‹ ÁA# B# A‚ ‚ ¤A ]@ F @ GŔŕ LŔÁ Á  Á FG Á ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á€% Á% FH € ]@ F @ GŔŕ LŔÁ Á & A& Fc ‹ ÁA# ‚ AB# ‚ ¤A ]@ F @ L Á Á€& Á& ]@ F @ GŔć LŔÁ Á  A FG Á ]@ F @ GŔć LŔÁ Á ' A' FH   ]@ F @ G@Ń L€ç Á€ ]@€F @ G@× L€ç ÁŔ ]@€F @ GŔÚ GŔÝ L€ç Á  ]@€F @ GŔÚ G@ß L€ç Á€ ]@€ € ź      MenuVeigar 
   scriptConfig    MasterSeries: Veigar    Veigar1    addSubMenu    [Veigar]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Veigar    addTS    [Veigar]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)        @   No    Stun    Zone    ipairs    GetEnemyHeroes 	   charName    R 	   (R) On:     QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   WMANA    Min. Mana % To Use (W)       $@   EMANA    Min. Mana % To Use (E)    RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Veigar]: Harras Settings 
   harrasConfig    QH    WH       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Veigar]: Items Settings 
   iteConfig    it    LoadToMenu    [Veigar]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    RKS     (R)    [Veigar]: Farm Settings    farm    QF       @	   Freezing 
   LaneClear    WF    LaneClearT    LaneClear Toggle Key    N    [Veigar]: Jungle Farm    jf    QJF    WJF    [Veigar]: Extra Settings 	   exConfig    [Veigar]: Anti-GapCloser    ES2    pairs    GapCloserList 
   spellName    GapCloser     :  	   menuname    UG    Enable    [Veigar]: Auto W    autoW    AW    Auto W On Stun, Slow, Root ...    AW2    Auto If Can Hit X Enemy    [Veigar]: Auto E    autoE    AE    Auto E On Teleport Position    AE2    Auto If Can Zone X Enemy    [Veigar]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Veigar]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          t  Ś   D   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A LŔŔ ]@ GŔA X Â @€F@B ‡ŔA Ç€B ÇŔÂ]€€[   €€GŔA 
@ †GŔA 
@€†GŔA 
@ ‡GŔA 
@€‡GŔA 
@ Ŕ€F@D ‡€D ]€ 
@ †G€@ GŔÄ 
@€†G A GŔÄ 
@ ‡G@A GŔÄ 
@€‡G€A GŔÄ 
@ L E ]@ L@E ]@ G€E [   Ŕ€FŔE G Ć ]€€ ‡@F Ť€F@   €
ŔF‹ €       CheckOB    MenuVeigar    QTargetSelector    update    WTargetSelector    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    WCel    ECel    RCel    GetCustomTarget    TargetSelector    target    AutoW    AutoE    ECasted    os    clock 
   ECastTime        @                          Ž  Ľ     F @ ]€€ [   €B€G@@ [@  ŔA€G€@ [@   A€FŔ@ ‡ A ]€ [   @€G@A L€Á Ç A ÁA B]@ FŔA G@Â G€Â [   Ŕ€FŔ@ ‡ A ]€ [   €€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ŔC@ Ŕ€G D G@Ä ]€€ [   €€F€D ‡ A ]€ ‡ D ‡ŔD€€ Ŕ€L E Ç A ]@€G@E L€Ĺ ]@ LŔE Ç A D FFÁB ‡AE ‡AF]€ U € €Ć €€FŔF † G Ç A Ç@ÇA G]@ GŔG G@Ä ]€€ [    
€FŔA G@Â G Č [   Ŕ€FŔ@ ‡@H ]€ [   €€L€H Ç@H ]€€[   @€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ŔH@ €€GŔG G@Ä ]€€ [   @€F€D ‡@H ]€ ‡ŔG ‡ŔD€€ € €L I Ç@H ]@€FŔ@ ‡@I ]€ [    
€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡€I@ @€GŔI G@Ä ]€€ [    €F€D ‡@I ]€ ‡ŔI ‡ŔDŤ J€€  €FŔA G@Â G@Ę €Ę Ŕ €LŔJ Ç@I ]@€Ŕ€FŔA G@Â G@Ę  Ë € €L@K Ç@I ]@€FŔ@ ‡€K ]€ [   @€FŔA G@Â ‡€K ‡ŔKG€€ [   €€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ L@ Ŕ	€G@L G@Ä ]€€ [   €€F€D ‡€K ]€ ‡@L ‡ŔD€€ Ŕ€G€K G€Ě †ŔL ‡ MÇ€K Ç@Íť€ M€€ Ś€M K ť€€ĚŔM GK Ý€€ŤŔ Ě N GK Ý€€ŤŔ Ě@N GK Ý€€ŤŔ €€ € €L€N Ç€K ]@€GŔN [   €€GŔG G@Ä ]€€ [   @€FŔA G@Â G Č [    €FŔ@ ‡@H ]€ [   Ŕ€L€H Ç@H ]€€[@  €€FŔB G Ă †ŔB ‡@CP€€ O€Ă †ŔA ‡@B‡ŔH@ Ŕ €F O Ą   Á€
 ]@€ € =      ComboActive    ultbuff    recall    ValidTarget    QCel    it 
   CastItems    MenuVeigar 
   iteConfig    comboConfig    USEQ    myHero    mana    maxMana       Y@   QMANA    Q    Ready    GetDistance    range    CastQ 
   EnemyMinions    update 
   Collision    width    objects       đ?
   CastSpell    _Q    x    z    W    USEW    WCel 	   HaveStun    WMANA    CastW    ECel    EMANA    E      Ŕr@   USEE        @
   CastEStun       @   CastE    RCel 	   charName    RMANA    R    health    math    floor    shield    IDMG    QDMG    WDMG    RDMG    CastR    ECasted    DelayAction    ˛  ą        @ F@Ŕ €     €€@ F@Ŕ € FŔŔ G Á @  @€@A €A †@Ŕ ÁŔ Ŕ    €€@ „ €†@B Ć€B ÁB GC ť@  € 
      ValidTarget    WCel    GetDistance    W    range    VP    GetPredictedPos 333333ó?       @
   CastSpell    _W    x    z                                                ľ  Ď   u   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €€G A [@  Ŕ€G@A X€Á  €F @ G@Ŕ GŔÁ [   Ŕ€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡ C@  
€G@C G€Ă ]€€ [   Ŕ€FŔC ‡@A ]€ [   €€F D ‡@A ]€ ‡@C ‡@D€€ Ŕ€L€D Ç@A ]@€GŔD L Ĺ ]@ L@E Ç@A AC EFB ‡ÁD ‡ÁE]€ U €  Ć €€F@F †€F Ç@A ÇŔĆAA G]@ G@G X€Á  
€F @ G@Ŕ G€Ç [   Ŕ€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡ŔG@  €G H G€Ă ]€€ [   Ŕ€FŔC ‡@G ]€ [   €€F D ‡@G ]€ ‡ H ‡@D€€ Ŕ€L@H Ç@G ]€€[   € €L€H Ç@G ]@€ € #      MenuVeigar 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QCel     QH    myHero    mana    maxMana       Y@   QMANA    Q    Ready    ValidTarget    GetDistance    range    CastQ 
   EnemyMinions    update 
   Collision    width    objects       đ?
   CastSpell    _Q    x    z    WCel    WH    WMANA    W 	   HaveStun    CastW                          Ń  ú     F @ ]€€ [@   €F@@ G€Ŕ GŔŔ [   ŔC€G A [@   C€G@A L€Á ]@ F@@ G€Ŕ GŔÁ †@@ ‡€@‡ BĆ@B AA BÝ  ?€ŔÂ €
€C BCFC G‚ĂBÂCFB@ G‚ŔGÄ ‚Ŕ€BD ‚D‚€   €#€XŔÄ #€E @€‡BD ‡BE‚€  @!€‚E GBD GBĹ‡BD ‡ÂEÇBA Ç‚ÂÂ XŔDŔ€@Ś@€†BF Ć‚F ĂFGGťB Ŕ€ Ć @€C BCFC G‚ĂBÂCFB@ G‚ŔGÄ ‚€€BD ‚D‚€   @€XŔÄŔ€E @€‡BD ‡BE‚€   €BG €€‚€L‚G Ŕ€CD ĂEFC ‡CA ‡B]‚ U€@‚Ź@€FH LBČŔ€H € ĂH]‚ @’ €FH LBČĚ‚G @€‡CD ‡ĂEĆC DA „BÝ‚ ÇÂÇH € ĂH]‚ Y ‚ €FH LBČŔ€H € ĂH]‚  ‚@€FBF †‚F ÇÂĆÇ]B @€L‚G Ŕ€CD ĂEFC ‡CA ‡B]‚ U€@É€€FH LBČŔ€H € ĂH]‚  ‚@€FH LBČŔ€H € ĂH]‚ @’ €FBF †‚F ÇÂĆÇ]B ŔB€
€C BCFC G‚ĂBÂCFB@ G‚ŔG‚É ‚Ŕ€ÂI ‚D‚€   @€XŔÄŔ€E @€‡ÂI ‡BE‚€   €J GÂI GBĹ‡ÂI ‡ÂEÇBA Ç‚ÂÂ XŔD€
€@‚… 
€†BF ĆBJ ĂFGGťB €€ F €C BCFC G‚ĂBÂCFB@ G‚ŔG‚É ‚@€ÂI ‚D‚€    €XŔÄ€€E @€‡ÂI ‡BE‚€  Ŕ€H BH€€ÇÂI Ç‚ĘH € ĂHÍ‚ LÂJ Ŕ€]‚€@ €†BF ĆBJ ĂĆGÇťB â€  cŔ € ,      FarmActive    MenuVeigar    farm    LaneClearT    recall 
   EnemyMinions    update    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    GetBestLineFarmPosition    width        @
   CastSpell    _Q    x    z    QDMG 
   Collision       đ?   VP    GetPredictedHealth    GetLatency      @Ź@      @           WMANA    W    GetBestCircleFarmPosition    _W    delay    WDMG                          ü     .   Ű@    €Ć @ K  †A@ Ŕ ť@€Ç‚@Ű  €€ÇÂ@ŰB  Ŕ€ĆA @ @ Ý‚€CA A Ŕ€ĆÂA  €@€ € ÝÂ    €FA €€Ŕ ]€‡BŤ € €FCB GÂ€€Ŕ ]C€˘  #Âö_  €       myHero    pairs    valid    dead    GetDistance    Q    range #   VectorPointProjectionOnLineSegment    boundingRadius    table    insert                          
     
_   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A G@Á G€Á [    	€FŔA G Â †ŔA ‡@BP€€ O€Â † A ‡@A‡ŔB@ @€F C ‡€@ ‡@C] €€‡C ‡ÁCť€ ›  @€X ÄŔ€†AD Ŕ€ť ÇC ÇÄŔ €†ÁD ĆE BĹG‚ĹťA b€  ă€úF A G@Á GŔĹ [    	€FŔA G Â †ŔA ‡@BP€€ O€Â † A ‡@A‡ F@ @€F C ‡€@ ‡@C] €€‡AF ‡ÁCť€ ›  @€X ÄŔ€†AD Ŕ€ť ÇAF ÇÄŔ €†ÁD ĆF BĹG‚ĹťA b€  ă€ú €       FarmActive    recall    JungleMinions    update    MenuVeigar    jf    QJF    myHero    mana    maxMana       Y@   QMANA    pairs    objects    Q    Ready     GetDistance    range 
   CastSpell    _Q    x    z    WJF    WMANA    W    _W                            0   O   F @ G@Ŕ G€Ŕ GŔŔ [   Ŕ€F A †@A ť € ]   €†A Ŕ€ÂA Bť€›  @€ŚAB  €ť€›   €†B ĆÁB ĂGBĂťA b€  ă űF @ G@Ŕ G€Ŕ G€Ă @€‡@
€F A †@A ť € ]  €€†A Ŕ€ÂA Bť€›  Ŕ€†D ŚAD €GÂA G‚Ä‡ÂA ‡ÂDÇÂA ÇÂĂA EFCE ťA›   €Ŕ‹€€†@ ‡B@‡‚@‡‚C  €†‚B ĆÂB CGCCťB b€  ă€ö €       MenuVeigar 	   exConfig    autoW    AW    pairs    GetEnemyHeroes    ValidTarget    W    range 	   HaveStun 
   CastSpell    _W    x    z    AW2            VP    GetCircularAOECastPosition    delay    width    speed    myHero        @                         2  =   1   F @ G@Ŕ G€Ŕ GŔŔ @ ‚@
€F@A †€A ť € ]  €€†ÁA Ŕ€B BBť€›  Ŕ€†B ŚÁB €GB GĂ‡B ‡BCÇB ÇBÂB CFĂC ťA›   €Ŕ€€†@ ‡B@‡‚@‡Â@  €†BD Ć‚D ĂDGEťB b€  ă€ö €       MenuVeigar 	   exConfig    autoE    AE2            pairs    GetEnemyHeroes    ValidTarget    E    range    VP    GetCircularAOECastPosition    delay    width    speed    myHero        @
   CastSpell    _E    x    z                          ?  E   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuVeigar 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         G  \   –   G @ [@  @$€F@@ †€@ ť € ]  €"€ŚÁ@  €ť€ĚA @€Ý€BA €€‚€L‚A Ŕ€]‚€XŔÁ €†B Ŕ€C ť‚€›  €€†‚B ŚÂB ť‚€ÇBĂC ĂCGÄ Í€ €ÇBD ÇÂÂÝ‚€ Ű  Ŕ€ĆB  €GCD GÄÝ‚€Ű   €ĆÂD ÇĹÇBĹŰ  Ŕ €Ě‚E @€ÝB€@€ÇBĂC ĂCGÄ ÍŔ €ÇÂE ÇÂÂÝ‚€ Ű  Ŕ€ĆB  €GĂE GÄÝ‚€Ű   €ĆÂD ÇĹÇĆŰ  Ŕ €ĚBF @€ÝB€ €ÇBĂC ĂCGÄ Í ‚ €Ç‚F ÇÂÂÝ‚€ Ű  Ŕ€ĆB  €GF GÄÝ‚€Ű   €ĆÂD ÇĹÇÂĆŰ  Ŕ €ĚG @€ÝB€Ŕ€›  @€ÇBĂC ĂCGÄ Í@‚@€ĆÂD ÇĹÇBÇŰ   €ĆB  €A Ý‚€Ű  €€ĆÂG B H €@€ÝB€b€  ă€Ü € !      recall    pairs    GetEnemyHeroes    QDMG    WDMG    RDMG    IDMG     ValidTarget      p—@   SSpells    Ready    summonerdot    health    math    floor    shield    Q    range    MenuVeigar 	   ksConfig    QKS    CastQ    W    WKS    CastW    R    RKS    CastR    IKS      Ŕ‚@
   CastSpell    GetSlot                          ^  f   	"      Ç@Ŕ   ˇ@€ŚŔ  €ť€ÇÁ@Ű  Ŕ€ÇAX@Á€€ÇAX€ÁŔ€ÇAXŔÁ €ÇAX Â@€ÇAX@Â€ €ÇA€Â@ €Ă€ ß   ů   ź   €          đ?
   buffCount    getBuff    valid    type       @      &@      8@      6@      5@       @                        h  m      † @ Ś@@  ť€€›   @€†Ŕ@ Ŕ € ť€  A €†@A ‡€AŹ€€Ť€ „ź  @ ź   € 
      SSpells    Ready    summonerdot    GetDistanceSqr      ůA   myHero    level       4@      I@                                 o  t   	&   ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € ť€ Ç @ ÇŔŔŇ ÁŔ @€†@A Ś€A € FAA LÁÁĆB ]€GAÂOÂMÁÂ†AA ‡CĆAA ÇĂBA BCĎ‚ĎĂŤÁMž  ź   Ŕ ź   €       Q    Ready    GetDistanceSqr    range        @   myHero    CalcMagicDamage 
   GetSpellData    _Q    level       D@      >@   ap 
   apPercent 333333ă?                                 v  {   	&   ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € ť€ Ç @ ÇŔŔŇ ÁŔ @€†@A Ś€A € FAA LÁÁĆB ]€GAÂOÂMÂ†AA ‡ÁBĆAA ÇÁÂBA CĎ‚ĎAĂŤÁMž  ź   € ź   €       W    Ready    GetDistanceSqr    range        @   myHero    CalcMagicDamage 
   GetSpellData    _W    level       I@   ap 
   apPercent       đ?                                 }  ‚   	)   ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ Ç @ ÇŔŔŇ ÁŔ  €†@A Ś€A € FAA LÁÁĆB ]€GAÂOÂMÂ†AA ‡ÁBĆAA ÇÁÂBA CĎ‚ĎAĂŤÁM‡ÁÂ ŹCMž  ź   Ŕ ź   €       R    Ready    GetDistanceSqr    range        @   myHero    CalcMagicDamage 
   GetSpellData    _R    level      @_@   ap 
   apPercent       đ?š™™™™™é?                                 „  Ť   @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A € Ă    A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    Q    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2    MenuVeigar 	   spConfig    qConfig    QP    line    QCH                           Ź     @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă    A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    W    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2    MenuVeigar 	   spConfig    wConfig    WP    circle    WCH                           š  Ł   @   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A   Ă    A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BB F‚B ‡ÂÂÇĂB  €       VP 
   IsDashing    E    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2    MenuVeigar 	   spConfig    wConfig    WP    circle    WCH                           Ą  °   A   † @ Ŕ € ť€ ›@    € € †@@ Ś€@ € AÁ  ťŔ ›   €€Ŕ ‚ €AA AFÁA GÂ‡BNRÁ†ÁA ‡ABÇABŽÁ’AM GB†AA ‡BÁÁ  ť€ĆÁA ÇÂBÎ‚ĐŹÁM‡ABĆAA ÇÂÂ A Ý€ÂA BBGBBBĎ‚ŤÁ[  €€›   €ĆAC ‚C @€€ ÝA  €       ValidTarget    VP    GetPredictedPos       ŕ?       @   math    sqrt    myHero    x    z    random      ŕp@     Pt@
   CastSpell    _E                          ˛  ´      † @ Ć@@  € ť@€ €    
   CastSpell    _R                          ¶  Ń   
Ű   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €GŔD G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁD GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGF GĹ†AC Ć@ ÇAŔÇAĆÇÁĂ@ B@BFDF@ GBŔGBĆGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@  F @ G@Ŕ G Č [    	€L@H ]@ F€H †ŔH ť € ]  Ŕ€†I Ŕ€ť ›  €€‡AI ÇÉ‡ÁX€A@€†ÁI ĆJ BÂG‚Â‡ÂÂÝ ť  ĆAJ BI G‚ÉBA‚
 ‡BBŽÂJÇ‚BÎËC ÝA b€  ă@ř € .      MenuVeigar    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC    DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA                         Ó  ě   }   F @ †@@ ť € ]   €‡Ŕ›A  @€‡ÁŔ›  €€ŚA  €ť€ĚAA @€Ý€‚A €€‚€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚ŤÂŤ@Ŕ €GÂB ‡ĂJBCŔ€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚€Ŕ €GÂB ‡ĂJ‚CŔ€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚ŔŔ €GÂB ‡ĂJÂCŔ€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚ ‚Ŕ €GÂB ‡ĂJDŔ€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚ŤÂ€‚Ŕ €GÂB ‡ĂJBD€	€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚Ť€‚Ŕ €GÂB ‡ĂJ‚D@€GÂÁ†B ‡BBÇ‚Âť‚ M‚‚Ť‚€‚Ŕ €GÂB ‡ĂJÂD €GÂÁ†B ‡BBÇ‚Âť‚ M‚‚ŤÂŤ€‚€ €GÂB ‡ĂJEb€  ă â €       pairs    GetEnemyHeroes    dead    visible    QDMG    WDMG    RDMG    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    W Kill!    R Kill! 
   Q+W Kill! 
   Q+R Kill! 
   W+R Kill!    Q+W+R Kill!                          î  ň      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ô  ř      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          ú     á   [   @€›   Ŕ€Ç Ŕ Ű    €Ç@@€Ŕ@€Ć A Ç@ÁÝ€€ Í€Á
Ŕ€
 ÂĆ@B Ç€ÂÇŔÂÇ ĂŰ    €Ç@C Ç€ĂÝ€€ Ű   Ŕ€ĆŔC D Ý @€[   Ŕ€BÄ F‚D GBÄX@€€›    €ÂD  @€B@GĹ@@
€BE F‚D ‡ÂD‚€GBC G‚ĹRÂĹ@ €F BFF‚D G‚Ć‡ÂD‡‚FN‚‚RÂĹ†‚D ‡ÂFÇÂDÇÂĆŽÂ’ÂEM‚‚‚ GÂDG‚Ć†‚D ‡‚FÇÂDÇ‚ĆŽÂŹ‚ŽM‚‚‡ÂD‡ÂFĆ‚D ÇÂĆĂDĂFÎĐ‚ĎÂŽŤÂ[  €€›   €ĆBG G @€€ ÝB â€  cÁíĆ@B Ç€ÂÇŔÇŰ   Ŕ€Ç@C Ç€ĂÝ€€ Ű   €€ĆŔC H Ý  €[   €€BÄ F‚D GBÄX@@€BČ F‚D GBČ@ €›   €€B@GĹ@€€BB ‚B‚HGĹB  Ŕ€ÂH @€ ‡BC ‡‚E‚€   €I  Ŕ€I@  Ŕ€BG F‚G †‚D ‡‚FĆ‚D ÇÂĆB @€IB  €
€BI @€ ‚ FBI ‡ÂD]‚ †BI Ŕ€ ť‚ N‚‚L‚É]‚ OB‚“
BFBI €€ ]‚ †BI ÇÂDť‚ ĆBI  € Ý‚ ŽÂŚ‚Iť‚ Ź‚”M‚‚†BE Ć‚D  € ť‚€ĆBE D @ Ý‚€Y€‚@€†BE Ć‚D  € ť‚€ĆBE D @€Ý‚€€‚€€†BG Ć‚G D FFD GĂĆťB â€  cĺ € )      isMe    name    VeigarEventHorizon 
   ECastTime    os    clock       @   ECasted    MenuVeigar 	   exConfig    autoE    AE    E    Ready    pairs    TeleSpells    team    myHero    endPos 
   spellName    GetDistanceSqr    range        @   math    sqrt    x    z       t@
   CastSpell    _E    UG    GapCloserList    type    ES2    ValidTarget    target    Vector    normalized      Ŕr@      Y@                            :   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuVeigar    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          C  j   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    I  I           @ @  €       AfterAA                         L  L           @ @  €    	   BeforeAA                         S  S           @ @  €       AfterAA                         V  V           @ @  €    	   BeforeAA                         \  \        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    \  \           @ @  €       AfterAA                                               _  _           @ @  €    	   BeforeAA                         d  d           @ @  €       AfterAA                         g  g           @ @  €    	   BeforeAA                              	
                l  µ   l  
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J ÂJ€Ä„JŔÄ…J Ĺ†Ą@  J€€‡
@ KŔ  J€Ĺ‚JŔĹĄ€  J€€‡
@€ŠK€ J@Ć‚J€ĆJŔĆ„J Ă…J Ç†ĄŔ  J€€‡
@ ŚFŔ@ †€G Ç A ÇŔÁÁG C  ]€€
@€ŽFŔ@ †€G Ç D ÇŔÁÁG C  ]€€
@ FŔ@ †€G Ç F ÇŔÁÁG C  ]€€
@€
ŔH‘F@I †€I Ç A ÇŔÁÁI FJ ]€€
@ ’F@I †€J Ç A ÇŔÁÁI FJ ]€€
@€”K  † K Ć@K K FÁK d@ 
@€•K    Á  A A d@ 
@ K   
@€K€ ‹Ŕ  Š@MšŠ F›Š Î›J€€™‹Ŕ  Š€NšŠ D›Š Î›J€€ś‹Ŕ  Š€NšŠ F›Š Î›J€€ť‹Ŕ  Š@OšŠ A›Š Î›J€ ž‹Ŕ  Š@OšŠ F›Š Î›J€ ź‹Ŕ  Š PšŠ A›Š Î›J€€ź‹Ŕ  Š€PšŠ D›Š Î›J€€ ‹Ŕ  Š QšŠ@E›Š Î›J€€ˇ‹Ŕ  Š QšŠ@E›Š Î›J€€˘‹Ŕ  Š QšŠ F›Š Î›J€ Ł‹Ŕ  Š RšŠ@E›Š Î›J€€Ł‹Ŕ  Š€RšŠ@E›Š Î›J€€¤‹Ŕ  Š€RšŠ F›Š Î›J€€Ą‹Ŕ  Š@SšŠ D›Š Î›J€ ¦‹Ŕ  ŠŔSšŠ D›Š Î›J€ §‹Ŕ  ŠŔSšŠ F›Š Î›J€ ¨‹Ŕ  Š€TšŠ F›Š Î›J€€¨‹Ŕ  Š UšŠ A›Š Î›J€€©‹Ŕ  Š UšŠ F›Š Î›J€€Ş‹Ŕ  ŠŔUšŠ F›Š Î›J€ «‹Ŕ  Š@VšŠ@E›Š Î›J€ ¬‹Ŕ  ŠŔVšŠ@E›Š Î›J€ ­‹Ŕ  Š@WšŠ F›Š Î›J€ ®‹Ŕ  ŠŔWšŠ D›Š Î›J€ Ż‹Ŕ  Š@XšŠ F›Š Î›J€ °‹Ŕ  ŠŔXšŠ F›Š Î›J€ ±‹Ŕ  Š@YšŠ@E›Š Î›J€ ˛‹Ŕ  ŠŔYšŠ@E›Š Î›J€ ł‹Ŕ  Š@ZšŠ D›Š Î›J€ ´‹Ŕ  ŠŔZšŠ A›Š Î›J€ µ‹Ŕ  ŠŔZšŠ@E›Š Î›J€ ¶‹Ŕ  ŠŔZšŠ F›Š Î›J€€¶‹Ŕ  ŠŔ[šŠ@E›Š Î›J€ ·‹Ŕ  Š@\šŠ A›Š Î›J€ ¸‹Ŕ  Š@\šŠ F›Š Î›J€ ą‹Ŕ  Š ]šŠ A›Š Î›J€€ą‹Ŕ  Š€]šŠ F›Š Î›J€€ş‹Ŕ  Š ^šŠ A›Š Î›J€€»‹Ŕ  Š€^šŠ@E›Š Î›J€€Ľ‹Ŕ  Š _šŠ F›Š Î›J€€˝‹Ŕ  Š _šŠ F›Š Î›J€€ľ‹Ŕ  ŠŔ_šŠ F›Š Î›J€ ż‹Ŕ  Š@`šŠ@E›Š Î›J€ Ŕ‹Ŕ  Š@`šŠ F›Š Î›J€ Á‹Ŕ  Š ašŠ A›Š Î›J€€Á‹Ŕ  Š ašŠ F›Š Î›J€€Â‹Ŕ  ŠŔašŠ@E›Š Î›J€ Ă‹Ŕ  Š@bšŠ A›Š Î›J€ Ä‹Ŕ  Š@bšŠ D›Š Î›J€ Ĺ‹Ŕ  Š cšŠ F›Š Î›J€€Ĺ‹Ŕ  Š€cšŠ F›Š Î›J€€Ć‹Ŕ  Š dšŠ F›Š Î›J€€Ç‹Ŕ  Š€dšŠ F›Š Î›J€€Č
@ ™F e ]€€ 
@€É € •      SelectedTarget     Cel    TargetSelector    Q    name    End Of The Line    range      °Ť@   speed      @ź@   delay       Đ?   width       Y@   Ready    W 
   Smoke Screen      Č™@ffffffÖ?     Ŕb@   E 
   Quickdraw      z@   R    Collateral Damage      0‘@     h @      ^@   QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    WTargetSelector    RTargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    Spells    _Q    _W    _E    _R    Spells2    killstring    DodgeTable    GalioIdolOfDurand 	   charName    Galio 
   spellSlot 
   SpellType 
   skillshot 	   GnarBigW    Gnar 	   GnarBigR    NamiQ    Nami    NamiR    LuxLightBinding    Lux    RenektonPreExecute 	   Renekton    LeonaZenithBlade    Leona    LeonaZenithBladeMissle    LeonaSolarFlare    RengarE    Rengar    LeblancSoulShackle    Leblanc    LeblancSoulShackleM    RivenMartyr    Riven    LissandraW 
   Lissandra    LissandraR    UFSlash 	   Malphite    DarkBindingMissile    Morgana 
   SoulShackles    VarusR    Varus    VeigarEventHorizon    Veigar    VelkozE    Velkoz    BraumR    Braum    ViktorGravitonField    Viktor    SejuaniGlacialPrisonStart    Sejuani    SonaCrescendo    Sona    InfuseWrapper    Soraka    ShenShadowDash    Shen    SwainShadowGrasp    Swain    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    AhriSeduce    Ahri    BandageToss    Amumu    CurseoftheSadMummy    FlashFrost    Anivia    EnchantedCrystalArrow    Ashe 	   yasuoq3w    Yasuo    EliseHumanE    Elise    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave    OrianaDetonateCommand    Orianna    ZyraGraspingRoots    Zyra    ZyraBrambleZone    HowlingGale    Janna    ReapTheWhirlwind    XerathMageSpear    Xerath    Rupture    Chogath    FeralScream    CassiopeiaPetrifyingGaze    Cassiopeia    KennenShurikenStorm     Kennen    FizzMarinerDoom    Fizz    HecarimUlt    Hecarim    it 
   ItemsCast    p  p        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          q  q        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          r  r        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          s  s        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ·  !    ą  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FB Á	 Ë€
 AB
 ‚
 äA€]@€F @ GŔĆ LŔÁ ÁŔ
 	 GK GÁĹA FB  Ë 
 AB
 Â Á äA ]@€F @ GŔĆ LŔÁ Á@  FÁL 
 ÁÁ B
 A‚
 ]@€F @ GŔĆ LŔÁ ÁŔ
 	 GN GÁĹA FB Á	 Ë€
 A‚ Â äA€]@€F @ GŔĆ LŔÁ Á  	 GAO GÁĹ FB 
 Ë€
 AÂ  ÁB Ă äA€]@€F @ GŔĆ LŔÁ Á€  FÁL 
 ÁÁ B
 A‚
 ]@€F @ GŔĆ LŔÁ ÁŔ  FAQ   ĆQ ÇÁŃ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FÁL A
 Á
 Â A‚
 ]@€F @ GŔĆ LŔÁ Á  A FÁL  Á
 Â A‚
 ]@€F @ GŔĆ LŔÁ ÁŔ  FÁL A Á
 Â A‚
 ]@€F @ GŔĆ LŔÁ Á€ Á FÁL A
 Á
 Â A‚
 ]@€F U † @ Á  € C€   Ă€ ]@€F @ L Á Á@  ]@ F @ G€Ő LŔÁ Á  A FG Á ]@ F @ G€Ő LŔÁ ÁŔ 	 GAI GÁĹ	 FB Á	 Ë€
 AB
 ‚
 äA€]@€F @ G€Ő LŔÁ ÁŔ
 	 GK GÁĹA FH € ]@ F @ G€Ő LŔÁ Á  Á FG Á ]@ F @ G€Ő LŔÁ Á  A FG Á ]@ F @ G€Ő LŔÁ Á@  FÁL Á Á
 Â A‚
 ]@€F @ G€Ő LŔÁ Á  A FÁL  Á
 Â A‚
 ]@€F @ G€Ő LŔÁ Á  Á FG Á ]@ F @ G€Ő LŔÁ Á  A FG Á ]@ F @ G€Ő LŔÁ Á@  FÁV   ĆQ ÇÁŃ Ý ]@  F @ L Á Á@  ]@ GŔW L Ř Ć @ Ç€×]@€F @ L Á Á@  ]@ F @ G€Ř L Á ÁŔ  ]@ F @ G€Ř G Ů LŔÁ Á  A FG Á ]@ F@Y †€Y ť € ]   	€†AY ÇÁY ť€€ÇZ CÚ€ €ĂEÇŰ  €€Ć@ Ç‚ŘÇŮĚÂÁFZ ŚCÚ  ť€‡ĂE] Ă ĆZ ŰÝ D F„Z ‡„[ ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ G€Ř G Ů LŔÁ Á  Á FG Á ]@ F @ G€Ř G Ů LŔÁ Á  A FG Á ]@ F @ G€Ř G Ů LŔÁ ÁŔ  FH € ]@ F @ G€Ř L Á Á@  ]@ F @ G€Ř G€Ü LŔÁ Á  A FG Á ]@ F @ G€Ř G€Ü LŔÁ ÁŔ  FH € ]@ F @ G€Ř G€Ü LŔÁ Á@  FÁL Á Á
 Â A‚
 ]@€F @ G€Ř G€Ü LŔÁ Á  A FÁL  ÁÁ Â A‚
 ]@€F @ L Á Á  A ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ G@ß LŔÁ ÁŔ 	 GK GÁĹA FH € ]@ F @ G@ß LŔÁ Á   	 GAO GÁĹ FH € ]@ F @ L Á Á@    ]@ F @ G€ŕ LŔÁ Á  A FG Á ]@ F @ G€ŕ LŔÁ ÁŔ  	 GAI GÁĹ	 FB Á	 Ë€
 A! B! äA€]@€F @ G€ŕ LŔÁ Á€! 	 GK GÁĹA FB Á	 Ë€
 A! B! äA€]@€F @ G€ŕ LŔÁ Á  Á FG Á ]@ F @ G€ŕ LŔÁ Á  A FG Á ]@ F @ G€ŕ LŔÁ Á@  FÁL Á! Á
 Â A‚
 ]@€F @ G€ŕ LŔÁ Á  A FÁL " Á
 Â A‚
 ]@€F @ L Á Á@" " ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ" 	 GAI GÁĹ	 FH € ]@ F @ G€â LŔÁ Á # 	 GK GÁĹA FH € ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@  FÁL Á! Á
 Â A‚
 ]@€F @ G€â LŔÁ Á  A FÁL " Á
 Â A‚
 ]@€F @ L Á Á@# # ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ# $ FH € ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ Á@$ $ FH € ]@ F @ G€ă LŔÁ ÁŔ$ % FAe ‹ Á% ‚% A‚
 ‚% ¤A ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ% & FH € ]@ F @ G€ă LŔÁ Á@& & FAe ‹ Á% ‚
 A‚
 ‚% ¤A ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ& ' FH € ]@ F @ G€ă LŔÁ Á@' ' FAe ‹ Á% ‚
 A‚% ‚% ¤A ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ' ( FH € ]@ F @ G€ă LŔÁ Á@( ( FAe ‹ Á% ‚% A‚
 ‚
 ¤A ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ( ) FH € ]@ F @ G€ă LŔÁ Á@) ) FAe ‹ Á% ‚
 A‚% ‚
 ¤A ]@ F @ L Á ÁŔ) * ]@ F @ G ę LŔÁ Á  A FG Á ]@ F @ G ę LŔÁ Á@* * FH   ]@ F @ G€Ő LŔę Á@ ]@€ € ¬      MenuGraves 
   scriptConfig    MasterSeries: Graves    Graves1    addSubMenu    [Graves]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Graves    addTS    [Graves]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)        @   No    Normal 	   After AA    USEW    W     (W)       @
   Can Hit X 	   AA Reset    USEWX    X =     SCRIPT_PARAM_SLICE       @      @           USEE    E     (E) 	   To Mouse 
   To Target    USER    R     (R) 
   Easy Kill    Medium Kill 
   Hard Kill    USERX    CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       >@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Graves]: Harras Settings 
   harrasConfig      €F@     @P@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Graves]: Items Settings 
   iteConfig    it    LoadToMenu    [Graves]: Extra Settings 	   exConfig    [Graves]: Evadee    dspells    pairs    GetEnemyHeroes    Spells    DodgeTable 
   GetSpellData 	   tostring    Dodge  	   charName     Spell     Spells2    ED    Enable    [Graves]: Auto Heal 	   ahConfig    UAH    Auto Heal Summoner    UAHHP    Min. HP% To Heal      €A@   UAUR    Range To Check Near Enemy       ‰@     @ź@   [Graves]: KS Settings 	   ksConfig    QKS    WKS    RKS    [Graves]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    WF       I@      N@   [Graves]: Jungle Farm    jf    QJF    WJF    [Graves]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Graves]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          #   ;    M   F @ †@@ ]@ G€@ XŔŔ Ŕ€F A ‡€@ Ç@A Ç€Á]€€[    €G€@ 
@€G€@ 
@ „G€@ 
@€„G€@ 
@ …@€FŔB ‡ C ]€ 
@€G@C L€Ă ]@ G@C GŔĂ 
@ „G D L€Ă ]@ G D GŔĂ 
@€„G@D L€Ă ]@ G@D GŔĂ 
@ …F@@ G€Ä GŔÄ G Ĺ [    €G@E [@  @ €L€E ]@ F@@ GŔĹ G Ć [   Ŕ€G€B [    €G€B XŔŔ @€F@F ‡€B ]€ ‡@A ‡€A€€ € €L€F Ç€B ]@€ €       CheckOB    MenuGraves    SelectedTarget     ValidTarget    R    range    Cel    QCel    WCel    RCel    GetCustomTarget    TargetSelector    QTargetSelector    update    target    WTargetSelector    RTargetSelector 	   exConfig 	   ahConfig    UAH    recall 	   AutoHeal    comboConfig    CRKD    GetDistance    CastR3                          =   J    G   F @ ]€€ [   €€F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡€A‡ŔA@ Ŕ€G B [    €F@A G€Á G@Â €Â Ŕ€FŔB ‡ B ]€ ‡ C ‡@C€€  €L€C Ç B ]@€FŔC ]@€ F D ]€€ [   €€F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡@D‡ŔA@ Ŕ€G B [    €F@A G@Ä G@Â €Â Ŕ€FŔB ‡ B ]€ ‡ C ‡@C€€  €L€C Ç B ]@€FŔC ]@€  €       ComboActive    myHero    mana    maxMana       Y@   MenuGraves    comboConfig    QMANA    QCel    USEQ       @   GetDistance    Q    range    CastQ    ResetAA 
   HarassActive 
   harrasConfig                          L   x    ö   F @ ]€€ [    <€G@@ [@  @;€G€@ [   €€FŔ@ ‡€@ ]€ [   @€G A L@Á Ç€@ A ÁA]@ F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@C@ @€G€C [   €€F€A G Ă GŔĂ  Ä @€F@D ‡€C ]€ ‡€D ‡ŔD€€ € €L E Ç€C ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@E@  €G€E [   @€F€A G Ă GŔĹ  Ä  €F@D ‡€E ]€ ‡ F ‡ŔD€€ @€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@F@ € €L€F Ç€E ]@€F€A G Ă GŔĹ ŔĆ €
€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@F@ Ŕ
€F G †@G ť € ]   	€†G ŚÁG €GF GČ‡F ‡BHÇF ÇÂÄF HFB ťA‡F ‡ÂHť‚€ ›  €€†Â@ Ŕ€F ĂDť‚€›  Ŕ€X I@€†‚A ‡C‡BI  €†‚I ĆÂI JGCJťB b€  ă öF B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡€J@ @	€G€C [   Ŕ€F€A G Ă GŔĘ  Ä €€F@D ‡€C ]€ † B ‡ŔDŤ K€€ € €L@K Ć€K ]@€G€C [   Ŕ€F€A G Ă GŔĘ ŔĆ €€F@D ‡€C ]€ † B ‡ŔDŤ K€€ € €L@K Ç€C ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ŔK@ €€G L [   Ŕ€F€A G Ă G@Ě X€Ě €€F@D ‡ L ]€ ‡ŔL ‡ŔD€€ Ŕ€F€A G Ă G@Ě X Í € €L@M Ç L ]@€F€A G Ă G@Ě [   €€F€A G Ă G@Ě  Í @ €L€M ]@  € 7      ComboActive    recall    Cel    ValidTarget    it 
   CastItems    MenuGraves 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    QMANA    QCel    USEQ        @   GetDistance    Q    range    CastQ    WMANA    WCel    USEW    W    USEW2    CastW       @   pairs    GetEnemyHeroes    VP    GetCircularAOECastPosition    delay    width    speed    Ready     USEWX 
   CastSpell    _W    x    z    EMANA    USEE      @P@   CastE 	   mousePos    RMANA    RCel    USER       đ?   R       @   CastR    CastR2                          z       G   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€G@A [   @€F @ G@Ŕ G€Á ŔÁ  €F B ‡@A ]€ ‡@B ‡€B€€ @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ € €L D Ç@A ]@€G@D [   @€F @ G@Ŕ G€Ä [    €F B ‡@D ]€ ‡ŔD ‡€B€€ @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ E@ € €L@E Ç@D ]@€ €       MenuGraves 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QCel    USEQ        @   GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    WCel    USEW    W    WMANA    CastW                          …   «    Ú   F @ ]€€ [    5€G@@ [@  @4€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ @0€€Â €€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ€X Ä €BD @€‚ G‚D GÂÄ@@€€A B Á‚ Ă A $B€G‚D GBĆ]‚€ [  €	€FÂB L‚ĆŔ€ĂB ĂF†G €CGG
ĂGFĂB GČOCČ
C]‚ †ÂB Ś‚F €FĂB LĂĆĆG ]€GCÇOČMĂČ†ĂB ‡HĆĂB ĚĂĆFG Ý€ÇCÇÇĂŹĂMť‚ M‚‚[B    €A	 ‡BÉ@€
€Ś‚I  €ťB€€	€ŔÉ  	€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€X ÄŔ€BD @€‚ G‚D GÂÄ@ €J G‚D GÂÄ‡‚D ‡BJÇ‚@ ÇBÂÂ X D€€@‚“ €†‚J ĆG ĂJGKťB €B €ÂB CFÂB GBĂB‚CFA GBÁGBË ‚@€X Ä€€BD @€‚ G‚K GÂÄ@Ŕ€BÉFÂK ‚ Ŕ€ĂB AĂ	 ]‚€@€
€L €€B€€	€ŔI 	€ÂB CFÂB GBĂB‚CFA GBÁGBË ‚@€X ÄŔ€BD @€‚ G‚K GÂÄ@ €BL G‚K GÂÄ‡‚K ‡BJÇ‚@ ÇBÂÂ X D€€@‚“ €†‚J Ć‚L ĂJGKťB â€  cÁÎ € 3      FarmActive    recall 
   EnemyMinions    update    MenuGraves    farm    QF    WF    pairs    objects        @   myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range š™™™™™Ů?333333ă?š™™™™™é?      đ?333333ó?   Ready    CalcDamage 
   GetSpellData    _Q    level       4@      D@
   addDamage       č?     @P@      9@           health    CastQ       @   GetBestLineFarmPosition    width 
   CastSpell    x    z    WMANA    W    getDmg    CastW    GetBestCircleFarmPosition    _W                          ­   Ă    b   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇD ÇAÄŔ€€†D ÇD ÇAÄD ÂDG‚@ GBÁť X€C €ĆE BE G‚E‡ÂEÝA †A ‡ÁA‡F›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĆ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇF ÇAÄŔ€€†ÁF ÇF ÇAÄ‚F ÂDG‚@ GBÁťÁ X€C €E FG ‡‚EÇÂEB b€  ă@ë €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuGraves    jf    WJF    myHero    mana    maxMana       Y@   WMANA     GetDistance    W    range    GetBestCircleFarmPosition    width 
   CastSpell    _W    x    z    QJF    QMANA    Q    GetBestLineFarmPosition    _Q                          Ĺ   Ě    "   F @ L@Ŕ Á€  ]€€[   €€†Ŕ@ ‡ AĆŔ@ Ç@ÁŔ Ź€AĆŔA Ç ÂÇ@ÂÇ€ÂŔ €€†ŔB ĆŔ@ ÁA BABCť€€€€†@€†€C Ć @ ĚŔĂA  Ý €ť@   €       SSpells    Ready 
   summonerheal    myHero    health 
   maxHealth       Y@   MenuGraves 	   exConfig 	   ahConfig    UAHHP    EnemyCount    UAUR         
   CastSpell    GetSlot                          Î   Ô    '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuGraves 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         Ö   ç    ž   F @ †@@ ť € ]  @%€‡ŔĆÁ@ ÇÁBÁÝ ŤÁË€‚ AÂ  ÁB  äA€ÂB C‚€   €	€BC ‚C€€ĆBC ĚÂĂFD Ý‚€ÇBÄĎ‚ÄÍÂ‚‰CC ECEÍ‚ FBC L‚ĂŔ€CC ĂC†D €CDE
‹FCC GĹ†CC ŚĂCD ť€‡CD‡O
C]‚ 
BB    € FBF ‚ Ŕ€CC ]‚ ‡ÂF ‡Cť‚€ ›   €†BC Ś‚C €FCC LĂĂĆG ]€GCÄOCÇMCŹ†CC ‡EŹĂGMť‚ ›B    € X Č@€ĆBH  €A Ý‚€Ű  Ŕ
€ÇÂH ŰB   
€ Ŕ€ĆI ÇBÉÇ‚ÉŰ  €€ĆÂI  €Ý‚ ĂB J Ŕ €ĚBJ @€ÝB€€€@Ŕ€ĆI ÇBÉÇ‚ĘŰ  €€ĆÂI  €Ý‚ F J Ŕ €ĚÂJ @€ÝB€ €€€€ĆI ÇBÉÇËŰ  @€ĆÂI  €Ý‚ ĂF J € €ĚBK @€ÝB€b€  ăŔŮ € .      pairs    GetEnemyHeroes    health    math    floor    shield š™™™™™Ů?333333ă?š™™™™™é?      đ?333333ó?   Q    Ready    myHero    CalcDamage 
   GetSpellData    _Q    level       4@      D@
   addDamage       č?     @P@      9@           getDmg    W    R    _R      Ŕb@      Y@      ř?    ValidTarget      @ź@   recall    MenuGraves 	   ksConfig    QKS    GetDistance    range    CastQ    WKS    CastW    RKS    CastR3                          é    !   ;   † @ Á@   € ť€€›   @ € € ź  † @ Á€   € ť€€›   @ € € ź  † @ ÁŔ   € ť€€›   @ € € ź  † @ Á   € ť€€›   @ € € ź  † @ Á@  € ť€€›   @ € € ź  † @ Á€  € ť€€›   @ € € ź  † @ ÁŔ  € ť€€›   @ € € ź     ź   €       TargetHaveBuff2    JudicatorIntervention 
   Undying Rage    UndyingRage    ZacRebirthReady    AatroxPassiveReady 
   Chrono Shift    ChronoShift                          !  !   
Ś      Ć@@  € Ý€ @ Á@
A @	€Ć@A Ç€ÁÇŔÁ ÂŔ€Ć@B  @€ †@ Ý€ ĎŔÂŤŔ  €Ć@A Ç€ÁÇŔÁŔÂŔ€Ć@B  @€ †@ Ý€ Ď ĂŤŔ Ŕ€Ć@A Ç€ÁÇŔÁ@Ă€€Ć@B  @€ †@ Ý€ Ď€ĂŤŔ Ë €Á A A Á ‚ ä@€ÁD E€    €@ AE€€ Ć@ ĚĹFÂE Ý€ÇĆĎAĆÍÁŤ‚@ ÂFGÍ‚ A    €  Ť AG E€   €	€@ AE€€ Ć@ ĚĹF‚G Ý€ÇĆĎÁÇÍČ‚@ ÂFBHÍ‚ F@ LAĹŔ€ ‚@ ‚E†‚G ‚€F‚H
ÂHF‚@ GÂĆ†‚@ Ś‚EG ť‚€‡F‡‚‚O‚‚
B] 
AA    €  Ť I E€   €€AB A	 €€ Ć@  A    €  Ť ź   € %              GetDistance    myHero    range       ^@   MenuGraves    comboConfig    USER       đ?   getDmg    AD        @      @      @      "@š™™™™™Ů?333333ă?š™™™™™é?333333ó?   R    Ready    CalcDamage 
   GetSpellData    _R    level      Ŕb@      Y@
   addDamage       ř?   Q    _Q       4@      D@      č?     @P@      9@   W                          !   !   N   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€ŚŔ@  € ť€€›@  @€† A Ś@A € G@ GÁ‡@ ‡ÁAÇ@ ÇÂBB ť ›   €€Ű    €FB € ] ‡@ ‡ÁB€@€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ ‚AG@ GÂÁ‡@ ‡ÂBÇ@ ÇÂCB AC   Ă€   A  †DD ‡„D	‡ÄD	‡„E	]XŔĹ€€›   €C FBC ‡‚ĂÇÂĂB  €       R    Ready    ValidTarget 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2    MenuGraves 	   spConfig    rConfig    RP    line    RCH                           "!  /!   Y   Ś @  € ť€€Ç@@ Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@  € Ý€ Ű   €€Ç Á AA AGÁÁ  Í €€€€Ě B @€ Ý€€Ű@  @€Ć@B Ě€Â@€ ‡A@ ‡ÁBÇA@ ÇĂB@ BCF‚C Ý Ű   €€   €†ÁC Ŕ€ť ÇA@ ÇÄŔ@€†AD ĆD ÂÄGĹťA  € †AE ĆE ÇÁĹÇĆÇAĆ € GB@ GÂÂ‡B@ ‡CÇB@ ÇÄC@ CCFC  Ă  € D  D  Ć„E ÇÄĹ	ÇĆ	ÇÄĆ	ťX G€€Ű   €FBD †‚D ÇÂDE]B  €       CalcDMG    R    Ready    ValidTarget    health    math    floor    shield 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2    MenuGraves 	   spConfig    rConfig    RP    line    RCH                           1!  :!   /   F @ †@@ ť € ]  €	€‡@ ‡Á@ť€ ›  @€†A Ŕ€‚@ BAť€›  €€†A ŚÁA €G‚@ GÂ‡‚@ ‡BBÇ‚@ ÇBÁ@ BFĂB ťAX CŔ€†BC ‡‚C‡ÂC €€Ŕ €†BD Ć‚D ĂDGEťB b€  ă€ő €       pairs    GetEnemyHeroes    R    Ready    ValidTarget    range    VP    GetLineAOECastPosition    delay    width    speed    myHero     MenuGraves    comboConfig    USERX        @
   CastSpell    _R    x    z                          <!  @!      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       E    Ready 
   CastSpell    _E    x    z                          B!  N!   N   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€ŚŔ@  € ť€€›@  @€† A Ś@A € G@ GÁ‡@ ‡ÁAÇ@ ÇÂBB ť ›   €€Ű    €FB € ] ‡@ ‡ÁB€@€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ ‚AG@ GÂÁ‡@ ‡ÂBÇ@ ÇÂCB AC   Ă€   A  †DD ‡„D	‡ÄD	‡„E	]XŔĹ€€›   €C FBC ‡‚ĂÇÂĂB  €       W    Ready    ValidTarget 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2    MenuGraves 	   spConfig    wConfig    WP    circle    WCH                           P!  \!   N   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€ŚŔ@  € ť€€›@  @€† A Ś@A € G@ GÁ‡@ ‡ÁAÇ@ ÇÂBB ť ›   €€Ű    €FB € ] ‡@ ‡ÁB€@€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ ‚AG@ GÂÁ‡@ ‡ÂBÇ@ ÇÂCB AC   Ă€   A  †DD ‡„D	‡ÄD	‡„E	]XŔĹ€€›   €C FBC ‡‚ĂÇÂĂB  €       Q    Ready    ValidTarget 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2    MenuGraves 	   spConfig    qConfig    QP    line    QCH                           ^!  s!   
Ď   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@  F @ G@Ŕ G Č [    €G@H G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGAH GĹ†AC Ć@ ÇAŔÇČÇÁĂ@ B@‚HDF@ GBŔG‚ČGBÄť ]@   € #      MenuGraves    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range      @P@   DARC    DQR    Q    Ready    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC                          u!  y!      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         {!  !      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          !  !   "   [   €€›    €Ç Ŕ Ű   @€Ç@@€Ŕ€€ĆŔ@ Ý€€ Ű   €€Ć A Ç@ÁÇ€ÁŔÁ@€Ç B Ű   €€Ć@B B FB GÁÂMĂÝ€€Ű   € €Ě@C GB Ý@€ €       isMe    name    GravesBasicAttack    ComboActive    MenuGraves    comboConfig    USEW       @   WCel    ValidTarget    myHero    range      @P@   CastW                          Š!  ł!   đ   Ć @ Ç@ŔÇ€ŔÇŔŔŰ    :€[   €9€Ç Á AA AX @8€Ć@A Ç€ÁŰ@  @7€ÇŔÁ AA ÁA  6€›   €5€ÁŔ Á ŔB… „Ŕ „ÇŔÁ AA ÁA @
€Ć€C  € GÁCÝŔ€ †Ŕ †Ć@C X Ä@€Ć@C X@Ä€ €Ć@C €Ä  € € Ć C XŔÄ €Ć C X Ĺ@€Ć C X@Ĺ€ €Ć C €Ĺ@€ÇŔE ÁCÇ Ű    €Ć F AĆ Ç C Ç ÇŔÁŔ „Ć F AĆ Ç C Ç Ç@ÂŔ€„Ć F AĆ Ç C Ç Ç€ÂŔ …Ć@A Ç€ÁŰ@  €$€Ć@A Ç€ĆŔ€…€#€Ć@A ÇŔĆ@GŽB ŔB €G  Ŕ€GÁGFAA GÁÇX@  €A  €  Ž €B  H@€AH @€ ‡HĆAB ‚B FBA €€€ ŽŔ€B ŔH@€I @€ ‡HĆAB ‚B FBA €€€ Ž€€B @I@€I @€ ‡HĆAB ‚B FBA €€€ Ž@€B  D@€ÁI @€ ‡HĆAB ‚B FBA €€€ Ž 
€B @D@€J @€ ‡HĆAB ‚B FBA €€€ ŽŔ	€B €D €AH @€ ‡HĆAB ‚B FBA €€€A   €AH @€ †AJ Ŕ€ ť ŹÁHÇHŽÁĆAB ‚B F‚J €€€ ŽŔ€B ŔJ €ÁI GH€€ ĆAB ‚B FBA €€€ ŽG   Ŕ€AE K€   €€@ A@@GÁCA  Ŕ €AK e   A€ € /      MenuGraves 	   exConfig    dspells    ED    team    myHero    dead    type 	   shottype    radius    maxdistance         
   spelltype 	   casttype 
   getSpellType    name       @      @      @   Q    W    E    R    DodgeTable 
   skillData 	   charName    health    boundingRadius    hitchampion     target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector    tar       @   Ready    DelayAction š™™™™™É?   ¬!  ®!           @ †@Ŕ @€ €       CastE 	   mousePos                                                µ!  Ď!   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuGraves    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ř!  ˙!   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    Ţ!  Ţ!           @ @  €       AfterAA                         á!  á!           @ @  €    	   BeforeAA                         č!  č!           @ @  €       AfterAA                         ë!  ë!           @ @  €    	   BeforeAA                         ń!  ń!        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ń!  ń!           @ @  €       AfterAA                                               ô!  ô!           @ @  €    	   BeforeAA                         ů!  ů!           @ @  €       AfterAA                         ü!  ü!           @ @  €    	   BeforeAA                              	
                "  "   f   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …K€ J€Ă‚JŔĂJ@DJŔD‰†@E ‡€EJ€ ŠĄ€  J€€„
@€†K€ J Ć‚J@Ć†@E ‡ŔFŹ€ Ž@GJ€ ŤJ€G‰JŔGŠĄŔ  J€€„
@€‹C   
€Č
@ F I †@I Ç@C ÇŔÁI FÁI ]€€
@€‘F I †@J Ç@C ÇŔÁI FJ ]€€
@ ”FŔ@ † K Ç A ÇŔÁÍ@ËK C  ]€€
@€•FŔ@ † K ÇŔE ÇŔÁK C  ]€€
@€—FŔ@ † K Ç@C ÇŔÁK C  ]€€
@ K  € ÁŔ 
 AA
 
 ÁÁ
  AB ‚ Á‚ d@ 
@€K   
@€ťF@O ]€€ 
@ ž € >      SelectedTarget     Cel    TargetSelector    Q    name 
   Double Up    range      …@   Ready    W 
   Impure Shots      0@   E 
   Make It Rain      h@   width       y@   delay       ŕ?   speed    math    huge    R    Bullet Time      ŕ•@   angle    pi       >@     €f@      Đ?     @ź@   recall 	   rcasting  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_HEALTH_ASC    JungleMinions    MINION_JUNGLE    MINION_SORT_MAXHEALTH_DEC    QTargetSelector    TARGET_LESS_CAST_PRIORITY       |@   DAMAGE_PHYSICAL    RTargetSelector    ETargetSelector 	   TextList    Harass him 
   1 AA = Kill! 
   2 AA = Kill! 
   3 AA = Kill! 
   4 AA = Kill! 
   Q = Kill! 
   E = Kill! 
   R = Kill!    Ignite = Kill! 	   KillText    it 
   ItemsCast    "  "        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          "  "        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          "  "        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          	"  	"        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               "  {"   ‹  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FB A
 Ë€‚
 AÂ
  äA€]@€F @ GŔĆ LŔÁ Á@  FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 GL GÁĹA FH € ]@ F @ GŔĆ LŔÁ Á€ 	 GÁL GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 	 GM GÁĹÁ
 FB A
 Ë ‚
 AÂ
  ÁB äA ]@€F @ GŔĆ LŔÁ Á€ Á FO A
 ÁÁ B A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FAP   ĆP ÇÁĐ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FO A Á Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FO  Á Â A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FO A Á Â A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FO A Á Â A‚ ]@€F T † @ Á    C  € Ă€ ]@€F @ L Á Á@  ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ G€Ô LŔÁ Á@  FH   ]@ F @ G€Ô LŔÁ ÁŔ 	 GL GÁĹA FH € ]@ F @ G€Ô LŔÁ Á€ 	 GÁL GÁĹ
 FH € ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ Á@  FO Á Á Â A‚ ]@€F @ G€Ô LŔÁ Á  A FO  Á Â A‚ ]@€F @ G€Ô LŔÁ ÁŔ  FO A Á Â A‚ ]@€F @ G€Ô LŔÁ Á  Á FG Á ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ Á€ Á FV   ĆP ÇÁĐB Ý ]@  F @ L Á Á€ Á ]@ G W L@× Ć @ ÇŔÖ]@€F @ L Á Á€ Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ F @ GŔ× LŔÁ Á  A FH € ]@ F @ GŔ× LŔÁ Á€ Á FO  Á Â A‚ ]@€F @ GŔ× LŔÁ Á@  FO Á ÁÁ  A‚ ]@€F @ GŔ× LŔÁ Á  Á FG Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ F @ GŔ× LŔÁ Á@  FO Á Á B A‚ ]@€F @ GŔ× LŔÁ Á  Á FG Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ F @ GŔ× LŔÁ Á  A FO Á Á B A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á  	 GÁI GÁĹ
 FH € ]@ F @ GŔŰ LŔÁ Á@ 	 GÁL GÁĹ
 FH € ]@ F @ GŔŰ LŔÁ Á€ 	 GM GÁĹÁ
 FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ý LŔÁ Á  A FG Á ]@ F @ G Ý LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ G Ý LŔÁ ÁŔ 	 GL GÁĹA FH € ]@ F @ G Ý LŔÁ Á€ 	 GÁL GÁĹ
 FH € ]@ F @ G Ý LŔÁ Á  Á FG Á ]@ F @ G Ý LŔÁ Á  A FG Á ]@ F @ G Ý LŔÁ Á@  FO Á Á Â A‚ ]@€F @ G Ý LŔÁ Á  A FO A Á Â A‚ ]@€F @ G Ý LŔÁ ÁŔ  FO A Á Â A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á  	 GÁI GÁĹ
 FH € ]@ F @ GŔÝ LŔÁ Á@ 	 GL GÁĹA FH € ]@ F @ GŔÝ LŔÁ Á€ 	 GÁL GÁĹ
 FH € ]@ F @ GŔÝ LŔÁ Á  Á FG Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á@  FO Á Á Â A‚ ]@€F @ GŔÝ LŔÁ Á  A FO A Á Â A‚ ]@€F @ GŔÝ LŔÁ ÁŔ  FO A Á Â A‚ ]@€F @ L Á ÁŔ  ]@ F @ G ß LŔÁ Á  A FG Á ]@ F @ G ß LŔÁ Á@  FH € ]@ F @ G ß LŔÁ ÁŔ   FH € ]@ F @ G ß LŔÁ Á  Á FG Á ]@ F @ G ß LŔÁ Á  A FG Á ]@ F @ G ß LŔÁ Á@    FH € ]@ F @ G ß LŔÁ ÁŔ  ! FAa ‹ Á! ‚ AÂ! ‚ ¤A ]@ F @ G ß LŔÁ Á  Á FG Á ]@ F @ G ß LŔÁ Á  A FG Á ]@ F @ G ß LŔÁ Á " A" FH € ]@ F @ G ß LŔÁ Á€" Á" FAa ‹ Á! ‚ A# ‚ ¤A ]@ F @ G ß LŔÁ Á  Á FG Á ]@ F @ G ß LŔÁ Á  A FG Á ]@ F @ G ß LŔÁ Á@# # FH € ]@ F @ G ß LŔÁ ÁŔ# $ FAa ‹ Á! # A‚ ‚ ¤A ]@ F @ L Á Á@$ $ ]@ F @ G€ä LŔÁ Á  A FG Á ]@ F @ G€ä LŔÁ ÁŔ$ % FH   ]@ F @ G€Ô L@ĺ Á€ ]@€F @ GŔ× L@ĺ Á@ ]@€F @ GŔ× L@ĺ Á  ]@€F @ GŔ× L@ĺ Á  ]@€ € –      MFMenu 
   scriptConfig    MasterSeries: MissFortune 
   MissFortune1    addSubMenu    [MissFortune]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    MissFortune    addTS    [MissFortune]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    RC #   Disable Move Block With RightClick    USEQ    Use     Q     (Q)        @   No    Normal 	   After AA    USEQ2    Use On Minions    USEW    W     (W)    USEE    E     (E)    USER    R     (R)    Killable & Dist > AA 
   Can Hit X    RX    X =     SCRIPT_PARAM_SLICE       @           CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [MissFortune]: Harras Settings 
   harrasConfig      €F@     €Q@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [MissFortune]: Items Settings 
   iteConfig    it    LoadToMenu    [MissFortune]: Extra Settings 	   exConfig    UAH    Auto Heal Summoner    UAHHP    Min. HP% To Heal      €A@   UAUR    Range To Check Near Enemy       ‰@     @ź@   ARF    Auto (R) If Can Hit X       @   AEF    Auto (E) If Can Hit X "   [MissFortune]: KillSteal Settings 	   ksConfig    QKS    EKS    RKS    [MissFortune]: Farm Settings    farm       I@$   [MissFortune]: Jungle Farm Settings    jf    QJF    WJF    EJF    [MissFortune]: Draw Settings    drawConfig    DST    Draw Selected Target    DD    Draw DMG Text    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@      n@   DER 
   Draw E Range    DERC    Draw E Range Color       i@   DRR 
   Draw R Range    DRRC    Draw R Range Color    [MissFortune]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          }"  —"   P   L @ ]@ G@@ L€Ŕ ]@ GŔ@ L€Ŕ ]@ G A L€Ŕ ]@ G@A X€Á Ŕ€FŔA ‡@A Ç B Ç@Â]€€[    €G@A 
@ …G@A 
@€…G@A 
@ †G@A 
@€† €F€C ‡ŔC ]€ 
@ …G@@ G Ä 
@€…GŔ@ G Ä 
@ †G A G Ä 
@€†F@D G€Ä GŔÄ [    €FŔA ‡@C Ç E Ç@Â]€€[   @€G@E [@  € €L€E Ç@C ]@€F@D GŔĹ G Ć [    €G@E [@  @ €L@F ]@ G@E [@  @ €L€F ]@ FŔF †@D ]@  €    	   CheckULT    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    MFMenu    comboConfig    CRKD    R    recall    CastR 	   exConfig    UAH 	   AutoHeal    AutoF    CheckOB                          ™"  ˘"   '   F @ G@Ŕ G€Ŕ ŔŔ  €G A X@Á @€F€A ]€€ [   @€FŔA G Â †ŔA ‡@BP€€ O€Â † @ ‡@@‡ŔB@ €€F C ‡ A Ç@C Ç€Ă]€€[   Ŕ€GŔC [@   €L D Ç A ]@€F@D ]@€  €       MFMenu    comboConfig    USEQ       @   QCel     ComboActive    myHero    mana    maxMana       Y@   QMANA    ValidTarget    Q    range 	   rcasting    CastQ    ResetAA                          ¤"  đ"   Ľ  F @ ]€€ [   €m€G@@ [@  Ŕl€F€@ ‡Ŕ@ ]€ [   €€G A L@Á ÇŔ@ A ÁA]@ F€A G Â G@Â [   Ŕ€F€@ ‡Ŕ@ Ç€B ÇŔÂ]€€[    €G C [@  @ €L@C ]@ G€C XŔĂ @5€F D G@Ä † D ‡€DP€€ OŔÄ †€A ‡ B‡ E@ €2€F€A G Â G@Ĺ €Ĺ @€F€@ ‡€C ÇŔE ÇŔÂ]€€[   €€G C [@  Ŕ€F€A G Â G Ć [@  € €L@F Ç€C ]@€F€A G Â G@Ĺ €Ĺ €+€F€A G Â G Ć [   @*€G C [@  €)€G€F LŔĆ ]@ F G ‡€F ‡@G]  '€†@ Ŕ€ÂE ÂBť€›  Ŕ"€‡C ›   "€†G Ŕ€ť ĆG  €Ý ‚G FD ‚ Î‚ĚÁÇÝ ĎČŤÁÁA ‚G @€‚ F‚G †D ]‚ BLÂG]‚ OČŚ‚ČťLĂH] LĂÇ] ŚČť  Ŕ€€ ‡IĎĂŤĂÇCIÄÍ„„IOÄ
DGIŹÄN„„‡DIĎÄŽÄ	Ç„IĹÎ…	ĹI FJ € Ŕ€  ] …  FĹI †J Ŕ€  	@€	ť ]…  †ĹI ĆJ D IFD GFÉ†D ‡†I
Ý ť…  ĆEJ †J GI
‡FI
†€F†J ‡É
ÇFÉ
]†€††J ÇIGIť€Ý…  ĆJ K‡†C ÁF † FĆI †J ÇIGIG‡Iť ]†  ††J ÇÉGÉť†€Ě†Ë@ 
Ý†€Ű   €ĆĆK D @€Ý†€ÇE ÇB ‡
 €ĆL GL @€ÝF€ €Ć†@ ‡C GÇE GÇÂÝ†€Ű  @€ĚFF G‡C ÝF€@€†@ ÇC ÂE ÂBť€›  € €ŚAF ‚C ťA€b€  ă ŘG€L XŔĂ €€F D G@Ä † D ‡€DP€€ OŔÄ †€A ‡ B‡ŔL@ Ŕ€F€A G Â G Í [   €€F€@ ‡€L ]€ [   @€FŔK ‡€L ]€ ‡@M ‡ŔBŤŔD€€ @€G C [@  € €L€M Ç€L ]@€GŔM XŔĂ @%€F D G@Ä † D ‡€DP€€ OŔÄ †€A ‡ B‡ N@ €"€F€A G Â G@Î €Ĺ @€FŔK ‡ŔM ]€ ‡€N ‡ŔB€€ €
€GŔE GŔÎ ]€€ [   Ŕ€F O Ŕ ÇŔM D AA ]€€[@    €A€ ‡@M ‡ŔNť€€ ›   Ŕ€† O Á@
 ÁM FD A ť€€›@    €€ ÇŔM ÇŔĎP APGÁM GĐ Í 
€ Ŕ Ŕ€ĚŔP GÁM Ý@€Ŕ€F€A G Â G@Î @Ď @	€FŔK ‡ŔM ]€ ‡€N ‡ŔB€€ €€F D L Ń ÇŔM D AQQFD GÁŃOŇ
A]€ O@Ň ‡ŔM ‡ŔOĆ P Ç@ĐÁM PÝ€ ŤŔ @ @€†ŔK ÇŔM ť€ € Ą €ŚŔP ÁM ť@€ 
€F€A G Â G@Î ŔŇ Ŕ€FŔK ‡ŔM ]€ ‡€N ‡ŔB€€  €FŔJ L Ó ÇŔM N ASGN GÓ‡N ‡ÁBÇN ÇÁÓD ] A TATT€ @€A BÁTŔ  €L FU ‡É ÇÉ A  € U      ComboActive    recall    ValidTarget    Cel    it 
   CastItems    MFMenu 
   iteConfig    comboConfig    USEW    W    range 	   rcasting    CastW    QCel     myHero    mana    maxMana       Y@   QMANA    USEQ        @   Q    USEQ2    CastQ 
   EnemyMinions    update    pairs    objects    Vector    normalized       y@      b@   unpack    perpendicular    x    y    z    WorldToScreen    D3DXVECTOR3    Polygon    Point    VP    GetPredictedPos       Đ?	   contains    GetDistance 
   CastSpell    _Q    ECel    EMANA    USEE    E    CastE    RCel    RMANA    USER    R    Ready    getDmg       @           health    math    floor    shield    CastR    CalcDamage 
   addDamage       č?   ap š™™™™™É?      (@     0@      @   GetConeAOECastPosition    delay    angle    speed 	   prConfig    vphit       đ?   RX    _R                          ň"  *#   0  F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @I€G A [@  €H€F @ G@Ŕ G@Á [    €G€A [@  @€F @ G@Ŕ GŔÁ [@   €F B ‡@B Ç€B ÇŔÂ]€€[   @€F C G@Ă † C ‡€CP€€ OŔĂ † @ ‡@@‡ D@ € €L@D Ç@B ]@€G@B X€Ä  1€F @ G@Ŕ G@Á [   Ŕ/€F @ G@Ŕ GŔÁ [   €.€G€A [@  Ŕ-€F C G@Ă † C ‡€CP€€ OŔĂ † @ ‡@@‡ D@  +€GŔD L Ĺ ]@ F@E ‡ŔD ‡€E] €(€†B Ŕ€‚B ÂBť€›  @$€‡AB ›  €#€†ÁE Ŕ€ť ĆÁE  €Ý ÂE FC ‚ Î‚ĚĆÝ ĎAĆŤÁÁ ÂE @€‚ FÂE †C ]‚ BLF]‚ OBĆŚÂĆťLG] LĆ] ŚĂĆť  Ŕ€€ ‡CGĎĂŤĂÇGÄÍ„ÄGOÄ
DGDGŹÄN„„‡„GĎÄŽÄ	ÇÄGĹÎ…	H FEH € Ŕ€  ] …  FH †EH Ŕ€  	@€	ť ]…  †H ĆEH C FGFC G†Ç†C ‡ĆG
Ý ť…  Ć…H ĆH GFG
‡†G
†€FĆH ‡FÇ
Ç†Ç
]†€†ĆH ÇFG‡Gť€Ý…  I FI‡FB Á†	 † FH †FH ÇFG‡GGÇGť ]†  †ĆH ÇFÇ‡Çť†€ĚĆÉ@ 
Ý†€Ű  €€ĆJ C @€Ý†€‡B ÇB ‡
€€ĆJ GB @€Ý†€@Ę
 €Ć†J ÇJ @€ÝF€ €ĆB GB G‡B GÇÂÝ†€Ű  @€ĚFD GGB ÝF€@€†B ÇAB ‚B ÂBť€›  € €ŚAD BB ťA€b€  ă€ÖF @ G@Ŕ G Ë [   €€G€A [@  Ŕ€F C G@Ă † C ‡€CP€€ OŔĂ † @ ‡@@‡@K@  €F B ‡€K ÇŔK ÇŔÂ]€€[   @ €L L ]@ F @ G@Ŕ G@Ě [   Ŕ€G€A [@   €F C G@Ă † C ‡€CP€€ OŔĂ † @ ‡@@‡€L@ @€F B ‡ŔL Ç M ÇŔÂ]€€[   € €L@M ÇŔL ]@€ € 6      MFMenu 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEQ 	   rcasting    USEQ2    ValidTarget    QCel    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ  
   EnemyMinions    update    pairs    objects    Vector    normalized       y@      b@   unpack    perpendicular    x    y    z    WorldToScreen    D3DXVECTOR3    Polygon    Point    VP    GetPredictedPos       Đ?	   contains    GetDistance       y@
   CastSpell    _Q    USEW    WMANA    Cel    W    CastW    USEE    EMANA    ECel    E    CastE                          ,#  D#   s   F @ ]€€ [   @€F@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€D BDť€›  € €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĹ€€€X€Ă €†ÁC Ŕ€BE BDť€›  @ €ŚE ťA †A ‡ÁA‡ÁE›   	€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĆ€@€X€ĂŔ€†ÁC Ŕ€BF BDť€›   €†F ÇAF ÇAÄBF ÂFG‚@ GBÁťÁ X€C€€ŔŽ €BG F‚G ‡ÂGÇHB b€  ă ç € !      FarmActive    recall 
   EnemyMinions    update    pairs    objects    MFMenu    farm    USEQ    myHero    mana    maxMana       Y@   QMANA     ValidTarget    Q    range    CastQ    USEW    WMANA    W    CastW    USEE    EMANA    E    GetBestCircleFarmPosition    width        @
   CastSpell    _E    x    z                          F#  ^#   q   F @ ]€€ [   Ŕ€F@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€D BDť€›  €€†D ÇD ÇAÄD ÂDG‚@ GBÁť X€C €ĆE BE G‚E‡ÂEÝA †A ‡ÁA‡F›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĆ€€€X€Ă €†ÁC Ŕ€‚F BDť€›  @ €ŚÁF ťA †A ‡ÁA‡G›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAÇ€Ŕ€X€Ă@€†ÁC Ŕ€‚G BDť€›  € €ŚÁG  €ťA€b€  ă€ç €        FarmActive    recall    JungleMinions    update    pairs    objects    MFMenu    jf    EJF    myHero    mana    maxMana       Y@   EMANA     ValidTarget    E    range    GetBestCircleFarmPosition    width 
   CastSpell    _E    x    z    WJF    WMANA    W    CastW    QJF    QMANA    Q    CastQ                          `#  t#   g   F @ †@@ ť € ]  €€†@ ‡Á@‡A€‚€
€‡A ›A  Ŕ	€‡ÁA ‡Bť€ ›  €€†AB Ŕ€ÂA ‚Bť€›  Ŕ€†ÁB ŚC €GÂA GBĂ‡ÂA ‡‚CÇÂA Ç‚ÂĂA ĂCFD ťAX@D €†‚@ ‡Â@‡A Ŕ€Ŕ‰@€
ŔD†E ĆBE EGĂEťB †@ ‡Á@‡F€‚@
€‡A ›A  €	€‡AF ‡Bť€ ›  @€†AB Ŕ€BF ‚Bť€›  €€†ÁB ŚF €GBF GBĂ‡BF ‡ÂFÇBF Ç‚ÂCF ĂCFD ťAX@DŔ€†‚@ ‡Â@‡F €€Ŕ‰ €†E ĆG EGĂEťB b€  ă€ç €       pairs    GetEnemyHeroes    MFMenu 	   exConfig    ARF         	   rcasting    R    Ready    ValidTarget    range    VP    GetConeAOECastPosition    delay    angle    speed    myHero         @
   CastSpell    _R    x    z    AEF    E    GetCircularAOECastPosition    width    _E                          v#  }#       F @ L@Ŕ Á€  ]€€[    €†Ŕ@ ‡ AĆŔ@ Ç@ÁŔ Ź€AĆŔA Ç ÂÇ@ÂŔ @€†€B ĆŔ@ ÁA BÁBť€€€ †@€†@C Ć @ Ě€ĂA  Ý €ť@   €       SSpells    Ready 
   summonerheal    myHero    health 
   maxHealth       Y@   MFMenu 	   exConfig    UAHHP    EnemyCount    UAUR         
   CastSpell    GetSlot                          #  †#   &   F @ G@Ŕ G€Ŕ [   Ŕ€FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MFMenu 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         #  #   j   F @ †@@ ť € ]  @€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€FB LÂÂŔ€B CCCFB GĂOĂĂ
C]‚ OÄX@Ä@€†‚D Ŕ€Ă ť‚€›  Ŕ€‡E ›B   €‡BE ›B  @
€ŔŔ€†‚E ‡ÂE‡F›  €€†‚D Ŕ€ĂA CFť‚€›  Ŕ €Ś‚F  €ťB€Ŕ€  €†‚E ‡ÂE‡ÂF›  Ŕ€†‚D Ŕ€B CF
Gť‚€›  Ŕ €ŚBG  €ťB€ €@€€†‚E ‡ÂE‡‚G›  @€†‚D Ŕ€ĂG CFť‚€›  € €ŚH  €ťB€b€  ăŔć € !      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    CalcDamage 
   addDamage       č?   ap š™™™™™É?      (@    ValidTarget      @ź@	   rcasting    recall    MFMenu 	   ksConfig    QKS    range    CastQ    EKS       I@   CastE    RKS    R    CastR                          š#  ž#   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       Q    Ready 
   CastSpell    _Q                           #  ¤#   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          ¦#  ˛#   D   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă€   A  †ÄC ‡D	‡DD	‡E	]X@Ĺ€€›   €‚B FÂB ‡ĂÇBĂB  €       E    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2    MFMenu 	   spConfig    eConfig    EP    circle    ECH                           ´#  Â#   F   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   Ŕ€Ű   @€FB € ] ‡@ ‡AB€€€
ŔB…FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AC   Ă€   A  †DD ‡„D	‡ÄD	‡„E	]XŔĹŔ€›  @€
ŔB…C FBC ‡‚ĂÇÂĂB  €       R    Ready    VP 
   IsDashing    delay    angle    speed    myHero    GetDistance    range 	   rcasting 
   CastSpell    _R    x    z    GetPrediction2    MFMenu 	   spConfig    rConfig    RP    cone    RCH                           Ä#  ń#   1  F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   Ŕ	€LŔD ]@ A  †@E ‡€EÁ  aŔ€FAE LÁĹŔ ]€†F Ŕ€ť ›  €€X€Á €†AF ĆF BÂG‚Â‡ÂÂÝ ť  ÇABÎÁĆ‚BGFBG ‡‚G ÇÂG Ç‡ÂÁ  €@ C ]B `€÷F @ G@Ŕ G€Č [    €GŔH G É ]€€ [   Ŕ€F B †@I ‡@BĆ@I Ç€ÂAI ÁBGÁH GÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ GŔÉ [    €G J G É ]€€ [   Ŕ€F B †@I ‡@BĆ@I Ç€ÂAI ÁBGJ GÉ†AC Ć@ ÇAŔÇAĘÇÁĂ@ B@BJDF@ GBŔGBĘGBÄť ]@  F @ G@Ŕ G€Ę [   @$€GŔJ G É ]€€ [    #€F@I † K Ć@K ť€ Ć@I ŽŔ Ś€Kť€ ÇŔJ Ç€ÉŹŔ M€€ Ŕ Ć K AK Ý€ K FAI  Î Ë GÁJ GÉALL]BĚ‚ ‚K‚ LL]Ŕ€€ @€GBÂ Ź‚€M‚‚‡‚Â Ď‚ ŤÂÇÂÂ €ÍCÂ O€CGÂ Ź N‡ĂÂ Ď€ŽĂĆCF „F @€€ Ŕ€ Ý  DF F„F € Ŕ€  ] „  FDF †„F ĆDI ÇDÂ	EI …B
FEI GĹÂ
ť ]„  †„L ÇDÂ…ÂGEB‡…BÁ FC F@ GFŔGĆĚGĆĂ†@ ‡F@
‡ĆL
‡D
Ć@ ÇFŔ
ÇĆĚ
ÇFÄ
 ťD  †„L ÇDÂ…ÂGEÂ‡…ÂÁ FC F@ GFŔGĆĚGĆĂ†@ ‡F@
‡ĆL
‡D
Ć@ ÇFŔ
ÇĆĚ
ÇFÄ
 ťD  †„L ÇDÂ…ÂGEB‡…BÁ FC F@ GFŔGĆĚGĆĂ†@ ‡F@
‡ĆL
‡D
Ć@ ÇFŔ
ÇĆĚ
ÇFÄ
 ťD   € 4      MFMenu    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    DmgCalc       đ?   heroManager    iCount    GetHero    ValidTarget    WorldToScreen    D3DXVECTOR3      €A@      $@	   DrawText 	   TextList 	   KillText       3@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    Vector 	   mousePos    normalized       |@   unpack    perpendicular 	   DrawLine    DRRC                          ó#  $   Ż   A   †@@ ‡€@Á   aŔ)€FA@ LÁŔŔ ]€‡Á›A   (€‡AÁ›  @'€†A Ŕ€ť ŔA &€†B ‡ABŹ…Ť…ĆC B @€†B Ý C AB €€ĆB ‚ ‚CFC B Ŕ€B ]‚ OÂĂ†C ÁB  €FB ť‚ ŹDĆC C @€†B ÁĂ Ý‚€C A €€ĆB Ä €FB LĂÄŔ€B EDEFB G„ĹOÄĹ
D] OĆ‡CĆĆF ÇĂĆÇÝ ŤĂŔ€ €‡CG ŠG€€‡CĆĆF ÇĂĆÇÝ ŤĂ € €‡CG ŠĂGŔ€‡CĆĆF ÇĂĆÇÝ ŤĂ@€ €‡CG ŠH €‡CĆĆF ÇĂĆÇÝ ŤĂ€€ €‡CG ŠCH@€‡CĆĆF ÇĂĆÇÝ ŤĂŔ€ €‡CG ŠC€€‡CĆĆF ÇĂĆÇÝ ŤĂ € €‡CG ŠĂCŔ€‡CĆĆF ÇĂĆÇÝ ŤĂ@€ €‡CG ŠD €‡CĆĆF ÇĂĆÇÝ ŤĂ€€ €‡CG ŠH@€‡CĆĆF ÇĂĆÇÝ ŤĂÍĂÍÍCÍ€@ €‡CG ŠH`€Ő € #         đ?   heroManager    iCount    GetHero    dead    visible    GetDistance      p§@   myHero    level       4@      I@   getDmg    AD        @      @      @   Q    E    CalcDamage 
   addDamage       č?   ap š™™™™™É?      (@   health    math    floor    shield 	   KillText       @      @       @      "@      $@                         $  $   
   G @ [    €F@@ ]@€ F€@ ]@€ Ŕ €FŔ@ ]@€ F A ]@€  €    	   rcasting    DisableMove    DisableAttacks    EnableAttacks    EnableMove                           $  +$   !   [   Ŕ€Ű   @€Ŕ   €€AŔ@Á  €   €
@A‚A A€ ÁA A€ [   Ŕ€Ŕ    €Ű   €€AŔ@ €    €
@A„ € 	      isMe    name    find    bulletsound 	   rcasting    DisableMove    DisableAttacks    recall                          -$  8$   !   [   Ŕ€›   @€Ç Ŕ Ű   €€Ç@@Ě€ŔAÁ  Ý€€Ű    €
@A‚Ć€A Ý@€ ĆŔA Ý@€ [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔA Ý€€Ű     €
@A„ € 	      isMe    name    find    bulletsound 	   rcasting     EnableAttacks    EnableMove    recall                          :$  >$      ‡ @ ›   € €†@@ Ŕ € ť@  €    	   rcasting 
   BlockMove                          @$  `$   
^   Ć @ Ŕ€  €Ć@@ Ç€ŔÇŔŔŰ   Ŕ €Ç A Ű     €
@A‚Ç€A ÇŔÁÝ€€ Ű    € Â € €@B  €
€B‚ĆŔB Ŕ€ Ŕ€Ć@@ Ç€ŔÇ ĂŰ   €€Á@   FC †ÁC ť€ ] €€†D Ŕ€ť‚ ›  @€†BD Ŕ€D ť‚€ZŔ @ €ŔD@€†BD Ŕ€D ť‚€Ŕ   €b  ăú   € Ĺ€€GAE [   €GE‡AE ‡E€Ŕ€
ŔÄŠFA@ GŔGĂ[   €FÁE  ÇE–Á]A €€
 ŠFA@ GŔGĂ[   €FÁE A ÇE–Á]A  €       WM_RBUTTONDOWN    MFMenu    comboConfig    RC 	   rcasting     R    Ready       p@     €T@   WM_LBUTTONDOWN    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          j$  ‘$   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    p$  p$           @ @  €       AfterAA                         s$  s$           @ @  €    	   BeforeAA                         z$  z$           @ @  €       AfterAA                         }$  }$           @ @  €    	   BeforeAA                         $  $        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    $  $           @ @  €       AfterAA                                               †$  †$           @ @  €    	   BeforeAA                         ‹$  ‹$           @ @  €       AfterAA                         Ž$  Ž$           @ @  €    	   BeforeAA                              	
                “$  Ă$   Đ   
@@€
@@
@ŔK€ J€Á‚J ÂJ Â„JŔB…J@C†Ą   J€ ‡
@ ‚K€ J Ä‚J@ÄJ€Ä„JŔB…JŔD†Ą@  J€ ‡
@€‡K€ J@Ĺ‚J€ĹJŔĹ„JŔB…J F†Ą€  J€ ‡
@ ŠFŔ@ †€F ÁŔ G C  ]€€
@€ŚFŔ@ †€F ÇŔC ÇŔÁG C  ]€€
@€ŽFŔ@ †€F Ç E ÇŔÁG C  ]€€
@ ŹC      Ă   
ŔH‘
Ŕ€
€ 
@€ŹF@I †€I Ç A ÇŔÁÁI FJ ]€€
@ ’F@I †€J Ç A ÇŔÁÁI FJ ]€€
@€”K   
@€•AŔ   
ŔD—
€€–
@ –K   
@€K €‹Ŕ  Š Í™Š€ÍšŠ Á›ËŔ  Ę Î™Ę@ÎšĘ Ĺ›Á  
Î™
ÁÎš
Ď›KÁ  JAĎ™JĎšJÁ›‹Á  ŠÁĎ™ŠĐšŠĹ›ËÁ  ĘAĐ™ĘĐšĘÁ›Â  
ÂĐ™
Ńš
Á›KÂ  JBŃ™J‚ŃšJÂĂ›‹Â  ŠÂŃ™ŠŇšŠĹ›ËÂ  ĘBŇ™Ę‚ŇšĘĹ›Ă  
ĂŇ™
Óš
Ĺ›KĂ  JCÓ™JÓšJÁ›‹Ă  ŠĂÓ™ŠÔšŠĂĂ›ËĂ  ĘĂÓ™ĘCÔšĘĂĂ›Ä  
„Ô™
ÄÔš
Ď›KÄ  J„Ô™JŐšJĎ›‹Ä  ŠDŐ™Š„ŐšŠÁ›ËÄ  ĘÄŐ™ĘÖšĘÄĂ›Ĺ  
EÖ™
…Öš
Ĺ›KĹ  JĹÖ™J×šJĎ›‹Ĺ  ŠE×™Š…×šŠĹĂ›ËĹ  ĘĹ×™ĘŘšĘĹĂ›Ć  
FŘ™
†Řš
Á›KĆ  JĆŘ™JŮšJÁ›‹Ć  ŠFŮ™Š†ŮšŠĆĂ›ËĆ  ĘĆŮ™ĘÚšĘÁ›Ç  
GÚ™
‡Úš
ÇĂ›KÇ  JÇÚ™JŰšJÇĂ›‹Ç  ŠGŰ™Š‡ŰšŠÇĂ›d@€
@ ™F \ ]€€ 
@€· € q      SelectedTarget     Cel    TargetSelector    Q    name    Piercing Arrow    range      Č™@   speed    delay       Đ?   width      €Q@   Ready    E    Hail of Arrows      čŚ@     p—@     @o@   R    Chain of Corruption      Ě@     xž@      ^@   QTargetSelector    TARGET_LESS_CAST_PRIORITY      š@   DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector 
   QCharging    QSend 
   QPressStatus    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring 	   CastTime    TimeToFullRange 
   LoadSpeed         333333ó?   WStack    GapCloserList 	   charName    Aatrox 
   spellName    AatroxQ 	   menuname    Akali    AkaliShadowDance    Alistar 	   Headbutt    W    Fiora    FioraQ    Diana    DianaTeleport    Elise    EliseSpiderQCast    Fizz    FizzPiercingStrike    Gragas    GragasE    Hecarim    HecarimUlt 	   JarvanIV    JarvanIVDragonStrike    Irelia    IreliaGatotsu    Jax    JaxLeapStrike    Khazix    KhazixE    khazixelong    LeBlanc 
   LeblancSlide    LeblancSlideM    LeeSin    BlindMonkQTwo    Leona    LeonaZenithBlade 	   Malphite    UFSlash 	   Pantheon    Pantheon_LeapBash    Poppy    PoppyHeroicCharge 	   Renekton    RenektonSliceAndDice    Riven    RivenTriCleave    Sejuani    SejuaniArcticAssault    Tryndamere 
   slashCast    Vi    ViQ    MonkeyKing    MonkeyKingNimbus    XinZhao 
   XenZhaoSweep    Yasuo    YasuoDashWrapper    it 
   ItemsCast    —$  —$        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          $  $        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ™$  ™$        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               Ĺ$  -%   Š  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FB Á	 Ë€
 AB
 ‚
 ÁÂ
  äA€]@€F @ GŔĆ LŔÁ Á@  FÁK Á	 Á B A ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á€ 	 GÁL GÁĹ
 FB A
 Ë€
 AB
 ‚
 ÁÂ
  äA€]@€F @ GŔĆ LŔÁ ÁŔ
  FÁK A Á ‚ A ]@€F @ GŔĆ LŔÁ ÁŔ  FÁK Á	 Á B A ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  	 GAO GÁĹ FB A Ë€
 AÂ  ÁB  äA€]@€F @ GŔĆ LŔÁ ÁŔ  FÁK A ÁÁ B A ]@€F @ GŔĆ LŔÁ Á€ Á FR   ĆAR ÇŇÂ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FÁK  Á ‚ A ]@€F @ GŔĆ LŔÁ ÁŔ  FÁK A Á ‚ A ]@€F @ GŔĆ LŔÁ Á€ Á FÁK  Á ‚ A ]@€F@U † @ Á  € C  € Ă€ ]@€F @ L Á Á€ Á ]@ F @ GŔŐ LŔÁ Á  A FG Á ]@ F @ GŔŐ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔŐ LŔÁ Á  A FH   ]@ F @ GŔŐ LŔÁ Á€ 	 GÁL GÁĹ
 FH € ]@ F @ GŔŐ LŔÁ Á  Á FG Á ]@ F @ GŔŐ LŔÁ Á  A FG Á ]@ F @ GŔŐ LŔÁ Á  A FÁK  Á ‚ A ]@€F @ GŔŐ LŔÁ ÁŔ  FÁK Á Á ‚ A ]@€F @ GŔŐ LŔÁ Á  Á FG Á ]@ F @ GŔŐ LŔÁ Á  A FG Á ]@ F @ GŔŐ LŔÁ Á  A FW   ĆAR ÇŇÂ Ý ]@  F @ L Á Á  A ]@ G€X LŔŘ Ć @ Ç@Ř]@€F @ L Á Á  A ]@ F @ G@Ů L Á Á€ Á ]@ F @ G@Ů GŔŮ LŔÁ Á  A FG Á ]@ F Z †@Z ť € ]  €€†Z ÇÁZ ť €ÇŰ[  €Ć@ ÇBŮÇÂŮĚÂÁGC[ Ç[Ä G\–CĆH € ÝB ˘  #űb€  ă€ůF @ G@Ů GŔŮ LŔÁ Á  Á FG Á ]@ F @ G@Ů GŔŮ LŔÁ Á  A FG Á ]@ F @ G@Ů GŔŮ LŔÁ Á@  FH € ]@ F @ G@Ů L Á ÁŔ  ]@ F @ G@Ů G Ý LŔÁ Á  A FG Á ]@ F @ G@Ů G Ý LŔÁ Á@  FH € ]@ F @ G@Ů G Ý LŔÁ ÁŔ  FÁK A Á ‚ A ]@€F @ G@Ů G Ý LŔÁ Á€ Á FÁK  ÁÁ B A ]@€F @ L Á Á€ Á ]@ F @ GŔß LŔÁ Á  A FG Á ]@ F @ GŔß LŔÁ Á   	 GAI GÁĹ	 FH € ]@ F @ GŔß LŔÁ Á@  	 GAO GÁĹ FH € ]@ F @ L Á Á€  Á  ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á ! 	 GAI GÁĹ	 FB Á	 Ë€
 AB! ‚! äA€]@€F @ GŔŕ LŔÁ ÁŔ! 	 GÁL GÁĹ
 FB A Ë€
 AB! ‚! äA€]@€F @ GŔŕ LŔÁ Á  Á FG Á ]@ F @ GŔŕ LŔÁ Á  A FG Á ]@ F @ GŔŕ LŔÁ Á  A FÁK  Á ‚ A ]@€F @ GŔŕ LŔÁ ÁŔ  FÁK  Á ‚ A ]@€F @ L Á Á " A" ]@ F @ G@â LŔÁ Á  A FG Á ]@ F @ G@â LŔÁ Á€" 	 GAI GÁĹ	 FH € ]@ F @ G@â LŔÁ ÁŔ" 	 GÁL GÁĹ
 FH € ]@ F @ G@â LŔÁ Á  Á FG Á ]@ F @ G@â LŔÁ Á  A FG Á ]@ F @ G@â LŔÁ Á  A FÁK  Á ‚ A ]@€F @ G@â LŔÁ ÁŔ  FÁK  Á ‚ A ]@€F @ L Á Á # A# ]@ F @ G@ă LŔÁ Á  A FG Á ]@ F @ G@ă LŔÁ Á€# Á# FH € ]@ F @ G@ă LŔÁ Á  Á FG Á ]@ F @ G@ă LŔÁ Á  A FG Á ]@ F @ G@ă LŔÁ Á $ A$ FH € ]@ F @ G@ă LŔÁ Á€$ Á$ Fe ‹ ÁA% B% A B% ¤A ]@ F @ G@ă LŔÁ Á  Á FG Á ]@ F @ G@ă LŔÁ Á  A FG Á ]@ F @ G@ă LŔÁ Á€% Á% FH € ]@ F @ G@ă LŔÁ Á & A& Fe ‹ ÁA%  A B% ¤A ]@ F @ G@ă LŔÁ Á  Á FG Á ]@ F @ G@ă LŔÁ Á  A FG Á ]@ F @ G@ă LŔÁ Á€& Á& FH € ]@ F @ G@ă LŔÁ Á ' A' Fe ‹ ÁA% B% A  ¤A ]@ F @ G@ă LŔÁ Á  Á FG Á ]@ F @ G@ă LŔÁ Á  A FG Á ]@ F @ G@ă LŔÁ Á€' Á' FH € ]@ F @ G@ă LŔÁ Á ( A( Fe ‹ ÁA%  AB%  ¤A ]@ F @ L Á Á€( Á( ]@ F @ GŔč LŔÁ Á  A FG Á ]@ F @ GŔč LŔÁ Á ) A) FH   ]@ F @ GŔŐ L€é Á  ]@€ € §   
   MenuVarus 
   scriptConfig    MasterSeries: Varus    Varus1    addSubMenu    [Varus]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Varus    addTS    [Varus]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)        @   No    Normal 
   If Dist > AA    If W Have X Stacks 
   Last Both    USEQWC    W Stack Count:     SCRIPT_PARAM_SLICE               @   USEE    E     (E)       @   If Dist > X    USEE2    X Distance =       0@      Ś@   USEEWC    USER    R     (R) 
   Easy Kill    Medium Kill 
   Hard Kill    Can Hit X Enemy    USEREC    X Enemy Count:        @   CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   EMANA    Min. Mana % To Use (E)       .@   RMANA    Min. Mana % To Use (R)       $@
   AddSpellMenu    [Varus]: Harras Settings 
   harrasConfig    USEQ2    Use Only At Max Range (Q)       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Varus]: Items Settings 
   iteConfig    it    LoadToMenu    [Varus]: Extra Settings 	   exConfig    [Varus]: Anti-GapCloser    ES2    ipairs    GetEnemyHeroes    pairs    GapCloserList 	   charName 
   spellName    GapCloser     :  	   menuname    UG    Enable    [Varus]: Auto Heal 	   ahConfig    UAH    Auto Heal Summoner    UAHHP    Min. HP% To Heal      €A@   UAUR    Range To Check Near Enemy       ‰@     @ź@   [Varus]: KS Settings 	   ksConfig    QKS    RKS    [Varus]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    EF    [Varus]: Jungle Farm    jf    QJF    EJF    [Varus]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Varus]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          /%  M%   „   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡G€D [   Ŕ€FŔD ]€€ [@   €F@@ G Ĺ G@Ĺ [   €€F€E GŔĹ †€E ‡ FP€€ O@Ć †@@ ‡ E‡€FZ€€ €€FŔF ]€€ [   €€F€E GŔĹ †€E ‡ FP€€ O@Ć †@@ ‡ G‡€F€€ Ŕ€G C [    €F@@ G Ĺ G@Ç X€Ç Ŕ€FŔG ‡ C ]€  Č € €L@H Ç C ]@€L€H ]@ F@@ GŔČ G É G@É [    €G€I [@  @ €LŔI ]@ F@@ G Ç G Ę [   €€F B ‡€C ]€ [   @€FŔG ‡€C ]€ ‡@J ‡€B€€ € €L€J Ç€C ]@€ € +      CheckOB 
   MenuVarus    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target 
   QCharging 
   HarassActive 
   harrasConfig 
   HTEnabled    myHero    mana    maxMana       Y@   QMANA    ComboActive    comboConfig    USEQ       đ?   GetDistance      Č™@   CastQ 
   QRangeUpdate 	   exConfig 	   ahConfig    UAH    recall 	   AutoHeal    CRKD    R    CastR3                          O%  %   í   F @ ]€€ [   Ŕ9€G@@ [@   9€G€@ [   €€FŔ@ ‡€@ ]€ [   @€G A L@Á Ç€@ A ÁA]@ F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@C@ €€G€C [   Ŕ€FŔC ‡€C ]€  Ä €€F€A G Ă G@Ä €Ä Ŕ €LŔD Ç€C ]@€@€F€A G Ă G@Ä  Ĺ Ŕ€FŔC ‡€C ]€ † B ‡@EŤ€E@  €LŔD Ç€C ]@€ 
€F€A G Ă G@Ä ŔĹ Ŕ€L F Ç€C ]€€†€A ‡ C‡@F@ Ŕ€LŔD Ç€C ]@€Ŕ€F€A G Ă G@Ä €Ć €€FŔC ‡€C ]€ † B ‡@EŤ€EY@ Ŕ€L F Ç€C ]€€†€A ‡ C‡@F@ € €LŔD Ç€C ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ŔF@  €G G [   @€FŔC ‡ G ]€ ‡@G ‡@E€€ €€F€A G Ă G€Ç €Ä Ŕ €LŔG Ç G ]@€@€F€A G Ă G€Ç  Ĺ Ŕ€FŔC ‡ G ]€ †€A ‡ C‡ H@  €LŔG Ç G ]@€ 
€F€A G Ă G€Ç ŔĹ Ŕ€L F Ç G ]€€†€A ‡ C‡@H@ Ŕ€LŔG Ç G ]@€Ŕ€F€A G Ă G€Ç €Ć €€FŔC ‡ G ]€ †€A ‡ C‡ HY@ Ŕ€L F Ç G ]€€†€A ‡ C‡@H@ € €LŔG Ç G ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡€H@ @€GŔH [   Ŕ€F€A G Ă G É X@É €€F€A G Ă G É X€Ć @€FŔC ‡ŔH ]€ ‡€I ‡@E€€ € €LŔI ÇŔH ]@€F€A G Ă G É €Ć @ €L J ]@  € )      ComboActive    recall    Cel    ValidTarget    it 
   CastItems 
   MenuVarus 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    QMANA    QCel    GetDistance      Č™@   USEQ        @   CastQ       @   range      @P@      @
   GetStacks    USEQWC       @   EMANA    ECel    E    USEE    CastE    USEE2    USEEWC    RMANA    RCel    USER       đ?   R    CastR    CastR2                          …%  –%   x   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€G@A [    €F @ G@Ŕ G€Á [   Ŕ€FŔA ‡@A ]€  Â €€F @ G@Ŕ G@Â [@  @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@ € €LŔC Ç@A ]@€G@A [   €
€F @ G@Ŕ G€Á [   @	€FŔA ‡@A ]€  Â  €F @ G@Ŕ G@Â [   Ŕ€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@  €G D [@  €€F@D †€D ĆŔD Ç ĹÁD AE]@ G€E GŔĹ @ Ś€ €LŔC Ç@A ]@€G@F [   @€F @ G@Ŕ G€Ć [    €FŔA ‡@F ]€ ‡ŔF ‡ŔE€€ @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡ G@ € €L@G Ç@F ]@€ €    
   MenuVarus 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QCel    USEQ    GetDistance      Č™@   USEQ2    myHero    mana    maxMana       Y@   QMANA    CastQ 
   QCharging 
   CastSpell    _Q 	   mousePos    x    z    Q    range      8@   ECel    USEE    E    EMANA    CastE                          %  Ä%   ·   F @ ]€€ [   @,€F@@ [@  €+€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ €'€€Â  €ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€X Ä@€BD @€‚ G‚D GÂÄ@€€E A‚ €€ĆÂB C ‚€G‚Ĺ ‚@
€LÂE Ŕ€]B€@€@Ĺ Ŕ€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚ 	€F B  €€BF A‚ ‡‚D ‡ÂFÇ‚@ ÇBÂÂ X D €@…€€ŚÂE   ťB€€€G BG‚€ G‚G NÂÇ ‚Ŕ€BF A‚ ‡‚D ‡ÂFÇ‚@ ÇBÂÂ X D€ €ŚH   ťB€€B €ÂB CFÂB GBĂB‚CFA GBÁGBČ ‚@€X Ä€€BD @€‚ G‚H GÂÄ@Ŕ€‚ĹFE ‚ Ŕ€ĂB AC ]‚€@€
€ÂH €€B€€	€@E 	€X Ä€€BD @€‚ G‚H GÂÄ@Ŕ€ÂB CFÂB GBĂB‚CFA GBÁGBČ ‚ €I G‚H GÂÄ‡‚H ‡ÂFÇ‚@ ÇBÂÂ X D€€@… €†BI Ć‚I ĂIGJťB â€  c× € )      FarmActive    recall 
   EnemyMinions    update 
   MenuVarus    farm    QF    EF    pairs    objects        @   myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    getDmg       @   health    CastQ 
   QCharging    GetBestLineFarmPosition      Č™@   width    os    clock 	   CastTime       ŕ?   CastQ2    EMANA    E    CastE    GetBestCircleFarmPosition 
   CastSpell    _E    x    z                          Ć%  á%   h   F @ ]€€ [   €€F@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇD ÇAÄŔ€€†D ÇD ÇAÄD ÂDG‚@ GBÁť X€C €ĆE BE G‚E‡ÂEÝA †A ‡ÁA‡F›   
€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĆ€@€‡F ›A  @€†ÁF ÇG ÇAÄG ÂDG‚@ GBÁťÁ X€C €BG € B€ €†ÁF ÇG ÇAÄG ÂDG‚@ GBÁťÁ X€C€ €‚G € B€b€  ăŔé €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuVarus    jf    EJF    myHero    mana    maxMana       Y@   EMANA     GetDistance    E    range    GetBestCircleFarmPosition    width 
   CastSpell    _E    x    z    QJF    QMANA 
   QCharging    GetBestLineFarmPosition    Q    CastQ    CastQ2                          ă%  ę%   "   F @ L@Ŕ Á€  ]€€[   €€†Ŕ@ ‡ AĆŔ@ Ç@ÁŔ Ź€AĆŔA Ç ÂÇ@ÂÇ€ÂŔ €€†ŔB ĆŔ@ ÁA BABCť€€€€†@€†€C Ć @ ĚŔĂA  Ý €ť@   €       SSpells    Ready 
   summonerheal    myHero    health 
   maxHealth       Y@
   MenuVarus 	   exConfig 	   ahConfig    UAHHP    EnemyCount    UAUR         
   CastSpell    GetSlot                          ě%  ň%   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FÁA †ÁA ĆAB ÂA F‚A †ÂA Ć‚A CB FA †A ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuVarus 	   prConfig    ALS    myHero    level    GetHeroLeveled    _E    _Q    _W    _R    LevelSpell       đ?                         ô%  &   m   F @ †@@ ť € ]   €‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€FB LÂÂŔ€B C†CC €C‡
DFB GCÄ
CFB GCÄ†B ‡DOOĂÄ
C]‚ X ĹŔ€†BE Ŕ€ ť‚€›  @
€‡ÂE ›B  €€Ŕ@€†F ‡BF‡‚F›   €†ÂF Ŕ€ť‚  GŔ €ŚBG  €ťB€€€ Ŕ€†F ‡BF‡‚G›  €€†ÂF Ŕ€ť‚ Ç‚B ÇÂÇŔŔ €ŚH  €ťB€ €@€€†F ‡BF‡BH›  @€†ÂF Ŕ€ť‚ Ç‚H ÇÂÇŔ€ €ŚÂH  €ťB€b€  ă ć € $      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    CalcMagicDamage 
   GetSpellData    _Q    level      ŔR@      9@   ap 
   apPercent       đ?    ValidTarget      @ź@   recall 
   MenuVarus 	   ksConfig    QKS    GetDistance      Č™@   CastQ    EKS    range    CastE    RKS    R    CastR3                          &  &   m      Á     A  †A@ Ŕ€ ť Ć@ ÇÁŔÍÁŔ€€†AA ‡A‡ÁA B€€†AB Á  € F‚@ ť ŹŔB€€†AA ‡A‡ÁAŔB€€†AB Á  € F‚@ ť Ź C€€†AA ‡A‡ÁA@C@€†AB Á  € F‚@ ť Ź€C‡ÁC ‡Dť€ ›  €€†@ ŚAD € F‚@ L‚ÄĆÂD ]‚€GĹOB‚ŠM‚Ĺ†‚@ ‡ÂEM‚‚†‚@ ‡ÂEĆ‚@ ÇĆŹÂŹBM‚‚ť Ü@   €Á   ‡AF ‡Dť€ ›  Ŕ€†AB ÁA  € F‚@ B ť€A   €  ‡F ‡Dť€ ›  Ŕ€†AB Á  € F‚@ B ť€\A   €A  ŤÁ ŤŤAź  €               GetDistance    myHero    range      @P@
   MenuVarus    comboConfig    USER2       đ?   getDmg    AD        @      @      @      "@   R    Ready    CalcMagicDamage 
   GetSpellData    _Q    level      ŔR@      9@   ap 
   apPercent    Q    E                          &  #&   I   ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € ť€ ›   @€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă€   A  †D ‡DD	‡„D	‡DE	]X€Ĺ€€›   €ÂB FC ‡BĂÇ‚ĂB  €       R    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2 
   MenuVarus 	   spConfig    rConfig    RP    line    RCH                           %&  2&   T   Ś @  € ť€€Ç@@ Ç€ŔÝ€€ Ű   €€ĆŔ@  € Ý€ Ű   @€Ç Á AA AGÁÁ  Í €€@€Ć B Ě@Â@€ ‡A@ ‡BÇA@ ÇÁÂB@ CFBC Ý Ű   €€   €†C Ŕ€ť ÇA@ ÇÁĂŔ@€†D ĆAD ‚ÄGÂÄťA  € †E ĆAE ÇĹÇÁĹÇĆ € GB@ G‚Â‡B@ ‡ÂBÇB@ ÇÂĂC@ CFCC C Ă  € D  D  ĆDE Ç„Ĺ	ÇÄĹ	Ç„Ć	ťXŔF€€Ű   €FD †BD Ç‚DĂD]B  €       CalcDMG    R    Ready    ValidTarget    health    math    floor    shield    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2 
   MenuVarus 	   spConfig    rConfig    RP    line    RCH                           4&  =&   5   F @ †@@ ť € ]   €‡@ ‡Á@ť€ ›  Ŕ	€†A Ŕ€ť ›  €€†AA Ŕ€ť Ç@ ÇÁŔŔ€†ÁA ŚB €G‚@ GBÂ‡‚@ ‡‚BŤÂBÇ‚@ Ç‚Á@ CFCC ťAX€CŔ€†ÂC ‡D‡BD €€Ŕ‰ €†ÂD ĆE CEGEťB b€  ă ô €       pairs    GetEnemyHeroes    R    Ready    ValidTarget    GetDistance    range    VP    GetLineAOECastPosition    delay    width      Ŕb@   speed    myHero  
   MenuVarus    comboConfig    USEREC        @
   CastSpell    _R    x    z                          ?&  K&   I   ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € ť€ ›   @€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă€   A  †D ‡DD	‡„D	‡DE	]X€Ĺ€€›   €ÂB FC ‡BĂÇ‚ĂB  €       E    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2 
   MenuVarus 	   spConfig    eConfig    EP    circle    ECH                           M&  a&   s   † @ ›@    € € ‡@@ ‡€@ť€€ ›    €†Ŕ@ Ŕ € ť€ ›   Ŕ€‡ A ›@  @€†@A Ć€A ÇŔÁÇ ÂÇ@Â € GA@ GÂ‡A@ ‡ÁBÁ B@ BCF‚C Â Ă    D  C  ĆA ÇĂÁÇÂÇÄť X@D€€Ű    €FD †ÁD ÇEBE]A €€‡ A ›   Ŕ€†€E ŚŔE € GA@ GÂ‡A@ ‡ÁBÇA@ ÇAĂ‚C ť ›   €€Ű    €FF € ] ‡A@ ‡AF€@€FD  ÇEBE]A  € FAA †A ‡ÁA‡B‡ABŔ€ B@ ‚BGB@ GÂÂ‡B@ ‡BFÇB@ ÇBĂC AĂ   Ă    AD  †„A ‡ÄA	‡B	‡D	]X@Ä €›  € €ÂF €€B€ €    	   VIP_USER    Q    Ready    ValidTarget 
   QCharging    GetPrediction2 
   MenuVarus 	   spConfig    qConfig    QP    delay    width      Č™@   speed    myHero    line    QCH  
   CastSpell    _Q    x    z    VP 
   IsDashing    GetDistance    range            CastQ2                          c&  k&      † @ ›@    € € ‡@@ ›   €€†€@ ÇŔŔ Á GAÁ ť€ 
ŔAĆ B AB @ Ý@€
€B €    	   VIP_USER 
   QCharging    D3DXVECTOR3    x    y    z    QSend    CastSpell2    _Q                           m&  &   
­   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@   €     
   MenuVarus    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range      @P@   DARC    DQR    Q    Ready    DER    E    DERC    DRR    R    DRRC                          &  …&      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ‡&  ‹&      @@@€ €@ GÁŔ 
Á€ €       name 
   varuswdebuff    WStack 
   networkID                         Ť&  ™&   ,   [   @€Ç Ŕ Ű   €€›    €Ç@@Ě€ŔAÁ  Ý€€Ű   € €
@A‚
ŔA
@A„[   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAA Ý€€Ű     €
@Á„[   €€Ç€Â ÁB B @€Ç@@ Ă€ €Ç@C Ă ĘŔC €       isMe    name    find    varusq 
   QCharging  	   CastTime         
   QPressStatus    recall    type    myHero 
   varuswdebuff    WStack 
   networkID                           ›&  ť&      ‡ @ Ç@Ŕ ‡Ŕ ›@    €€  ź   €       WStack 
   networkID                                 ź&  Ą&      G @ [   Ŕ€G@@ †Ŕ@ ‡ AÁ@ A ÁA€ GB AAAABBť€€Ť€€…J€ @ €G@@ J C € 
   
   QCharging    Q    range    math    min      ŕ•@   os    clock 	   CastTime 333333ó?     Ŕb@     @o@     Č™@                         §&  ˝&   …   [   Ŕ€›   @€Ç Ŕ Ű   €€Ç@@Ě€ŔAÁ  Ý€€Ű    €
@A‚ĆŔA Ç ÂÝ€€ 
Ŕ Ć@B Ç€ÂÇŔÂÇ ĂŰ   Ŕ€Ç@C Ç€ĂÝ€€ Ű   €€ĆŔC D Ý  €[   €€BÄ F‚D GBÄX@@€ÂÄ F‚D GÂÄ@ €›   €€B@GĹ@€€BB ‚BÂBGĹB  Ŕ€BE @€ ‡BC ‡‚E‚€   €ÂE  Ŕ€ÂE@  Ŕ €F €€ B€@
€ÂEB  €€BF @€ ‚ FBF ‡‚F]‚ †BF Ŕ€ ť‚ N‚‚LÂĆ]‚ OBŽ
BFBF €€ ]‚ †BF Ç‚Fť‚ ĆBF  € Ý‚ ŽÂŚÂFť‚ Ź‚‚ŽM‚‚†‚G Ć‚D  € ť‚€Ć‚G D @ Ý‚€Y€‚@€†‚G Ć‚D  € ť‚€Ć‚G D @€Ý‚€€‚€ €ŚÂG  € ťB€â€  cç €        isMe    name    find    VarusQ 
   QCharging 	   CastTime    os    clock 
   MenuVarus 	   exConfig    ES2    UG    R    Ready    pairs    GapCloserList    team    myHero    type 
   spellName    ValidTarget    range    target    CastR    Vector    endPos    normalized      Ŕr@      Y@   GetDistanceSqr    CastR3                          ż&  ě&   
z   Ç @ Ű    €@@ €€Ŕ € €ĚŔ@ FA Ý@€Ç@A Ű    €€A€€ŔÁ  €ĚŔ@ FA Ý@€
 Â‚Ŕ€€A@€@Â Ŕ€
€Â‚@€ÇŔB Ç ĂÝ€€ Ű    €€AŔ €@Â @ €
€Â‚€€€A €ŔÁ €€Ć@C C FA GÁĂ†A ‡DÝ@ Ć@D Ŕ€ Ŕ€Ć€D ÇŔÄÇ ĹŰ   €€Á@   FE †ÁE ť€ ] €€†F Ŕ€ť‚ ›  @€†BF Ŕ€A ť‚€ZŔ @ €€F@€†BF Ŕ€A ť‚€Ŕ   €b  ăú   €ŔĆ€€GG [   €GAG‡G ‡AG€Ŕ€
€FŽFD GÁÄGĹ[   €FG Á ÇAG–Á]A €€
 ŽFD GÁÄGĹ[   €FG  ÇAG–Á]A  € !   
   QCharging       đ?     €@   CastQ2 	   mousePos 
   QPressStatus      @T@      p@      p@   Q    Ready 
   CastSpell    _Q    x    z    WM_LBUTTONDOWN 
   MenuVarus    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ő&  '   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ű&  ű&           @ @  €       AfterAA                         ţ&  ţ&           @ @  €    	   BeforeAA                         '  '           @ @  €       AfterAA                         '  '           @ @  €    	   BeforeAA                         '  '        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    '  '           @ @  €       AfterAA                                               '  '           @ @  €    	   BeforeAA                         '  '           @ @  €       AfterAA                         '  '           @ @  €    	   BeforeAA                              	
                '  ą'     
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚K€ JŔÂ‚J ĂJ€Ă†J Ä‡J€ÄĄ@  J€€„
@ …KŔ  J Ĺ‚J ÂĄ€  J€€„
@€‰KŔ  J€Ĺ‚J ÂĄŔ  J€€„
@€ŠFŔ@ † F Ç€B ÇŔÁAF C  ]€€
@€‹
ŔFŤF@G †€G Ç A ÇŔÁÁG FH ]€€
@ ŽF@G †€H Ç A ÇŔÁÁG FH ]€€
@€K  † I Ć@I I FÁI d@ 
@€‘K    Á€ Á AA d@ 
@ ”K   
@€”K   
@ •
@Ŕ•
@@–
ŔĆ–K€ ‹Ŕ  Š@LŠ@E™Š Í™J€€—‹Ŕ  Š€MŠ@E™ŠŔÍ™J€€š‹Ŕ  Š@NŠ@E™Š Í™J€ ś‹Ŕ  ŠŔNŠ@E™Š Í™J€ ť‹Ŕ  Š@OŠ@E™ŠŔÍ™J€ ž‹Ŕ  ŠŔOŠ@E™Š Í™J€ ź‹Ŕ  Š@PŠ@E™Š Í™J€  ‹Ŕ  ŠŔPŠ@E™ŠŔÍ™J€ ˇ‹Ŕ  Š@QŠ@E™Š Í™J€ ˘‹Ŕ  ŠŔQŠ@E™ŠŔÍ™J€ Ł‹Ŕ  Š@RŠ@E™Š Í™J€ ¤‹Ŕ  ŠŔRŠ@E™ŠŔÍ™J€ Ą‹Ŕ  Š@SŠ@E™Š Í™J€ ¦‹Ŕ  ŠŔSŠ@E™ŠŔÍ™J€ §‹Ŕ  Š@TŠ@E™ŠŔÍ™J€ ¨‹Ŕ  ŠŔTŠ@E™ŠŔÍ™J€ ©‹Ŕ  Š@UŠ@E™Š Í™J€ Ş‹Ŕ  ŠŔUŠ@E™Š Í™J€ «‹Ŕ  Š@VŠ@E™Š Í™J€ ¬‹Ŕ  ŠŔVŠ@E™ŠŔÍ™J€ ­‹Ŕ  Š@WŠ@E™Š Í™J€ ®‹Ŕ  ŠŔWŠ@E™Š Í™J€ Ż‹Ŕ  Š@XŠ@E™Š Í™J€ °‹Ŕ  ŠŔXŠ@E™ŠŔÍ™J€ ±‹Ŕ  Š@YŠ@E™Š Í™J€ ˛‹Ŕ  ŠŔYŠ@E™Š Í™J€ ł‹Ŕ  Š@ZŠ@E™Š Í™J€ ´‹Ŕ  ŠŔZŠ@E™Š Í™J€ µ‹Ŕ  Š@[Š@E™Š Í™J€ ¶‹Ŕ  ŠŔ[Š@E™Š Í™J€ ·‹Ŕ  Š@\Š@E™Š Í™J€ ¸‹Ŕ  ŠŔ\Š@E™Š Í™J€ ą‹Ŕ  Š@]Š@E™Š Í™J€ ş‹Ŕ  ŠŔ]Š@E™Š Í™J€ »‹Ŕ  Š@^Š@E™Š Í™J€ Ľ‹Ŕ  ŠŔ^Š@E™Š Í™J€ ˝‹Ŕ  Š@_Š@E™ŠŔÍ™J€ ľ‹Ŕ  ŠŔ_Š@E™Š Í™J€ ż‹Ŕ  Š@`Š@E™Š Í™J€ Ŕ‹Ŕ  ŠŔ`Š@E™Š Í™J€ Á‹Ŕ  Š@aŠ@E™Š Í™J€ Â‹Ŕ  ŠŔaŠ@E™Š Í™J€ Ă‹Ŕ  Š@bŠ@E™ŠŔÍ™J€ Ä‹Ŕ  ŠŔbŠ@E™Š Í™J€ Ĺ‹Ŕ  Š@cŠ@E™Š Í™J€ Ć‹Ŕ  ŠŔcŠ@E™ŠŔÍ™J€ Ç‹Ŕ  Š@dŠ@E™Š Í™J€ Č‹Ŕ  ŠŔdŠ@E™Š Í™J€ É‹Ŕ  Š@eŠ@E™ŠŔÍ™J€ Ę‹Ŕ  ŠŔeŠ@E™Š Í™J€ Ë‹Ŕ  Š@fŠ@E™Š Í™J€ Ě‹Ŕ  ŠŔfŠ@E™Š Í™J€ Í‹Ŕ  Š@gŠ@E™Š Í™J€ Î‹Ŕ  ŠŔgŠ@E™Š Í™J€ Ď‹Ŕ  Š@hŠ@E™Š Í™J€ Đ‹Ŕ  ŠŔhŠ@E™Š Í™J€ Ń‹Ŕ  Š@iŠ@E™ŠŔÍ™J€ Ň‹Ŕ  ŠŔiŠ@E™Š Í™J€ Ó‹Ŕ  Š@jŠ@E™Š Í™J€ Ô‹Ŕ  ŠŔjŠ@E™ŠŔÍ™J€ Ő‹Ŕ  Š@kŠ@E™Š Í™J€ Ö‹Ŕ  ŠŔkŠ@E™Š Í™J€ ×‹Ŕ  Š@lŠ@E™ŠŔÍ™J€ Ř‹Ŕ  ŠŔlŠ@E™ŠŔÍ™J€ Ů‹Ŕ  Š@mŠ@E™ŠŔÍ™J€ Ú‹Ŕ  ŠŔmŠ@E™Š Í™J€ Ű‹Ŕ  Š@nŠ@E™ŠŔÍ™J€ Ü‹Ŕ  ŠŔnŠ@E™Š Í™J€ Ý‹Ŕ  Š@oŠ@E™ŠŔÍ™J€ Ţ‹Ŕ  ŠŔoŠ@E™Š Í™J€ ß‹Ŕ  Š@pŠ@E™Š Í™J€ ŕ‹Ŕ  ŠŔpŠ@E™ŠŔÍ™J€ á‹Ŕ  Š@qŠ@E™Š Í™J€ â‹Ŕ  Š@qŠ@E™Š Í™J€ ă‹Ŕ  Š rŠ@E™ŠŔÍ™J€€ă‹Ŕ  Š€rŠ@E™Š Í™J€€ä‹Ŕ  Š sŠ@E™Š Í™J€€ĺ‹Ŕ  Š€sŠ@E™ŠŔÍ™J€€ć‹Ŕ  Š tŠ@E™Š Í™J€€ç‹Ŕ  Š€tŠ@E™Š Í™J€€č
@ —K €‹Ŕ  Š uŠ€őęŠ ÁëËŔ  Ę€MĘ@ÍęĘ@ĹëÁ  
v
Aöę
ÂëKÁ  JÁVJöęJÁë‹Á  ŠATŠÔęŠAĹëËÁ  ĘÁvĘ÷ęĘÁëÂ  
BW
B÷ę
ÁëKÂ  JÂYJ‚÷ęJÂÄë‹Â  ŠÂZŠ‚ÚęŠBĹëËÂ  ĘÂ[ĘÂ÷ęĘBĹëĂ  
C[
řę
CĹëKĂ  JCxJřęJÁë‹Ă  ŠĂxŠůęŠĂÄëËĂ  ĘĂxĘCůęĘĂÄëÄ  
„y
Äůę
„ÂëKÄ  J„yJúęJ„Âë‹Ä  ŠD_ŠDúęŠÁëËÄ  ĘÄ_Ę„úęĘÄÄëĹ  
Ĺa
…áę
EĹëKĹ  JĹzJűęJ…Âë‹Ĺ  ŠE{Š…űęŠĹÄëËĹ  ĘĹ{ĘüęĘĹÄëĆ  
Fg
Füę
ÁëKĆ  JFhJ†üęJÁë‹Ć  ŠĆ|ŠýęŠĆÄëËĆ  ĘFoĘFýęĘÁëÇ  
Gq
‡ýę
ÇÄëKÇ  JÇ}JţęJÇÄë‹Ç  ŠsŠGţęŠÇÄëd@€
@€éK  	‹€  Š@VŠ ÖęË€  Ę@cĘ ăę  
Áe
ĺęK  JÁQJŃę‹  ŠÁ]ŠÝęË  ĘÁ\ĘÜę‚  
Bb
âęK‚  JÂWJ‚×ę‹‚  ŠÂSŠ‚ÓęË‚  ĘBqĘńę  
Co
ďęK  JĂ~J˙ę‹  ŠCmŠíęË  ĘĂzĘC˙ę„  
Ä`
„ŕęK„  JÄpJ„đę‹„  ŠDmŠíęË„  ĘrĘÄńę…  
Ĺn
…îęK…  JEiJéęd@ 

@ ýFŔ ]€€ 
@ ˙ €       SelectedTarget     Cel    TargetSelector    Q    name    Rapid Fire    range      0@   Ready    W    Rocket Jump       Ś@   speed      ř‘@   delay       ŕ?   width      @o@   E    Explosive Charge    R    Buster Shot    WTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    Spells    _Q    _W    _E    _R    Spells2    killstring    EStack    INSECTARGET 
   JUMPPOSITION    CANCAST    DodgeTable    AhriTumble 	   charName    Ahri 
   spellSlot 
   SpellType 
   skillshot    AkaliShadowDance    Akali    castcel    CurseoftheSadMummy    Amumu 
   GlacialStorm    Anivia    InfernalGuardian    Annie    EnchantedCrystalArrow    Ashe    StaticField    Blitzcrank    BrandWildfire    Brand    BraumR    Braum    CaitlynAceintheHole    Caitlyn    CassiopeiaPetrifyingGaze    Cassiopeia    Feast    Chogath    MissileBarrage    Corki    DariusExecute    Darius    DianaTeleport    Diana    DravenRCast    Draven 	   EvelynnR    Evelynn    EzrealTruehotBarrage    Ezreal 
   Crowstorm 
   FiddleSticks    FioraDance    Fiora    FizzMarinerDoom    Fizz    GalioIdolOfDurand    Galio    CannonBarrage 
   Gangplank    GarenR    Garen 	   GnarBigR    Gnar    GragasExplosiveCask    Gragas    GravesChargeShot    Graves    HecarimUlt    Hecarim    IreliaTranscendentBlades    Irelia    JarvanIVCataclysm 	   JarvanIV 
   JinxRWrapper    Jinx 
   FallenOne    Karthus 	   RiftWalk 	   Kassadin 
   KatarinaR 	   Katarina    KennenShurikenStorm     Kennen    KogMawLivingArtillery    KogMaw    BlindMonkRKick    LeeSin    LeonaSolarFlare    Leona    LissandraR 
   Lissandra    LucianR    Lucian    LuxMaliceCannon    Lux    UFSlash 	   Malphite    AlZaharNetherGrasp 	   Malzahar 
   MaokaiDrain3    Maokai    MissFortuneBulletTime    MissFortune    MordekaiserChildrenOfTheGrave    Mordekaiser 
   SoulShackles    Morgana    NamiR    Nami    NautilusGandLine 	   Nautilus 
   AbsoluteZero    Nunu    OrianaDetonateCommand    Orianna 	   Tremors2    Rammus    rivenizunablade    Riven    RumbleCarpetBomb    Rumble    SejuaniGlacialPrisonStart    Sejuani    ShyvanaTransformCast    Shyvana    SkarnerImpale    Skarner    SonaCrescendo    Sona    SwainMetamorphism    Swain    SyndraR    Syndra    TaricHammerSmash    Taric 
   ThreshRPenta    Thresh    BusterShot 	   Tristana    TrundlePain    Trundle    UrgotSwap2    Urgot    VarusR    Varus    VeigarPrimordialBurst    Veigar    VelkozR    Velkoz    ViR    Vi    ViktorChaosStorm    Viktor    VladimirHemoplague 	   Vladimir    InfiniteDuress    Warwick    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave    XerathLocusOfPower2    Xerath 
   XenZhaoParry 	   Xin Zhao    YasuoRKnockUpComboW    Yasuo    zedult    Zed    ZiggsR    Ziggs    ZyraBrambleZone    Zyra    GapCloserList    Aatrox 
   spellName    AatroxQ 	   menuname    Alistar 	   Headbutt    FioraQ    Elise    EliseSpiderQCast    FizzPiercingStrike    GragasE    JarvanIVDragonStrike    IreliaGatotsu    Jax    JaxLeapStrike    Khazix    KhazixE    khazixelong    LeBlanc 
   LeblancSlide    LeblancSlideM    BlindMonkQTwo    LeonaZenithBlade 	   Pantheon    Pantheon_LeapBash    Poppy    PoppyHeroicCharge 	   Renekton    RenektonSliceAndDice    RivenTriCleave    SejuaniArcticAssault    Tryndamere 
   slashCast    ViQ    MonkeyKingNimbus    XinZhao 
   XenZhaoSweep    YasuoDashWrapper    InterruptList    Shen    ShenStandUnited    Pantheon_GrandSkyfall_Jump    it 
   ItemsCast    "'  "'        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          #'  #'        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          $'  $'        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          %'  %'        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               »'  T(   Ľ  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  	 GAJ GÁĹ
 FG Á ]@ F @ GŔĆ LŔÁ ÁŔ
  FH € ]@ F @ GŔĆ LŔÁ Á@  FÁK  ÁA BJ E‚LAB ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ FŔL † M ť € ]  @€‡AÍĆÁD ÇAÍXŔ €†@ ‡ÁFŚÁA‚ÍA‚	 ‡ÂM ‡ÂEÁ ÍV†‚H Ă€ ťA b€  ăŔúF @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  	 GAN GÁĹ FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FH € ]@ F @ GŔĆ LŔÁ Á@  FÁO   ĆP ÇAĐ‚ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FÁK A ÁA ‚ AB ]@€F @ GŔĆ LŔÁ Á€ Á FÁK  ÁA ‚ AB ]@€F @ GŔĆ LŔÁ Á@  FÁK Á ÁA ‚ AB ]@€F @ GŔĆ LŔÁ Á  A FÁK A ÁA ‚ AB ]@€F @ L Á Á€ Á ]@ F @ GŔÓ LŔÁ Á  A FG Á ]@ F @ GŔÓ LŔÁ Á  A FT   ĆP ÇAĐÂ Ý ]@  F @ GŔÓ LŔÁ Á  A FH € ]@ F @ GŔÓ LŔÁ Á€ Á FH € ]@ F @ GŔÓ LŔÁ Á  A FÁO   ĆP ÇAĐ‚ Ý ]@  F @ GŔÓ LŔÁ Á  Á FG Á ]@ F @ GŔÓ LŔÁ Á   FG Á ]@ F @ GŔÓ LŔÁ Á  A FG Á ]@ F€W † @ Á    C€   Ă  ]@€F @ L Á ÁŔ  ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ ÁŔ
 	 GAJ GÁĹA FH   ]@ F @ G Ř LŔÁ Á€ 	 GÁM GÁĹÁ FH € ]@ FŔL † M ť € ]  €€‡AÍĆÁD ÇAÍXŔ@€†@ ‡XŚÁA‚ÍA ‡‚ÍV‚‚†‚H Ă€ ťA b€  ă€űF @ G Ř LŔÁ Á  Á FG Á ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ Á€ Á FÁK A ÁA ‚ AB ]@€F @ G Ř LŔÁ Á@  FÁK  ÁA ‚ AB ]@€F @ G Ř LŔÁ Á  Á FG Á ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ ÁŔ  FT   ĆP ÇAĐB Ý ]@  F @ L Á Á€ Á ]@ G [ L@Ű Ć @ ÇŔÚ]@€F @ L Á Á€ Á ]@ F @ GŔŰ L Á Á  A ]@ F @ GŔŰ G@Ü LŔÁ Á  A FG Á ]@ FŔL † M ť € ]   	€†ÁL Ç\ ť€€ÇÂ\ Ý€ €ĂEÇŰ  €€Ć@ ÇÂŰÇBÜĚÂÁFC] ŚÝ  ť€‡ĂE]  ĆC] „ÍÝ Ä FD] ‡^ ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ GŔŰ G@Ü LŔÁ Á  Á FG Á ]@ F @ GŔŰ G@Ü LŔÁ Á  A FG Á ]@ F @ GŔŰ G@Ü LŔÁ Á@  FH € ]@ F @ GŔŰ L Á ÁŔ  ]@ F @ GŔŰ G ß LŔÁ Á  A FG Á ]@ F @ GŔŰ G ß LŔÁ Á@  FH € ]@ F @ GŔŰ G ß LŔÁ ÁŔ   FÁK A  ÁA ‚ AB ]@€F @ GŔŰ G ß LŔÁ Á€  Á  FÁK ! ÁÁ B! AB ]@€F @ GŔŰ L Á Á€! Á! ]@ F @ GŔŰ GŔá LŔÁ Á  A FG Á ]@ F b † M ť € ]  €€†ÁL ÇAb ť €Ç‚ÍM  €Ć@ ÇÂŰÇÂáĚÂÁGbĂ" ÇM# GDc–CĆH € ÝB ˘  #űb€  ă€ůF @ GŔŰ GŔá LŔÁ Á  Á FG Á ]@ F @ GŔŰ GŔá LŔÁ Á  A FG Á ]@ F @ GŔŰ GŔá LŔÁ Á€#  FH € ]@ F @ GŔŰ L Á ÁŔ# $ ]@ F @ GŔŰ G ä LŔÁ Á  A FG Á ]@ F b † M ť € ]  €€†ÁL ÇAd ť €Ç‚ÍM  €Ć@ ÇÂŰÇäĚÂÁGb$ ÇMÄ G„b–CĆH € ÝB ˘  #űb€  ă€ůF @ GŔŰ G ä LŔÁ Á  Á FG Á ]@ F @ GŔŰ G ä LŔÁ Á  A FG Á ]@ F @ GŔŰ G ä LŔÁ ÁŔ$  FH € ]@ F @ L Á Á % A% ]@ F @ G@ĺ LŔÁ Á  A FG Á ]@ F @ G@ĺ LŔÁ Á€% 	 GAJ GÁĹA FH   ]@ F @ G@ĺ LŔÁ ÁŔ% 	 GAN GÁĹ& FH € ]@ F @ L Á Á@& & ]@ F @ G€ć LŔÁ Á  A FG Á ]@ F @ G€ć LŔÁ ÁŔ& 	 GÁI GÁĹ
 FH € ]@ F @ G€ć LŔÁ Á ' 	 GAJ GÁĹA FH   ]@ F @ G€ć LŔÁ Á@' 	 GÁM GÁĹÁ FH € ]@ F @ G€ć LŔÁ Á  Á FG Á ]@ F @ G€ć LŔÁ Á  A FG Á ]@ F @ G€ć LŔÁ ÁŔ  FÁK ' ÁA ‚ AB ]@€F @ G€ć LŔÁ Á€ Á FÁK Á' ÁA ‚ AB ]@€F @ G€ć LŔÁ Á@  FÁK ' ÁA ‚ AB ]@€F @ L Á Á ( A( ]@ F @ G@č LŔÁ Á  A FG Á ]@ F @ G@č LŔÁ Á€( 	 GÁI GÁĹ
 FH € ]@ F @ G@č LŔÁ ÁŔ( 	 GAJ GÁĹA FH   ]@ F @ G@č LŔÁ Á ) 	 GÁM GÁĹÁ FH € ]@ F @ G@č LŔÁ Á  Á FG Á ]@ F @ G@č LŔÁ Á  A FG Á ]@ F @ G@č LŔÁ ÁŔ  FÁK ' ÁA ‚ AB ]@€F @ G@č LŔÁ Á€ Á FÁK Á' ÁA ‚ AB ]@€F @ G@č LŔÁ Á@  FÁK ' ÁA ‚ AB ]@€F @ L Á Á@) ) ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ ÁŔ) * FH € ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á@* * FH € ]@ F @ G€é LŔÁ ÁŔ* + FAk ‹ Á+ ‚+ AB Â+ ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á , A, FH € ]@ F @ G€é LŔÁ Á€, Á, FAk ‹ ÁÁ+ Â+ AB Â+ ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á - A- FH € ]@ F @ G€é LŔÁ Á€- Á- FAk ‹ ÁÁ+ B AÂ+ Â+ ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á . A. FH € ]@ F @ G€é LŔÁ Á€. Á. FAk ‹ ÁÁ+ Â+ AB B ¤A ]@ F @ L Á Á / A/ ]@ F @ G@ď LŔÁ Á  A FG Á ]@ F @ G@ď LŔÁ Á€/ Á/ FH   ]@ F @ G Ř L đ ÁŔ ]@€F @ GŔÓ L đ Á  ]@€ € Á   
   MenuTrist 
   scriptConfig    MasterSeries: Tristana 
   Tristana1    addSubMenu    [Tristana]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name 	   Tristana    addTS    [Tristana]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    FT #   Focus Target With Explosive Charge    USEQ    Use     Q     (Q)    W     (W):    USEW     If Target Have Explosive Charge    USEW2    If Get Distance Target >     SCRIPT_PARAM_SLICE      Ŕ‚@              Y@   pairs    GetEnemyHeroes    team 	   charName    E 
    (E) On:     R     (R):    USER    If Can Kill Target    CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       @   WMANA    Min. Mana % To Use (W)       >@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R)    [Tristana]: Insec Settings 	   inConfig    ENABLE 
   InSec Enable    SCRIPT_PARAM_ONKEYTOGGLE    N    DJP    Draw Jump Position    DEP    Draw Enemy Position 
   INEnabled 
   InSec Key    J          Clicl LMB For Set Jump Position (   Clicl LMB On Enemy For Set Insec Target 
   AddSpellMenu    [Tristana]: Harras Settings 
   harrasConfig     (W)    USEE     (E) 	   Use On:        N@     €F@
   HTEnabled    Harass Toggle Key    L    [Tristana]: Items Settings 
   iteConfig    it    LoadToMenu    [Tristana]: Extra Settings 	   exConfig    [Tristana]: Dodge Spells    dspells    Spells    DodgeTable 
   GetSpellData 	   tostring    Dodge      Spell     Spells2    ED    Enable    [Tristana]: Auto Heal Summoner    aheal    UAH    Auto Heal Summoner    UAHHP    Min. HP% To Heal      €A@   UAUR    Range To Check Near Enemy       ‰@     @ź@   [Tristana]: Anti GapCloser    agp    ipairs    GapCloserList 
   spellName    GapCloser     :  	   menuname    UG    [Tristana]: Auto-Interrupt    ai    InterruptList    Stop     UI    [Tristana]: KS Settings 	   ksConfig    WKS    RKS     (R)    [Tristana]: Farm Settings    farm    QF    WF    EF       D@      I@   [Tristana]: Jungle Farm    jf    QJF    WJF    EJF    [Tristana]: Draw Settings    drawConfig    DST    Draw Selected Target    DES    Draw E Stacks    DESC    Draw Color    SCRIPT_PARAM_COLOR      `c@     ŕo@   DAR    Draw AA Range    DARC    Draw AA Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER    Draw E&R Range    DERC    Draw E&R Range Color    [Tristana]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          V(  v(   	„   F @ †@@ ]@ G€@ † A ‡@AŹ€ Ť€€Ť BJ€€G@B † A ‡@AŹ€ Ť€€J€€G€B † A ‡@AŹ€ Ť€€J€€GŔB † A ‡@AŹ€ Ť€€J€€G C L@Ă ]@ G€C XŔĂ Ŕ€F D ‡€C ÇŔB ÇŔŔ]€€[    €G€C 
@€G€C 
@ ‰@€G C GŔÄ 
@€L E ]€ 
@ ‰F@@ G@Ĺ G€Ĺ GŔĹ [    €G F [@  @ €L@F ]@ F@@ G€Ć GŔĆ [   Ŕ€G€D [    €G€D XŔĂ @€F G ‡€D ]€ ‡ŔB ‡Ŕ@€€ € €L@G Ç€D ]@€F@@ G€Ć G€Ç [   @€FŔG † H ť € ]  €€†D Ŕ€ť ›  @€†AH Ŕ€ť ÇÁB ÇÁŔÍÂŇČŔ €†ÁH Á	  €ť€›  € €ŚAI  €ťA€b€  ă€ůF@@ G€É GŔÉ [   €€F@@ G€É G Ę [   @ €L@J ]@  € *      CheckOB 
   MenuTrist    TargetSelector    range    myHero    level       @     ‚@      I@   Q    E    R    WTargetSelector    update    SelectedTarget     ValidTarget    WCel    Cel    target 
   getTarget 	   exConfig    aheal    UAH    recall 	   AutoHeal    comboConfig    CRKD    GetDistance    CastR    FT    pairs    GetEnemyHeroes    GetDistanceSqr        @   TargetHaveBuff2    tristanaechargesound    forceTarget 	   inConfig    ENABLE 
   INEnabled    Insec                          x(  ‚(   D   E   [    €F Ŕ G@Ŕ [    €F@Ŕ L€Ŕ ^  _   €
€E  [   @€F Ŕ GŔŔ [   @€F Ŕ G Á ]€€ [    €F Ŕ G Á ]€€ G@Á †€Á ‡@A€€  €F Ŕ G Á ^ € _   @€E €[   €€F Ŕ GŔÁ [   €€F Ŕ G Â [   €€F Ŕ GŔÁ G@Â L€Ŕ ^  _   Ŕ€E  [    €F Ŕ G€Â [    €F Ŕ GŔÂ L€Ŕ ^  _    €       _G    SxOrb 
   GetTarget    MMA_Loaded    MMA_Target    type    myHero 
   AutoCarry    Reborn_Initialised 
   Crosshair    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker          
	                (  Ť(   C   …   ›    €† Ŕ ‡@@›    €†@Ŕ Ś€@ € ť@€@
€…  ›   @€† Ŕ ‡Ŕ@›   @€† Ŕ ‡ Ať€€ ›    €† Ŕ ‡ Ať€€ ‡@AĆ€Á Ç@ÁŔ  €† Ŕ ‡ŔAŔ € ť@  €… €›   @€† Ŕ ‡ B›   @€† Ŕ ‡@B›   @€† Ŕ ‡ B‡€B‡ŔBŠ@ †Ŕ€…  ›    €† Ŕ ‡@C›    €† Ŕ ‡€CŚŔC € ť@€ €       _G    SxOrb    ForceTarget    MMA_Loaded    MMA_Target    type    myHero    MMA_ForceTarget 
   AutoCarry    Reborn_Initialised 
   Crosshair    Attack_Crosshair    target    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker 
   SetTarget          
	                Ź(  ˛(   ą   F @ ]€€ [   Ŕ,€G@@ [@   ,€G€@ [   €€FŔ@ ‡€@ ]€ [   @€G A L@Á Ç€@ A ÁA]@ F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@C@  €G€@ [   @€F€A G Ă G€Ă [    €FŔC ‡€@ ]€ ‡ D ‡@D€€ @ €L€D ]@ F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ŔD@ @
€G E [   @€F€A G Ă G@Ĺ [    €FŔC ‡ E ]€ ‡€E ‡@D€€ @€LŔE Ç E ]€€@ Ś €F@F ‡ E Á€ ]€€ŔĆ € €L G Ç E ]@€G E [   @€F€A G Ă G@Ç @ Ź €FŔC ‡ E ]€ †€A ‡ C‡@G@  €F@F ‡ E Á€ ]€€ŔĆ € €L G Ç E ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ŔG@ Ŕ€G€@ [    €F€A G Ă ‡€@ ‡ HG€€ [   @€FŔC ‡€@ ]€ ‡@H ‡@D€€ € €L€H Ç€@ ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡ŔH@ Ŕ€G€@ [    €F€A G Ă G É [   Ŕ€FŔC ‡€@ ]€ ‡@I ‡@D€€  €FŔ@ ‡€@ ]€ [   Ŕ€L€I Ç€@ ]€€[   € €LŔI Ç€@ ]@€ € (      ComboActive    recall    Cel    ValidTarget    it 
   CastItems 
   MenuTrist 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    QMANA    USEQ    GetDistance    Q    range    CastQ    WMANA    WCel    USEW    W 
   GetStacks       @   EnemyCount      P„@      đ?   CastW    USEW2            EMANA 	   charName    E    CastE    RMANA    USER    R    RDMG    CastR                          ´(  ż(   T   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€G@A [   Ŕ€F @ G@Ŕ G€Á [   €€FŔA ‡@A ]€ ‡ B ‡@B€€ Ŕ€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@  €FŔC ‡@A Á  ]€€@Ä € €L€D Ç@A ]@€GŔD [    €F @ G@Ŕ ‡ŔD ‡ EG€€ [   @€F @ G@Ŕ G@Ĺ [    €FŔA ‡ŔD ]€ ‡€E ‡@B€€ @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡ŔE@ € €L F ÇŔD ]@€ €    
   MenuTrist 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    WCel    USEW    GetDistance    W    range    myHero    mana    maxMana       Y@   WMANA    EnemyCount      P„@      đ?   CastW    Cel 	   charName    USEE    E    EMANA    CastE                          Á(  Ě(   D   G @ [   Ŕ€G@@ [    €F€@ ‡@@ ]€ ‡Ŕ@ ‡ A€€ @
€F€@ ‡@@ Ç @ ]€€‡Ŕ@ ‡ A€€ @€F€@ ‡ @ ]€ ‡Ŕ@ ‡ AŤ@A€€ @	€GŔ@ G€Á ]€€ [   Ŕ€GŔA G€Á ]€€ [   €€F B †@B Ç@@ Ç€ÂA@ ÁB]@ G @ X Ă @€F@C ‡ @ ÇŔA Ç ÁÍ€Ă]€€[   @€FŔC Ą   Ć€@ D GA@ Ý€€Á@ ADĐ ]@€ €       INSECTARGET 
   JUMPPOSITION    GetDistance    W    range      Ŕr@   Ready    R 
   CastSpell    _W    x    z     ValidTarget       I@   DelayAction    myHero    speed    Ç(  É(           @ †@@ @€ €       CastR    INSECTARGET                                              Î(  ć(   s   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€€€X€Ă €†ÁC Ŕ€ť ÇD ÇAÄŔ@ €ŚD ťA †A ‡ÁA‡ÁD›   	€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĹ€@€X€ĂŔ€†ÁC Ŕ€ť ÇAE ÇAÄŔ €†E ÇAE ÇAÄBE ÂEG‚@ GBÁťÁ X€C€€ŔŚ €BF F‚F ‡ÂFÇGB †A ‡ÁA‡AG›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇÇ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇÁG ÇAÄŔ€ €ŚH  €ťA€b€  ă ç € !      FarmActive    recall 
   EnemyMinions    update    pairs    objects 
   MenuTrist    farm    QF    myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    CastQ    WF    WMANA    W    GetBestCircleFarmPosition    width        @
   CastSpell    _W    x    z    EF    EMANA    E    CastE                          č(   )   q   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇD ÇAÄŔ€€†D ÇD ÇAÄD ÂDG‚@ GBÁť X€C €ĆE BE G‚E‡ÂEÝA †A ‡ÁA‡F›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĆ€€€X€Ă €†ÁC Ŕ€ť ÇF ÇAÄŔ@ €ŚÁF ťA †A ‡ÁA‡G›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAÇ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇG ÇAÄŔ€ €ŚÁG  €ťA€b€  ă€ç €        FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuTrist    jf    WJF    myHero    mana    maxMana       Y@   WMANA     GetDistance    W    range    GetBestCircleFarmPosition    width 
   CastSpell    _W    x    z    QJF    QMANA    Q    CastQ    EJF    EMANA    E    CastE                          )  	)   "   F @ L@Ŕ Á€  ]€€[   €€†Ŕ@ ‡ AĆŔ@ Ç@ÁŔ Ź€AĆŔA Ç ÂÇ@ÂÇ€ÂŔ €€†ŔB ĆŔ@ ÁA BABCť€€€€†@€†€C Ć @ ĚŔĂA  Ý €ť@   €       SSpells    Ready 
   summonerheal    myHero    health 
   maxHealth       Y@
   MenuTrist 	   exConfig    aheal    UAHHP    EnemyCount    UAUR         
   CastSpell    GetSlot                          )  )   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuTrist 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         )  !)   
N   F @ G@Ŕ [     € € F€@ †Ŕ@ ť € ]   €‡ÁĆAA ÇÁÂÁÝ ŤÁX Â €ĆAB  €A‚ Ý€Ű  €€ÇÁB ŰA  Ŕ€ĚC @€Ý€Ű  @€ĆAC ÇĂÇÁĂŰ   €ĆD  €Ý BD ‚D ‚@€ĆÁD  €A Ý€@Ĺ €ĚE @€ÝA€ €ĚÁE @€Ý€Ű  Ŕ€ĆAC ÇĂÇĆŰ  €€ĆD  €Ý BF ‚D
‚F ‚€ €ĚÁF @€ÝA€b€  ă ď €       myHero    dead    pairs    GetEnemyHeroes    health    math    floor    shield     ValidTarget      @ź@   recall    WDMG 
   MenuTrist 	   ksConfig    WKS    GetDistance    W    range    EnemyCount      P„@      đ?   CastW    RDMG    RKS    R       I@   CastR                          #)  =)   C   † @ Á@   € ť€€›   @ € € ź  † @ Á€   € ť€€›   @ € € ź  † @ ÁŔ   € ť€€›   @ € € ź  † @ Á   € ť€€›   @ € € ź  † @ Á@  € ť€€›   @ € € ź  † @ Á€  € ť€€›   @ € € ź  † @ ÁŔ  € ť€€›   @ € € ź  † @ Á   € ť€€›   @ € € ź     ź   € 	      TargetHaveBuff2    JudicatorIntervention 
   Undying Rage    UndyingRage    ZacRebirthReady    AatroxPassiveReady 
   Chrono Shift    ChronoShift 
   Black Shield                          ?)  X)      ‡ @ ‡@@ť€€ ›   @"€‹ €Á€  Á  A A Á ¤@€Ë €Á A A Á Â ä@€ A †AC ŚCÂC ť€‡DŹADŤDĆAC ÇÁÄBC ÂDFBC GĹBBEÍ‚ŤÁĆAC ĚĂF‚E Ý€ÇÄĎÁĹÍĆBC BFFBC L‚ĂĆ‚E ]‚€GÄGBBÍ‚BC ÂDFBC GÂÄ†BC ‡EO‚‚O‚Ŕ
BÍ‚BC ‚C†‚E ‚€D‚F
ÂFFBC GBĆ†BC Ś‚CE ť‚€‡D‡‚‚O‚‚
BFBC GÂÄ†BC ‡ÂDĆBC ÇĹŹÂŹÂAM‚‚
BFG B Ŕ€ ]‚€[  €€L‚G Ŕ€ ]‚€@† €L‚G Ŕ€ ]‚€OB
A
ÁG@ GBŔ]‚€ [    €@ G@ GBŔ]‚€ [   €GÂÇ †H ‡BHÇ‚Č ť‚ M‚‚†BC ŚÂH € @€ť‚ ĆBC ĚÉ@€ € Ý‚ ŤÂ€‚@ €C€ _ C  _  € %      R    Ready       ŕ?ÍĚĚĚĚĚä?š™™™™™é?ffffffî?š™™™™™ń?333333Ă?ö(\ŹÂőČ?¸…ëQ¸Î?=
×Łp=Ň?…ëQ¸Ő?           myHero 
   GetSpellData    _R    level       Y@      i@   ap 
   apPercent       đ?   _E       $@      I@
   addDamage       @      .@   TargetHaveBuff2    tristanaechargesound 
   GetStacks    health    math    floor    shield    CalcMagicDamage    CalcDamage                          Z)  m)   W      Á   A@ @†Á@ €AAA
AFA@ GÁÁ†A@ ‡ÁAĆA@ ÇÂŹÁŹABM
AFA@ LŔĆB ]€GÁOÁÂMĂ†A@ ‡ÁAĆA@ ÇÁÁB@ BĎ‚ĎAĂŤÁM†C ÁÁ  € ť€›  @€ŚD  € ť€€€ €ŚD  € ť€ŹŤ€‡AD ‡Dť€ ›    €Í ‡AD ‡Dť€ ›   €‡ÁÄ ĆE ÇAĹ‚Ĺ Ý ŤÁĆA@ ĚÁĹ@€ €€Ý B@ F€€ Ŕ ‚ Í‚Ŕ@ €€ ź   ź  €               myHero 
   GetSpellData    _W    level       I@      $@   ap 
   apPercent       ŕ?   _E       @      ,@      Ŕ?   TargetHaveBuff2    tristanaechargesound 
   GetStacks    W    Ready    health    math    floor    shield    CalcMagicDamage    CalcDamage                          o)  s)      ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € ť€ ›    €ŚŔ@  € ť€€›@  Ŕ €† A Ć@A  € ť@€ €       R    Ready    ValidTarget 
   CheckBuff 
   CastSpell    _R                          u)  y)      ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ ›   Ŕ €†Ŕ@ Ć A  € ť@€ €       E    Ready    ValidTarget 
   CastSpell    _E                          {)  ‡)   I   ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € ť€ ›   @€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă€   A  †D ‡DD	‡„D	‡DE	]X€Ĺ€€›   €ÂB FC ‡BĂÇ‚ĂB  €       W    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2 
   MenuTrist 	   spConfig    wConfig    WP    circle    WCH                           ‰)  Ť)   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          Ź)  µ)   m  F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ĺ [    €GŔE G Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁE GĹ†AC Ć@ ÇAŔÇAĆÇÁĂ@ B@BFDF@ GBŔGBĆGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [   €€F€G †ŔG ť € ]  Ŕ€X€Á@€†H Ŕ€B ť€›  Ŕ
€ŚH  €ť€€‘€	€†I ÁA	  €ť€›   €†I ĆÁI BÂG‚Â‡ÂÂÝ ť  ĆJ B
 L‚H Ŕ€]‚€BA‚
 ‡BBŽÂJÇ‚BÎËCC F@ GCŔGCËGĂĂ†@ ‡C@‡CK‡DĆ@ ÇCŔÇCËÇCÄ ÝA  b€  ă@ňF @ G€Ë GŔË [    '€G L [   Ŕ€F @ G€Ë G@Ě [   €
€F€I †ŔI Ç L Ç@ÂL BGL GÁÂť  ]€  † J Á€ 
 GAÂ NÁĘ‡Â ŽKĆAC @ B@BFÂCF@ GBŔGBĆGÄ†@ ‡B@‡BF‡BDÝ ť@  † B Ç L Ç@ÂL BGL GÁÂÁ ĆAC @ B@GÂCF@ GBŔGÇGÄ†@ ‡B@‡G‡BDÝ ť@  G M [   €€F @ G€Ë G@Í [   @€G L [   €
€F€M ‡ L ]€ ‡ŔE ‡ E€€ Ŕ€FŔM ‡ M ]€ †ŔM ĆŔM M Ý€ ÁM GL  Î ť€ Ś Nť€ Ź@NM€€ † B Ç@Â Â GÁÂ Á ĆAC @ B@BFÂCF@ GBŔGBĆGÄ†@ ‡B@‡BF‡BDÝ ť@  G M [    	€F @ G€Ë G@Í [   Ŕ€F€I †ŔI Ç M Ç@ÂM BGM GÁÂť  ]€  † J Á€ 
 GAÂ NÁĘ‡Â ŽKĆAC @ B@BFÂCF@ GBŔGBĆGÄ†@ ‡B@‡BF‡BDÝ ť@   € ;   
   MenuTrist    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DARC        @      @      @   DAR    myHero    range      @P@   DWR    W    Ready    DWRC    DER    E    DERC    DES    pairs    GetEnemyHeroes    ValidTarget      0‘@
   GetStacks            TargetHaveBuff2    tristanaechargesound    WorldToScreen    D3DXVECTOR3 	   DrawText    E Stacks:        4@     €A@      $@   DESC 	   inConfig    ENABLE 
   JUMPPOSITION    DJP    Jump Position      €V@   INSECTARGET    DEP    GetDistance    Vector    normalized      p‡@
   InSec Target                          ·)  »)      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ˝)  Á)      @@@€ €@ GÁŔ 
Á€ €       name    tristanaecharge    EStack 
   networkID                         Ă)  Ę)      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á[   €€Ç@Á A AA @€Ç@@ŔÁ€ €Ç B AÂ Ę€B €       isMe    name    find    recall     type    myHero    tristanaecharge    EStack 
   networkID                           Ě)  Î)      ‡ @ Ç@Ŕ ‡Ŕ ›@    €€  ź   €       EStack 
   networkID                                 Đ)  *   •  Ć @ Ç@ŔÇ€ŔŰ   @€ÇŔ@ Ç ÁÝ€€ Ű    
€Ć@A A Ý €€[    €ÂÁ FB GÂÁX@Ŕ€BÂ FB GBÂ@€€›    €‚BGÂÂ@ €@ B@‚@GÂÂB  @€C @€ ‡Â@ ‡BC‚€  € €‚C €€ B€â€  cöĆ @ Ç@ŔÇŔĂÇ ÄŰ   Ŕ€Ç@D Ç ÁÝ€€ Ű   €€Ć@A D Ý  €[   €€ÂÁ FB GÂÁX@@€BÂ FB GBÂ@ €›   €€‚BGÂÂ@€€@ B@ÂCGÂÂB  Ŕ€C @€ ‡Â@ ‡BC‚€   €ÂD  Ŕ€ÂDE  Ŕ €‚C €€ B€@
€ÂDB  €€BE @€ ‚ FBE ‡‚E]‚ †BE Ŕ€ ť‚ N‚‚LÂĹ]‚ OBŚ
BFBE €€ ]‚ †BE Ç‚Eť‚ ĆBE  € Ý‚ ŽÂŚÂEť‚ Ź‚‚ŚM‚‚†‚F ĆB  € ť‚€Ć‚F B @ Ý‚€Y€‚@€†‚F ĆB  € ť‚€Ć‚F B @€Ý‚€€‚€ €Ś‚C  € ťB€â€  cçĆ @ Ç@ŔÇŔĆÇ ÇŰ    :€[   €9€ÇŔÁ B ÁAX @8€Ć B Ç@ÇŰ@  @7€Ç@Â B AB  6€›   €5€Á@ A @H ŹŔ ŹÇ@Â B AB @
€Ć I  € GBÝŔ€ ‘Ŕ ‘ĆŔH X@É@€ĆŔH X€É€ €ĆŔH ŔÉ  € € Ć€H X Ę €Ć€H X@Ä@€Ć€H X@Ę€ €Ć€H ŔŔ@€Ç€J BÇ Ű    €ĆŔJ Ë Ç H Ç Ç@ÂŔ ŹĆŔJ Ë Ç H Ç ÇŔÇŔ€ŹĆŔJ Ë Ç H Ç Ç ČŔ Ć B Ç@ÇŰ@  €$€Ć B Ç@ËŔ€€#€Ć B Ç€Ë Ě—G @H €ÁD  Ŕ€ÁDALFB GAĚX@  €A  €  — €G €L@€ÁL @€ ‡EĆÁG H FB €€€ —Ŕ€G  M@€AM @€ ‡EĆÁG H FB €€€ —€€G €M@€ÁM @€ ‡EĆÁG H FB €€€ —@€G @I@€N @€ ‡EĆÁG H FB €€€ — 
€G €I@€AN @€ ‡EĆÁG H FB €€€ —Ŕ	€G ŔI €ÁL @€ ‡EĆÁG H FB €€€A   €ÁL @€ †AE Ŕ€ ť ŹMÇEŽÁĆÁG H F‚N €€€ —Ŕ€G ŔN €N GE€€ ĆÁG H FB €€€ —ÁK   Ŕ€AD A€   €€@ A@ÁFGBA  Ŕ €O e  A A€ € >   
   MenuTrist 	   exConfig    ai    R    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    range    CastR    agp    UG    W    GapCloserList    target    isMe    Vector    endPos    normalized      Ŕr@      Y@   GetDistanceSqr    dspells    ED    dead 	   shottype    radius    maxdistance         
   spelltype 	   casttype 
   getSpellType       @      @      @   Q    E    DodgeTable 
   skillData 	   charName    health    boundingRadius    hitchampion  
   networkID       đ?   checkhitlinepass        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    tar       @   DelayAction 333333Ó?   *  *    #    @    Ŕ€@Ŕ F€Ŕ € F@Ŕ †@Ŕ Ć€Ŕ ť€ Ć@Ŕ @ Ý€ ŽŔ ]€ LŔŔ ]€ O Á 
@      €F@Á †€Á ÇŔA B ]@ €€@Á F€Á †@Â ‡ŔAĆ@Â Ç Â@  € 
      endPos    Vector    myHero    normalized      @@
   CastSpell    _W    x    z 	   mousePos                                               *  ]*   
ł   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú  €€ŔÂ €GC [  Ŕ€GAC‡C ‡AC€€€
€B†FC Á ÇAC–Á]A @€
 †FC  ÇAC–Á]A A „  ÇC Ű  @€ĆB C FBB Ý€@ÄŔ€€B@€ĆB C FBB Ý€@€ĆD BB ÂDFBB GĹ†BB ‡BEÝ €€›   €@Ä€€ÇE Ű  Ŕ€ÇE Ŕ €
€B‹ĆC Â ÝA Ŕ €
€‹ĆC  ÝA Ć @ Ŕ€ Ŕ€Ć@@ Ç@ĆÇ€ĆŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔĆ€€GG [   €GAC‡G ‡AC€Ŕ€
€BŽFA@ GAĆGĆ[   €FC A ÇAC–Á]A €€
 ŽFA@ GAĆGĆ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuTrist 	   inConfig    ENABLE            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       €V@   INSECTARGET 	   charName    print h   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">InSec Target Unselected:</font> f   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">InSec Target Selected:</font>      @ź@   D3DXVECTOR3    x    y    z 
   JUMPPOSITION h   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Unselected Jump Position</font> j   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Selected New Jump Position</font>    comboConfig    ST      Ŕr@   SelectedTarget b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          f*  Ť*   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    l*  l*           @ @  €       AfterAA                         o*  o*           @ @  €    	   BeforeAA                         v*  v*           @ @  €       AfterAA                         y*  y*           @ @  €    	   BeforeAA                         *  *        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    *  *           @ @  €       AfterAA                                               ‚*  ‚*           @ @  €    	   BeforeAA                         ‡*  ‡*           @ @  €       AfterAA                         Š*  Š*           @ @  €    	   BeforeAA                              	
                Ź*  ó*   ň  
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€ÄJŔÄ„J Ă…J Ĺ†Ą@  J€€‡
@ KŔ  J€Ĺ‚JŔĹĄ€  J€€‡
@€ŠK€ J@Ć‚J€ĆJ€Â„JŔĆ…J Ç†ĄŔ  J€€‡
@ ŚFŔ@ †€G Ç A ÇŔÁÁG C  ]€€
@€ŽFŔ@ †€G Ç D ÇŔÁÁG C  ]€€
@ FŔ@ †€G Ç F ÇŔÁÁG C  ]€€
@€
ŔH‘F@I †€I Ç A ÇŔÁÁI ]€ 
@ ’F@I †@J Ç A ÇŔÁÁI FJ ]€€
@ ”K  † K Ć@K K FÁK d@ 
@€•K    Á  A A d@ 
@ K   
@€K€ ‹Ŕ  Š@MšŠ F›Š Î›J€€™‹Ŕ  Š€NšŠ F›ŠŔÎ›J€€ś‹Ŕ  Š@OšŠ F›Š Î›J€ ž‹Ŕ  ŠŔOšŠ F›Š Î›J€ ź‹Ŕ  Š@PšŠ F›ŠŔÎ›J€  ‹Ŕ  ŠŔPšŠ F›Š Î›J€ ˇ‹Ŕ  Š@QšŠ F›Š Î›J€ ˘‹Ŕ  ŠŔQšŠ F›ŠŔÎ›J€ Ł‹Ŕ  Š@RšŠ F›Š Î›J€ ¤‹Ŕ  ŠŔRšŠ F›ŠŔÎ›J€ Ą‹Ŕ  Š@SšŠ F›Š Î›J€ ¦‹Ŕ  ŠŔSšŠ F›ŠŔÎ›J€ §‹Ŕ  Š@TšŠ F›Š Î›J€ ¨‹Ŕ  ŠŔTšŠ F›ŠŔÎ›J€ ©‹Ŕ  Š@UšŠ F›ŠŔÎ›J€ Ş‹Ŕ  ŠŔUšŠ F›ŠŔÎ›J€ «‹Ŕ  Š@VšŠ F›Š Î›J€ ¬‹Ŕ  ŠŔVšŠ F›Š Î›J€ ­‹Ŕ  Š@WšŠ F›Š Î›J€ ®‹Ŕ  ŠŔWšŠ F›ŠŔÎ›J€ Ż‹Ŕ  Š@XšŠ F›Š Î›J€ °‹Ŕ  ŠŔXšŠ F›Š Î›J€ ±‹Ŕ  Š@YšŠ F›Š Î›J€ ˛‹Ŕ  ŠŔYšŠ F›ŠŔÎ›J€ ł‹Ŕ  Š@ZšŠ F›Š Î›J€ ´‹Ŕ  ŠŔZšŠ F›Š Î›J€ µ‹Ŕ  Š@[šŠ F›Š Î›J€ ¶‹Ŕ  ŠŔ[šŠ F›Š Î›J€ ·‹Ŕ  Š@\šŠ F›Š Î›J€ ¸‹Ŕ  ŠŔ\šŠ F›Š Î›J€ ą‹Ŕ  Š@]šŠ F›Š Î›J€ ş‹Ŕ  ŠŔ]šŠ F›Š Î›J€ »‹Ŕ  Š@^šŠ F›Š Î›J€ Ľ‹Ŕ  ŠŔ^šŠ F›Š Î›J€ ˝‹Ŕ  Š@_šŠ F›Š Î›J€ ľ‹Ŕ  ŠŔ_šŠ F›Š Î›J€ ż‹Ŕ  Š@`šŠ F›ŠŔÎ›J€ Ŕ‹Ŕ  ŠŔ`šŠ F›Š Î›J€ Á‹Ŕ  Š@ašŠ F›Š Î›J€ Â‹Ŕ  ŠŔašŠ F›Š Î›J€ Ă‹Ŕ  Š@bšŠ F›Š Î›J€ Ä‹Ŕ  ŠŔbšŠ F›Š Î›J€ Ĺ‹Ŕ  Š@cšŠ F›ŠŔÎ›J€ Ć‹Ŕ  ŠŔcšŠ F›Š Î›J€ Ç‹Ŕ  Š@dšŠ F›Š Î›J€ Č‹Ŕ  ŠŔdšŠ F›ŠŔÎ›J€ É‹Ŕ  Š@ešŠ F›Š Î›J€ Ę‹Ŕ  ŠŔešŠ F›Š Î›J€ Ë‹Ŕ  Š@fšŠ F›ŠŔÎ›J€ Ě‹Ŕ  ŠŔfšŠ F›Š Î›J€ Í‹Ŕ  Š@gšŠ F›Š Î›J€ Î‹Ŕ  ŠŔgšŠ F›Š Î›J€ Ď‹Ŕ  Š@hšŠ F›Š Î›J€ Đ‹Ŕ  ŠŔhšŠ F›Š Î›J€ Ń‹Ŕ  Š@išŠ F›Š Î›J€ Ň‹Ŕ  ŠŔišŠ F›Š Î›J€ Ó‹Ŕ  Š@jšŠ F›ŠŔÎ›J€ Ô‹Ŕ  ŠŔjšŠ F›Š Î›J€ Ő‹Ŕ  Š@kšŠ F›Š Î›J€ Ö‹Ŕ  ŠŔkšŠ F›ŠŔÎ›J€ ×‹Ŕ  Š@lšŠ F›Š Î›J€ Ř‹Ŕ  ŠŔlšŠ F›Š Î›J€ Ů‹Ŕ  Š@mšŠ F›ŠŔÎ›J€ Ú‹Ŕ  ŠŔmšŠ F›ŠŔÎ›J€ Ű‹Ŕ  Š@nšŠ F›ŠŔÎ›J€ Ü‹Ŕ  ŠŔnšŠ F›Š Î›J€ Ý‹Ŕ  Š@ošŠ F›ŠŔÎ›J€ Ţ‹Ŕ  ŠŔošŠ F›Š Î›J€ ß‹Ŕ  Š@pšŠ F›ŠŔÎ›J€ ŕ‹Ŕ  ŠŔpšŠ F›Š Î›J€ á‹Ŕ  Š@qšŠ F›Š Î›J€ â‹Ŕ  ŠŔqšŠ F›ŠŔÎ›J€ ă‹Ŕ  Š@ršŠ F›Š Î›J€ ä‹Ŕ  Š@ršŠ F›Š Î›J€ ĺ‹Ŕ  Š sšŠ F›ŠŔÎ›J€€ĺ‹Ŕ  Š€sšŠ F›Š Î›J€€ć‹Ŕ  Š tšŠ F›Š Î›J€€ç‹Ŕ  Š€tšŠ F›ŠŔÎ›J€€č‹Ŕ  Š ušŠ F›Š Î›J€€é‹Ŕ  Š€ušŠ F›Š Î›J€€ę
@ ™F v ]€€ 
@€ë € Ů      SelectedTarget     Cel    TargetSelector    Q    name    Mystic Shot    range      ř‘@   speed      @ź@   delay       Đ?   width      @P@   Ready    W 
   Essence Flux      @Ź@      ™@      T@   E 
   Arcane Shift      °}@   R    Trueshot Barrage     €‡Ă@      đ?      d@   QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    WTargetSelector    RTargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    JungleMinions    MINION_JUNGLE    MINION_SORT_MAXHEALTH_DEC    Spells    _Q    _W    _E    _R    Spells2    killstring    DodgeTable    AhriTumble 	   charName    Ahri 
   spellSlot 
   SpellType 
   skillshot    AkaliShadowDance    Akali    castcel    CurseoftheSadMummy    Amumu 
   GlacialStorm    Anivia    InfernalGuardian    Annie    EnchantedCrystalArrow    Ashe    StaticField    Blitzcrank    BrandWildfire    Brand    BraumR    Braum    CaitlynAceintheHole    Caitlyn    CassiopeiaPetrifyingGaze    Cassiopeia    Feast    Chogath    MissileBarrage    Corki    DariusExecute    Darius    DianaTeleport    Diana    DravenRCast    Draven 	   EvelynnR    Evelynn    EzrealTruehotBarrage    Ezreal 
   Crowstorm 
   FiddleSticks    FioraDance    Fiora    FizzMarinerDoom    Fizz    GalioIdolOfDurand    Galio    CannonBarrage 
   Gangplank    GarenR    Garen 	   GnarBigR    Gnar    GragasExplosiveCask    Gragas    GravesChargeShot    Graves    HecarimUlt    Hecarim    IreliaTranscendentBlades    Irelia    JarvanIVCataclysm 	   JarvanIV 
   JinxRWrapper    Jinx 
   FallenOne    Karthus 	   RiftWalk 	   Kassadin 
   KatarinaR 	   Katarina    KennenShurikenStorm     Kennen    KogMawLivingArtillery    KogMaw    BlindMonkRKick    LeeSin    LeonaSolarFlare    Leona    LissandraR 
   Lissandra    LucianR    Lucian    LuxMaliceCannon    Lux    UFSlash 	   Malphite    AlZaharNetherGrasp 	   Malzahar 
   MaokaiDrain3    Maokai    MissFortuneBulletTime    MissFortune    MordekaiserChildrenOfTheGrave    Mordekaiser 
   SoulShackles    Morgana    NamiR    Nami    NautilusGandLine 	   Nautilus 
   AbsoluteZero    Nunu    OrianaDetonateCommand    Orianna 	   Tremors2    Rammus    rivenizunablade    Riven    RumbleCarpetBomb    Rumble    SejuaniGlacialPrisonStart    Sejuani    ShyvanaTransformCast    Shyvana    SkarnerImpale    Skarner    SonaCrescendo    Sona    SwainMetamorphism    Swain    SyndraR    Syndra    TaricHammerSmash    Taric 
   ThreshRPenta    Thresh    BusterShot 	   Tristana    TrundlePain    Trundle    UrgotSwap2    Urgot    VarusR    Varus    VeigarPrimordialBurst    Veigar    VelkozR    Velkoz    ViR    Vi    ViktorChaosStorm    Viktor    VladimirHemoplague 	   Vladimir    InfiniteDuress    Warwick    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave    XerathLocusOfPower2    Xerath 
   XenZhaoParry 	   Xin Zhao    YasuoRKnockUpComboW    Yasuo    zedult    Zed    ZiggsR    Ziggs    ZyraBrambleZone    Zyra    it 
   ItemsCast    “*  “*        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ”*  ”*        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          •*  •*        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          –*  –*        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ő*  [+   }  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FB A Ë€‚ AÂ  äA€]@€F @ GŔĆ LŔÁ Á@ 	 GL GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á 
 A
 FM Á
 Á B A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FM A Á ‚ A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FAP   ĆP ÇÁĐ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FM  Á Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FM  Á Â A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FM  Á Â A‚ ]@€F @ GŔĆ LŔÁ Á@  FM  Á Â A‚ ]@€FŔS † @ Á  € C€   Ă€ ]@€F @ L Á Á  A ]@ F @ G@Ô LŔÁ Á  A FG Á ]@ F @ G@Ô LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G@Ô LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G@Ô LŔÁ Á  Á FG Á ]@ F @ G@Ô LŔÁ Á  A FG Á ]@ F @ G@Ô LŔÁ Á@  FM  Á Â A‚ ]@€F @ G@Ô LŔÁ Á  A FM  Á Â A‚ ]@€F @ G@Ô LŔÁ Á  Á FG Á ]@ F @ G@Ô LŔÁ Á  A FG Á ]@ F @ G@Ô LŔÁ ÁŔ  FAU   ĆP ÇÁĐ‚ Ý ]@  F @ L Á ÁŔ  ]@ G@V L€Ö Ć @ Ç Ö]@€F @ L Á ÁŔ  ]@ F @ G × L Á Á@  ]@ F @ G × G€× LŔÁ Á  A FG Á ]@ FŔW † X ť € ]   	€†ÁW ÇAX ť€€Ç‚X ĂŘ€ €ĂEÇŰ  €€Ć@ Ç×Ç‚×ĚÂÁFY ŚĂŘ  ť€‡ĂE] C ĆY „ŮÝ Ä FY ‡Z ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ G × G€× LŔÁ Á  Á FG Á ]@ F @ G × G€× LŔÁ Á  A FG Á ]@ F @ G × G€× LŔÁ Á@  FH € ]@ F @ G × L Á ÁŔ  ]@ F @ G × G Ű LŔÁ Á  A FG Á ]@ F @ G × G Ű LŔÁ Á@  FH € ]@ F @ G × G Ű LŔÁ ÁŔ  FM A Á Â A‚ ]@€F @ G × G Ű LŔÁ Á€ Á FM  ÁÁ B A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ GŔÝ LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ GŔÝ LŔÁ Á€ 	 GL GÁĹÁ FH € ]@ F @ L Á Á  A ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á€ 	 GAI GÁĹ	 FB A Ë€‚ AÂ   äA€]@€F @ G@ß LŔÁ Á@  	 GÁJ GÁĹ FB A Ë€‚ AÂ   äA€]@€F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á@  FM   Á Â A‚ ]@€F @ G@ß LŔÁ Á€ Á FM  Á Â A‚ ]@€F @ L Á ÁŔ  ! ]@ F @ G á LŔÁ Á  A FG Á ]@ F @ G á LŔÁ Á@! 	 GAI GÁĹ	 FH € ]@ F @ G á LŔÁ Á€! 	 GÁJ GÁĹ FH € ]@ F @ G á LŔÁ Á  Á FG Á ]@ F @ G á LŔÁ Á  A FG Á ]@ F @ G á LŔÁ Á@  FM   Á Â A‚ ]@€F @ G á LŔÁ Á€ Á FM  Á Â A‚ ]@€F @ L Á ÁŔ! " ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á@" " FH € ]@ F @ G â LŔÁ Á  Á FG Á ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ ÁŔ" # FH € ]@ F @ G â LŔÁ Á@# # FÁc ‹ Á$ $ A‚ $ ¤A ]@ F @ G â LŔÁ Á  Á FG Á ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á@$ $ FH € ]@ F @ G â LŔÁ ÁŔ$ % FÁc ‹ Á$ ‚ A‚ $ ¤A ]@ F @ G â LŔÁ Á  Á FG Á ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á@% % FH € ]@ F @ G â LŔÁ ÁŔ% & FÁc ‹ Á$ ‚ A$ $ ¤A ]@ F @ G â LŔÁ Á  Á FG Á ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á@& & FH € ]@ F @ G â LŔÁ ÁŔ& ' FÁc ‹ Á$ $ A‚ ‚ ¤A ]@ F @ L Á Á@' ' ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ' ( FH   ]@ F @ G@Ô L@č ÁŔ ]@€ € ˘      MenuEzreal 
   scriptConfig    MasterSeries: Ezreal    Ezreal1    addSubMenu    [Ezreal]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Ezreal    addTS    [Ezreal]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)        @   No 	   To Mouse 
   To Target    USER    R     (R) Finisher 
   USERRANGE    Auto R Max Range    SCRIPT_PARAM_SLICE      h @     @Ź@     p·@           USER2    Auto (R) If Can Hit X Enemy:       @      @   CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)    EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Ezreal]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Ezreal]: Items Settings 
   iteConfig    it    LoadToMenu    [Ezreal]: Extra Settings 	   exConfig    [Ezreal]: Evade    dspells    pairs    GetEnemyHeroes    Spells    DodgeTable 
   GetSpellData 	   tostring    Dodge  	   charName     Spell     Spells2    ED    Enable    [Ezreal]: Auto Heal    ah    UAH    Auto Heal Summoner    UAHHP    Min. HP% To Heal      €A@   UAUR    Range To Check Near Enemy       ‰@     @ź@   [Ezreal]: KS Settings 	   ksConfig    QKS    WKS    RKS     (R)    [Ezreal]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    EF       D@   [Ezreal]: Jungle Farm    jf    QJF    EJF    [Ezreal]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    [Ezreal]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ]+  y+   [   F @ †@@ ]@ G€@ XŔŔ Ŕ€F A ‡€@ Ç@A Ç€Á]€€[    €G€@ 
@€G€@ 
@ „G€@ 
@€„G€@ 
@ …€€FŔB ‡ C ]€ 
@€G@C L€Ă ]@ G@C GŔĂ 
@ „G D L€Ă ]@ G D GŔĂ 
@€„G@D L€Ă ]@ G@D GŔĂ 
@ …G@D †@@ ‡€D‡ŔDJ€ F@@ G Ĺ G@Ĺ G€Ĺ [    €GŔE [@  @ €L F ]@ F@@ G€Ä G@Ć [   €€F A ‡€B ]€ [   @€F€F ‡€B ]€ ‡ŔF ‡€A€€ € €L G Ç€B ]@€F@@ G€Ä G@Ç @ Ź €LŔG Ć@@ Ç€ÄÇ@Ç]@€ €        CheckOB    MenuEzreal    SelectedTarget     ValidTarget    Q    range    Cel    QCel    WCel    RCel    GetCustomTarget    TargetSelector    QTargetSelector    update    target    WTargetSelector    RTargetSelector    comboConfig 
   USERRANGE 	   exConfig    ah    UAH    recall 	   AutoHeal    CRKD    GetDistance    R    CastR    USER2         	   CastRAOE                          {+  +   Á   F @ ]€€ [   Ŕ.€G@@ [@   .€G€@ [   €€FŔ@ ‡€@ ]€ [   @€G A L@Á Ç€@ A ÁA]@ FŔ@ ‡ B ]€ [   @€F€A G@Â G€Â [    €FŔB ‡ B ]€ ‡ C ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡@B‡€D@ € €LŔD Ç B ]@€FŔ@ ‡ E ]€ [   @€F€A G@Â G@Ĺ [    €FŔB ‡ E ]€ ‡€E ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡@B‡ŔE@ € €L F Ç E ]@€FŔ@ ‡ B ]€ [   €€F€A G@Â G@Ć €Ć @€FŔB ‡ B ]€ †€C ‡@CŤŔF€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡@B‡ G@ € €L@G Ć€G ]@€FŔ@ ‡ B ]€ [   €€F€A G@Â G@Ć ŔÇ @€FŔB ‡ B ]€ †€C ‡@CŤŔF€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡@B‡ G@ € €L@G Ç B ]@€FŔ@ ‡ H ]€ [   Ŕ	€F€A G@Â G@Č [   €€FŔB ‡ H ]€ †€C ‡@CŤŔF@ €€G H G€Č †ŔH ‡ IÇ H Ç@Éť€ M€€ Ś€I H ť€€€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡@B‡ŔI@ € €L J Ç H ]@€ € )      ComboActive    recall    Cel    ValidTarget    it 
   CastItems    MenuEzreal 
   iteConfig    QCel    comboConfig    USEQ    GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    WCel    USEW    W    WMANA    CastW    USEE        @      ^@   EMANA    CastE 	   mousePos       @   RCel    USER    health    math    floor    shield    RDMG    RMANA    CastR                          ’+  ›+   G   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€G@A [   @€F @ G@Ŕ G€Á [    €FŔA ‡@A ]€ ‡ B ‡@B€€ @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@ € €LŔC Ç@A ]@€G D [   @€F @ G@Ŕ G@Ä [    €FŔA ‡ D ]€ ‡€D ‡@B€€ @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡ŔD@ € €L E Ç D ]@€ €       MenuEzreal 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QCel    USEQ    GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    WCel    USEW    W    WMANA    CastW                          ť+  Ŕ+   ˛   F @ ]€€ [    +€G@@ [@  @*€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ @&€€Â Ŕ€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚ 
€X Ä@€BD @€‚ G‚D GÂÄ@€€E BE€€Ć‚E Ý‚€ ĐÂĹÍÂŚ‚ LBF Ŕ€]‚€@@€ ŤŔ
€ŚÂF  €GD GÇ†ĂB Ç@ ÇCÂť‚ • @G €†‚G ĆÂG ČGCČťB €	€€Č  	€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€X ÄŔ€BD @€‚ G‚D GÂÄ@ €ÂH G‚D GÂÄ‡‚D ‡GÇ‚@ ÇBÂÂ X D€€@… €†‚G ĆÂG HGCHťB €B €ÂB CFÂB GBĂB‚CFA GBÁGÉ ‚@€X Ä@€BD @€‚ GBI GÂÄ@€	€‚ÉFÂI 
 Ŕ€ĂB A ]‚€@@€BJ €€B€@€‚J €H€€ÂB CFÂB GBĂB‚CFA GBÁGÉ ‚Ŕ€X Ä@€BD @€‚ GBI GÂÄ@€ €BJ €€B€â€  cÁŘ € +      FarmActive    recall 
   EnemyMinions    update    MenuEzreal    farm    QF    EF    pairs    objects        @   myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    VP    GetPredictedHealth    GetLatency      @Ź@      Đ?   QDMG       $@
   Collision    width       đ?
   CastSpell    _Q    x    z       @   GetBestLineFarmPosition    EMANA    W    health    getDmg    E    CastE    WMode                          Â+  Î+   .   Ű@    €Ć @ K  †A@ Ŕ ť@€Ç‚@Ű  €€ÇÂ@ŰB  Ŕ€ĆA @ @ Ý‚€CA A Ŕ€ĆÂA  €@€ € ÝÂ    €FA €€Ŕ ]€‡BŤ € €FCB GÂ€€Ŕ ]C€˘  #Âö_  €       myHero    pairs    valid    dead    GetDistance    Q    range #   VectorPointProjectionOnLineSegment    boundingRadius    table    insert                          Đ+  ă+   V   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇD ÇAÄŔ€ €ŚD  €ťA€†A ‡ÁA‡ÁD›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĹ€Ŕ€X€Ă@€†ÁC Ŕ€ť ÇAE ÇAÄŔ€€†E ÇAE ÇAÄBE ÂEG‚@ GBÁťÁ X€C €F FBF ‡‚FÇÂFB b€  ă@î €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuEzreal    jf    EJF    myHero    mana    maxMana       Y@   EMANA     GetDistance    W    range    CastE    QJF    QMANA    Q    GetBestLineFarmPosition    width 
   CastSpell    _Q    x    z                          ĺ+  ě+   "   F @ L@Ŕ Á€  ]€€[   €€†Ŕ@ ‡ AĆŔ@ Ç@ÁŔ Ź€AĆŔA Ç ÂÇ@ÂÇ€ÂŔ €€†ŔB ĆŔ@ ÁA BABCť€€€€†@€†€C Ć @ ĚŔĂA  Ý €ť@   €       SSpells    Ready 
   summonerheal    myHero    health 
   maxHealth       Y@   MenuEzreal 	   exConfig    ah    UAHHP    EnemyCount    UAUR         
   CastSpell    GetSlot                          î+  ô+   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuEzreal 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         ö+  ,   
^   F @ †@@ ť € ]  @€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĚA @€Ý€ÂA €€‚€LB Ŕ€]‚€X@Â €†‚B Ŕ€ť‚ ›  Ŕ€‡ÂB ›B   €ŔŔ€†C ‡BC‡‚C›  €€†ÂC Ŕ€ť‚ ÇD ÇBÄŔŔ €Ś‚D  €ťB€€
€ Ŕ€†C ‡BC‡ÂD›  €€†ÂC Ŕ€ť‚ ÇE ÇBÄŔŔ €ŚBE  €ťB€ €@€€†C ‡BC‡‚E›  @€†ÂC Ŕ€ť‚ ĆÂE ÇBÄÍĆ€‚@€†ÂC Ŕ€ť‚ ÇBF ÇBÄŔ€ €Ś‚F  €ťB€b€  ăŔé €       pairs    GetEnemyHeroes    health    math    floor    shield    QDMG    WDMG    RDMG     ValidTarget    recall    MenuEzreal 	   ksConfig    QKS    GetDistance    Q    range    CastQ    WKS    W    CastW    RKS    myHero      Ŕr@   RTargetSelector    CastR                          ,  ,   ;   † @ Á@   € ť€€›   @ € € ź  † @ Á€   € ť€€›   @ € € ź  † @ ÁŔ   € ť€€›   @ € € ź  † @ Á   € ť€€›   @ € € ź  † @ Á@  € ť€€›   @ € € ź  † @ Á€  € ť€€›   @ € € ź  † @ ÁŔ  € ť€€›   @ € € ź     ź   €       TargetHaveBuff2    JudicatorIntervention 
   Undying Rage    UndyingRage    ZacRebirthReady    AatroxPassiveReady 
   Chrono Shift    ChronoShift                          !,  &,   	"   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOÁÁMÂ†@ ‡ABŹBM†@ ‡ÁBĆ@ ÇÁÂ‚@ CĎ‚ĎAĂŤÁMž  ź   € ź   €       Q    Ready    myHero    CalcMagicDamage 
   GetSpellData    _Q    level       4@      .@   totalDamage š™™™™™ń?   ap 
   apPercent š™™™™™Ů?                                 (,  -,   	   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOÁÁMÂ†@ ‡ABĆ@ ÇAÂ‚@ ‚BĎ‚ĎÁÂŤÁMž  ź     ź   € 
      W    Ready    myHero    CalcMagicDamage 
   GetSpellData    _W    level      €F@      9@   ap 
   apPercent š™™™™™é?                                 /,  4,   	"   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOÁÁMÂ†@ ‡ABŹBM†@ ‡ÁBĆ@ ÇÁÂ‚@ CĎ‚ĎAĂŤÁMž  ź   € ź   €       R    Ready    myHero    CalcMagicDamage 
   GetSpellData    _R    level      Ŕb@      i@   totalDamage       đ?   ap 
   apPercent ÍĚĚĚĚĚě?                                 6,  B,   I   ‡ @ ‡@@ť€€ ›   €€Ś€@  € ť€€›@  @€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă€   A  †D ‡DD	‡„D	‡DE	]X€Ĺ€€›   €ÂB FC ‡BĂÇ‚ĂB  €       R    Ready 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2    MenuEzreal 	   spConfig    rConfig    RP    line    RCH                           D,  M,   ,   † @ Ć@@ Ý € ť  Ŕ€Ç@ ÇÁŔÝ€ Ű  €€ĆA   GBA G‚ÁÝ€Ű  Ŕ€ĆÁA ĚÂ@ ‡‚@ ‡BBÇ‚@ Ç‚Â@ AG@ GĂÂ†C ÝAX@Ă €@‚ €€ ‡ €ĆÂC D GCÄ‡ÄÝB ˘€  #Aö €       pairs    GetEnemyHeroes    R    Ready    ValidTarget    RTargetSelector    range    VP    GetLineAOECastPosition    delay    width    speed    myHero         @
   CastSpell    _R    x    z                          O,  S,      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       E    Ready 
   CastSpell    _E    x    z                          U,  a,   N   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€ŚŔ@  € ť€€›@  @€† A Ś@A € G@ GÁ‡@ ‡ÁAÇ@ ÇÂBB ť ›   €€Ű    €FB € ] ‡@ ‡ÁB€@€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ ‚AG@ GÂÁ‡@ ‡ÂBÇ@ ÇÂCB AC   Ă    A  †DD ‡„D	‡ÄD	‡„E	]XŔĹ€€›   €C FBC ‡‚ĂÇÂĂB  €       W    Ready    ValidTarget 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2    MenuEzreal 	   spConfig    wConfig    WP    line    WCH                           c,  o,   N   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€ŚŔ@  € ť€€›@  @€† A Ś@A € G@ GÁ‡@ ‡ÁAÇ@ ÇÂBB ť ›   €€Ű    €FB € ] ‡@ ‡ÁB€@€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ ‚AG@ GÂÁ‡@ ‡ÂBÇ@ ÇÂCB AC € Ă    A  †DD ‡„D	‡ÄD	‡„E	]XŔĹ€€›   €C FBC ‡‚ĂÇÂĂB  €       Q    Ready    ValidTarget 
   CheckBuff    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2    MenuEzreal 	   spConfig    qConfig    QP    line    QCH                           q,  ,   
­   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@   €        MenuEzreal    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range      @P@   DARC    DQR    Q    Ready    DWR    W    DWRC    DER    E    DERC                          …,  ‰,      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ‹,  Ź,      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          ‘,  ş,   đ   Ć @ Ç@ŔÇ€ŔÇŔŔŰ    :€[   €9€Ç Á AA AX @8€Ć@A Ç€ÁŰ@  @7€ÇŔÁ AA ÁA  6€›   €5€ÁŔ Á ŔB… „Ŕ „ÇŔÁ AA ÁA @
€Ć€C  € GÁCÝŔ€ †Ŕ †Ć@C X Ä@€Ć@C X@Ä€ €Ć@C €Ä  € € Ć C XŔÄ €Ć C X Ĺ@€Ć C X@Ĺ€ €Ć C €Ĺ@€ÇŔE ÁCÇ Ű    €Ć F AĆ Ç C Ç ÇŔÁŔ „Ć F AĆ Ç C Ç Ç@ÂŔ€„Ć F AĆ Ç C Ç Ç€ÂŔ …Ć@A Ç€ÁŰ@  €$€Ć@A Ç€ĆŔ€…€#€Ć@A ÇŔĆ@GŽB ŔB €G  Ŕ€GÁGFAA GÁÇX@  €A  €  Ž €B  H@€AH @€ ‡HĆAB ‚B FBA €€€ ŽŔ€B ŔH@€I @€ ‡HĆAB ‚B FBA €€€ Ž€€B @I@€I @€ ‡HĆAB ‚B FBA €€€ Ž@€B  D@€ÁI @€ ‡HĆAB ‚B FBA €€€ Ž 
€B @D@€J @€ ‡HĆAB ‚B FBA €€€ ŽŔ	€B €D €AH @€ ‡HĆAB ‚B FBA €€€A   €AH @€ †AJ Ŕ€ ť ŹÁHÇHŽÁĆAB ‚B F‚J €€€ ŽŔ€B ŔJ €ÁI GH€€ ĆAB ‚B FBA €€€ ŽG   Ŕ€AE K€   €€@ A@@GÁCA  Ŕ €AK e   A€ € /      MenuEzreal 	   exConfig    dspells    ED    team    myHero    dead    type 	   shottype    radius    maxdistance         
   spelltype 	   casttype 
   getSpellType    name       @      @      @   Q    W    E    R    DodgeTable 
   skillData 	   charName    health    boundingRadius    hitchampion     target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector    tar       @   Ready    DelayAction 333333Ó?   ł,  µ,           @ †@Ŕ @€ €       CastE 	   mousePos                                                Ľ,  Ö,   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuEzreal    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ß,  -   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ĺ,  ĺ,           @ @  €       AfterAA                         č,  č,           @ @  €    	   BeforeAA                         ď,  ď,           @ @  €       AfterAA                         ň,  ň,           @ @  €    	   BeforeAA                         ř,  ř,        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ř,  ř,           @ @  €       AfterAA                                               ű,  ű,           @ @  €    	   BeforeAA                          -   -           @ @  €       AfterAA                         -  -           @ @  €    	   BeforeAA                              	
                -  V-   u  
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …KŔ  J€Ă‚JŔĂĄ€  J€€„
@€†KŔ  J@Ä‚J€ÄĄŔ  J€€„
@ A@ 
@EŠ
@€‰C   
 Ć‹
@ ‹F€F †ŔF Ç A ÇŔÁG FAG ]€€
@€ŚF€F †ŔG Ç A ÇŔÁG FAG ]€€
@ ŹFŔ@ †@H Ç A ÇŔÁH C  ]€€
@ FŔ@ †@H Ç@C ÇŔÁH C  ]€€
@€‘FŔ@ †@H Ç D ÇŔÁH C  ]€€
@ ’K   
@€’
 F“K  † J Ć@J J FÁJ d@ 
@€“K    Á€ A A d@ 
@ –K   
@€–K€ ‹Ŕ  Š@LŠ D™Š Í™J€€—‹Ŕ  Š€MŠ D™Š Í™J€€š‹Ŕ  Š NŠ D™Š Í™J€€›‹Ŕ  Š€NŠ D™Š Í™J€€ś‹Ŕ  Š OŠ D™Š Í™J€€ť‹Ŕ  Š€OŠ D™Š Í™J€€ž‹Ŕ  Š PŠ D™Š Í™J€€ź‹Ŕ  Š€PŠ D™Š Í™J€€ ‹Ŕ  Š QŠ D™Š Í™J€€ˇ‹Ŕ  Š€QŠ D™Š Í™J€€˘‹Ŕ  Š RŠ D™Š Í™J€€Ł‹Ŕ  Š€RŠ D™Š Í™J€€¤‹Ŕ  Š SŠ D™Š Í™J€€Ą‹Ŕ  Š€SŠ D™Š Í™J€€¦‹Ŕ  Š TŠ D™Š Í™J€€§‹Ŕ  Š€TŠ D™Š Í™J€€¨‹Ŕ  Š UŠ D™Š Í™J€€©‹Ŕ  Š€UŠ D™Š Í™J€€Ş‹Ŕ  Š VŠ D™Š Í™J€€«‹Ŕ  Š€VŠ D™Š Í™J€€¬‹Ŕ  Š WŠ D™Š Í™J€€­‹Ŕ  Š€WŠ D™Š Í™J€€®‹Ŕ  Š XŠ D™Š Í™J€€Ż‹Ŕ  Š€XŠ D™Š Í™J€€°‹Ŕ  Š YŠ D™Š Í™J€€±‹Ŕ  Š€YŠ D™Š Í™J€€˛‹Ŕ  Š ZŠ D™Š Í™J€€ł‹Ŕ  Š€ZŠ D™Š Í™J€€´‹Ŕ  Š [Š D™Š Í™J€€µ‹Ŕ  Š€[Š D™Š Í™J€€¶‹Ŕ  Š \Š D™Š Í™J€€·‹Ŕ  Š€\Š D™Š Í™J€€¸‹Ŕ  Š ]Š D™Š Í™J€€ą‹Ŕ  Š€]Š D™Š Í™J€€ş‹Ŕ  Š ^Š D™Š Í™J€€»‹Ŕ  Š€^Š D™Š Í™J€€Ľ‹Ŕ  Š _Š D™Š Í™J€€˝‹Ŕ  Š€_Š D™Š Í™J€€ľ‹Ŕ  Š `Š D™Š Í™J€€ż‹Ŕ  Š€`Š D™Š Í™J€€Ŕ‹Ŕ  Š aŠ D™Š Í™J€€Á‹Ŕ  Š€aŠ D™Š Í™J€€Â‹Ŕ  Š bŠ D™Š Í™J€€Ă‹Ŕ  Š€bŠ D™Š Í™J€€Ä‹Ŕ  Š cŠ D™Š Í™J€€Ĺ‹Ŕ  Š€cŠ D™Š Í™J€€Ć‹Ŕ  Š dŠ D™Š Í™J€€Ç‹Ŕ  Š€dŠ D™Š Í™J€€Č‹Ŕ  Š eŠ D™Š Í™J€€É‹Ŕ  Š€eŠ D™Š Í™J€€Ę‹Ŕ  Š€eŠ D™Š Í™J€€Ë‹Ŕ  Š@fŠ D™Š Í™J€ Ě‹Ŕ  ŠŔfŠ D™Š Í™J€ Í‹Ŕ  Š@gŠ D™Š Í™J€ Î‹Ŕ  ŠŔgŠ D™Š Í™J€ Ď
@ —F@h ]€€ 
@ Đ € ˘      SelectedTarget     Cel    TargetSelector    Q    name    Deceive    range       y@   Ready    W    Jack In The Box      z@   E    Two-Shiv Poison      @   R    Hallucinate      @@   QTime    QTime2            recall    QCasted  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector    killstring    haveq    Spells    _Q    _W    _E    _R    Spells2    boxes 
   interspellsQ    CurseoftheSadMummy 	   charName    Amumu 
   spellSlot 
   SpellType 
   skillshot 
   GlacialStorm    Anivia    EnchantedCrystalArrow    Ashe    StaticField    Blitzcrank    BraumR    Braum    CassiopeiaPetrifyingGaze    Cassiopeia    MissileBarrage    Corki 	   EvelynnR    Evelynn    EzrealTruehotBarrage    Ezreal 
   Crowstorm 
   FiddleSticks    FizzMarinerDoom    Fizz    GalioIdolOfDurand    Galio    CannonBarrage 
   Gangplank 	   GnarBigR    Gnar    GragasExplosiveCask    Gragas    GravesChargeShot    Graves    HecarimUlt    Hecarim    IreliaTranscendentBlades    Irelia    JarvanIVCataclysm 	   JarvanIV 
   JinxRWrapper    Jinx 
   FallenOne    Karthus 	   RiftWalk 	   Kassadin 
   KatarinaR 	   Katarina    KennenShurikenStorm     Kennen    KogMawLivingArtillery    KogMaw    LeonaSolarFlare    Leona    LissandraR 
   Lissandra    LucianR    Lucian    LuxMaliceCannon    Lux    UFSlash 	   Malphite 
   MaokaiDrain3    Maokai    MissFortuneBulletTime    MissFortune 
   SoulShackles    Morgana    NamiR    Nami 
   AbsoluteZero    Nunu    OrianaDetonateCommand    Orianna 	   Tremors2    Rammus    rivenizunablade    Riven    RumbleCarpetBomb    Rumble    SejuaniGlacialPrisonStart    Sejuani    ShyvanaTransformCast    Shyvana    SonaCrescendo    Sona    SwainMetamorphism    Swain    TaricHammerSmash    Taric 
   ThreshRPenta    Thresh    VarusR    Varus    VelkozR    Velkoz    ViktorChaosStorm    Viktor    VladimirHemoplague 	   Vladimir    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave 
   XenZhaoParry 	   Xin Zhao    YasuoRKnockUpComboW    Yasuo    ZiggsR    Ziggs    ZyraBrambleZone    Zyra    it 
   ItemsCast    -  -        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          
-  
-        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          -  -        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          -  -        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               X-  ż-   p  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FB Á	 Ë€
 AB
 ‚
 äA€]@€F @ GŔĆ LŔÁ ÁŔ
 	 GK GÁĹA FB Á	 Ë€
 AB
 ‚
 äA€]@€F @ GŔĆ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GL GÁĹÁ FB Á	 Ë€
 A
 B
 äA€]@€F @ GŔĆ LŔÁ Á€
 Á
 FN Á	 ÁÁ B A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FN A Á ‚ A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FH € ]@ F @ GŔĆ LŔÁ Á@  FÁP   ĆQ ÇAŃ‚ Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FN A Á B A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FN  Á B A‚ ]@€F @ GŔĆ LŔÁ Á@  FN Á Á B A‚ ]@€F @ GŔĆ LŔÁ Á  A FN A Á B A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔÔ LŔÁ Á  A FG Á ]@ F @ GŔÔ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔÔ LŔÁ Á  Á FG Á ]@ F @ GŔÔ LŔÁ Á  A FG Á ]@ F @ GŔÔ LŔÁ Á@  FN  Á B A‚ ]@€F @ GŔÔ LŔÁ Á  Á FG Á ]@ F @ GŔÔ LŔÁ Á  A FG Á ]@ F @ GŔÔ LŔÁ Á@  FÁU   ĆQ ÇAŃ Ý ]@  F @ L Á Á@  ]@ GŔV L × Ć @ Ç€Ö]@€F @ L Á Á@  ]@ F @ G€× LŔÁ Á  A FG Á ]@ F X ]€€ @€ŻF@X †ŔW ] Ŕ€†AX ÇX ť@€ÇÂX Ů€ €ĂEÇŰ  @€Ć@ Ç‚×ĚÂÁFCY ŚŮ  ť€‡ĂE]  ĆCY ÄŮÝ  FDY ‡DZ ‡D	]„ –CĆH € ÝB ˘  #Â÷b€  ă@öF @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á€ Á FH € ]@ F @ L Á Á  A ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á€ Á FH € ]@ F @ G@Ű LŔÁ Á  	 GÁK GÁĹ FH € ]@ F @ L Á Á@  ]@ F @ G€Ü LŔÁ Á  A FG Á ]@ F @ G€Ü LŔÁ ÁŔ  FH € ]@ F @ G€Ü LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á@ 	 GK GÁĹA FB Á Ë 
 A‚ äA ]@€F @ G Ţ LŔÁ ÁŔ 	 GÁK GÁĹ FB  Ë€
 AB ‚ äA€]@€F @ G Ţ LŔÁ Á  Á FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á@  FN  Á B A‚ ]@€F @ G Ţ LŔÁ Á@  FN  Á B A‚ ]@€F @ L Á ÁŔ   ]@ F @ G ŕ LŔÁ Á  Á FG Á ]@ F @ G ŕ LŔÁ Á@  	 GK GÁĹA FH € ]@ F @ G ŕ LŔÁ Á€  	 GÁK GÁĹ FH € ]@ F @ G ŕ LŔÁ Á  Á FG Á ]@ F @ G ŕ LŔÁ Á  A FG Á ]@ F @ G ŕ LŔÁ Á@  FN Á  Á B A‚ ]@€F @ G ŕ LŔÁ Á@  FN Á  Á B A‚ ]@€F @ L Á Á ! A! ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€! Á! FH € ]@ F @ G@á LŔÁ Á " A" FH € ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€" Á" FH € ]@ F @ G@á LŔÁ Á # A# Fc ‹ ÁÁ# Â# A‚ Â# ¤A ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á $ A$ FH € ]@ F @ G@á LŔÁ Á€$ Á$ Fc ‹ ÁÁ# ‚ AÂ# Â# ¤A ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á % A% FH € ]@ F @ G@á LŔÁ Á€% Á% Fc ‹ ÁÁ# ‚ A‚ Â# ¤A ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á & A& FH € ]@ F @ G@á LŔÁ Á€& Á& Fc ‹ ÁÁ# Â# A‚ ‚ ¤A ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á ' A' FH € ]@ F @ G@á LŔÁ Á€' Á' Fc ‹ ÁÁ# ‚ AÂ# ‚ ¤A ]@ F @ L Á Á ( A( ]@ F @ G@č LŔÁ Á  A FG Á ]@ F @ G@č LŔÁ Á€( Á( FH   ]@ F @ GŔÔ L é Á@ ]@€ € Ą   
   MenuShaco 
   scriptConfig    MasterSeries: Shaco    Shaco1    addSubMenu    [Shaco]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Shaco    addTS    [Shaco]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)        @   No 	   To Mouse 	   To Enemy    USEW    W     (W)    USEE    E     (E)    RMODE    R     (R)    Normal    X Enemy In Range    HXC    X =     SCRIPT_PARAM_SLICE       @           HXR 	   Range =       0@     @Ź@   AC    Attack Target With Clone    CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R)    [Shaco]: Harras Settings 
   harrasConfig       D@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Shaco]: Items Settings 
   iteConfig    it    LoadToMenu    [Shaco]: Evade Settings 	   exConfig    Enemies    GetEnemyHeroes    pairs    Spells 
   interspellsQ 
   GetSpellData 	   tostring    Dodge  	   charName     Spell     Spells2    UIS    Enable    [Shaco]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    EKS    [Shaco]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Shaco]: Farm Settings    farm    WF    Yes    EF       @	   Freezing 
   LaneClear    [Shaco]: Jungle Farm Settings    jf    WJF    EJF       4@   [Shaco]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQT 
   Draw Q Timer    DQTC    Draw Q Timer Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Shaco]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          Á-  ×-   @   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡G€D †@@ ‡ŔD‡ EJ€ …G@A †@@ ‡ŔD‡ EJ€ …L@E ]@ F€E GŔĹ ]€€ ‡ F @   €
€ĆŚ €       CheckOB 
   MenuShaco    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    R    comboConfig    HXR    Smite    os    clock    QTime2    QCasted                           Ů-  ů-   ű   F @ ]€€ [   @=€G@@ [@  €<€G€@ [   €€FŔ@ ‡€@ ]€ [   @€G A L@Á Ç€@ A ÁA]@ G€@ [   @€F€A G Â G@Â €Â  €FŔB ‡€@ ]€ ‡ C ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡€D@ € €LŔD Ć E ]@€G€@ [   @€F€A G Â G@Â @Ĺ  €FŔB ‡€@ ]€ ‡ C ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡€D@ € €LŔD Ç€@ ]@€G€E ŔĹ Ŕ)€G€@ [   @€F€A G Â G Ć €Â  €FŔB ‡€@ ]€ ‡@F ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡€F@ € €LŔF Ć E ]@€G€@ [   @€F€A G Â G Ć @Ĺ  €FŔB ‡€@ ]€ ‡@F ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡€F@ € €LŔF Ç€@ ]@€G G [   @€F€A G Â G@Ç [    €FŔB ‡ G ]€ ‡€G ‡@C€€ @€F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡ŔG@ € €L H Ç G ]@€G@H [    €F€A G Â G€Č €Â Ŕ€FŔB ‡@H ]€ ‡ŔH ‡@C€€  €F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡ I@ @ €L@I ]@ G@H [   Ŕ€F€A G Â G€Č @Ĺ €€F€I †€C ÇŔH Ç@Ă]€€†€A ‡ B‡ŔI@  €F€C GŔĂ †€C ‡ DP€€ O@Ä †€A ‡ B‡ I@ @ €L@I ]@ G@H [   €€F€A G Â G Ę [   @€F€C L@Ę Ć€J ]€€GŔĘ  Ë €€F@K †€J Ç@H Ç€ËAH ÁK]@  € 0      ComboActive    recall    QCel    ValidTarget    it 
   CastItems 
   MenuShaco 
   iteConfig    comboConfig    USEQ        @   GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ 	   mousePos       @   haveq     USEW    W    WMANA    CastW    ECel    USEE    E    EMANA    CastE    RCel    RMODE    R    RMANA    CastR    EnemyCount    HXR    AC 
   GetSpellData    _R    name    hallucinateguide 
   CastSpell    x    z                          ű-  .   *   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ€F A G@Á † A ‡€AP€€ OŔÁ † @ ‡@@‡ B@  €G@B [@  @€G€B [   €€F @ G@Ŕ GŔÂ [   @€F C ‡€B ]€ ‡@C ‡€C€€ € €LŔC Ç€B ]@€ €    
   MenuShaco 
   harrasConfig 
   HTEnabled 
   HarassActive    myHero    mana    maxMana       Y@   EMANA    recall    ECel    USEE    GetDistance    E    range    CastE                          .  .   
{   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ €€€B €ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€D BD‚€   €€X€Ä €ÂD @€‡D ‡E‚€  @
€BE €€B€@	€€EŔ€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚ €D BD‚€   Ŕ€X€Ä@€ÂD @€‡D ‡E‚€  €€ÂĹFF  Ŕ€ĂB ]‚ @€ €BE €€B€€Ĺ Ŕ€ÂB CFÂB GBĂB‚CFA GBÁGBĆ ‚ €‚F BD‚€   Ŕ€X€Ä@€ÂD @€‡D ‡E‚€  € €ÂF €€B€â€  cć €       FarmActive    recall 
   EnemyMinions    update 
   MenuShaco    farm    WF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   EMANA    E    Ready     ValidTarget    range    CastE        @   health    getDmg    WMANA    W    CastW                          .  -.   	T   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€†A ‡ÁA‡E›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€ €‡E ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇE ÇÄŔ€ €ŚÁE  €ťA€b€  ăŔî €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuShaco    jf    WJF    myHero    mana    maxMana       Y@   WMANA    W    Ready     GetDistance    range    CastW    EJF    EMANA    E    CastE                          /.  5.   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuShaco 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         7.  9.      L @ Ć@@ ^ €_    €       CastW 	   mousePos                          :.  ?.   2   @ A@ @F@ GÁŔ€ ] ‡ÁÇAŽÁO†@ ‡AAŔ ť ÇÁ‚AÎ‚ŹÁN‡AM†@ ‡AAŔ ť ÇÁAÎ‚ŹÁĆ@ ÇÁŔ  Ý ‚ÁG‚ABĎ‚ŤÁÇAŤÁĆÁA  €FB G‚Á€ Ţ ß   € 	      math    pi      €f@   cos    x    sin    y    Vector    myHero                          @.  M.   3   F @ G@Ŕ G€Ŕ [@    € € FŔ@ ‡ A ] @	€A ĆA ÂÁBFBB G‚Â‡ÂÁ‡ÂBÝ ‚A FBB NB‚‚ C‚ BCL‚C Ŕ  €@ ]‚€†ÂC Ŕ€ €ť‚€ D€€†ÂC Ŕ€ť‚ ÇBD Ç‚ÄŔŔ €ŚÂD  €ťB€Ŕ˙b€  ăŔő €    
   MenuShaco 	   ilConfig    BM    pairs    boxes       ^@   Vector    Object    x    myHero    y    z    normalized      Ŕ‚@   RotateAroundPoint    GetDistance       Y@   W    range    CastW                          O.  ].   S   F @ †@@ ť € ]  €€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€B ‚B‚…
†FBC €€Á‚ ]‚€[   
€XŔĂ€€GD [B  Ŕ€FBD L‚ÄÁÂ ]‚€Ŕ €†E ‡BE‡‚E›  Ŕ€†ÂE Ŕ€ť‚ ÇÂA ÇĆŔ €‡ÂA ‡‚Dť‚€ ›  Ŕ €ŚBF  €ťB€ € €€†E ‡BE‡‚F›  @€†ÂE Ŕ€ť‚ ŔF €[  €€†G ĆBD ĚBÇAĂ Ý‚€ €ťB€b€  ă€ě €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    E    myHero       @   level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 
   MenuShaco 	   ksConfig    EKS    GetDistance    range    CastE    IKS      Ŕ‚@
   CastSpell    GetSlot                          _.  c.      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       Q    Ready 
   CastSpell    _Q    x    z                          e.  i.      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       W    Ready 
   CastSpell    _W    x    z                          k.  p.      ‡ @ ‡@@ť€€ ›   €€†€@ ÁŔ  A ť€€›     € € †@A Ć€A  € ť@€ €       E    Ready    TargetHaveBuff2    Deceive    myHero 
   CastSpell    _E                          r.  v.   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       R    Ready 
   CastSpell    _R                          x.  .   
	  F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [   Ŕ	€F€H GŔČ ]€€ ‡ I €€ @€F@I †€I ĆŔI Ç ĘI FH GÁČ]€ AÝ  ť€  Ć@J Ç@ÂAJ BFAJ GÁÂ
 ĆAC @ B@ÂJÂCF@ GBŔGÂĘGÄ†@ ‡B@‡ÂJ‡BDÝ € ]@ F @ G@Ŕ G Ë [    €G@K G€Ë ]€€ [   Ŕ€F B †@J ‡@BĆ@J Ç€ÂAJ ÁBGAK GÁË†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G Ě [    €G@L G€Ë ]€€ [   Ŕ€F B †@J ‡@BĆ@J Ç€ÂAJ ÁBGAL GÁË†AC Ć@ ÇAŔÇĚÇÁĂ@ B@‚LDF@ GBŔG‚ĚGBÄť ]@  F @ G@Ŕ GŔĚ [    €G M G€Ë ]€€ [   Ŕ€F B †@J ‡@BĆ@J Ç€ÂAJ ÁBGM GÁË†AC Ć@ ÇAŔÇAÍÇÁĂ@ B@BMDF@ GBŔGBÍGBÄť ]@  F @ G@Ŕ G€Í [    €GŔM G€Ë ]€€ [   Ŕ€F B †@J ‡@BĆ@J Ç€ÂAJ ÁBGÁM GÁË†AC Ć@ ÇAŔÇÎÇÁĂ@ B@NDF@ GBŔGÎGBÄť ]@   € 9   
   MenuShaco    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQT    os    clock    QTime2    DrawText3D 	   tostring    math    round    myHero       :@   DQTC    DQR    Q    Ready    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC                          š.  ®.   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot 
   MenuShaco    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          °.  Á.   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    E    myHero       @   R    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    E Kill!    R Kill! 
   E+R Kill!                          Ă.  Ę.      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á[    €Ŕ   @€Ű   Ŕ €AŔ@A  €
 A €       isMe    name    find    recall    Deceive    haveq                         Ě.  Ó.      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á[    €Ç Ŕ Ű   @€›   Ŕ €Ç@@@Á  €
 A €       isMe    name    find    recall     Deceive    haveq                         Ő.  /   1  [   €€›    €Ç Ŕ Ű   @€Ç@@€Ŕ€€ÇŔ@ Á@  
AK  ‹ ŠÁAĆAB ÇÂŠÁ„ĆÁB ÇÂŠÁ…ĆAB ÇĂŠÁ†J‚†C ‡ÁCť€ ŤDĆAD Ý€ ĐÄŽÁJ†Ę@[   @€›   Ŕ€Ç Ŕ Ű    €Ç@@ŔÄ@€
ŔAŠĆ€C ÇŔĂÝ€€ 
Ŕ€ŠĆ€C ÇŔĂÝ€€ ÍŔĹ
Ŕ ‹Ç F Ç@ĆÝ€€ Ű   @<€Ć€F ÇŔĆÇ ÇŰ    ;€[   €:€Ç@Ç ÁB AGX @9€ĆŔB Ç€ÇŰ@  @8€ÇŔÇ ÁB ÁG  7€›   €6€ÁŔ Á ŔH‘ Ŕ ÇŔÇ ÁB ÁG  €Ç I A@Ç Ű   Ŕ
€Ć€F ÇŔĆÇ@ÉA@Ç Ű    €Ć J  € GA@ÝŔ€ “Ŕ “ĆŔI X@Ę@€ĆŔI X€Ę€ €ĆŔI ŔĘ  € € Ć€I X Ć €Ć€I X Ë@€Ć€I X@Ë€ €Ć€I €Ë €ĆŔK Ě Ç I Ç ÇŔÇŔ ĆŔK Ě Ç I Ç Ç@ČŔ€ĆŔK Ě Ç I Ç Ç€ČŔ ‘ĆŔB AÇFÁB GAÇ@@#€ÇA  €"€AĚ ‘Ŕ!€ŔL™ÍFH ŔČŔ€GAM[  €€GAMGÍ‡ÍX€  €CA  C€ @™ €FH  Á@€FÁM €€ ÇNBH F‚H €€Ŕ ]€@™Ŕ€FH @Î@€FN €€ ÇNBH F‚H €€Ŕ ]€@™€€FH ŔÎ@€FO €€ ÇNBH F‚H €€Ŕ ]€@™@€FH @Ę@€FAO €€ ÇNBH F‚H €€Ŕ ]€@™ 
€FH €Ę@€FO €€ ÇNBH F‚H €€Ŕ ]€@™Ŕ	€FH ŔĘ €FÁM €€ ÇNBH F‚H €€Ŕ ]€[A   €FÁM €€ ĆÁO  € Ý ĎAÎNÎ‚BH F‚H €€Ŕ ]€@™Ŕ€FH  Đ €FAO ‡NŔ€ BH F‚H €€Ŕ ]€@™FL [  €€FAP €€ ÇF ÇĐ]€[  Ŕ €FÁP Ą  Á ]A€ € E      isMe    name 
   JackInTheBox    boxes       đ?   Object    valid    x 	   mousePos    y    myHero    z    EndT    os    clock       N@   GetLatency      @ź@   Deceive    QCasted    QTime    QTime2       @   Q    Ready 
   MenuShaco 	   exConfig    UIS    team    dead    type 	   shottype    radius    maxdistance         
   interspellsQ    IS 
   spelltype 	   casttype 
   getSpellType       @      @      @   W    E    R 
   skillData 	   charName    health    hitchampion     boundingRadius    target 
   networkID    checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   ValidTarget    range    DelayAction 333333Ó?   ü.  ţ.           @ †@Ŕ @€ €       CastQ 	   mousePos                                                /   /   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuShaco    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          )/  P/   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    //  //           @ @  €       AfterAA                         2/  2/           @ @  €    	   BeforeAA                         9/  9/           @ @  €       AfterAA                         </  </           @ @  €    	   BeforeAA                         B/  B/        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    B/  B/           @ @  €       AfterAA                                               E/  E/           @ @  €    	   BeforeAA                         J/  J/           @ @  €       AfterAA                         M/  M/           @ @  €    	   BeforeAA                              	
                R/  w/   ‘   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€ÄJŔÄ„J Ĺ…J@Ĺ†Ą@  J€€‡
@ K€ JŔĹ‚J ĆJ@Ć„J Ĺ…J€Ć†Ą€  J€€‡
@ ‹C      Ă   
ŔGŹ
Ŕ€Ž
€ Ž
@€ŤF@H †€H Ç A ÇŔÁÁH FI ]€€
@ F@H †€I Ç A ÇŔÁÁH FI ]€€
@€’FŔ@ † J Ç A ÇŔÁAJ C  ]€€
@€“FŔ@ † J Ç€E ÇŔÁAJ C  ]€€
@ •K   
@€•A  @ Á€ 
 Ě—
Ŕ —
€€–
@ –K  	‹€  Š@MšŠŔM›Ë€  Ę NšĘ@N›  
Nš
ÁN›K  JOšJAO›‹  ŠOšŠÁO›Ë  ĘPšĘAP›‚  
‚Pš
ÂP›K‚  JQšJBQ›‹‚  Š‚QšŠÂQ›Ë‚  ĘRšĘBR›  
Rš
ĂR›K  JSšJCS›‹  ŠSšŠĂS›Ë  ĘTšĘCT›„  
„Tš
ÄT›K„  JUšJDU›‹„  Š„SšŠÄS›Ë„  Ę„UšĘÄU›…  
Vš
EV›K…  J…VšJĹV›d@ 

@€™F@W ]€€ 
@ ® € ^      SelectedTarget     Cel    TargetSelector    Q    name    Vault Breaker    range      ¨†@   speed      čś@   delay       ŕ?   width      €K@   Ready    E    Excessive Force      Ŕ‚@     ŕ•@      Đ?      n@   R    Assault and Battery       ‰@     xž@      T@
   QCharging    QSend 
   QPressStatus    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    RTargetSelector    killstring 	   CastTime    TimeToFullRange 
   LoadSpeed    WStack               ô?      y@   InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    it 
   ItemsCast    V/  V/        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          W/  W/        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          X/  X/        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               y/  Ř/     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FB A Ë€‚ AÂ  äA€]@€F @ GŔĆ LŔÁ Á@  FÁL   ĆM ÇAÍ‚
 Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ
  FAN  ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ GŔĆ LŔÁ Á  A FAN  ÁÁ  AÂ ]@€F€P † @ Á  € C    Ă  ]@€F @ L Á ÁŔ  ]@ F @ G Ń LŔÁ Á  A FG Á ]@ F @ G Ń LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G Ń LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G Ń LŔÁ Á  Á FG Á ]@ F @ G Ń LŔÁ Á  A FG Á ]@ F @ G Ń LŔÁ ÁŔ
  FAN  ÁÁ  AÂ ]@€F @ G Ń LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ G Ń LŔÁ Á  Á FG Á ]@ F @ G Ń LŔÁ Á  A FG Á ]@ F @ G Ń LŔÁ Á@  FÁQ   ĆM ÇAÍ Ý ]@  F @ L Á Á@  ]@ GŔR L Ó Ć @ Ç€Ň]@€F @ L Á Á@  ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ FŔS † T ť € ]  @€†AT ÇT ťŔ€ÇÂÔĂT Ŕ€Ć@ Ç‚ÓĚÂÁGUC ÇĂT„ GU–CĆH € ÝB ˘  #Bűb€  ăŔůF @ G€Ó LŔÁ Á  Á FG Á ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ ÁŔ  FH € ]@ F @ L Á Á@  ]@ F @ G€Ö LŔÁ Á  A FG Á ]@ F @ G€Ö LŔÁ ÁŔ  FH € ]@ F @ G€Ö LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ Á@ 	 GAI GÁĹ	 FH € ]@ F @ G Ř LŔÁ Á€ 	 GÁJ GÁĹ FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ů LŔÁ Á  A FG Á ]@ F @ G Ů LŔÁ Á@ 	 GAI GÁĹ	 FB A Ë€‚ A‚ Â äA€]@€F @ G Ů LŔÁ Á  	 GJ GÁĹA
 FB A Ë€‚ A‚ Â äA€]@€F @ G Ů LŔÁ Á  Á FG Á ]@ F @ G Ů LŔÁ Á  A FG Á ]@ F @ G Ů LŔÁ ÁŔ
  FAN  ÁÁ  AÂ ]@€F @ G Ů LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ L Á Á€ Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ GŔÚ LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ ÁŔ
  FAN  ÁÁ  AÂ ]@€F @ GŔÚ LŔÁ Á@  FAN Á ÁÁ  AÂ ]@€F @ L Á Á€ Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á  A FH € ]@ F @ GŔŰ LŔÁ Á  Á FG Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á€ Á FH € ]@ F @ GŔŰ LŔÁ Á  A F] ‹ ÁÁ Â AÂ Â ¤A ]@ F @ GŔŰ LŔÁ Á  Á FG Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á  A FH € ]@ F @ GŔŰ LŔÁ Á€ Á F] ‹ ÁÁ Â AÂ Â ¤A ]@ F @ GŔŰ LŔÁ Á  Á FG Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á  A FH € ]@ F @ GŔŰ LŔÁ Á€ Á F] ‹ ÁÁ Â AÂ Â ¤A ]@ F @ GŔŰ LŔÁ Á  Á FG Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á   A  FH € ]@ F @ GŔŰ LŔÁ Á€  Á  F] ‹ ÁÁ Â AÂ Â ¤A ]@ F @ L Á Á ! A! ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€! Á! FH   ]@ F @ G Ń L â Á@ ]@€ € ‰      MenuVi 
   scriptConfig    MasterSeries: Vi    Vi1    addSubMenu    [Vi]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Vi    addTS    [Vi]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEE    E     (E)    USER    R     (R)        @   No    Normal 	   Killable    CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   EMANA    Min. Mana % To Use (E)       .@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Vi]: Harras Settings 
   harrasConfig 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Vi]: Items Settings 
   iteConfig    it    LoadToMenu    [Vi]: Auto-Interrupt    ES    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop          UI    Enable    [Vi]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Vi]: KS Settings 	   ksConfig    QKS    RKS    [Vi]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    EF       @   [Vi]: Jungle Farm    jf    QJF    EJF    [Vi]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Vi]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          Ú/  î/   _   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ †G D [   Ŕ€F@D ]€€ [@   €F@@ G€Ä GŔÄ [   €€F E G@Ĺ † E ‡€EP€€ OŔĹ †@@ ‡€D‡ FZ€€ €€F@F ]€€ [   €€F E G@Ĺ † E ‡€EP€€ OŔĹ †@@ ‡€F‡ F€€ Ŕ€G€B [    €F@@ G€Ä GŔĆ [   Ŕ€F G ‡€B ]€ @Ç € €L€G Ç€B ]@€LŔG ]@ L H ]@  € !      CheckOB    MenuVi    QTargetSelector    update    RTargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    RCel    GetCustomTarget    TargetSelector    target 
   QCharging 
   HarassActive 
   harrasConfig 
   HTEnabled    myHero    mana    maxMana       Y@   QMANA    ComboActive    comboConfig    USEQ    GetDistance      ¨†@   CastQ 
   ERangeUpdate    Smite                          đ/  ő/      F @ ]€€ [   Ŕ€F@@ G€Ŕ GŔŔ [   €€F A G@Á † A ‡€AP€€ OŔÁ †@@ ‡ B‡@B@ Ŕ €L€B ]@ FŔB ]@€  €       ComboActive    MenuVi    comboConfig    USEE    myHero    mana    maxMana       Y@
   harrasConfig    EMANA    CastE    ResetAA                          ÷/  
0   p   F @ ]€€ [   €€G@@ [@  Ŕ€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡@C@ @€F€@ ‡Ŕ@ ]€ [    €F€A G Ă G€Ă [   Ŕ€FŔC ‡Ŕ@ ]€  Ä € €L@D ÇŔ@ ]@€F B G@Â † B ‡€BP€€ OŔÂ †€A ‡ C‡€D@  
€F€@ ‡ŔD ]€ [   €€F€A G Ă G Ĺ @Ĺ @€FŔC ‡ŔD ]€ ‡€E ‡ŔE€€ € €L F ÇŔD ]@€F€@ ‡ŔD ]€ [   Ŕ€F€A G Ă G Ĺ @Ć €€FŔC ‡ŔD ]€ ‡€E ‡ŔE€€ Ŕ€GŔD G€Ć †ŔF ‡ GÇŔD Ç@Çť€ M€€ Ś€G ÁD ť€€€€ € €L F ÇŔD ]@€ €       ComboActive    recall    ValidTarget    QCel    it 
   CastItems    MenuVi 
   iteConfig    myHero    mana    maxMana       Y@   comboConfig    QMANA    USEQ    GetDistance      °@   CastQ    RMANA    RCel    USER        @   R    range    CastR       @   health    math    floor    shield    CalcDMG                          0  0   I   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €€G A [@  Ŕ€F@A ‡€A ]€ [   Ŕ€F @ G@Ŕ GŔÁ [   €€F B ‡€A ]€ @Â @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@ € €LŔC Ç€A ]@€F@A ‡ D ]€ [   @€F @ G@Ŕ G@Ä [    €F B ‡ D ]€ †€B ‡€DŤŔD€€  €F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡ E@ @ €L@E ]@  €       MenuVi 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    USEQ    GetDistance      ¨†@   myHero    mana    maxMana       Y@   QMANA    CastQ    Cel    USEE    range      €Q@   EMANA    CastE                          0  >0   Ą   F @ ]€€ [   Ŕ'€F@@ [@   '€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ  #€€Â  €ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€X Ä@€BD @€‚ G‚D GÂÄ@€€E A‚ €€ĆÂB C ‚€G‚Ĺ ‚@€LÂE Ŕ€]B€@€@Ĺ Ŕ
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚ €F B  €€BF A‚ ‡‚D ‡ÂFÇ‚@ ÇBÂÂ X D €@…€€ŚÂE   ťB€€€BF G‚D GÂÄ‡‚D ‡ÂFÇ‚@ ÇBÂÂ X D €@…€ €ŚG   ťB€€B €ÂB CFÂB GBĂB‚CFA GBÁGBÇ ‚@€X Ä €BD @€‚ FÂB GÂÄM‚Ç@ 	€‚ĹFE Â Ŕ€ĂB AC ]‚€@Ŕ€H B  €@E€€ÂB CFÂB GBĂB‚CFA GBÁGBÇ ‚Ŕ€X Ä@€BD @€‚ FÂB GÂÄM‚Ç@@ €H B â€  cÜ € !      FarmActive    recall 
   EnemyMinions    update    MenuVi    farm    QF    EF    pairs    objects        @   myHero    mana    maxMana       Y@   QMANA     GetDistance    Q    range    getDmg       @   health    CastQ 
   QCharging    GetBestLineFarmPosition      ¨†@   width    CastQ2    EMANA      €Q@   E    CastE                          @0  X0   \   F @ ]€€ [   €€F@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€ť ĆAB ÇÄÍAÄŔ@ €ŚD ťA †A ‡ÁA‡ÁD›   
€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĹ€@€‡AE ›A  @€†E ÇÁE ÇÄÂE FG‚@ GBÁťÁ X€C €BF € B€ €†E ÇÁE ÇÄÂE FG‚@ GBÁťÁ X€C€ €‚F € B€b€  ăŔě €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuVi    jf    EJF    myHero    mana    maxMana       Y@   EMANA     GetDistance    range      €Q@   CastE    QJF    QMANA 
   QCharging    GetBestLineFarmPosition    Q    width    CastQ    CastQ2                          Z0  n0   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot    MenuVi    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          p0  v0   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuVi 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         x0  †0   L   F @ †@@ ť € ]  Ŕ€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B AC ]‚€X Ă@
€†BC Ŕ€ ť‚€›  Ŕ€‡ÂC ›B   €Ŕ@€†D ‡BD‡‚D›   €†ÂD Ŕ€ť‚  EŔ €ŚBE  €ťB€ €@€€†D ‡BD‡‚E›  @€†ÂD Ŕ€ť‚ ÇÂB ÇÂĹŔ€ €ŚF  €ťB€b€  ă@î €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    R     ValidTarget      @ź@   recall    MenuVi 	   ksConfig    QKS    GetDistance      ¨†@   CastQ    RKS    range    CastR                          0  Ž0   
2      Á     A  GA@ GŔ]€ [  Ŕ€FÁ@ A  Ŕ€ A AB ]€ś@€  €   GA GŔ]€ [  Ŕ€FÁ@  Ŕ€ A AB ]€Ü@€  €Á   GÁA GŔ]€ [  Ŕ€FÁ@ Á Ŕ€ A AB ]€A€  €  MÁ M_  €               R    Ready    getDmg    myHero       @   Q    E                          0  ”0      ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ ›   Ŕ €†Ŕ@ Ć A  € ť@€ €       R    Ready    ValidTarget 
   CastSpell    _R                          –0  ť0   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       E    Ready 
   CastSpell    _E                          ź0  ®0   W   † @ ›@    € € ‡@@ ‡€@ť€€ ›    €†Ŕ@ Ŕ € ť€ ›   Ŕ€‡ A ›@  @€†@A Ć€A ÇŔÁÇ ÂÇ@Â € GA@ GÂ‡A@ ‡ÁBÁ B@ BCF‚C Â Ă    D  C  ĆA ÇĂÁÇÂÇÄť X@D€
€Ű    
€FD †ÁD ÇEBE]A €€‡ A ›   Ŕ€†@A Ć€A ÇŔÁÇ ÂÇ@Â € GA@ GÂ‡A@ ‡ÁBÇA@ ÇĹB@ BCF‚C Â Ă    D  C  ĆA ÇĂÁÇÂÇÄť X@D €Ű   € €LÁE Ŕ ]A€ €    	   VIP_USER    Q    Ready    ValidTarget 
   QCharging    GetPrediction2    MenuVi 	   spConfig    qConfig    QP    delay    width      p‡@   speed    myHero    line    QCH  
   CastSpell    _Q    x    z    range    CastQ2                          °0  ¸0      † @ ›@    € € ‡@@ ›   €€†€@ ÇŔŔ Á GAÁ ť€ 
ŔAĆ B AB @ Ý@€
€B €    	   VIP_USER 
   QCharging    D3DXVECTOR3    x    y    z    QSend    CastSpell2    _Q                           ş0  Ě0   
­   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@   €        MenuVi    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range      @P@   DARC    DQR    Q    Ready    DER    E    DERC    DRR    R    DRRC                          Î0  Ö0       [   €€Ŕ   Ŕ€Ű   @€AŔ€@€€
 ÁA ÁA€ GB 
A
 ‚[   Ŕ€Ŕ    €Ű   €€AŔAB €    €
 A… €       isMe    name    ViQ 
   QCharging 	   CastTime    os    clock    TimeToFullRange    find    recall                          Ř0  á0      [   €€Ç Ŕ Ű   Ŕ€›   @€Ç@@€Ŕ€ €
 Á
€Á‚
 Á[   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě ÂAA Ý€€Ű     €
 Á„ € 
      isMe    name    ViQ 
   QCharging  	   CastTime         
   QPressStatus    find    recall                         ă0  î0   )   G @ @€€@€F€@ GŔŔ ]€€ ‡ @ €€ Ŕ€G @ †€@ ‡Ŕ@ť€€ N€€ ‡ A Ź@ Î€€‚A NÂ
A€€G @ @€€ €F€@ GŔŔ ]€€ ‡ @ @ € €G€A J@Á€€G€A G@Â ]€€ [@  @ €G€A J@Á € 
   	   CastTime            os    clock 
   LoadSpeed      ¨†@   Q    range       I@   Ready                          đ0  ý0   ?   [   @€Ç Ŕ Ű   €€›    €Ç@@€Ŕ@ €ĆŔ@ Ý@€ Ć A Ç@ÁÇ€ÁŰ    €ÇŔA Ç ÂÝ€€ Ű   Ŕ	€Ć@B B Ý @€[   Ŕ€ÂÂ FC GÂÂX@€€BĂ FC GBĂ@@€›   Ŕ€B@G‚Ă@Ŕ€A BAG‚ĂB  @€ÂC @€ ‡ÂA ‡D‚€  € €BD €€ B€â€  cÁö €       isMe    name    ViE    ResetAA    MenuVi    ES    UI    Q    Ready    pairs    InterruptList    team    myHero    type 
   spellName    ValidTarget    range    CastQ                          ˙0  ,1   
z   Ç @ Ű    €@@ €€Ŕ € €ĚŔ@ FA Ý@€Ç@A Ű    €€A€€ŔÁ  €ĚŔ@ FA Ý@€
 Â‚Ŕ€€A@€@Â Ŕ€
€Â‚@€ÇŔB Ç ĂÝ€€ Ű    €€AŔ €@Â @ €
€Â‚€€€A €ŔÁ €€Ć@C C FA GÁĂ†A ‡DÝ@ Ć@D Ŕ€ Ŕ€Ć€D ÇŔÄÇ ĹŰ   €€Á@   FE †ÁE ť€ ] €€†F Ŕ€ť‚ ›  @€†BF Ŕ€A ť‚€ZŔ @ €€F@€†BF Ŕ€A ť‚€Ŕ   €b  ăú   €ŔĆ€€GG [   €GAG‡G ‡AG€Ŕ€
€FŽFD GÁÄGĹ[   €FG Á ÇAG–Á]A €€
 ŽFD GÁÄGĹ[   €FG  ÇAG–Á]A  € !   
   QCharging       đ?     €@   CastQ2 	   mousePos 
   QPressStatus      @T@      p@      p@   Q    Ready 
   CastSpell    _Q    x    z    WM_LBUTTONDOWN    MenuVi    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          51  \1   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ;1  ;1           @ @  €       AfterAA                         >1  >1           @ @  €    	   BeforeAA                         E1  E1           @ @  €       AfterAA                         H1  H1           @ @  €    	   BeforeAA                         N1  N1        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    N1  N1           @ @  €       AfterAA                                               Q1  Q1           @ @  €    	   BeforeAA                         V1  V1           @ @  €       AfterAA                         Y1  Y1           @ @  €    	   BeforeAA                              	
                ^1  Ť1   ˝   
@@€K €Ŕ  Á  A A Á d@€
@ 
@B„K €Ŕ Á  A A Á d@€
@ …
@@
@ŔK€ J Ĺ‰J€ĹŠJ Ć‹J€ĆŚJ ÇŤĄ   J€€Ž
@ ‰K€ JŔÇ‰J ČŠJ@Ŕ‹J@ŔŚJ@ŔŤĄ@  J€€Ž
@ ŹKŔ J€Č‰JŔÂŠJ@Â‘J É‹J@ÂŚJ@ÉŤĄ€  J€€Ž
@€K€ JŔÉ‰J ĘŠJ@Ę‹J€ĘŚJ ĘŤĄŔ  J€€Ž
@ “F@D † K Ç€D Ç@ĹAK C  ]€€
@€•F@D † K Ç€G Ç@ĹAK C  ]€€
@ —F@D † K Ç@H Ç@ĹAK C  ]€€
@€—F@D † K Ç€I Ç@ĹAK C  ]€€
@ C      Ă   
@Mš
Ŕ€™
€ ™
@€FŔM † N Ç€D Ç@ĹAN FN ]€€
@ ›FŔM † O Ç€D Ç@ĹAN FN ]€€
@€ťK   
@€ž
@MźA@ 
@P 
@€źK  	‹€  Š ŃˇŠ€Ń˘Ë€  ĘŔŃˇĘ Ň˘  
AŇˇ
Ň˘K  JÁŇˇJÓ˘‹  ŠAÓˇŠÓ˘Ë  ĘÁÓˇĘÔ˘‚  
BÔˇ
‚Ô˘K‚  JÂÔˇJŐ˘‹‚  ŠBŐˇŠ‚Ő˘Ë‚  ĘÂŐˇĘÖ˘  
CÖˇ
Ö˘K  JĂÖˇJ×˘‹  ŠC×ˇŠ×˘Ë  ĘĂ×ˇĘŘ˘„  
DŘˇ
„Ř˘K„  JÄŘˇJŮ˘‹„  ŠD×ˇŠ„×˘Ë„  ĘDŮˇĘ„Ů˘…  
ĹŮˇ
Ú˘K…  JEÚˇJ…Ú˘d@ 

@ ˇF [ ]€€ 
@€µ
€Ű¶K   
@€·
@B¸ € q      SelectedTarget  	   LOADTIME ÍĚĚĚĚĚě?ÍĚĚĚĚĚđ?333333ó?š™™™™™ő?      ř?   TimeToFullRange            ERANGE      ř‘@     P”@     ¨–@      ™@     X›@   Cel    TargetSelector    Q    name    Stretching Strike    range      0@   speed      Ł@   delay )\ŹÂő(Ľ?   width      €[@   Ready    W    Unstable Matter      ŕu@   E    Elastic Slingshot 
   baserange      p—@     Ŕl@   R    Let's Bounce!      Ŕr@     xž@      Đ?   QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    WTargetSelector    ETargetSelector    RTargetSelector 
   ECharging    ESend 
   EPressStatus    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    RStatus 	   CastTime 
   LoadSpeed       y@   InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Zac    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    it 
   ItemsCast 	   BlobTime       @   Blobs 
   CurrentBlobs    e1  e1        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          f1  f1        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          g1  g1        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          h1  h1        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               Ź1  ń1   5  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GK GÁĹÁ FB  Ë€B A‚ Â äA€]@€F @ GŔĆ LŔÁ Á 
 A
 FM   ĆÁM ÇÎB Ý ]@  F€N † @ Á  € C  € Ă  ]@€F @ L Á ÁŔ  ]@ F @ G Ď LŔÁ Á  A FG Á ]@ F @ G Ď LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G Ď LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G Ď LŔÁ Á  Á FG Á ]@ F @ G Ď LŔÁ Á  A FG Á ]@ F @ G Ď LŔÁ Á@  FÁO   ĆÁM ÇÎ Ý ]@  F @ L Á Á@  ]@ GŔP L Ń Ć @ Ç€Đ]@€F @ L Á Á@  ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ ÁŔ  FH € ]@ F @ G€Ń LŔÁ Á@  FH € ]@ F @ G€Ń LŔÁ ÁŔ  FAS ‹ Á ‚ AÂ  ¤A ]@ F @ G€Ń LŔÁ Á  Á FG Á ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ Á@  FH € ]@ F @ G€Ń LŔÁ ÁŔ  FB  Ë B A‚ äA ]@€F @ G€Ń LŔÁ ÁŔ  FH € ]@ F @ G€Ń LŔÁ Á@  FÁV  ÁA ‚ AÂ ]@€F @ G€Ń LŔÁ ÁŔ  FÁV A ÁA ‚ AÂ ]@€F @ G€Ń LŔÁ Á€ Á FÁV  ÁA B AÂ ]@€F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F Z †@Z ť € ]  @€†Z ÇÁZ ťŔ€ÇŰ[ Ŕ€Ć@ ÇÂŮĚÂÁGC[ Ç[Ä GD[–CĆH € ÝB ˘  #Bűb€  ăŔůF @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  A FH € ]@ F @ L Á Á€ Á ]@ F @ GŔÜ LŔÁ Á  A FG Á ]@ F @ GŔÜ LŔÁ Á  A FH € ]@ F @ GŔÜ LŔÁ Á€ Á FH € ]@ F @ L Á Á  A ]@ F @ G@Ţ LŔÁ Á  A FG Á ]@ F @ G@Ţ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ G@Ţ LŔÁ ÁŔ 	 GJ GÁĹA
 FH € ]@ F @ G@Ţ LŔÁ Á  	 GÁJ GÁĹ FH € ]@ F @ G@Ţ LŔÁ Á@ 	 GK GÁĹÁ FH € ]@ F @ L Á Á€ Á ]@ F @ GŔß LŔÁ Á  A FG Á ]@ F @ GŔß LŔÁ Á   	 GAI GÁĹ	 FB  Ë€B AB  ‚  äA€]@€F @ GŔß LŔÁ ÁŔ  	 GJ GÁĹA
 FB ! Ë€B AB  ‚  äA€]@€F @ L Á Á@! ! ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ ÁŔ! 	 GAI GÁĹ	 FH € ]@ F @ G€á LŔÁ Á " 	 GJ GÁĹA
 FH € ]@ F @ L Á Á@" " ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ" # FH € ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@# # FH € ]@ F @ G€â LŔÁ ÁŔ# $ FAS ‹ Á  AÂ  ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@$ $ FH € ]@ F @ G€â LŔÁ ÁŔ$ % FAS ‹ Á Â AÂ  ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@% % FH € ]@ F @ G€â LŔÁ ÁŔ% & FAS ‹ Á Â AÂ  ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@& & FH € ]@ F @ G€â LŔÁ ÁŔ& ' FAS ‹ Á  AÂ Â ¤A ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@' ' FH € ]@ F @ G€â LŔÁ ÁŔ' ( FAS ‹ Á Â A Â ¤A ]@ F @ L Á Á@( ( ]@ F @ G€č LŔÁ Á  A FG Á ]@ F @ G€č LŔÁ ÁŔ( ) FH   ]@ F @ G Ď L@é Á@ ]@€ € ¦      MenuZac 
   scriptConfig    MasterSeries: Zac    Zac1    addSubMenu    [Zac]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Zac    addTS    [Zac]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    USER    R     (R)        @   No    Normal 	   Killable    CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T 
   AddSpellMenu    [Zac]: Harras Settings 
   harrasConfig 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Zac]: Items Settings 
   iteConfig    it    LoadToMenu    [Zac]: Bloblets Settings 	   blConfig    dr    Draw Radius    drb    Draw Circle On Bloblet    DSRC    Color    SCRIPT_PARAM_COLOR      `c@             ŕo@   cb    Enable Collect Bloblets    cbm 
   Collect Mode    Mouse In Radius    MyHero In Radius    cbt    Dont Collect Under Turret    cbcr 
   Combo Radius    SCRIPT_PARAM_SLICE       i@     Ŕb@     Ŕ‚@   cbhr    Harass Radius      Ŕr@   cblr    LaneClear Radius       y@      ‰@   [Zac]: Auto-Interrupt    ES    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop          UI    Enable    [Zac]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Zac]: KS Settings 	   ksConfig    QKS    WKS    EKS    RKS    [Zac]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    WF       @   [Zac]: Jungle Farm    jf    QJF    WJF    [Zac]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Zac]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ó1  2      F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A LŔŔ ]@ F@@ GŔÁ G Â [    €G@B X€Â @€FŔB ‡@B Ç C Ç@Ă]€€[   €€G@B 
@ ‡G@B 
@€‡G@B 
@ G@B 
@€G@B 
@ ‰Ŕ€FŔD ‡ C ]€ 
@ ‡G€@ G Ĺ 
@€‡G A G Ĺ 
@ G@A G Ĺ 
@€G€A G Ĺ 
@ ‰L@E ]@ L€E ]@ FŔE L Ć Ć@F ]€€G€Ć @€Ť €G G ‡€G ĆŔE Ě ĆFAF Ý€€Ç€Ć‡Ŕ J€€ŽG C ‡ G ‡@GJ€€†G H †ŔE Ś FAF ť€€‡€FG€€ 
@€ŹF@H ]€€ [@  Ŕ€F€H ]€€ [@  Ŕ €FŔH ]€€ [    €G I [@  @€F@I €	 ĆŔE ]€€[@  Ŕ€F@I Ŕ	 ĆŔE ]€€[@  @ €L J ]@ G I [   €€FŔE L@Ę Ć€J ÇŔĘJ K]@  € -      CheckOB    MenuZac    QTargetSelector    update    WTargetSelector    ETargetSelector    RTargetSelector    comboConfig    ST    SelectedTarget     ValidTarget    TargetSelector    range    Cel    QCel    WCel    ECel    RCel    GetCustomTarget    target 
   ERangeUpdate    Smite    myHero 
   GetSpellData    _E    level       đ?   E 
   baserange    ERANGE    TimeToFullRange 	   LOADTIME    ComboActive 
   HarassActive    FarmActive    RStatus    TargetHaveBuff2    ZacE    ZacR    CheckCatch    MoveTo 	   mousePos    x    z                          2  *2   „   F @ ]€€ [   €€G@@ [@  Ŕ€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€@ ‡Ŕ@ ]€ [   €€F€A G Â G@Â [   @€F€B ‡Ŕ@ ]€ ‡ŔB ‡ C€€ € €L@C ÇŔ@ ]@€F€@ ‡€C ]€ [   €€F€A G Â GŔĂ [   @€F€B ‡€C ]€ ‡ D ‡ C€€ € €L@D Ç€C ]@€F€@ ‡€D ]€ [   €€F€A G Â GŔÄ [   @€F€B ‡€D ]€ ‡ E ‡@E€€ € €L€E Ç€D ]@€F€@ ‡ŔE ]€ [   €€F€A G Â G Ć @Ć @€F€B ‡ŔE ]€ ‡€F ‡ C€€ € €LŔF ÇŔE ]@€F€@ ‡ŔE ]€ [   Ŕ€F€A G Â G Ć  Ç €€F€B ‡ŔE ]€ ‡€F ‡ C€€ Ŕ€GŔE G@Ç †€G ‡ŔGÇŔE Ç Čť€ M€€ Ś@H ÁE ť€€€€ € €LŔF ÇŔE ]@€ € "      ComboActive    recall    ValidTarget    QCel    it 
   CastItems    MenuZac 
   iteConfig    comboConfig    USEQ    GetDistance    Q    range    CastQ    WCel    USEW    W    CastW    ECel    USEE    E 
   baserange    CastE    RCel    USER        @   R    CastR       @   health    math    floor    shield    CalcDMG                          ,2  52   5   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €
€G A [@  Ŕ	€F@A ‡€A ]€ [   €€F @ G@Ŕ GŔÁ [   @€F B ‡€A ]€ ‡@B ‡€B€€ € €LŔB Ç€A ]@€F@A ‡ C ]€ [   €€F @ G@Ŕ G@Ă [   @€F B ‡ C ]€ ‡€C ‡€B€€ € €LŔC Ç C ]@€ €       MenuZac 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    USEQ    GetDistance    Q    range    CastQ    WCel    USEW    W    CastW                          72  W2   k   F @ ]€€ [   @€F@@ [@  €€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ €€€Â Ŕ€XŔÂ 
€C @€‚ GBC G‚Ă@@€ÂC AB €€ĆD C ‚€G‚Ä ‚ €FÂD †E ÇBĹĹ]B €€@Ä  €ÂE GBC G‚Ă‡BC ‡FÇ‚@ ÇBÂÂ XŔB€€@… €†ÂD ĆE CEGEťB €B@€XŔÂ@€C @€‚ GBF G‚Ă@€€‚ÄFÂC B Ŕ€D AC ]‚€@@€‚F €€B€@€@DŔ€XŔÂ@€C @€‚ GBF G‚Ă@€ €‚F €€B€â€  cę €       FarmActive    recall 
   EnemyMinions    update    MenuZac    farm    QF    WF    pairs    objects        @    GetDistance    Q    range    getDmg    myHero       @   health 
   CastSpell    _Q    x    z    GetBestLineFarmPosition    width    W    CastW                          Y2  j2   7   F @ ]€€ [   @€F@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  	€†A ‡ÁA‡B›  Ŕ€X@Â@€†B Ŕ€ť ÇÁB ÇĂŔ€ €ŚAC  €ťA€†A ‡ÁA‡C›  €€†ÁC ÇD ÇĂD BDG‚@ GBÁťÁ X@B €‚D FÂD ‡EÇBEB b€  ă ö €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuZac    jf    WJF     GetDistance    W    range    CastW    QJF    GetBestLineFarmPosition    Q    width 
   CastSpell    _Q    x    z                          l2  €2   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot    MenuZac    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          ‚2  Ť2   :   G @ U € @  Á€  a €G@ GGÁŔ†A ‡AAť€ € €FA GÁÁ‡@ Ŕ ]A€`@üF B G@Â G€Â [@    € € FŔB G Ă †@C ť€€ @ @€K €†€C ĆŔC D FD †D ĆAD D F‚C †D Ć‚C CD FC †C ĆĂC ÄC FDD †ÄC ĆÄC d@ 	†€D Ć@C Ý€€ Í@ŔÇŔ€ ť@  €       Blobs       đ?      đż   EndTime    os    clock    table    remove    MenuZac 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _Q    _E    _R    LevelSpell                          Ź2  š2   9   [   €
€‡ Ŕ ›   Ŕ	€‡ Ŕ Ś@@  ť€€›   @€‡ Ŕ Ś@@Á  ť€€›   Ŕ€‡ A Ç A Ő €Í@ÁÁ  K  JÂJA€„
AFÁB GĂ]€ †AC ť€ CN
A…FÁB GĂ]€ ‡D M†AC ť€ CN
A‡Š [    €‡ Ŕ ›   @€‡ Ŕ @D€ €‡€D Ť@A
€ ‰ €       name    find    Zac    P_Chunk_SelfHighlight.troy    Blobs       đ?   Object    valid    obj 	   CastTime    os    clock    GetLatency      @ź@   EndTime 	   BlobTime 	   BlobDrop 
   CurrentBlobs                          ›2  ˘2      [   Ŕ€‡ Ŕ ›    €‡ Ŕ Ś@@  ť€€›   €€‡ Ŕ Ś@@Á  ť€€›    €Ś A  € ť@€‡@A € € €‡@A ŽŔA
€€‚ €       name    find    Zac 
   P_Chunk.troy 
   RemoveAxe 
   CurrentBlobs               đ?                        Ł2  «2      † @ Ç@@ ť  €Ç@ÇÁŔAX@ÁŔ€F‚A €€Ŕ€ ]‚€ŔÁ@€FB GBÂ‡B@ Ŕ€]B€@ €˘€  #ű € 
      pairs    Blobs    Object    obj 	   CastTime     GetDistanceSqr       Ś@   table    remove                          ¬2  ˛2      F @ G@Ŕ G€Ŕ ŔŔ  €F A †@A ^  _   Ŕ €F A †€A ^  _    €       MenuZac 	   blConfig    cbm       đ?   Vector 	   mousePos    myHero                          ł2  ˝2      F @ ]€€ [    €F@@ G€Ŕ GŔŔ _  Ŕ€F A ]€€ [    €F@@ G€Ŕ G@Á _  €€F€A ]€€ [    €F@@ G€Ŕ GŔÁ _  @ €A  _   € 	      ComboActive    MenuZac 	   blConfig    cbcr 
   HarassActive    cbhr    FarmActive    cblr      @o@                         ľ2  Ě2   4   † @ Ś@@@ ť€€Ŕ@X Á @
€Ç@Á Ű   €	€Ć€A ÇŔÁÇ ÂŰ   @€Ć@B Ý€€ X Á@€Ć€B AB € Ý  €€X Á €BÁ  @€ÂB @€ €€‚€GĂM‚€‡ĂŤ‚ O‚‚@€€BĂF‚@ GBĂX@@ €€  â€  cůĂ   ß   €       VP 
   GetHitBox    myHero        @    valid    MenuZac 	   blConfig    cbt    GetTurrets    pairs    GetDistanceSqr    range    team                          Í2  Ň2      [   €€† @ Ě@@ Ý€  € ť€€Ě€@ Ý€ Ŕ @ € € ź     ź   €       GetDistance 
   GetSource 
   GetRadius                          Ó2  Ö2         X@Ŕ €€Ç€Ŕ Ű   @€ĆŔ@ A AA@€ Ý€€ Y   €Ă@  Ă € ß   €          ^@    valid    GetDistanceSqr    myHero    pos                          ×2  ď2      Ă   X Ŕ €€A@ @€ FÁ@ ]€ PÁ
A GAA @Ŕ€A €€ €  €€ÁA €€ €A  @€AA FA@ GŔ]€ †Á@ ť€ AMN€AA †AB Ŕ€ ť ĆAB BB F‚B ‚ FBB €€ ]‚ BÝ ĚÁÂÝ C BC@€†‚C Ć‚B  € ť€‚  Ď‚ŤÁĆAB  € Ý BB FBB †ÂC ]‚ †BB Ŕ€ ť‚ N‚‚‚ ÂB‚ FC GBĂ€€Ć‚C ĂC @€ Ý€]‚  BÍ‚  FD GBÄG‚ÄŔÄ@ €    € €F‚C †‚B Ŕ ]‚€†‚B ‡EP‚‚NB†Â@ ť‚€ AM‚‚†‚C Ć‚B   ť‚€ŤBEĆ‚B ÇĹĎĎÂÄ€‚@ €Ă     €Ă € A@ @€   ‹€ €ÁE €€ A€ß   €        os    clock    GetLatency      @ź@	   BlobTime 	   InRadius 	   InTurret       ^@   Vector    myHero    normalized    math    min    GetDistance 	   mousePos    MenuZac 	   blConfig    cbm       đ?   ms       I@ÍĚĚĚĚĚ@
   RemoveAxe                          đ2  3   
4   F @ ‡@@ ] €	€[  €€†@ ‡Á@‡A›  @€‡AÁ‡AÇÁÁB € Ŕ€‚ ›  @€  Ŕ€LBB Ŕ ]‚€[B  Ŕ€F‚B ]B€ FÂB LĂÇBCC]B Ŕ€FÂC ]B€  €FÂC ]B€ @ €†ÁC ťA€ b€  ă€őG@@ U €  Ä @ €FŔC ]@€  €       pairs    Blobs    MenuZac 	   blConfig    cb    Object    obj 	   CastTime 	   CheckAxe    InAxeRadius    DisableMove    myHero    MoveTo    x    z    EnableMove                                  3  3   z   F @ †@@ ť € ]  @€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B AC ]‚€†‚A Á  €FB C ť‚€ŹBCX€Ă €ĆÂC  €GĂB GÄÝ‚€Ű  @€ÇBD ŰB  €€ŔŔ€Ć‚D ÇÂÄÇĹŰ  €€ĆBE  €Ý‚ ĂA E Ŕ €ĚÂE @€ÝB€ 
€ Ŕ€Ć‚D ÇÂÄÇĆŰ  €€ĆBE  €Ý‚ B E Ŕ €ĚBF @€ÝB€€€@Ŕ€Ć‚D ÇÂÄÇ‚ĆŰ  €€ĆBE  €Ý‚ ĂB D Ŕ €ĚÂF @€ÝB€ €€€€Ć‚D ÇÂÄÇÇŰ  @€ĆBE  €Ý‚ C E € €ĚBG @€ÝB€b€  ăŔâ €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   W    E    R       @    ValidTarget 
   baserange    recall    MenuZac 	   ksConfig    QKS    GetDistance    range    CastQ    WKS    CastW    EKS    CastE    RKS    CastR                          3  $3   
D      Á     A  GA@ GŔ]€ [   €FÁ@ A  Ŕ€ A AB ]€OÁś@€  €   GÁA GŔ]€ [  Ŕ€FÁ@ Á Ŕ€ A AB ]€Ü@€  €Á   GAB GŔ]€ [  Ŕ€FÁ@ A Ŕ€ A AB ]€[A    €A  @„GB GŔ]€ [  Ŕ€FÁ@  Ŕ€ A AB ]€A€  €  MÁ M†B M_  €               R    Ready    getDmg    myHero       @      @   Q    rw    W    E                          &3  -3      ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ ›   Ŕ€€ € XŔ@ €Ć A AA GA‡ÁAÝ@  €       R    Ready    ValidTarget  
   CastSpell    _R    x    z                          /3  33      ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   € €†Ŕ@ Ć A ť@  €       W    Ready    ValidTarget 
   CastSpell    _W                          53  <3   -   ‡ @ ‡@@ť€€ ›   €	€†€@ Ŕ € ť€ ›   @€†Ŕ@ Ć A Ç@ÁÇ€ÁÇŔÁ € G@ GÂ‡@ ‡ABÇ@ ÇÂ@ ÂBFC B Ă    D    ĆA ÇCÁÇÁÇĂť XŔC€€Ű    €FD †AD ÇDÂD]A  €       Q    Ready    ValidTarget    GetPrediction2    MenuZac 	   spConfig    qConfig    QP    delay    width    range    speed    myHero    line    QCH  
   CastSpell    _Q    x    z                          >3  e3   h   † @ ›@    € € ‡@@ ‡€@ť€€ ›   @€†Ŕ@ Ŕ € ť€ ›    €‡ A ›@   €†@A Ŕ € ť€ Ž€AŔAĆ B AB BÁBC@€ € ÇA@ ÇAĂB@ ‚CGB@ GÂĂ†D ÁB   C€ „  ÁC  DB „BÄB„DÝ XŔÄ€
€   
€†E ĆD  €ť€€Š€€†E ĆÁE ĆGBĆťA  
€‡ A ›   @	€† B Ć@B Ç€ÂÇŔÂÇ Ă € GA@ GĆ‡A@ ‡ACÇA@ ÇĂB@ ÂCFD B Ă  € D  C  ĆCB ÇÂÇĂÂÇÄť XŔD€€Ű    €FE †D Ŕ ]€@Ť€ €LG Ŕ ]A€ €    	   VIP_USER    E    Ready    ValidTarget 
   ECharging    GetDistance      @o@     @Ź@   GetPrediction2    MenuZac 	   spConfig    eConfig    EP    width 
   baserange    speed    myHero    circle    ECH  	   GetAngle       $@
   CastSpell    _E    x    z    delay       @   CastE2                          h3  …3   ł   ‡ @ ‡@@ť€€ ›    +€†€@ ĆŔ@ ť€ ›   Ŕ)€† A Ć@A  € @ Ý€€A FA LÁÁĆB ]€GAÂAŔ   € € Ć€B ĚŔÂ@€  Ç@ ÇAĂ@ ‚CG@ GÂĂÝŔ€FB LÄŔ€ BD FA LÂÁĆB ]‚€GBÂBFBA €€ Ŕ ]‚€‡@ ‡ÂCP‚‚P‚Ä
B] ‡ÁD ›   €Ű    €†E ĆAE ‚ĹGÂĹ‡ĆÝ ť  ›    € € †AA Ŕ€  ť€Ç@ ÇAĆŔ €†F ĆB ‚Ĺ GĆ ťA †ÁF Á ťA @€†AA Ŕ€  ť€Ç@ ÇAĆŔ€€†AA Ŕ€   ť€@G €†F ĆB ‚Ĺ GĆ ťA †ÁF Á ťA €€†AA Ŕ€  ť€Ç@ ÇAĆŔ@€‡A ĆA ĚÁÁFB Ý€ÇAÂ‡ÁĆAA  €@ Ý€ŽÁYŔG@€†H Ŕ  €ť€€€	€†F ĆB ‚Ĺ GĆ ťA †ÁF Á ťA @€‡ÁD ›A  €€†AA Ŕ€  ť€ÇA A ÂA†B ‚€BBÇ‚Ŕ@€†AA Ŕ€   ť€€‘Ŕ€†F ĆB ‚Ĺ GĆ ťA †ÁF Á	 ťA  € %      E    Ready    ValidTarget    unit    myHero    GetDistance    ERANGE 
   GetSpellData    _E    level    VP    GetCircularCastPosition            width 
   baserange    speed    GetPredictedPos 	   LOADTIME      @Ź@
   ECharging    IsWall    D3DXVECTOR3    x    y    z    range 
   CastSpell    print    1      @@   2       i@	   GetAngle      €A@   3      Ŕr@
   start charge                          ‡3  Ť3      X @ @ €[@  @ €@  ź  †€@ ť€€ ĚŔ@LAŔ  ]€†@ Î€ ť Ţ   ß    €                Vector 
   angleBetween    perpendicular                          Ź3  —3      † @ ›@    € € ‡@@ ›   €€†€@ ÇŔŔ Á GAÁ ť€ 
ŔAĆ B AB @ Ý@€
€B €    	   VIP_USER 
   ECharging    D3DXVECTOR3    x    y    z    ESend    CastSpell2    _E                           ™3  Ě3   â  F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GÁÇ†AC Ć@ ÇAŔÇČÇÁĂ@ B@HDF@ GBŔGČGBÄť ]@  F @ G@Ŕ G@Č [    €G€H G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGH GĹ†AC Ć@ ÇAŔÇÁČÇÁĂ@ B@ÂHDF@ GBŔGÂČGBÄť ]@  F @ G É G@É [   €9€F @ G É G€É ŔĂ @€FŔI ]€€ [   @€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBF@ GÉGĘ†AC Ć@ ÇÉÇAĘÇÁĂ@ IBJDF@ GÉGBĘGBÄť ]@  Ŕ0€F€J ]€€ [   @€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBF@ GÉGÁĘ†AC Ć@ ÇÉÇAĘÇÁĂ@ IBJDF@ GÉGBĘGBÄť ]@  @)€F K ]€€ [   @(€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBF@ GÉGAË†AC Ć@ ÇÉÇAĘÇÁĂ@ IBJDF@ GÉGBĘGBÄť ]@  Ŕ!€F€K ‡ŔK ] @ €X€ÁŔ€†ÁI ť€ ›  €	€†L ÇAĚÇĚÂL ť€Ć@ ÇÉÇĘŔ €†B ÇAĚÇĚÇAÂBĚ‚L‚BGBĚG‚ĚGÂÂ†@ ‡I‡JĆBC @ ICJĂCF@ GÉGCĘGÄ†@ ‡I‡CJ‡CDÝ ťA   €†J ť€ ›  €	€†L ÇAĚÇĚÂL ť€Ć@ ÇÉÇÁĘŔ €†B ÇAĚÇĚÇAÂBĚ‚L‚BGBĚG‚ĚGÂÂ†@ ‡I‡ÂJĆBC @ ICJĂCF@ GÉGCĘGÄ†@ ‡I‡CJ‡CDÝ ťA  @
€†K ť€ ›  @	€†L ÇAĚÇĚÂL ť€Ć@ ÇÉÇAËŔŔ€†B ÇAĚÇĚÇAÂBĚ‚L‚BGBĚG‚ĚGÂÂ†@ ‡I‡BKĆBC @ ICJĂCF@ GÉGCĘGÄ†@ ‡I‡CJ‡CDÝ ťA  b€  ăŔŢF @ G É G Í [   @€F€K ‡ŔK ] Ŕ€X€Á@€†B ÇAĚÇĚÇAÂBĚ‚L‚BGBĚG‚ĚGÂÂB ĆBC @ ICJĂCF@ GÉGCĘGÄ†@ ‡I‡CJ‡CDÝ ťA  b€  ă@ř € 5      MenuZac    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range       ^@   DARC    DQR    Q    Ready    DWR    W    DWRC    DER    E 
   baserange    DERC    DRR    R    DRRC 	   blConfig    dr    cbm    ComboActive    cbcr    DSRC 
   HarassActive    cbhr    FarmActive    cblr    pairs    Blobs    GetDistance    Object    obj 	   mousePos    drb                          Î3  Ů3   +   [    €Ŕ   @€Ű   Ŕ €AŔ€@  €
 Á[   €€Ŕ   Ŕ€Ű   @€AŔ@A€€
 AB AB€ GB 
A
 [   Ŕ€Ŕ    €Ű   €€AŔÁB €    €
 A† € 
      isMe    name    ZacR    RStatus    ZacE 
   ECharging 	   CastTime    os    clock    TimeToFullRange    find    recall                          Ű3  ç3   '   [    €Ç Ŕ Ű   @€›   Ŕ €Ç@@€Ŕ  €
 Á[   €€Ç Ŕ Ű   Ŕ€›   @€Ç@@@Á€ €
 A
 Â
 Á„[   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ÂAÁ Ý€€Ű     €
 Á… €       isMe    name    ZacR    RStatus     ZacE 
   ECharging 	   CastTime         
   EPressStatus    find    recall                         é3  ô3   /   G @ @€€Ŕ€F€@ GŔŔ ]€€ ‡ @ €€ @€G @ †€@ ‡Ŕ@ť€€ N€€ ‡ A Ź@ Ç@A Ç€ÁÎ€€AA NÂ
A€€G @ @€€€€F€@ GŔŔ ]€€ ‡ @ @  €G@A ‡@A ‡€AJ€€ €G@A G@Â ]€€ [@  Ŕ €G@A ‡@A ‡€AJ€€ € 
   	   CastTime            os    clock 
   LoadSpeed    E 
   baserange    range       I@   Ready                          ö3   4   3   Ć @ Ç@ŔÇ€ŔŰ    €ÇŔ@ Ç ÁÝ€€ Ű   Ŕ	€Ć@A A Ý @€[   Ŕ€ÂÁ FB GÂÁX@€€BÂ FB GBÂ@@€›   Ŕ€‚BGÂÂ@Ŕ€@ B@GÂÂB  @€C @€ ‡Â@ ‡BC‚€  € €‚C €€ B€â€  cÁö €       MenuZac    ES    UI    R    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    range    CastR                          4  /4   
z   Ç @ Ű    €@@ €€Ŕ € €ĚŔ@ FA Ý@€Ç@A Ű    €€A€€ŔÁ  €ĚŔ@ FA Ý@€
 Â‚Ŕ€€A@€@Â Ŕ€
€Â‚@€ÇŔB Ç ĂÝ€€ Ű    €€AŔ €@Â @ €
€Â‚€€€A €ŔÁ €€Ć@C C FA GÁĂ†A ‡DÝ@ Ć@D Ŕ€ Ŕ€Ć€D ÇŔÄÇ ĹŰ   €€Á@   FE †ÁE ť€ ] €€†F Ŕ€ť‚ ›  @€†BF Ŕ€A ť‚€ZŔ @ €€F@€†BF Ŕ€A ť‚€Ŕ   €b  ăú   €ŔĆ€€GG [   €GAG‡G ‡AG€Ŕ€
€FŽFD GÁÄGĹ[   €FG Á ÇAG–Á]A €€
 ŽFD GÁÄGĹ[   €FG  ÇAG–Á]A  € !   
   ECharging       đ?     €@   CastE2 	   mousePos 
   EPressStatus      @Q@      p@      p@   Q    Ready 
   CastSpell    _E    x    z    WM_LBUTTONDOWN    MenuZac    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          74  ^4   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    =4  =4           @ @  €       AfterAA                         @4  @4           @ @  €    	   BeforeAA                         G4  G4           @ @  €       AfterAA                         J4  J4           @ @  €    	   BeforeAA                         P4  P4        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    P4  P4           @ @  €       AfterAA                                               S4  S4           @ @  €    	   BeforeAA                         X4  X4           @ @  €       AfterAA                         [4  [4           @ @  €    	   BeforeAA                              	
                `4  s4   _   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …K€ J€Ă‚JŔĂJ@DJŔD‰J@EŠĄ€  J€€„
@€†KŔ  JŔĹ‚J ĆĄŔ  J€€„
@ ‹K€  Ą  J€ ŤĄ@ J€€„
@€ŚK€  Ą€ J€ ŤĄŔ J€€„
@€ŤK€  Ą  J€ ŤĄ@ J€€„
@ Ž
€ÇŽFŔ@ † H Ç€B ÇŔÁAH C  ]€€
@€ŹFŔ@ † H Ç@C ÇŔÁAH C  ]€€
@ ‘FŔ@ † H Ç€E ÇŔÁAH C  ]€€
@€‘F@I †€I Ç A ÇŔÁÁI FJ ]€€
@ ’F@I †€J Ç A ÇŔÁÁI FJ ]€€
@€”K   
@€•F@K ]€€ 
@ – € .      SelectedTarget     Cel    TargetSelector    Q    name 	   Savagery    range      @o@   Ready    W    Battle Roar      @@   E    Bola Strike      @Ź@   speed      p—@   delay       Đ?   width      €Q@   R    Thrill of the Hunt      @ź@   Yommu    Cast    Hydra    Tiamat    recall     WTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector 
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast 
   d4  d4        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          e4  e4        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          f4  f4        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          g4  g4        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                          h4  h4        @ A@        €    
   CastSpell      Ś¨@                         h4  h4        @ A@  € X€@  €Ŕ@  A † @ Á@  ť  €  F@A X@    €@   €    €       GetInventorySlotItem      Ś¨@    myHero    CanUseSpell    READY                          i4  i4        @ A@        €    
   CastSpell      ¨@                         i4  i4        @ A@  € X€@  €Ŕ@  A † @ Á@  ť  €  F@A X@    €@   €    €       GetInventorySlotItem      ¨@    myHero    CanUseSpell    READY                          j4  j4        @ A@        €    
   CastSpell      
¨@                         j4  j4        @ A@  € X€@  €Ŕ@  A † @ Á@  ť  €  F@A X@    €@   €    €       GetInventorySlotItem      
¨@    myHero    CanUseSpell    READY                                               u4  Ď4     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FB Á Ë€Â
 A
 B	 äA€]@€F @ GŔĆ LŔÁ ÁŔ 	 GÁJ GÁĹ FH € ]@ F@L † @ Á    C  € Ă  ]@€F @ L Á Á€ Á ]@ F @ GŔĚ LŔÁ Á  A FG Á ]@ F @ GŔĚ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĚ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĚ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔĚ LŔÁ Á  Á FG Á ]@ F @ GŔĚ LŔÁ Á  A FG Á ]@ F @ GŔĚ LŔÁ Á@ 
 FB A
 Ë€Â
 A
 B	 äA€]@€F @ GŔĚ LŔÁ Á  Á FG Á ]@ F @ GŔĚ LŔÁ Á  A FG Á ]@ F @ GŔĚ LŔÁ Á€
 Á
 FN   ĆAN ÇÎÂ Ý ]@  F @ L Á Á  A ]@ G€O LŔĎ Ć @ Ç@Ď]@€F @ L Á Á  A ]@ F @ G@Đ LŔÁ Á  A FG Á ]@ F @ G@Đ LŔÁ Á€ Á FH € ]@ F @ G@Đ LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ G@Đ LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ G@Đ LŔÁ Á€ 	 GÁJ GÁĹ FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ň LŔÁ Á  A FG Á ]@ F @ G Ň LŔÁ Á@  FH € ]@ F @ G Ň LŔÁ ÁŔ  FH € ]@ F @ L Á Á@  ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ ÁŔ  FAT  ÁÁ  AÂ ]@€F @ G€Ó LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ö LŔÁ Á  A FG Á ]@ F @ G Ö LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G Ö LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G Ö LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ G Ö LŔÁ Á  Á FG Á ]@ F @ G Ö LŔÁ Á  A FG Á ]@ F @ G Ö LŔÁ Á@ 
 FB A
 Ë€Â
 A
 B	 äA€]@€F @ G Ö LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G × LŔÁ Á  A FG Á ]@ F @ G × LŔÁ Á@ 	 GAI GÁĹ	 FH € ]@ F @ G × LŔÁ Á€ 	 GJ GÁĹA
 FH € ]@ F @ G × LŔÁ ÁŔ 	 GÁJ GÁĹ FH € ]@ F @ G × LŔÁ Á  Á FG Á ]@ F @ G × LŔÁ Á  A FG Á ]@ F @ G × LŔÁ Á@ 
 FB A
 Ë€Â
 A
 B	 äA€]@€F @ G × LŔÁ Á@  FH € ]@ F @ L Á Á  A ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ F @ G@Ř LŔÁ Á€ Á FH € ]@ F @ G@Ř LŔÁ Á  A FH € ]@ F @ G@Ř LŔÁ Á  Á FG Á ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ F @ G@Ř LŔÁ Á€ Á FH € ]@ F @ G@Ř LŔÁ Á  A FZ ‹ ÁÁ Â AÂ Â ¤A ]@ F @ G@Ř LŔÁ Á  Á FG Á ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ F @ G@Ř LŔÁ Á  A FH € ]@ F @ G@Ř LŔÁ Á€ Á FZ ‹ ÁÁ Â AÂ Â ¤A ]@ F @ G@Ř LŔÁ Á  Á FG Á ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ F @ G@Ř LŔÁ Á  A FH € ]@ F @ G@Ř LŔÁ Á€ Á FZ ‹ ÁÁ Â AÂ Â ¤A ]@ F @ G@Ř LŔÁ Á  Á FG Á ]@ F @ G@Ř LŔÁ Á  A FG Á ]@ F @ G@Ř LŔÁ Á  A FH € ]@ F @ G@Ř LŔÁ Á€ Á FZ ‹ ÁÁ Â AÂ Â ¤A ]@ F @ L Á Á  A ]@ F @ G@Ţ LŔÁ Á  A FG Á ]@ F @ G@Ţ LŔÁ Á€ Á FH   ]@ F @ GŔĚ L ß Á€
 ]@€ € }      MenuRengar 
   scriptConfig    MasterSeries: Rengar    Rengar1    addSubMenu    [Rengar]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Rengar    addTS    [Rengar]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    PR    Prioritize:    USEE2     (E) when out of range 
   AddSpellMenu    [Rengar]: Harras Settings 
   harrasConfig    Prioritize        @
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Rengar]: Items Settings 
   iteConfig    it    LoadToMenu    [Rengar]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    EKS    [Rengar]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Rengar]: Auto Heal    ah    AHHP    HP % <    SCRIPT_PARAM_SLICE       D@              Y@   AH    Use Auto Heal    [Rengar]: Farm Settings    farm    Save    Save Ferocity    [Rengar]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Rengar]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Rengar]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          Ń4  ĺ4   6   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡L€D ]@ F@@ GŔÄ G Ĺ [   @ €L@E ]@  €       CheckOB    MenuRengar    WTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    WCel    ECel    RCel    GetCustomTarget    TargetSelector    target    Smite    ah    AH 	   autoheal                          ç4  35   Ž  F @ ]€€ [    b€G@@ [@  @a€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F B G@Â €Â Ŕ!€F€A GŔÂ G Ă [   €€F@C † B Ç€C ]€€‡ŔC ‡ D€€ €€F€@ ‡€C ]€ [   @ €L@D ]@ GŔ@ X€Ä  €F€A GŔÂ GŔÄ [   Ŕ€F@C † B ÇŔ@ ]€€‡ E ‡ D€€ Ŕ€F€@ ‡Ŕ@ ]€ [   € €L@E ÇŔ@ ]@€F€@ ‡€C ]€ [    €F@C † B Ç€C ]€€† B ‡ DŤ€E€€ Ŕ €F B LŔĹ Ç F ]@€F€A GŔÂ G@Ć [    €F@C † B Ç€F ]€€‡ŔF ‡ D€€  €F€@ ‡€F ]€ [   Ŕ
€L G ]@ G@G G€Ç ]€€ [   € €G@G GŔÇ ]@€ G H G€Ç ]€€ [    €F€@ ‡€C Á@ ]€€[   € €G H GŔÇ ]@€ G€H G€Ç ]€€ [    €F€@ ‡€C Á@ ]€€[   € €G€H GŔÇ ]@€ F€@ ‡€C ]€ [    €F@C † B Ç€C ]€€† B ‡ DŤ€E€€ Ŕ €F B LŔĹ Ç€C ]@€F B G@Â ŔČ @!€F€A GŔÂ G Ă [   €€F@C † B Ç€C ]€€‡ŔC ‡ D€€ €€F€@ ‡€C ]€ [   @ €L@D ]@ F I @	 Ć B ]€€[     € € GŔ@ X€Ä  €F€A GŔÂ GŔÄ [   Ŕ€F@C † B ÇŔ@ ]€€‡ E ‡ D€€ Ŕ€F€@ ‡Ŕ@ ]€ [   € €L@E ÇŔ@ ]@€F€A GŔÂ G@Ć [   €€F@C † B Ç€F ]€€‡ŔF ‡ D€€ €
€F€@ ‡€F ]€ [   @	€L G ]@ G@G G€Ç ]€€ [   € €G@G GŔÇ ]@€ G H G€Ç ]€€ [    €F€@ ‡€C Á@ ]€€[   € €G H GŔÇ ]@€ G€H G€Ç ]€€ [    €F€@ ‡€C Á@ ]€€[   € €G€H GŔÇ ]@€ F B G@Â ŔČ €€GŔC G€Ç ]€€ [@  @€GŔF G€Ç ]€€ [@   €G E G€Ç ]€€ [   Ŕ€F€@ ‡Ŕ@ ]€ [   € €L@E ÇŔ@ ]@€F B G@Â €É  €F€A GŔÂ GŔÉ  Ę  €GŔ@ X€Ä  €F€A GŔÂ GŔÄ [   Ŕ€F€@ ‡Ŕ@ ]€ [   €
€L@E ÇŔ@ ]@€€€F€A GŔÂ GŔÉ @Ę  €F€A GŔÂ G@Ć [    
€F@C † B Ç€F ]€€‡ŔF ‡ D€€  €F€@ ‡€F ]€ [   Ŕ€L G ]@  €F€A GŔÂ GŔÉ €Â Ŕ€F€A GŔÂ G Ă [   €€F@C † B Ç€C ]€€‡ŔC ‡ D€€ €€F€@ ‡€C ]€ [   @ €L@D ]@ GŔ@ X€Ä  €F€A GŔÂ G€Ę [   Ŕ€F@C ‡Ŕ@ ]€ † B ‡ DŤ€E@ Ŕ€F€@ ‡Ŕ@ ]€ [   € €L@E ÇŔ@ ]@€ € +      ComboActive    recall    ValidTarget    ECel    it 
   CastItems    MenuRengar 
   iteConfig    myHero    mana       @   comboConfig    USEQ    GetDistance    Cel    Q    range    CastQ     USEE    E    CastE       Y@   Attack    RCel    USEW    WCel    W    CastW    Yommu    Ready    Cast    Hydra       w@   Tiamat       @   TargetHaveBuff2    RengarR       @   PR       đ?       @   USEE2                          55  R5      F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @#€G A [@  €"€F@A G€Á ŔÁ  €F @ G@Ŕ G Â [   Ŕ€F@B †@A Ç€B ]€€‡ŔB ‡ C€€ Ŕ€F@C ‡€B ]€ [   € €L€C Ç€B ]@€F @ G@Ŕ GŔĂ [   €€F@B †@A Ç D ]€€‡@D ‡ C€€ €€F@C ‡ D ]€ [   @ €L€D ]@ F @ G@Ŕ GŔÄ [   €€F@B †@A Ç E ]€€‡@E ‡ C€€ €€F@C ‡ E ]€ [   @ €L€E ]@ F@A G€Á ŔĹ @€F @ G@Ŕ G Ć @Ć @€F @ G@Ŕ G Â [   Ŕ€F@C ‡€B ]€ [   €
€L€C Ç€B ]@€€€F @ G@Ŕ G Ć €Ć  €F @ G@Ŕ GŔĂ [    
€F@B †@A Ç D ]€€‡@D ‡ C€€  €F@C ‡ D ]€ [   Ŕ€L€D ]@  €F @ G@Ŕ G Ć ŔĆ Ŕ€F @ G@Ŕ GŔÄ [   €€F@B †@A Ç E ]€€‡@E ‡ C€€ €€F@C ‡ E ]€ [   @ €L€E ]@  €       MenuRengar 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    myHero    mana       @   USEE    GetDistance    ECel    E    range    ValidTarget    CastE    USEW    WCel    W    CastW    USEQ    Cel    Q    CastQ       @   PR       đ?       @      @                         T5  5   	Ű   F @ ]€€ [   @5€G@@ [@  €4€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  2€†A ‡ÁA B €†AB ‡B‡ÁB›  Ŕ€†C ĆA  €ť€ÇAC ÇĂŔŔ€†ÁC Ŕ€ť ›  € €ŚD  €ťA€†AB ‡B‡AD›  €
€†C ĆA  €ť€ÇD ÇĂŔ€€†ÁC Ŕ€ť ›  @€ŚÁD ťA ‡E ‡AEť€ ›   €†ÁC Ŕ€‚ ť€›  € €‡E ‡ÁEťA€ ‡F ‡AEť€ ›   €†ÁC ÇAF ‚ ť€›  € €‡F ‡ÁEťA€ †AB ‡B‡F›  €€†C ĆA  €ť€ÇÁF ÇĂŔ€€†ÁC Ŕ€ť ›  @ €ŚG ťA †A ‡ÁA@GŔ€†AB ‡B‡G›    € € †AB ‡B‡ÁG H@€†AB ‡B‡ÁB›  Ŕ€†ÁC Ŕ€ť ›  €€ŚD  €ťA€€€†AB ‡B‡ÁG@H €†AB ‡B‡AD›   €†C ĆA  €ť€ÇD ÇĂŔ €†ÁC Ŕ€ť ›  Ŕ
€ŚÁD ťA ‡E ‡AEť€ ›   €†ÁC Ŕ€‚ ť€›  € €‡E ‡ÁEťA€ ‡F ‡AEť€ ›  €€†ÁC ÇAF ‚ ť€›   €‡F ‡ÁEťA€  €†AB ‡B‡ÁG€HŔ€†AB ‡B‡F›  €€†C ĆA  €ť€ÇÁF ÇĂŔ€€†ÁC Ŕ€ť ›  @ €ŚG ťA b€  ă Í € #      FarmActive    recall 
   EnemyMinions    update    pairs    objects    myHero    mana       @   MenuRengar    farm    USEE    GetDistance    E    range    ValidTarget    CastE    USEW    W    CastW    Hydra    Ready       w@   Cast    Tiamat    Cel    USEQ    Q    CastQ       @   Save    PR       đ?       @      @                         5  °5   	Ű   F @ ]€€ [   @5€G@@ [@  €4€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  2€†A ‡ÁA B €†AB ‡B‡ÁB›  Ŕ€†C ĆA  €ť€ÇAC ÇĂŔŔ€†ÁC Ŕ€ť ›  € €ŚD  €ťA€†AB ‡B‡AD›  €
€†C ĆA  €ť€ÇD ÇĂŔ€€†ÁC Ŕ€ť ›  @€ŚÁD ťA ‡E ‡AEť€ ›   €†ÁC Ŕ€‚ ť€›  € €‡E ‡ÁEťA€ ‡F ‡AEť€ ›   €†ÁC ÇAF ‚ ť€›  € €‡F ‡ÁEťA€ †AB ‡B‡F›  €€†C ĆA  €ť€ÇÁF ÇĂŔ€€†ÁC Ŕ€ť ›  @ €ŚG ťA †A ‡ÁA@GŔ€†AB ‡B‡G›    € € †AB ‡B‡ÁG H@€†AB ‡B‡ÁB›  Ŕ€†ÁC Ŕ€ť ›  €€ŚD  €ťA€€€†AB ‡B‡ÁG@H €†AB ‡B‡AD›   €†C ĆA  €ť€ÇD ÇĂŔ €†ÁC Ŕ€ť ›  Ŕ
€ŚÁD ťA ‡E ‡AEť€ ›   €†ÁC Ŕ€‚ ť€›  € €‡E ‡ÁEťA€ ‡F ‡AEť€ ›  €€†ÁC ÇAF ‚ ť€›   €‡F ‡ÁEťA€  €†AB ‡B‡ÁG€HŔ€†AB ‡B‡F›  €€†C ĆA  €ť€ÇÁF ÇĂŔ€€†ÁC Ŕ€ť ›  @ €ŚG ťA b€  ă Í € #      FarmActive    recall    JungleMinions    update    pairs    objects    myHero    mana       @   MenuRengar    jf    EJF    GetDistance    E    range    ValidTarget    CastE    WJF    W    CastW    Hydra    Ready       w@   Cast    Tiamat    Cel    QJF    Q    CastQ       @   Save    PR       đ?       @      @                         ˛5  ¸5   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuRengar 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         ş5  ż5      F @ G@Ŕ €Ŕ   € € F @ GŔŔ † @ ‡ AP€€ O@Á †€A ‡ŔA‡ B€€ @ €L@B ]@  € 
      myHero    mana       @   health 
   maxHealth       Y@   MenuRengar    ah    AHHP    CastW                          Á5  Ö5   Ź   F @ †@@ ť € ]  €!€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B AC ]‚€†B ‡CŹ‚‚†Ť‚‡ĆÂC  €A Ý‚€Ű   €X@Ä€€Ç‚D ŰB  Ŕ€ĆÂD ĚĹAC Ý‚€ŔŔ€E ĂEF  €€CF @€ GĂA GĆ@Ŕ€ĂA E€   €€ĂF C B G€€C€@€ Ŕ€E ĂECG  €€CF @€ GB GĆ@Ŕ€B E€   € €G C Ŕ
€@ €E ĂEĂG  Ŕ€CF @€ GĂB GĆ@ €ĂB E€   Ŕ €H €€C€ €€€€E ĂECH  @€CF @€ €H €Ű  €€ĂH FĂD LÉÁC ]€€€C€b€  ă€Ý € %      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   W    E    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot    MenuRengar 	   ksConfig    QKS    GetDistance    range    CastQ    Attack    WKS    CastW    EKS    CastE    IKS      Ŕ‚@
   CastSpell    GetSlot                          Ř5  Ü5   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          Ţ5  â5   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          ä5  ë5   (   ‡ @ ‡@@ť€€ ›   @€†€@ ĆŔ@ Ç ÁÇ@ÁÇ€Á € G@ GÁÁ‡@ ‡BÇ@ ÇAÂ@ ‚BFÂB  Ă€   D    ĆĂ@ ÇÁÇCÁÇCĂť X€C€€Ű    €FÁC †D ÇAD‚D]A  €       E    Ready    GetPrediction2    MenuRengar 	   spConfig    eConfig    EP    delay    width    range    speed    myHero    line    ECH  
   CastSpell    _E    x    z                          í5  ń5   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       R    Ready 
   CastSpell    _R                          ó5  6   
Ü   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@  F @ G@Ŕ G Ë [    €G@K GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGAK GAÉ†AC Ć@ ÇAŔÇËÇÁĂ@ B@‚KDF@ GBŔG‚ËGBÄť ]@   € /      MenuRengar    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC                          6  $6   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot    MenuRengar    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          &6  76   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    E    myHero       @   R    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    E Kill!    R Kill! 
   E+R Kill!                          96  =6      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ?6  C6      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          E6  G6       €                             I6  c6   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuRengar    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          m6  ”6   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    s6  s6           @ @  €       AfterAA                         v6  v6           @ @  €    	   BeforeAA                         }6  }6           @ @  €       AfterAA                         €6  €6           @ @  €    	   BeforeAA                         †6  †6        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    †6  †6           @ @  €       AfterAA                                               ‰6  ‰6           @ @  €    	   BeforeAA                         Ž6  Ž6           @ @  €       AfterAA                         ‘6  ‘6           @ @  €    	   BeforeAA                              	
                –6  ¤6   :   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ÂĄ@  J€€„
@ …KŔ  J@Ă‚J€ĂĄ€  J€€„
@ †KŔ  J Ä‚J@ÄĄŔ  J€€„
@€‡FŔ@ †ŔD Ç C ÇŔÁE C  ]€€
@ ‰
€ĹŠF F †@F Ç A ÇŔÁF FÁF ]€€
@€‹F F †@G Ç A ÇŔÁF FÁF ]€€
@ ŽK   
@ ŹF H ]€€ 
@€Ź € !      SelectedTarget     Cel    TargetSelector    Q    name    Three Talon Strike    range      @o@   Ready    W    Battle Cry    E    Audacious Charge      P„@   R    Crescent Sweep      pw@   ETargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast    š6  š6        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ›6  ›6        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ś6  ś6        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ť6  ť6        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ¦6  ˙6     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GK GÁĹÁ FB  Ë B A‚ Â Á
 äA ]@€F @ GŔĆ LŔÁ Á@
 
 FÁM  ÁÁ B A‚ ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FÁM A Á B A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FÁM  Á B A‚ ]@€F @ GŔĆ LŔÁ Á@  FÁM  Á B A‚ ]@€F @ GŔĆ LŔÁ ÁŔ  FÁM A Á B A‚ ]@€F @ L Á Á@  ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€Ń LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G€Ń LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ G€Ń LŔÁ Á  Á FG Á ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ ÁŔ  FÁM Á Á B A‚ ]@€F @ G€Ń LŔÁ Á€ Á FÁM Á Á B A‚ ]@€F @ G€Ń LŔÁ Á@  FÁM Á Á B A‚ ]@€F @ G€Ń LŔÁ Á  Á FG Á ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ Á  A FR   ĆÁR ÇÓB Ý ]@  F @ L Á Á€ Á ]@ F @ GŔÓ LŔÁ Á  A FG Á ]@ F @ GŔÓ LŔÁ Á  A FH € ]@ F @ GŔÓ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ GŔÓ LŔÁ ÁŔ 	 GÁJ GÁĹ FH € ]@ F @ GŔÓ LŔÁ Á  	 GK GÁĹÁ FH € ]@ F @ L Á Á@  ]@ GŔU L Ö Ć @ Ç€Ő]@€F @ L Á Á@  ]@ F @ G€Ö LŔÁ Á  A FG Á ]@ F @ G€Ö LŔÁ ÁŔ  FH € ]@ F @ G€Ö LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G Ř LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G Ř LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ G Ř LŔÁ Á  Á FG Á ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ ÁŔ  FÁM Á Á B A‚ ]@€F @ G Ř LŔÁ Á€ Á FÁM Á Á B A‚ ]@€F @ G Ř LŔÁ Á@  FÁM Á Á B A‚ ]@€F @ L Á Á@  ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€Ř LŔÁ Á  	 GJ GÁĹA
 FH € ]@ F @ G€Ř LŔÁ Á@ 	 GÁJ GÁĹ FH € ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ ÁŔ  FÁM Á Á B A‚ ]@€F @ G€Ř LŔÁ Á€ Á FÁM Á Á B A‚ ]@€F @ G€Ř LŔÁ Á@  FÁM Á Á B A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  A FH € ]@ F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  A FH € ]@ F @ GŔŮ LŔÁ Á€ Á F\ ‹ ÁA ‚ AB B ¤A ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  A F\ ‹ ÁA B A‚ ‚ ¤A ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  A F\ ‹ ÁA ‚ AB ‚ ¤A ]@ F @ L Á Á€ Á ]@ F @ GŔŢ LŔÁ Á  A FG Á ]@ F @ GŔŢ LŔÁ Á  A FH   ]@ F @ G€Ń L€ß Á  ]@€ €       MenuXin 
   scriptConfig    MasterSeries: XinZhao 	   XinZhao1    addSubMenu    [XinZhao]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    XinZhao    addTS    [XinZhao]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    USER    R     (R)       @   No    Normal 	   Killable 
   Can Hit X    USER2    X =    SCRIPT_PARAM_SLICE       @      @           QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)    RMANA    Min. Mana % To Use (R)    [XinZhao]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [XinZhao]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS    [XinZhao]: Items Settings 
   iteConfig    it    LoadToMenu    [XinZhao]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [XinZhao]: Farm Settings    farm     [XinZhao]: Jungle Farm Settings    jf    QJF    WJF    EJF    [XinZhao]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [XinZhao]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          7  7      F @ †@@ ]@ G€@ LŔŔ ]@ G A X@Á Ŕ€F€A ‡ A ÇŔA Ç Â]€€[    €G A 
@€„G A 
@ …€€FŔB ‡ C ]€ 
@€„G€@ G@Ă 
@ …L€C ]@  €       CheckOB    MenuXin    ETargetSelector    update    SelectedTarget     ValidTarget    E    range    Cel    ECel    GetCustomTarget    TargetSelector    target    Smite                          7  7      F @ ]€€ [   Ŕ€G@@ [@   €F€@ GŔŔ G Á [   @€F@A †€A ÇŔA ]€€‡ B ‡@B€€ @€F€B ‡ŔA ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡€C@ @ €LŔC ]@ F€@ GŔŔ G Ä [   €€F@A †€A Ç@D ]€€‡€D ‡@B€€ €€F€B ‡@D ]€ [   @€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ŔD@ € €L E Ç@D ]@€F€@ GŔŔ G@Ĺ [   @€F@A †€A Ç@D ]€€‡€E ‡@B€€ @€F€B ‡@D ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ŔE@ @ €L F ]@ F€@ GŔŔ G@Ć X€Ć @€F€B ‡@D ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ŔF@ @€L G Ç@D @ Á@AF]@  €       ComboActive    recall    MenuXin    comboConfig    USEQ    GetDistance    myHero    Cel    Q    range    ValidTarget    mana    maxMana       Y@   QMANA    CastQ    USEE    ECel    E    EMANA    CastE    USEW    W    WMANA    CastW    USER       đ?   RMANA    CastR                          7  +7   k   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€F @ G@Ŕ G@Á [   €€F€A †ŔA Ç B ]€€‡@B ‡€B€€ €€FŔB ‡ B ]€ [   @€FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ € €L D Ç B ]@€F @ G@Ŕ G@Ä [   @€F€A †ŔA Ç B ]€€‡€D ‡€B€€ @€FŔB ‡ B ]€ [    €FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ŔD@ @ €L E ]@ F @ G@Ŕ G@Ĺ [   @€F€A †ŔA Ç€E ]€€‡ŔE ‡€B€€ @€FŔB ‡€E ]€ [    €FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ F@ @ €L@F ]@  €       MenuXin 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEE    GetDistance    myHero    ECel    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEW    W    WMANA    CastW    USEQ    Cel    Q    QMANA    CastQ                          -7  <7   	p   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @€†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAÄ€€ €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ĆB  €ť€ÇE ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAĹ€@ €ŚE ťA †A ‡ÁA‡ÁE›  @€†AB ĆB  €ť€ÇF ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAĆ€@ €ŚF ťA b€  ăŔç €       FarmActive    recall 
   EnemyMinions    update    pairs    objects    MenuXin    farm    USEE    GetDistance    myHero    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEW    W    WMANA    CastW    USEQ    Q    QMANA    CastQ                          >7  M7   	p   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @€†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAÄ€€ €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ĆB  €ť€ÇE ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAĹ€@ €ŚE ťA †A ‡ÁA‡ÁE›  @€†AB ĆB  €ť€ÇF ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAĆ€@ €ŚF ťA b€  ăŔç €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuXin    jf    EJF    GetDistance    myHero    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    WJF    W    WMANA    CastW    QJF    Q    QMANA    CastQ                          O7  U7   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FB †A ĆAB ‚A F‚A †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuXin 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         W7  l7   ‘   F @ †@@ ť € ]   "€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B AC ]‚€†B ‡CŹ‚‚†Ť‚‡ĆÂC  €A Ý‚€Ű  €€X@Ä €Ç‚D ŰB  @€ĆÂD ĚĹAC Ý‚€ŔŔ€E ĂEF  €€CF @€ GĂA GĆ@Ŕ€ĂA E€   €€ĂF C B G€€C€Ŕ€@ €E ĂECG  Ŕ€CF @€ GĂB GĆ@ €ĂB E€   Ŕ €G €€C€ € @€E ĂEĂG   €CF @€ GB GĆ@@€B E€    €H €€ÁC C  €€€€E ĂEH  @€CF @€ ŔH €Ű  €€I FĂD LCÉÁC ]€€€C€b€  ă Ý € &      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   R    E    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot    MenuXin 	   ksConfig    QKS    GetDistance    range    CastQ    Attack    EKS    CastE    RKS    CastR        @   IKS      Ŕ‚@
   CastSpell    GetSlot                          n7  r7   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          t7  x7   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          z7  ~7   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       E    Ready 
   CastSpell    _E                          €7  7   3   Ç @ Ç@ŔÝ€€ Ű    €Ć€@  € Ý€ @ Á@ @	€ AŔ €Ć@A A Ý@ Ŕ€ŔA€€Ě B @€ Ý€€AÂ FB GÁÂ‡Ă ] 
AŔ €€AA FA A €€@C €Ć€C ÁC G@ GÁŔÝ€€D ADDŔ € €AA FA A  €       R    Ready    GetDistance    range        @
   CastSpell    _R       @   Damage    health    math    floor    shield       @   EnemyCount    myHero    MenuXin    comboConfig    USER2                          ’7  7   0      Ç@@ Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@ A  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ Ç€A Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ ÇŔA Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@ Á @€ †A ÁA Ý€€Ű@    €Á   ŤŔ ź   €               R    Ready    getDmg    myHero       @   E    Q                          š7  ˛7   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@   € ,      MenuXin    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          ´7  Č7   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot    MenuXin    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          Ę7  Ű7   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    E    myHero       @   R    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    E Kill!    R Kill! 
   E+R Kill!                          Ý7  á7      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ă7  ç7      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          é7  í7   
   [   @€Ç Ŕ Ű   €€›    €Ç@@€Ŕ@ €ĆŔ@ Ý@€  €       isMe    name    XenZhaoComboTarget    ResetAA                          ď7  	8   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuXin    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          8  98   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    8  8           @ @  €       AfterAA                         8  8           @ @  €    	   BeforeAA                         "8  "8           @ @  €       AfterAA                         %8  %8           @ @  €    	   BeforeAA                         +8  +8        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    +8  +8           @ @  €       AfterAA                                               .8  .8           @ @  €    	   BeforeAA                         38  38           @ @  €       AfterAA                         68  68           @ @  €    	   BeforeAA                              	
                ;8  ś8   ¸  
@@€K€ J ÁJ€Á‚J ÂJ€Â„J€Â…J€B†
@ K€ J€ĂJŔĂ‚J€Â„J€Â…J ÂJ€B†
@€†K@ J@ÄJ€Ä‚J Ĺ‰J€ĹŠJ Ć‹J€Â„J€Â…J ÂJ€B†
@ K@ J€ĆJŔĆ‚J€Â„J ÂJ€B†
@€ŚK  J@ÇJ€Â„J ÂJ€B†
@ ŽK@ JŔÇJ Č‚J€Â„J ÂJ€B†
@ ŹC      Ă     C  
 B“
@’
 ’
Ŕ€‘
€ ‘
@€K€  J ĘĄ   J€€”
@€“FŔJ † K Ç@C Ç@ÁAK FK ]€€
@ •FŔJ † L Ç@C Ç@ÁAK FK ]€€
@€—
 ÂK   
@ ™
 Í™
 ÂšK  †ŔM Ć N AN FN d@ 
@ ›K    Á@  AÁ	 d@ 
@€ťK  	‹€  Š@P ŠŔPˇË€  Ę Q Ę@Qˇ  
Q 
ÁQˇK  JR JARˇ‹  ŠR ŠÁRˇË  ĘS ĘASˇ‚  
‚S 
ÂSˇK‚  JT JBTˇ‹‚  Š‚T ŠÂTˇË‚  ĘU ĘBUˇ  
U 
ĂUˇK  JV JCVˇ‹  ŠV ŠĂVˇË  ĘW ĘCWˇ„  
„W 
ÄWˇK„  J„V JÄVˇ‹„  ŠX ŠDXˇË„  Ę„X ĘÄXˇ…  
Y 
EYˇd@€	
@€źK€ ‹Ŕ  Š Z ŠŔÉ´ŠŔZµJ€€ł‹Ŕ  Š@[ ŠŔÉ´ŠŔZµJ€ ¶‹Ŕ  ŠŔ[ ŠŔÉ´ŠŔZµJ€ ·‹Ŕ  Š@\ ŠŔÉ´ŠŔZµJ€ ¸‹Ŕ  ŠŔ\ ŠŔÉ´ŠŔZµJ€ ą‹Ŕ  Š@] ŠŔÉ´ŠŔZµJ€ ş‹Ŕ  ŠŔ] ŠŔÉ´ŠŔZµJ€ »‹Ŕ  Š@^ ŠŔÉ´ŠŔZµJ€ Ľ‹Ŕ  ŠŔ^ ŠŔÉ´ŠŔZµJ€ ˝‹Ŕ  Š@P ŠŔÉ´ŠŔZµJ€€ˇ‹Ŕ  Š@_ ŠŔÉ´ŠŔZµJ€ ľ‹Ŕ  Š T ŠŔÉ´ŠŔZµJ€€¨‹Ŕ  ŠŔ_ ŠŔÉ´ŠŔZµJ€ ż‹Ŕ  Š@` ŠŔÉ´ŠŔZµJ€ Ŕ‹Ŕ  ŠŔ` ŠŔÉ´ŠŔZµJ€ Á‹Ŕ  Š@a ŠŔÉ´ŠŔZµJ€ Â‹Ŕ  ŠŔa ŠŔÉ´ŠŔZµJ€ Ă‹Ŕ  Š@b ŠŔÉ´ŠŔZµJ€ Ä‹Ŕ  ŠŔb ŠŔÉ´ŠŔZµJ€ Ĺ‹Ŕ  Š@c ŠŔÉ´ŠŔZµJ€ Ć‹Ŕ  Š S ŠŔÉ´ŠŔZµJ€€¦‹Ŕ  ŠŔc ŠŔÉ´ŠŔZµJ€ Ç‹Ŕ  Š€R ŠŔÉ´ŠŔZµJ€€Ą‹Ŕ  Š@d ŠŔÉ´ŠŔZµJ€ Č‹Ŕ  ŠŔd ŠŔÉ´ŠŔZµJ€ É‹Ŕ  Š@e ŠŔÉ´ŠŔZµJ€ Ę‹Ŕ  ŠŔe ŠŔÉ´ŠŔZµJ€ Ë‹Ŕ  Š W ŠŔÉ´ŠŔZµJ€€®‹Ŕ  Š@f ŠŔÉ´ŠŔZµJ€ Ě‹Ŕ  ŠŔf ŠŔÉ´ŠŔZµJ€ Í‹Ŕ  Š@g ŠŔÉ´ŠŔZµJ€ Î‹Ŕ  Š Q ŠŔÉ´ŠŔZµJ€€˘‹Ŕ  ŠŔg ŠŔÉ´ŠŔZµJ€ Ď‹Ŕ  Š@h ŠŔÉ´ŠŔZµJ€ Đ‹Ŕ  Š€Q ŠŔÉ´ŠŔZµJ€€Ł‹Ŕ  ŠŔh ŠŔÉ´ŠŔZµJ€ Ń‹Ŕ  Š@i ŠŔÉ´ŠŔZµJ€ Ň‹Ŕ  ŠŔi ŠŔÉ´ŠŔZµJ€ Ó‹Ŕ  Š@j ŠŔÉ´ŠŔZµJ€ Ô‹Ŕ  ŠŔj ŠŔÉ´ŠŔZµJ€ Ő‹Ŕ  Š@k ŠŔÉ´ŠŔZµJ€ Ö‹Ŕ  ŠŔk ŠŔÉ´ŠŔZµJ€ ×‹Ŕ  Š@l ŠŔÉ´ŠŔZµJ€ Ř‹Ŕ  ŠŔl ŠŔÉ´ŠŔZµJ€ Ů‹Ŕ  Š@m ŠŔÉ´ŠŔZµJ€ Ú‹Ŕ  ŠŔm ŠŔÉ´ŠŔZµJ€ Ű‹Ŕ  Š€X ŠŔÉ´ŠŔZµJ€€±‹Ŕ  Š@n ŠŔÉ´ŠŔZµJ€ Ü‹Ŕ  ŠŔn ŠŔÉ´ŠŔZµJ€ Ý‹Ŕ  Š U ŠŔÉ´ŠŔZµJ€€Ş‹Ŕ  Š U ŠŔÉ´ŠŔZµJ€ Ţ‹Ŕ  Š€o ŠŔÉ´ŠŔZµJ€€Ţ‹Ŕ  Š p ŠŔÉ´ŠŔZµJ€€ß‹Ŕ  Š€p ŠŔÉ´ŠŔZµJ€€ŕ‹Ŕ  Š q ŠŔÉ´ŠŔZµJ€€á
@ łF€q ]€€ 
@€â € Ç      SelectedTarget     Q1    name    Neurotoxin    range      @   Casted     CD            Mana 	   CastTime    W1    Volatile Spiderling      °Ť@   E1    Cocoon      ”‘@   speed       ™@   delay       Đ?   width      €K@   Q2    Venomous Bite      °}@   W2    Skittering Frenzy    E2    Rappel      p‡@   Q1Ready    Q2Ready    W1Ready    W2Ready    E1Ready    E2Ready    R    Unleashed Power    Ready 
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    recall    killstring 
   HumanForm    SpiderForm    Spells    _Q    _W    _E    _R    Spells2    Q    W    E    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale 
   EvadeList    CurseoftheSadMummy    Amumu 
   spellSlot 
   SpellType 
   skillshot 
   GlacialStorm    Anivia    EnchantedCrystalArrow    Ashe    StaticField    Blitzcrank    BraumR    Braum    CassiopeiaPetrifyingGaze    Cassiopeia    MissileBarrage    Corki 	   EvelynnR    Evelynn    EzrealTruehotBarrage    Ezreal    FizzMarinerDoom    Fizz    CannonBarrage 
   Gangplank 	   GnarBigR    Gnar    GragasExplosiveCask    Gragas    GravesChargeShot    Graves    HecarimUlt    Hecarim    IreliaTranscendentBlades    Irelia    JarvanIVCataclysm 	   JarvanIV 
   JinxRWrapper    Jinx 	   RiftWalk 	   Kassadin    KennenShurikenStorm     Kennen    KogMawLivingArtillery    KogMaw    LeonaSolarFlare    Leona    LissandraR 
   Lissandra    LuxMaliceCannon    Lux    UFSlash 	   Malphite 
   MaokaiDrain3    Maokai 
   SoulShackles    Morgana    NamiR    Nami    OrianaDetonateCommand    Orianna 	   Tremors2    Rammus    rivenizunablade    Riven    RumbleCarpetBomb    Rumble    SejuaniGlacialPrisonStart    Sejuani    ShyvanaTransformCast    Shyvana    SonaCrescendo    Sona    SwainMetamorphism    Swain    TaricHammerSmash    Taric 
   ThreshRPenta    Thresh    VarusR    Varus    ViktorChaosStorm    Viktor    VladimirHemoplague 	   Vladimir    monkeykingspintowinleave 
   XenZhaoParry 	   Xin Zhao    YasuoRKnockUpComboW    Yasuo    ZiggsR    Ziggs    ZyraBrambleZone    Zyra    it 
   ItemsCast    D8  D8        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ž8  Ă8   F  F @ †@@ ]@ G€@ XŔŔ @€F A ‡€@ Ç@A Ç€Á]€€[   € €G€@ 
@€@€G@A L Â ]@ G@A G@Â 
@€F€B LŔÂ Ć C ]€€G@Ă €Ă €€
 Ä‡
€ÄG@A ‡ŔD ‡€AJ€ @€
€Ä‡
 ÄG@A ‡ E ‡€AJ€ FŔC [   Ŕ€G@E †€B ŚŔBÁE ť€€‡ FŹ€€ŚŤ€ ŤJ€ ‹GŔF †€B ŚŔBG ť€€‡ FŹ€€ŽŤ€ ŹJ€ ‹GŔD J€G‹LŔG ]@ L H ]@ F€B L€Č ĆŔE ]€€†ŔH €€ € €GŔC [@  Ŕ€G@E G€Ĺ †€B ‡ I€€ Ŕ€G@E G@É €É €€F€B LŔÂ ĆŔE ]€€G Ć Y@ “@€FŔI ]€€ ‡@E ‡@I@ €€F€B LŔÂ ĆŔE ]€€G Ć Y@ “  €C@  C € 
@€F€B L€Č Ć G ]€€†ŔH €€ € €GŔC [@  Ŕ€GŔF G€Ĺ †€B ‡ I€€ Ŕ€GŔF G@Ę €É €€F€B LŔÂ Ć G ]€€G Ć Y@ “@€FŔI ]€€ ‡ŔF ‡@I@ €€F€B LŔÂ Ć G ]€€G Ć Y@ “  €C@  C € 
@ ”F€B L€Č ĆŔJ ]€€†ŔH €€ € €GŔC [@  Ŕ€GŔD G€Ĺ †€B ‡ I€€ Ŕ€GŔD G@É €É €€F€B LŔÂ ĆŔJ ]€€G Ć Y@ “@€FŔI ]€€ ‡ŔD ‡@I@ €€F€B LŔÂ ĆŔJ ]€€G Ć Y@ “  €C@  C € 
@ •F€B L€Č ĆŔE ]€€†ŔH €€ € €G@D [@  @€G@K G@É €É €€F€B LŔÂ ĆŔE ]€€G Ć Y@ “@€FŔI ]€€ ‡@K ‡@I@ €€F€B LŔÂ ĆŔE ]€€G Ć Y@ “  €C@  C € 
@ –F€B L€Č Ć G ]€€†ŔH €€ € €G@D [@  @€GŔK G@É €É €€F€B LŔÂ Ć G ]€€G Ć Y@ “@€FŔI ]€€ ‡ŔK ‡@I@ €€F€B LŔÂ Ć G ]€€G Ć Y@ “  €C@  C € 
@ —F€B L€Č ĆŔJ ]€€†ŔH €€ € €G@D [@  @€G E G@É €É €€F€B LŔÂ ĆŔJ ]€€G Ć Y@ “@€FŔI ]€€ ‡ E ‡@I@ €€F€B LŔÂ ĆŔJ ]€€G Ć Y@ “  €C@  C € 
@ F@@ G@Ě G€Ě [   €€F A ‡ŔA ]€ [   @€GŔC [   € €LŔL ÇŔA ]@€ € 4      CheckOB 
   MenuElise    SelectedTarget     ValidTarget    TargetSelector    range    Cel    update    target    myHero 
   GetSpellData    _R    name    EliseR 
   HumanForm    SpiderForm     E1    E2    Q1    Mana    _Q    level       @     ŔR@   W1    _W       $@      I@   CDCheck    Smite    Q1Ready    CanUseSpell    READY    mana    CD         
   GetTickCount    W1Ready    WCD    E1Ready    _E    Q2Ready    Q2    W2Ready    W2    E2Ready    comboConfig    USEEKD    CastE1                          Ĺ8  B9   (  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ÁŔ E C  ]€€
@€G@D J€ĹŠF @ LŔĹ Ç@D ]@€F @ L Á Á  A ]@ F @ G@Ć LŔÁ Á€ Á FG A ]@ F @ G@Ć LŔÁ Á€ Á FH   ]@ F @ G@Ć LŔÁ Á€ A FG A ]@ F @ G@Ć LŔÁ Á€ Á FG A ]@ F @ G@Ć LŔÁ Á@  GÁH GAĹ	 FH € ]@ F @ G@Ć LŔÁ Á@	  GI GAĹÁ	 FH € ]@ F @ G@Ć LŔÁ Á 
  GAJ GAĹ
 FH € ]@ F @ G@Ć LŔÁ ÁŔ
  GK GAĹA FH € ]@ F @ G@Ć LŔÁ Á€  GÁK GAĹ FH € ]@ F @ G@Ć LŔÁ Á@  GL GAĹÁ FH € ]@ F @ G@Ć LŔÁ Á 
 A
 FM   ĆÁM ÇÎB Ý ]@  F @ G@Ć LŔÁ Á€ A FG A ]@ F @ G@Ć LŔÁ Á€ Á FG A ]@ F @ G@Ć LŔÁ Á€ Á FO A Á Â A‚ ]@€F @ G@Ć LŔÁ Á  A FO A Á Â A‚ ]@€F @ G@Ć LŔÁ Á€ Á FO A Á Â A‚ ]@€F Q † @ Á€   C  € Ă  ]@€F @ L Á Á@  ]@ F @ G€Ń LŔÁ Á€ Á FG A ]@ F @ G€Ń LŔÁ Á@  GÁH GAĹ	 FH € ]@ F @ G€Ń LŔÁ Á 
  GAJ GAĹ
 FH € ]@ F @ G€Ń LŔÁ Á€  GÁK GAĹ FH € ]@ F @ G€Ń LŔÁ Á€ A FG A ]@ F @ G€Ń LŔÁ Á€ Á FG A ]@ F @ G€Ń LŔÁ Á€ Á FO Á Á Â A‚ ]@€F @ G€Ń LŔÁ Á  A FO Á Á Â A‚ ]@€F @ G€Ń LŔÁ Á€ Á FO Á Á Â A‚ ]@€F @ G€Ń LŔÁ Á€ A FG A ]@ F @ G€Ń LŔÁ Á€ Á FG A ]@ F @ G€Ń LŔÁ Á  A FR   ĆÁM ÇÎÂ Ý ]@  F @ L Á Á  A ]@ F @ G@Ó LŔÁ Á€ Á FG A ]@ F @ G@Ó LŔÁ Á@  GÁH GAĹ	 FH € ]@ F @ G@Ó LŔÁ Á@	  GI GAĹÁ	 FH € ]@ F @ G@Ó LŔÁ Á 
  GAJ GAĹ
 FH € ]@ F @ G@Ó LŔÁ ÁŔ
  GK GAĹA FH € ]@ F @ G@Ó LŔÁ Á€  GÁK GAĹ FH € ]@ F @ G@Ó LŔÁ Á€ A FG A ]@ F @ G@Ó LŔÁ Á€ Á FG A ]@ F @ G@Ó LŔÁ Á€ Á FO  Á Â A‚ ]@€F @ G@Ó LŔÁ Á  A FO  Á Â A‚ ]@€F @ G@Ó LŔÁ Á€ Á FO  Á Â A‚ ]@€F @ L Á ÁŔ  ]@ F @ G Ô LŔÁ Á€ Á FG A ]@ F @ G Ô LŔÁ Á@  GÁH GAĹ	 FH € ]@ F @ G Ô LŔÁ Á@	  GI GAĹÁ	 FH € ]@ F @ G Ô LŔÁ Á 
  GAJ GAĹ
 FH € ]@ F @ G Ô LŔÁ ÁŔ
  GK GAĹA FH € ]@ F @ G Ô LŔÁ Á€  GÁK GAĹ FH € ]@ F @ G Ô LŔÁ Á€ A FG A ]@ F @ G Ô LŔÁ Á€ Á FG A ]@ F @ G Ô LŔÁ Á€ Á FO  Á Â A‚ ]@€F @ G Ô LŔÁ Á  A FO  Á Â A‚ ]@€F @ G Ô LŔÁ Á€ Á FO  Á Â A‚ ]@€F @ L Á Á@  ]@ GŔT L Ő Ć @ Ç€Ô]@€F @ L Á Á@  ]@ F @ G€Ő L Á ÁŔ  ]@ F @ G€Ő G Ö LŔÁ Á€ Á FG A ]@ F@V †€V ť € ]  €€†ÁV ÇW ť €ÇB×CW  €Ć@ Ç‚ŐÇÖĚÂÁGWĂ ÇCW G„W–CĆH € ÝB ˘  #űb€  ă€ůF @ G€Ő G Ö LŔÁ Á€ A FG A ]@ F @ G€Ő G Ö LŔÁ Á€ Á FG A ]@ F @ G€Ő G Ö LŔÁ Á@  FH € ]@ F @ G€Ő L Á ÁŔ  ]@ F @ G€Ő G Ů LŔÁ Á€ Á FG A ]@ FŔV †€V ť € ]   	€†ÁV ÇAY ť€€Ç‚Y ĂŮ€ €CEÇŰ  €€Ć@ Ç‚ŐÇŮĚÂÁFZ ŚĂŮ  ť€‡CE] C ĆZ D×Ý „ FZ ‡ÄZ ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ G€Ő G Ů LŔÁ Á€ A FG A ]@ F @ G€Ő G Ů LŔÁ Á€ Á FG A ]@ F @ G€Ő G Ů LŔÁ Á   FH € ]@ F @ L Á Á@  ]@ F @ G€Ű LŔÁ Á€ Á FG A ]@ F @ G€Ű LŔÁ ÁŔ  FH € ]@ F @ G€Ű LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ý LŔÁ Á€ Á FG A ]@ F @ G Ý LŔÁ Á@  FH € ]@ F @ G Ý LŔÁ Á@  GÁH GAĹ	 FH € ]@ F @ G Ý LŔÁ Á@	  GI GAĹÁ	 FH € ]@ F @ G Ý LŔÁ Á 
  GAJ GAĹ
 FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ţ LŔÁ Á€ Á FG A ]@ F @ G Ţ LŔÁ Á@  FH € ]@ F @ G Ţ LŔÁ ÁŔ  FA_ ‹ Á ‚ A‚ ‚ ¤A ]@ F @ G Ţ LŔÁ Á€ A FG A ]@ F @ G Ţ LŔÁ Á€ Á FG A ]@ F @ G Ţ LŔÁ ÁŔ   FH € ]@ F @ G Ţ LŔÁ Á@    FA_ ‹ Á ‚ A‚ ‚ ¤A ]@ F @ G Ţ LŔÁ Á€ A FG A ]@ F @ G Ţ LŔÁ Á€ Á FG A ]@ F @ G Ţ LŔÁ ÁŔ  ! FH € ]@ F @ G Ţ LŔÁ Á@! ! FA_ ‹ Á ‚ A‚ ‚ ¤A ]@ F @ G Ţ LŔÁ Á€ A FG A ]@ F @ G Ţ LŔÁ Á€ Á FG A ]@ F @ G Ţ LŔÁ ÁŔ! " FH € ]@ F @ G Ţ LŔÁ Á@" " FA_ ‹ Á Â" A‚ ‚ ¤A ]@ F @ G Ţ LŔÁ Á€ A FG A ]@ F @ G Ţ LŔÁ Á€ Á FG A ]@ F @ G Ţ LŔÁ Á # A# FH € ]@ F @ G Ţ LŔÁ Á€# Á# FA_ ‹ Á ‚ A‚ ‚ ¤A ]@ F @ L Á Á $ A$ ]@ F @ G@ä LŔÁ Á€ Á FG A ]@ F @ G@ä LŔÁ Á€$ Á$ FH   ]@ F @ G€Ń L ĺ Á  ]@€F @ G€Ő G Ö L ĺ Á@ ]@€ € •   
   MenuElise 
   scriptConfig    MasterSeries: Elise    Elise1    addSubMenu    [Elise]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY      čŚ@
   DAMAGE_MAGIC    name    Elise    addTS    [Elise]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ1    Use     Q1     (Q1)    USEQ2    Q2     (Q2)    USEW1    W1     (W1)    USEW2    W2     (W2)    USEE1    E1     (E1)    USEE2    E2     (E2)    USEEKD    Cast E1 To Target    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   WMANA    Min. Mana % To Use (W)    EMANA    Min. Mana % To Use (E) 
   AddSpellMenu    [Elise]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Elise]: Farm Settings    farm       D@   [Elise]: Jungle Farm Settings    jf    [Elise]: Items Settings 
   iteConfig    it    LoadToMenu    [Elise]: Extra Settings 	   exConfig    [Elise]: Auto Interrupt 	   aiConfig    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop          UAI    Enable    [Elise]: Small-Evade 	   evConfig    Spells 
   EvadeList 
   GetSpellData 	   tostring    Dodge      Spell     Spells2    UEV    [Elise]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Elise]: KS Settings 	   ksConfig    USEI    Use Summoner Ignite    [Elise]: Draw Settings    drawConfig    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DD    Draw Kill Text    DDC    Draw Kill Text Color      €f@   DST    Draw Selected Target    DSTC    Draw Selected Target Color    [Elise]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          D9  ]9   ‘   G @ G@Ŕ [   Ŕ€F€@ LŔŔ Ć A ]€€G@Á X€Á  €G @ JŔÁ€G @ †@B ť€€ Ć€@ ĚŔŔFA Ý€€Ç@ÁĎ€ÂŤŔ J€ „GŔB G@Ŕ [   Ŕ€F€@ LŔŔ Ć A ]€€G@Á X€Á  €GŔB JŔÁ€GŔB †@B ť€€ Ć€@ ĚŔŔFA Ý€€Ç@ÁĎ€ÂŤŔ J€ „G C G@Ŕ [   Ŕ€F€@ LŔŔ Ć@C ]€€G@Á X€Á  €G C JŔÁ€G C †@B ť€€ Ć€@ ĚŔŔFAC Ý€€Ç@ÁĎ€ÂŤŔ J€ „G€C G@Ŕ [   Ŕ€F€@ LŔŔ Ć@C ]€€G@Á X€Á  €G€C JŔÁ€G€C †@B ť€€ Ć€@ ĚŔŔFAC Ý€€Ç@ÁĎ€ÂŤŔ J€ „GŔC G@Ŕ [   Ŕ€F€@ LŔŔ Ć D ]€€G@Á X€Á  €GŔC JŔÁ€GŔC †@B ť€€ Ć€@ ĚŔŔFD Ý€€Ç@ÁĎ€ÂŤŔ J€ „G@D G@Ŕ [   Ŕ€F€@ LŔŔ Ć D ]€€G@Á X€Á  €G@D JŔÁ€G@D †@B ť€€ Ć€@ ĚŔŔFD Ý€€Ç@ÁĎ€ÂŤŔ J€ „ €       Q1    Casted    myHero 
   GetSpellData    _Q 
   currentCd             CD 
   GetTickCount      @Ź@   Q2    W1    _W    W2    E1    _E    E2                          _9  †9   ę   F @ ]€€ [    9€G@@ [@  @8€F€@ ‡Ŕ@ ]€ [    7€G A [   €€G@A [   Ŕ€F€A GŔÁ G Â [   €€F@B G€Â †@B ‡ŔBP€€ O Ă †€A ‡ŔA‡@C@ Ŕ €L€C ÇŔ@ ]@€€0€GŔC [   Ŕ€F€A GŔÁ G Ä [   €€F@B G€Â †@B ‡ŔBP€€ O Ă †€A ‡ŔA‡@D@ Ŕ €L€D ÇŔ@ ]@€Ŕ*€GŔD [   Ŕ€F€A GŔÁ G Ĺ [   €€F@B G€Â †@B ‡ŔBP€€ O Ă †€A ‡ŔA‡@E@ Ŕ €L€E ÇŔ@ ]@€ %€GŔE [   Ŕ€F€A GŔÁ G Ć [   €€F@F †€F ]@ LŔF ÇŔ@ ]@€@!€G G [   Ŕ€F€A GŔÁ G@Ç [   €€F@F †€F ]@ L€G ÇŔ@ ]@€€€GŔG [   Ŕ€F H ‡Ŕ@ ]€ @€€€F€A GŔÁ G€Č [   @€F@F †€F ]@ LŔH ÇŔ@ ]@€€€GŔE [    €F€A GŔÁ G Ć [   Ŕ €LŔF ÇŔ@ ]@€€€G G [    €F€A GŔÁ G@Ç [   Ŕ €L€G ÇŔ@ ]@€€€GŔG [   @€F H ‡Ŕ@ ]€ @€ €F€A GŔÁ G€Č [   Ŕ €LŔH ÇŔ@ ]@€@€GŔC [   €€F€A GŔÁ G Ä [   @€F@B G€Â †@B ‡ŔBP€€ O Ă †€A ‡ŔA‡@D@ €€F@F †€F ]@ L€D ÇŔ@ ]@€Ŕ€G G [@  Ŕ€GŔE [@   €F H ‡Ŕ@ ]€ @Č Ŕ €F@F †€F ]@  €G G [@  @€GŔE [@  €€GŔG [@  Ŕ€F H ‡Ŕ@ ]€ @€€ €L@F Ć€F ]@€ € $      ComboActive    recall    ValidTarget    Cel 
   HumanForm    Q1Ready 
   MenuElise    comboConfig    USEQ1    myHero    mana    maxMana       Y@   QMANA    CastQ1    E1Ready    USEE1    EMANA    CastE1    W1Ready    USEW1    WMANA    CastW1    W2Ready    USEW2 
   CastSpell    _R    CastW2    Q2Ready    USEQ2    CastQ2    E2Ready    GetDistance      @@   USEE2    CastE2                          9  –9   Y   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €€G A [@  Ŕ€F@A ‡€A ]€ [   €€GŔA [   Ŕ€G B [   Ŕ€F @ G@Ŕ G@Â [   €€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@ Ŕ €LŔC Ç€A ]@€ €G D [   Ŕ€F @ G@Ŕ G@Ä [   €€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€D@ Ŕ €LŔD Ç€A ]@€@€G E [   €€F @ G@Ŕ G@Ĺ [   @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€E@ € €LŔE Ç€A ]@€ €    
   MenuElise 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    Cel 
   HumanForm    Q1Ready    USEQ1    myHero    mana    maxMana       Y@   QMANA    CastQ1    E1Ready    USEE1    EMANA    CastE1    W1Ready    USEW1    WMANA    CastW1                          9  µ9   	ź   F @ ]€€ [   @&€G@@ [@  €%€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  #€†A Ŕ€Â ť€›  €!€‡B ›  €€‡AB ›  Ŕ€†B ‡ÁB‡C›  €€†AC ‡CĆAC ÇÁĂÁŹDĆB ÇÁÂÇAÄ€Ŕ €ŚD  €ťA€ €‡ÁD ›  Ŕ€†B ‡ÁB‡E›  €€†AC ‡CĆAC ÇÁĂÁŹDĆB ÇÁÂÇAĹ€Ŕ €ŚE  €ťA€@€‡ÁE ›  Ŕ€†B ‡ÁB‡F›  €€†AC ‡CĆAC ÇÁĂÁŹDĆB ÇÁÂÇAĆ€Ŕ €ŚF  €ťA€€€‡ÁF ›  Ŕ€†B ‡ÁB‡G›  €€†AG ĆG ťA ŚÁG  €ťA€Ŕ€‡H ›   €†B ‡ÁB‡AH›  Ŕ	€†AG ĆG ťA ŚH  €ťA€ €‡ÁF ›   €†B ‡ÁB‡G›  Ŕ €ŚÁG  €ťA€ €‡H ›   €†B ‡ÁB‡AH›  Ŕ €ŚH  €ťA€ €‡H ›A  @€‡ÁF ›A  € €†AG ĆG ťA b€  ă Ü € #      FarmActive    recall 
   EnemyMinions    update    pairs    objects    ValidTarget      @Ź@
   HumanForm    Q1Ready 
   MenuElise    farm    USEQ1    myHero    mana    maxMana       Y@   QMANA    CastQ1    E1Ready    USEE1    EMANA    CastE1    W1Ready    USEW1    WMANA    CastW1    W2Ready    USEW2 
   CastSpell    _R    CastW2    Q2Ready    USEQ2    CastQ2                          ·9  Ô9   	ź   F @ ]€€ [   @&€G@@ [@  €%€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  #€†A Ŕ€Â ť€›  €!€‡B ›  €€‡AB ›  Ŕ€†B ‡ÁB‡C›  €€†AC ‡CĆAC ÇÁĂÁŹDĆB ÇÁÂÇAÄ€Ŕ €ŚD  €ťA€ €‡ÁD ›  Ŕ€†B ‡ÁB‡E›  €€†AC ‡CĆAC ÇÁĂÁŹDĆB ÇÁÂÇAĹ€Ŕ €ŚE  €ťA€@€‡ÁE ›  Ŕ€†B ‡ÁB‡F›  €€†AC ‡CĆAC ÇÁĂÁŹDĆB ÇÁÂÇAĆ€Ŕ €ŚF  €ťA€€€‡ÁF ›  Ŕ€†B ‡ÁB‡G›  €€†AG ĆG ťA ŚÁG  €ťA€Ŕ€‡H ›   €†B ‡ÁB‡AH›  Ŕ	€†AG ĆG ťA ŚH  €ťA€ €‡ÁF ›   €†B ‡ÁB‡G›  Ŕ €ŚÁG  €ťA€ €‡H ›   €†B ‡ÁB‡AH›  Ŕ €ŚH  €ťA€ €‡H ›A  @€‡ÁF ›A  € €†AG ĆG ťA b€  ă Ü € #      FarmActive    recall    JungleMinions    update    pairs    objects    ValidTarget      @Ź@
   HumanForm    Q1Ready 
   MenuElise    jf    USEQ1    myHero    mana    maxMana       Y@   QMANA    CastQ1    E1Ready    USEE1    EMANA    CastE1    W1Ready    USEW1    WMANA    CastW1    W2Ready    USEW2 
   CastSpell    _R    CastW2    Q2Ready    USEQ2    CastQ2                          Ö9  é9   •   F @ †@@ ť € ]   #€†@ Ŕ€Â  ť€›  €!€†A ‡AAŹŤĆB ĚAÂA‚ Ý€ÂB A €€ĆA C ‚€FÂB ‚ Ŕ€A AC ]‚€†ÂB ÁÂ  €FA C ť‚€Ű  €€ÇÄCD DGĂÄ Í€€€ĆE ÇBĹÇ‚ĹŰ  @€Ć‚@  €AĂ Ý‚€Ű  Ŕ€ĆF B CF €@€ÝB€Ŕ€Ç‚F Ű  Ŕ€ĆE ÇBĹÇÂĆŰ  €€ĆG  €Ý‚ CG G Ŕ€ÇÄCD DGĂÄ Í ‚Ŕ €ĚÂG @€ÝB€ 
€ÇH Ű  Ŕ€ĆE ÇBĹÇBČŰ  €€ĆG  €Ý‚ H G Ŕ€ÇÄCD DGĂÄ Í@‚Ŕ €ĚÂH @€ÝB€@€Ç‚F Ű  €€ĆE ÇBĹÇÉŰ  @€ĆG  €Ý‚ CI G €€ÇÄCD DGĂÄ Í€‚€ €Ě‚I @€ÝB€b€  ă Ü € '      pairs    GetEnemyHeroes    ValidTarget      @ź@   myHero    level       4@      I@   SSpells    Ready    summonerdot    getDmg    Q       @   QM    W    health    math    floor    shield 
   MenuElise 	   ksConfig    USEI      Ŕ‚@
   CastSpell    GetSlot 
   HumanForm    USEQ1    GetDistance    Q1    range    CastQ1    SpiderForm    USEQ2    Q2    CastQ2    USEW1    W1    CastW1                          ë9  ˙9   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot 
   MenuElise    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          :  :   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FÁA †ÁA ĆAB ÂA F‚A †ÂA Ć‚A CB FA †A ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuElise 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _Q    _E    _R    LevelSpell       đ?                         	:  K:   o  Ç Ŕ Ű    €Ç@Ŕ Ű   @€Ç€@ŔŔ€ €Ç A Ę€Á‚€€Ç Ŕ Ű    €Ç@Ŕ Ű   @€Ç€@ŔÁ€ €Ç B Ę€Á‚€€Ç Ŕ Ű    €Ç@Ŕ Ű   @€Ç€@@Â€ €Ç€B Ę€Á‚€€Ç Ŕ Ű    €Ç@Ŕ Ű   @€Ç€@ŔÂ€ €Ç C Ę€Á‚€€Ç Ŕ Ű   Ŕ€Ç@Ŕ Ű    €Ç€@@Ă@ €Ç€C Ę€Á‚ĆŔC Ç ÄÇ@ÄÇ€ÄŰ   @
€ÇŔD Ű   €€Ć E AE Ý  €[   €
€‚Ĺ FÂE G‚ĹX@@	€Ć FÂE GĆ@ €›   €€‚@GBĆ@€€ÂC DBDGBĆB  Ŕ€‚F @€ ‡‚C ‡ÂF‚€   €G   Ŕ €BG €€ B€@€‚G FÂG B BG €€ B€â€  côĆŔC Ç ÄÇ ČÇ@ČŰ    <€Ç€H Ű   @;€[   Ŕ:€Ç€Ĺ ÁE EX €9€ĆŔE ÇŔČŰ@  €8€Ç Ć ÁE F @7€›   Ŕ6€ÁŔ	 Á	 ŔI“ ’Ŕ ’Ç Ć ÁE F  €Ç J @Ç Ű   Ŕ
€ĆŔC Ç ÄÇ Č@Ç Ű    €ĆŔJ  € G@ÝŔ€ •Ŕ€”Ć€J X Ë@€Ć€J X@Ë€ €Ć€J €Ë  € € Ć@J XŔË €Ć@J X Ě@€Ć@J X@Ě€ €Ć@J €Ě €ĆŔL Í Ç AJ Ç Ç ĆŔ ’ĆŔL Í Ç AJ Ç Ç@ÉŔ€’ĆŔL Í Ç AJ Ç Ç€ÉŔ “ĆŔE ĹFÁE GĹ@€#€ÁČA  Ŕ"€AÍ “ "€ŔM›ÎFI ŔÉŔ€GAN[  €€GANGÎ‡ÎX€  €CA  C€ @› €FI ŔÎ@€FO €€ ÇAOBI F‚I €€Ŕ ]€@›Ŕ€FI €Ď@€FÁO €€ ÇAOBI F‚I €€Ŕ ]€@›€€FI  Đ@€FAP €€ ÇAOBI F‚I €€Ŕ ]€@›@€FI  Ë@€FP €€ ÇAOBI F‚I €€Ŕ ]€@› 
€FI @Ë@€FÁP €€ ÇAOBI F‚I €€Ŕ ]€@›Ŕ	€FI €Ë €FO €€ ÇAOBI F‚I €€Ŕ ]€[A   €FO €€ ĆQ  € Ý ĎĎBOÎ‚BI F‚I €€Ŕ ]€@›Ŕ€FI @Ń €FP ‡AOŔ€ BI F‚I €€Ŕ ]€@›FM [  Ŕ€FQ [   €FÁQ Ą  Á ]A€Ŕ €FÁQ ĄA  Á ]A€ € I      isMe    valid    name    EliseHumanQ    Q1    Casted    EliseSpiderQCast    Q2    EliseHumanW    W1 
   EliseSpiderW    W2    EliseHumanE    E1 
   MenuElise 	   exConfig 	   aiConfig    UAI    E1Ready    pairs    InterruptList    team    myHero    type 
   spellName    ValidTarget    range 
   HumanForm    CastE1 
   CastSpell    _R 	   evConfig    UEV    E2Ready    dead 	   shottype    radius    maxdistance         
   EvadeList 
   spelltype 	   casttype 
   getSpellType       @      @      @   Q    W    E    R 
   skillData 	   charName    health    hitchampion     boundingRadius    target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   SpiderForm    DelayAction š™™™™™É?   >:  @:           @ †@Ŕ @€ €       CastE2 	   mousePos                           B:  E:        @ F@@ @  € €@ †Ŕ@ @€ €    
   CastSpell    _R    CastE2 	   mousePos                                                M:  f:   Ĺ   F @ G@Ŕ [     € € F€@ GŔŔ G Á [   €€G@A [   Ŕ€F€A † @ ‡ŔAĆ @ Ç Â@ ABGB GÁÂ†C Ć@ ÇÁŔÇAĂÇĂ‚@ Â@BCÂCF‚@ GÂŔGBĂGÄť ]@  F€@ GŔŔ G@Ä [   €€G€D [   Ŕ€F€A † @ ‡ŔAĆ @ Ç Â@ ABGÁD GÁÂ†C Ć@ ÇÁŔÇĹÇĂ‚@ Â@EÂCF‚@ GÂŔGĹGÄť ]@  F€@ GŔŔ G@Ĺ [   €€G€E [   Ŕ€F€A † @ ‡ŔAĆ @ Ç Â@ ABGÁE GÁÂ†C Ć@ ÇÁŔÇĆÇĂ‚@ Â@FÂCF‚@ GÂŔGĆGÄť ]@  F€@ GŔŔ G@Ć [   @€L€F ]@ FŔF † G ť € ]   
€†AG Ŕ€ť ›  Ŕ€‡G ÇÁÇ‡ÁX H€€†AH ĆH ÂÁGÂ‡BÂÝ ť  ĆÁH ‚G GÂÇBA	 ‡ÂAŽBIÇBÎ‚ÉC F@ GĂŔGĂÉGĂ†@ ‡Ă@‡ĂI‡ĂCĆ@ ÇĂŔÇĂÉÇÄ ÝA  b€  ă őF€@ GŔŔ G Ę [   €€F€@ G@Ę G€Ę [   @€GŔJ X Č €€GŔJ G@Ŕ [@  €€F€A ‡ŔJ ‡ŔAÇŔJ Ç ÂÁJ ABA †C Ć@ ÇÁŔÇAËÇĂ‚@ Â@BKÂCF‚@ GÂŔGBËGÄť ]@   € .      myHero    dead 
   MenuElise    drawConfig    DQR    Q1Ready    DrawCircle2    x    y    z    Q1    range    RGB    DQRC        @      @      @   DWR    W1Ready    W1    DWRC    DER    E1Ready    E1    DERC    DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID     WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   DDC    DST    comboConfig    ST    SelectedTarget       Y@   DSTC                          h:  Š:   ł   F @ †@@ ť € ]  €*€†@ Ŕ€ť ›  @)€†Á@ ‡AŹ‚ŤĆÁA  @€†Â@ ÁB Ý€ÂA A‚ €€ĆÂ@ C ‚€FÂA Â Ŕ€Ă@ AC ]‚€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂ€Ŕ €‡D ÇBÄŠ‚ÄŔ €‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂŔŔ €‡D ÇBÄŠÂÄŔ€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂ Ŕ €‡D ÇBÄŠĹŔ€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂ@Ŕ €‡D ÇBÄŠBĹŔ€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍ‚ŔŔ €‡D ÇBÄŠ‚Ĺ€€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍB‚ŔŔ €‡D ÇBÄŠÂĹ@€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍ‚ŔŔ €‡D ÇBÄŠĆ €‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍ‚ŔŔ €‡D ÇBÄŠBĆŔ
€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍ‚ŔŔ €‡D ÇBÄŠ‚Ć€€‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍ‚Í‚ŔŔ €‡D ÇBÄŠÂĆ €‡ĂĆBC Ç‚ĂĂĂÝ‚ ŤÂÍB‚Í‚ŔŔ €‡D ÇBÄŠÇ€ €‡D ÇBÄŠBÇb€  ă€Ô €       pairs    GetEnemyHeroes    ValidTarget    myHero    level       4@      I@   getDmg    Q       @   QM    W    health    math    floor    shield    killstring 
   networkID 
   Ignite Kill! 	   Q1 Kill! 	   Q2 Kill! 	   W1 Kill!    Q1+Q2 Kill!    Q1+W1 Kill!    Q1+Ignite Kill!    Q2+Ignite Kill!    W1+Ignite Kill!    Q1+Q2+Ignite Kill!    Q1+W1+Ignite Kill!    Harass Him!                          Ś:  Ž:      † @ Ć@@  € ť@€ €    
   CastSpell    _Q                          Ź:  ‘:      † @ Ć@@  € ť@€ €    
   CastSpell    _Q                          “:  ™:      † @ Ś@@ € A  ť€ Ă   ›   €€Ű@   €Á@ FA ‡AAÇAA  €       VP    GetPredictedPos       Đ?
   CastSpell    _W    x    z                          š:  ś:      † @ Ć@@ ť@  €    
   CastSpell    _W                          ž:  Ł:   #   † @ Ć@@ Ç€ŔÇŔŔÇ Á € GAA GÁ‡AA ‡ÁAÇAA ÇÂBA BBF‚B Â Ă€   D   ĆC@ ÇŔÇĂŔÇCĂť X€C€€Ű    €FÁC †D ÇAD‚D]A  €       GetPrediction2 
   MenuElise 	   spConfig    eConfig    EP    E1    delay    width    range    speed    myHero    line    E    ECH  
   CastSpell    _E    x    z                          ¤:  ¦:      † @ Ć@@ Ŕ GÁŔ ť@  €    
   CastSpell    _E    x    z                          ¨:  Ş:      † @ Ć@@ ť@  €    
   CastSpell    _R                          ¬:  Ć:   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€FA@ GŔGÁŔ[  @€
€B†FC Á ÇAC–Á]A €€FA@ GŔGÁŔ[  @€
 †FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuElise    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print a   <b><font color="#ff6600">EliseMaster:</font></b> <font color="#FFFFFF">Target unselected:</font> c   <b><font color="#ff6600">EliseMaster:</font></b> <font color="#FFFFFF">New target selected:</font>                          Đ:  ÷:   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    Ö:  Ö:           @ @  €       AfterAA                         Ů:  Ů:           @ @  €    	   BeforeAA                         ŕ:  ŕ:           @ @  €       AfterAA                         ă:  ă:           @ @  €    	   BeforeAA                         é:  é:        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    é:  é:           @ @  €       AfterAA                                               ě:  ě:           @ @  €    	   BeforeAA                         ń:  ń:           @ @  €       AfterAA                         ô:  ô:           @ @  €    	   BeforeAA                              	
                ů:  ;   Ś   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …KŔ  J€Ă‚JŔĂĄ€  J€€„
@€†K€ J@Ä‚J€ÄJ Ĺ‰J€ĹŠJ Ć‹ĄŔ  J€€„
@ 
€ĆŚF G †@G Ç A ÇŔÁG FÁG ]€€
@€ŤF G †@H Ç A ÇŔÁG FÁG ]€€
@ FŔ@ †ŔH Ç A ÇŔÁI C  ]€€
@ ‘FŔ@ †ŔH Ç@C ÇŔÁI C  ]€€
@€’FŔ@ †ŔH Ç D ÇŔÁI C  ]€€
@ “K   
@€“F@J ]€€ 
@ ”K  	‹€  Š Ë•Š€Ë–Ë€  ĘŔË•Ę Ě–  
AĚ•
Ě–K  JÁĚ•JÍ–‹  ŠAÍ•ŠÍ–Ë  ĘÁÍ•ĘÎ–‚  
BÎ•
‚Î–K‚  JÂÎ•JĎ–‹‚  ŠBĎ•Š‚Ď–Ë‚  ĘÂĎ•ĘĐ–  
CĐ•
Đ–K  JĂĐ•JŃ–‹  ŠCŃ•ŠŃ–Ë  ĘĂŃ•ĘŇ–„  
DŇ•
„Ň–K„  JÄŇ•JÓ–‹„  ŠDŃ•Š„Ń–Ë„  ĘDÓ•Ę„Ó–…  
ĹÓ•
Ô–K…  JEÔ•J…Ô–d@ 

@ • € S      SelectedTarget     Cel    TargetSelector    Q    name    Seismic Shard    range      @   Ready    W    Brutal Strikes       i@   E    Ground Slam       y@   R    Unstoppable Force      @Ź@   speed      p—@   delay       Đ?   width      Ŕr@   recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector    killstring    it 
   ItemsCast    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    ý:  ý:        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ţ:  ţ:        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ˙:  ˙:        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                           ;   ;        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               !;  ‡;   W  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GK GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á  A FH € ]@ F @ GŔĆ LŔÁ Á€ Á FM A
 Á
 Â
 A‚
 ]@€F @ GŔĆ LŔÁ Á  A FN   ĆÁN ÇĎB Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€ Á FM Á
 Á
  A‚
 ]@€F @ GŔĆ LŔÁ Á@  FM Á Á
  A‚
 ]@€F @ GŔĆ LŔÁ Á  A FM  Á
  A‚
 ]@€F @ GŔĆ LŔÁ ÁŔ  FM Á
 Á
  A‚
 ]@€F@R † @ Á    C    Ă€ ]@€F @ L Á Á€ Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔŇ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔŇ LŔÁ Á  Á FG Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ Á€ Á FM  Á
  A‚
 ]@€F @ GŔŇ LŔÁ Á  A FM A Á
  A‚
 ]@€F @ GŔŇ LŔÁ Á  Á FG Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ Á€ Á FT   ĆÁN ÇĎB Ý ]@  F @ L Á Á€ Á ]@ F @ GŔÔ LŔÁ Á  A FG Á ]@ F @ GŔÔ LŔÁ Á  A FH € ]@ F @ GŔÔ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ GŔÔ LŔÁ ÁŔ 	 GÁJ GÁĹ FH € ]@ F @ GŔÔ LŔÁ Á  	 GK GÁĹÁ FH € ]@ F @ L Á Á@  ]@ GŔV L × Ć @ Ç€Ö]@€F @ L Á Á@  ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ ÁŔ  FH € ]@ F @ G€× LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ů LŔÁ Á  A FG Á ]@ F @ G Ů LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G Ů LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G Ů LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ G Ů LŔÁ Á  Á FG Á ]@ F @ G Ů LŔÁ Á  A FG Á ]@ F @ G Ů LŔÁ Á€ Á FM A Á
  A‚
 ]@€F @ G Ů LŔÁ Á@  FM A Á
  A‚
 ]@€F @ G Ů LŔÁ Á  A FM A Á
  A‚
 ]@€F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ GŔŮ LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ GŔŮ LŔÁ Á€ 	 GÁJ GÁĹ FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á€ Á FM A Á
  A‚
 ]@€F @ GŔŮ LŔÁ Á@  FM A Á
  A‚
 ]@€F @ GŔŮ LŔÁ Á  A FM A Á
  A‚
 ]@€F @ L Á ÁŔ  ]@ F @ G Ű LŔÁ Á  A FG Á ]@ F@[ †€[ ť € ]   €†Á[ Ç\ ť€€ÇBÜC\ €€Ć@ ÇŰĚÂÁG\Ă ÇC\Ä –ĆH € ÝB ˘  #‚űb€  ă úF @ G Ű LŔÁ Á  Á FG Á ]@ F @ G Ű LŔÁ Á  A FG Á ]@ F @ G Ű LŔÁ Á  A FH € ]@ F @ L Á Á€ Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á  A FH € ]@ F @ GŔÝ LŔÁ Á€ Á FH € ]@ F @ GŔÝ LŔÁ Á  Á FG Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á  A FH € ]@ F @ GŔÝ LŔÁ Á€ Á F` ‹ ÁA  ‚
 AB  B  ¤A ]@ F @ GŔÝ LŔÁ Á  Á FG Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á€  Á  FH € ]@ F @ GŔÝ LŔÁ Á ! A! F` ‹ ÁA  B  A‚
 ‚
 ¤A ]@ F @ GŔÝ LŔÁ Á  Á FG Á ]@ F @ GŔÝ LŔÁ Á  A FG Á ]@ F @ GŔÝ LŔÁ Á€! Á! FH € ]@ F @ GŔÝ LŔÁ Á " A" F` ‹ ÁA  ‚
 AB  ‚
 ¤A ]@ F @ L Á Á€" Á" ]@ F @ GŔâ LŔÁ Á  A FG Á ]@ F @ GŔâ LŔÁ Á # A# FH   ]@ F @ GŔŇ L€ă Á€ ]@€ € Ź   
   MenuMalph 
   scriptConfig    MasterSeries: Malphite 
   Malphite1    addSubMenu    [Malphite]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name 	   Malphite    addTS    [Malphite]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    USER    R     (R)    USER2    Use (R) When Target Killable    USER3    Use (R) When Can Hit X Targets    SCRIPT_PARAM_SLICE       @              @   CRKD    Use (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Malphite]: Harras Settings 
   harrasConfig       I@      N@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Malphite]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    EKS    RKS    [Malphite]: Items Settings 
   iteConfig    it    LoadToMenu    [Malphite]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Malphite]: Farm Settings    farm       D@!   [Malphite]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Malphite]: Interrupt Settings    iu    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop     UI    Enable    [Malphite]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Malphite]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ‰;  ť;   >   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡L€D ]@ F@@ GŔÄ G Ĺ [   @€F B ‡€C Ç@B Ç€Â]€€[   € €L@E Ç€C ]@€ €       CheckOB 
   MenuMalph    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    R    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    Smite    comboConfig    CRKD    CastR                          ź;  »;   Ă   F @ ]€€ [   @/€G@@ [@  €.€F€@ GŔŔ G Á [   €€F@A †€A ÇŔA ]€€‡ B ‡@B€€ €€F€B ‡ŔA ]€ [   @€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡€C@ € €LŔC ÇŔA ]@€F€@ GŔŔ G Ä [   Ŕ€F@A †€A Ç@D ]€€‡€D ‡@BŽŔD€€ €€F€B ‡@D ]€ [   @€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ E@ € €L@E Ç@D ]@€F€@ GŔŔ G€Ĺ [   @€F@A †€A Ç@D ]€€‡ŔE ‡@B€€ @€F€B ‡@D ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ F@ @ €L@F ]@ F€@ GŔŔ G€Ć [   @€F€B ‡ŔF ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ G@ @€F€@ GŔŔ G@Ç [   Ŕ€L€G ÇŔF ]€€‡ŔF ‡ŔGĆ H Ç@ČÁF HÝ€ ŤŔ @ € €ŚŔH ÁF ť@€F€@ GŔŔ G É @€’Ŕ
€F€I †ŔI ť € ]   	€†J ŚAJ €G‚J GÂĘ‡‚J ‡KÇ‚J ÇBÂJ CKFA ťA‡‚J ‡‚Kť‚€ ›  €€†‚B Ŕ€ť‚ ›  @€XŔKŔ€†‚@ ‡Â@‡I €€Ŕ €†BL Ć‚L ĂLGMťB b€  ă ö € 5      ComboActive    recall 
   MenuMalph    comboConfig    USEQ    GetDistance    myHero    QCel    Q    range    ValidTarget    mana    maxMana       Y@   QMANA    CastQ    USEE    ECel    E       I@   EMANA    CastE    USEW    W    WMANA    CastW    USER    RCel    RMANA    USER2    Damage    health    math    floor    shield    CastR    USER3       đ?   pairs    GetEnemyHeroes    VP    GetCircularAOECastPosition    R    delay    width    speed    Ready         @
   CastSpell    _R    x    z                          ˝;  Ć;   N   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ€G A [@   €F @ G@Ŕ G@Á [   Ŕ€F€A †ŔA Ç B ]€€‡@B ‡€BŽŔB€€ €€F C ‡ B ]€ [   @€FŔA G@Ă †ŔA ‡€CP€€ OŔĂ † @ ‡@@‡ D@ € €L@D Ç B ]@€F @ G@Ŕ G€Ä [   €€F€A †ŔA ÇŔD ]€€‡ E ‡€B€€ €€F C ‡ŔD ]€ [   @€FŔA G@Ă †ŔA ‡€CP€€ OŔĂ † @ ‡@@‡@E@ € €L€E ÇŔD ]@€ €    
   MenuMalph 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEE    GetDistance    myHero    ECel    E    range       I@   ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEQ    QCel    Q    QMANA    CastQ                          Č;  ×;   	r   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  Ŕ€†AB ĆB  €ť€ÇÁB ÇĂÎAĂŔ€€†C Ŕ€ť ›  @€†B ‡ÁCĆB ÇÄÁŹADĆA ÇÁÁÇÄ€€ €ŚÁD  €ťA€†A ‡ÁA‡E›  @€†AB ĆB  €ť€ÇAE ÇĂŔ@€†C Ŕ€ť ›   €†B ‡ÁCĆB ÇÄÁŹADĆA ÇÁÁÇĹ€@ €ŚÁE ťA †A ‡ÁA‡F›  €€†AB ĆB  €ť€ÇAF ÇĂŔ€€†C Ŕ€ť ›  @€†B ‡ÁCĆB ÇÄÁŹADĆA ÇÁÁÇĆ€€ €ŚÁF  €ťA€b€  ă@ç €       FarmActive    recall 
   EnemyMinions    update    pairs    objects 
   MenuMalph    farm    USEE    GetDistance    myHero    E    range       I@   ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEW    W    WMANA    CastW    USEQ    Q    QMANA    CastQ                          Ů;  č;   	r   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  Ŕ€†AB ĆB  €ť€ÇÁB ÇĂÎAĂŔ€€†C Ŕ€ť ›  @€†B ‡ÁCĆB ÇÄÁŹADĆA ÇÁÁÇÄ€€ €ŚÁD  €ťA€†A ‡ÁA‡E›  @€†AB ĆB  €ť€ÇAE ÇĂŔ@€†C Ŕ€ť ›   €†B ‡ÁCĆB ÇÄÁŹADĆA ÇÁÁÇĹ€@ €ŚÁE ťA †A ‡ÁA‡F›  €€†AB ĆB  €ť€ÇAF ÇĂŔ€€†C Ŕ€ť ›  @€†B ‡ÁCĆB ÇÄÁŹADĆA ÇÁÁÇĆ€€ €ŚÁF  €ťA€b€  ă@ç €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuMalph    jf    EJF    GetDistance    myHero    E    range       I@   ValidTarget    mana    maxMana       Y@   EMANA    CastE    WJF    W    WMANA    CastW    QJF    Q    QMANA    CastQ                          ę;  đ;   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †ÂA ĆÂA CB FA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuMalph 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         ň;  <   Ť   F @ †@@ ť € ]   !€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B AC ]‚€†B ‡CŹ‚‚†Ť‚‡ĆÂC  €A Ý‚€Ű  €€X@Ä €Ç‚D ŰB  @€ĆÂD ĚĹAC Ý‚€Ŕ €E ĂEF  Ŕ€CF @€ GĂA GĆ@ €ĂA E€   Ŕ €ĂF €€C€€€@ €E ĂEG  Ŕ€CF @€ GĂB GĆ@ €ĂB E€   Ŕ €CG €€C€Ŕ
€  €E ĂEG  Ŕ€CF @€ GB GĆ@ €B E€   Ŕ €ĂG €€C€ €€€€E ĂEH  @€CF @€ @H €Ű  €€H FĂD LĂČÁC ]€€€C€b€  ă Ţ € $      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   R    E    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 
   MenuMalph 	   ksConfig    QKS    GetDistance    range    CastQ    EKS    CastE    RKS    CastR    IKS      Ŕ‚@
   CastSpell    GetSlot                          <  <   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       Q    Ready 
   CastSpell    _Q                          <  <   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          <  <   	   ‡ @ ‡@@ť€€ ›   € €†€@ ĆŔ@ ť@  €       E    Ready 
   CastSpell    _E                          <  !<   (   ‡ @ ‡@@ť€€ ›   @€†€@ ĆŔ@ Ç ÁÇ@ÁÇ€Á € G@ GÁÁ‡@ ‡BÇ@ ÇAÂ@ ‚BFÂB  Ă  € D    ĆĂ@ ÇÁÇCÁÇCĂť ›   €€Ű    €FC †ÁC ÇDBD]A  €       R    Ready    GetPrediction2 
   MenuMalph 	   spConfig    rConfig    RP    delay    width    range    speed    from    circle    RCH 
   CastSpell    _R    x    z                          #<  )<   0      Ç@@ Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@ A  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ Ç€A Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ ÇŔA Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@ Á @€ †A ÁA Ý€€Ű@    €Á   ŤŔ ź   €               R    Ready    getDmg    myHero       @   E    Q                          +<  C<   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@   € ,   
   MenuMalph    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          E<  Y<   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot 
   MenuMalph    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          [<  l<   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    E    myHero       @   R    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    E Kill!    R Kill! 
   E+R Kill!                          n<  r<      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         t<  x<      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          z<  „<   3   Ć @ Ç@ŔÇ€ŔŰ    €ÇŔ@ Ç ÁÝ€€ Ű   Ŕ	€Ć@A A Ý @€[   Ŕ€ÂÁ FB GÂÁX@€€BÂ FB GBÂ@@€›   Ŕ€‚BGÂÂ@Ŕ€@ B@GÂÂB  @€C @€ ‡Â@ ‡BC‚€  € €‚C €€ B€â€  cÁö €    
   MenuMalph    iu    UI    R    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    range    CastR                          †<   <   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuMalph    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ©<  Đ<   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    Ż<  Ż<           @ @  €       AfterAA                         ˛<  ˛<           @ @  €    	   BeforeAA                         ą<  ą<           @ @  €       AfterAA                         Ľ<  Ľ<           @ @  €    	   BeforeAA                         Â<  Â<        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    Â<  Â<           @ @  €       AfterAA                                               Ĺ<  Ĺ<           @ @  €    	   BeforeAA                         Ę<  Ę<           @ @  €       AfterAA                         Í<  Í<           @ @  €    	   BeforeAA                              	
                Ň<  ř<   Ś   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …K€ J€Ă‚JŔĂJ@DJŔD‰J@EŠĄ€  J€€„
@€†KŔ  JŔĹ‚J ÂĄŔ  J€€„
@ ‹FŔ@ †@F Ç A ÇŔÁF C  ]€€
@ ŚFŔ@ †@F Ç@C ÇŔÁF C  ]€€
@€ŤFŔ@ †@F Ç€E ÇŔÁF C  ]€€
@ Ž
€ÇŽF H †@H Ç A ÇŔÁH FÁH ]€€
@€ŹF H †@I Ç A ÇŔÁH FÁH ]€€
@ ’K   
@ “F J ]€€ 
@€“K  	‹€  ŠŔJ•Š@K–Ë€  Ę€K•ĘŔK–  
L•
AL–K  JL•JÁL–‹  ŠM•ŠAM–Ë  ĘM•ĘÁM–‚  
N•
BN–K‚  J‚N•JÂN–‹‚  ŠO•ŠBO–Ë‚  Ę‚O•ĘÂO–  
P•
CP–K  JP•JĂP–‹  ŠQ•ŠCQ–Ë  ĘQ•ĘĂQ–„  
R•
DR–K„  J„R•JÄR–‹„  ŠQ•ŠDQ–Ë„  ĘS•ĘDS–…  
…S•
ĹS–K…  JT•JET–d@ 

@€” € R      SelectedTarget     Cel    TargetSelector    Q    name    Crystal Slash    range      ŕu@   Ready    W    Crystalline Exoskeleton      @o@   E 	   Fracture      @Ź@   speed      Ŕ’@   delay 333333ă?   width       N@   R    Impale    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    Ö<  Ö<        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ×<  ×<        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          Ř<  Ř<        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Ů<  Ů<        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ú<  `=   ]  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FJ Á
 Á B A ]@€F @ GŔĆ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GL GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á 
 A
 FH € ]@ F @ GŔĆ LŔÁ Á€
 Á
 FH € ]@ F @ GŔĆ LŔÁ Á  A FN   ĆÁN ÇĎB Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€ Á FJ  Á B A ]@€F @ GŔĆ LŔÁ Á@  FJ Á Á B A ]@€F @ GŔĆ LŔÁ Á  A FJ  Á B A ]@€F @ GŔĆ LŔÁ ÁŔ  FJ  Á B A ]@€F@R † @ Á    C  € Ă  ]@€F @ L Á Á€ Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔŇ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔŇ LŔÁ Á  Á FG Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ Á€ Á FJ  Á B A ]@€F @ GŔŇ LŔÁ Á  A FJ  Á B A ]@€F @ GŔŇ LŔÁ Á  Á FG Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ Á@  FÁS   ĆÁN ÇĎ Ý ]@  F @ L Á Á@  ]@ F @ G€Ô LŔÁ Á  A FG Á ]@ F @ G€Ô LŔÁ ÁŔ  FH € ]@ F @ G€Ô LŔÁ Á@ 	 GAI GÁĹ	 FH € ]@ F @ G€Ô LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ G€Ô LŔÁ ÁŔ 	 GL GÁĹÁ FH € ]@ F @ L Á Á  A ]@ G€V LŔÖ Ć @ Ç@Ö]@€F @ L Á Á  A ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á€ Á FH € ]@ F @ G@× LŔÁ Á  A FH € ]@ F @ L Á Á€ Á ]@ F @ GŔŘ LŔÁ Á  A FG Á ]@ F @ GŔŘ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔŘ LŔÁ ÁŔ	 	 GJ GÁĹ FJ Á
 Á B A ]@€F @ GŔŘ LŔÁ Á€ 	 GÁK GÁĹ FH € ]@ F @ GŔŘ LŔÁ Á  Á FG Á ]@ F @ GŔŘ LŔÁ Á  A FG Á ]@ F @ GŔŘ LŔÁ Á€ Á FJ  Á B A ]@€F @ GŔŘ LŔÁ Á@  FJ  Á B A ]@€F @ GŔŘ LŔÁ Á  A FJ  Á B A ]@€F @ L Á Á@  ]@ F @ G€Ů LŔÁ Á  A FG Á ]@ F @ G€Ů LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€Ů LŔÁ Á  	 GJ GÁĹ FJ Á
 Á B A ]@€F @ G€Ů LŔÁ Á@ 	 GÁK GÁĹ FH € ]@ F @ G€Ů LŔÁ Á  Á FG Á ]@ F @ G€Ů LŔÁ Á  A FG Á ]@ F @ G€Ů LŔÁ Á€ Á FJ  Á B A ]@€F @ G€Ů LŔÁ Á@  FJ  Á B A ]@€F @ G€Ů LŔÁ Á  A FJ  Á B A ]@€F @ L Á Á€ Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F [ †@[ ť € ]   €†[ ÇÁ[ ť€€ÇÜ\ €€Ć@ ÇÂÚĚÂÁGC\ Ç\Ä –ĆH € ÝB ˘  #‚űb€  ă úF @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ ÁŔ  FH € ]@ F @ L Á Á@  ]@ F @ G€Ý LŔÁ Á  A FG Á ]@ F @ G€Ý LŔÁ ÁŔ  FH € ]@ F @ G€Ý LŔÁ Á@  FH € ]@ F @ G€Ý LŔÁ Á  Á FG Á ]@ F @ G€Ý LŔÁ Á  A FG Á ]@ F @ G€Ý LŔÁ ÁŔ  FH € ]@ F @ G€Ý LŔÁ Á@  FÁ_ ‹ Á   A    ¤A ]@ F @ G€Ý LŔÁ Á  Á FG Á ]@ F @ G€Ý LŔÁ Á  A FG Á ]@ F @ G€Ý LŔÁ Á@    FH € ]@ F @ G€Ý LŔÁ ÁŔ  ! FÁ_ ‹ Á    A  ¤A ]@ F @ G€Ý LŔÁ Á  Á FG Á ]@ F @ G€Ý LŔÁ Á  A FG Á ]@ F @ G€Ý LŔÁ Á@! ! FH € ]@ F @ G€Ý LŔÁ ÁŔ! " FÁ_ ‹ Á   A   ¤A ]@ F @ L Á Á@" " ]@ F @ G€Ý LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ" # FH   ]@ F @ GŔŇ L@ă Á@ ]@€ € Ž      MenuSkarner 
   scriptConfig    MasterSeries: Skarner 	   Skarner1    addSubMenu    [Skarner]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Skarner    addTS    [Skarner]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W) When HP% <=    SCRIPT_PARAM_SLICE      €Q@              Y@   USEE    E     (E)    USER    R     (R)    USER2    Use (R) When Target Killable    USER3 $   Use (R) When Target Under My Turret    CRKD    Use (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)       @   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Skarner]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Skarner]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS    [Skarner]: Items Settings 
   iteConfig    it    LoadToMenu    [Skarner]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Skarner]: Farm Settings    farm     (W) HP% <=     [Skarner]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Skarner]: Interrupt Settings    iu    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop     UI    Enable    [Skarner]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Skarner]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          b=  v=   >   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡L€D ]@ F@@ GŔÄ G Ĺ [   @€F B ‡€C Ç@E Ç€Â]€€[   € €L€E Ç€C ]@€ €       CheckOB    MenuSkarner    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    Smite    comboConfig    CRKD    R    CastR                          x=  ”=   
µ   F @ ]€€ [   Ŕ+€G@@ [@   +€F€@ GŔŔ G Á [   @€F@A †€A ÇŔA ]€€‡ B ‡@B€€ @€F€B ‡ŔA ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡€C@ @ €LŔC ]@ F€@ GŔŔ G Ä [   €€F@A †€A Ç@D ]€€‡€D ‡@B€€ €€F€B ‡@D ]€ [   @€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ŔD@ € €L E Ç@D ]@€F€@ GŔŔ G@Ĺ @ ‹Ŕ€F€A GŔĹ †€A ‡ FP€€ O@Ă †€@ ‡Ŕ@‡@E€€  €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡@F@ @ €L€F ]@ F€@ GŔŔ GŔĆ [   Ŕ€F€B ‡ G ]€ [   €€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡@G@ Ŕ€F€@ GŔŔ G€Ç [   @€LŔG Ç G ]€€‡ G ‡ŔE@ €€†@A Ć€A G ť€€Ç H Ç@ÂŔ € €Ś@H G ť@€F€@ GŔŔ G€Č [   Ŕ€FŔH ]€€ † I Ŕ € ť Ŕ€›  @€ÇAI‚A BI ‚ €ĆAA   GG Ý€€É€€ĆAA ‚A GG Ý€H BB ‚€ €ĚAH GG ÝA€˘€  #Aů € '      ComboActive    recall    MenuSkarner    comboConfig    USEQ    GetDistance    myHero    QCel    Q    range    ValidTarget    mana    maxMana       Y@   QMANA    CastQ    USEE    ECel    E    EMANA    CastE    USEW            health 
   maxHealth    WMANA    CastW    USER    RCel    RMANA    USER2    Damage    R    CastR    USER3    GetTurrets    pairs    team      @Ź@                         –=  ź=   L   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€F @ G@Ŕ G@Á [   €€F€A †ŔA Ç B ]€€‡@B ‡€B€€ €€FŔB ‡ B ]€ [   @€FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ € €L D Ç B ]@€F @ G@Ŕ G@Ä [   @€F€A †ŔA Ç€D ]€€‡ŔD ‡€B€€ @€FŔB ‡€D ]€ [    €FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ E@ @ €L@E ]@  €       MenuSkarner 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEE    GetDistance    myHero    ECel    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEQ    QCel    Q    QMANA    CastQ                          ˇ=  °=   	n   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @€†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAÄ€€ €ŚD  €ťA€†A ‡ÁA‡ÁD€ŠŔ€†B ‡AEĆB ÇĹÁŹDĆA ÇÁÁÇÁÄŔ €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇÁĹ€@ €ŚF ťA †A ‡ÁA‡AF›  @€†AB ĆB  €ť€ÇF ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇÁĆ€@ €ŚG ťA b€  ă@č €       FarmActive    recall 
   EnemyMinions    update    pairs    objects    MenuSkarner    farm    USEE    GetDistance    myHero    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEW            health 
   maxHealth    WMANA    CastW    USEQ    Q    QMANA    CastQ                          ˛=  Á=   	n   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @€†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAÄ€€ €ŚD  €ťA€†A ‡ÁA‡ÁD€ŠŔ€†B ‡AEĆB ÇĹÁŹDĆA ÇÁÁÇÁÄŔ €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇÁĹ€@ €ŚF ťA †A ‡ÁA‡AF›  @€†AB ĆB  €ť€ÇF ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇÁĆ€@ €ŚG ťA b€  ă@č €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuSkarner    jf    EJF    GetDistance    myHero    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    WJF            health 
   maxHealth    WMANA    CastW    QJF    Q    QMANA    CastQ                          Ă=  É=   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuSkarner 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         Ë=  ß=   Ť   F @ †@@ ť € ]   !€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B AC ]‚€†B ‡CŹ‚‚†Ť‚‡ĆÂC  €A Ý‚€Ű  €€X@Ä €Ç‚D ŰB  @€ĆÂD ĚĹAC Ý‚€ŔŔ€E ĂEF  €€CF @€ GĂA GĆ@Ŕ€ĂA E€   € €ĂF C Ŕ€@ €E ĂEG  Ŕ€CF @€ GĂB GĆ@ €ĂB E€   Ŕ €CG €€C€ € @€E ĂEG   €CF @€ GB GĆ@@€B E€    €ĂG €€Á C  €€€€E ĂECH  @€CF @€ €H €Ű  €€ĂH FĂD LÉÁC ]€€€C€b€  ă Ţ € %      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   R    E    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot    MenuSkarner 	   ksConfig    QKS    GetDistance    range    CastQ    EKS    CastE    RKS    CastR        @   IKS      Ŕ‚@
   CastSpell    GetSlot                          á=  ĺ=   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          ç=  ë=   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          í=  ř=   E   ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € ‚B FÂB ‡ĂÇBĂB  €       E    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2    MenuSkarner 	   spConfig    eConfig    EP    line    ECH                           ú=  ţ=   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       R    Ready 
   CastSpell    _R                           >  >   1      Ç@@ Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@ A  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ Ç€A Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ ÇŔA Ç€ŔÝ€€ Ű    €ĆŔ@ Á @€ †A ÁA Ý€€Ď ÂŰ@    €Á   ŤŔ ź   € 	              R    Ready    getDmg    myHero       @   E    Q        @                         >   >   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@   € ,      MenuSkarner    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          ">  6>   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot    MenuSkarner    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          8>  R>   
‰   A   †@@ ‡€@Á   a@ €FA@ LÁŔŔ ]€‡Á›A  €€‡AÁ›  Ŕ€†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€‚A AÂ €€ĆB C ‚€GĂ†BC ‡‚CÇÂĂť‚ M‚‚Ť‚Ť‚@Ŕ €GD ‡BÄJ‚DŔ€GĂ†BC ‡‚CÇÂĂť‚ M‚‚€Ŕ €GD ‡BÄJÂDŔ€GĂ†BC ‡‚CÇÂĂť‚ M‚‚ŔŔ €GD ‡BÄJEŔ€GĂ†BC ‡‚CÇÂĂť‚ M‚‚ ‚Ŕ €GD ‡BÄJBEŔ€GĂ†BC ‡‚CÇÂĂť‚ M‚‚Ť‚€‚Ŕ €GD ‡BÄJ‚E€	€GĂ†BC ‡‚CÇÂĂť‚ M‚‚Ť‚€‚Ŕ €GD ‡BÄJÂE@€GĂ†BC ‡‚CÇÂĂť‚ M‚‚ŤÂ€‚Ŕ €GD ‡BÄJF €GĂ†BC ‡‚CÇÂĂť‚ M‚‚ŤŤÂ€‚€ €GD ‡BÄJBF` ß €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    Q    myHero       @   E    R    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill!    R Kill! 
   Q+E Kill! 
   Q+R Kill! 
   E+R Kill!    Q+E+R Kill!                          T>  X>      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         Z>  ^>      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          `>  j>   3   Ć @ Ç@ŔÇ€ŔŰ    €ÇŔ@ Ç ÁÝ€€ Ű   Ŕ	€Ć@A A Ý @€[   Ŕ€ÂÁ FB GÂÁX@€€BÂ FB GBÂ@@€›   Ŕ€‚BGÂÂ@Ŕ€@ B@GÂÂB  @€C @€ ‡Â@ ‡BC‚€  € €‚C €€ B€â€  cÁö €       MenuSkarner    iu    UI    R    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    range    CastR                          l>  †>   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuSkarner    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ź>  ¶>   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    •>  •>           @ @  €       AfterAA                         >  >           @ @  €    	   BeforeAA                         ź>  ź>           @ @  €       AfterAA                         ˘>  ˘>           @ @  €    	   BeforeAA                         ¨>  ¨>        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ¨>  ¨>           @ @  €       AfterAA                                               «>  «>           @ @  €    	   BeforeAA                         °>  °>           @ @  €       AfterAA                         ł>  ł>           @ @  €    	   BeforeAA                              	
                ¸>  Ţ>   Ź   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚K€ JŔÂ‚J ĂJ€Ă†J Ä‡J€ÄĄ@  J€€„
@ …K€ J Ĺ‚J@ĹJ€Ĺ†J Ä‡J€ÄĄ€  J€€„
@€‰KŔ  J Ć‚J@ĆĄŔ  J€€„
@€‹
ŔFŤF@G †€G Ç A ÇŔÁÁG FH ]€€
@ ŽF@G †€H Ç A ÇŔÁÁG FH ]€€
@€FŔ@ † I Ç€B ÇŔÁAI C  ]€€
@€‘FŔ@ † I ÇŔD ÇŔÁAI C  ]€€
@ “FŔ@ † I ÇŔE ÇŔÁAI C  ]€€
@€“K   
@ ”F€J ]€€ 
@€”K  	‹€  Š@K–ŠŔK—Ë€  Ę L–Ę@L—  
L–
ÁL—K  JM–JAM—‹  ŠM–ŠÁM—Ë  ĘN–ĘAN—‚  
‚N–
ÂN—K‚  JO–JBO—‹‚  Š‚O–ŠÂO—Ë‚  ĘP–ĘBP—  
P–
ĂP—K  JQ–JCQ—‹  ŠQ–ŠĂQ—Ë  ĘR–ĘCR—„  
„R–
ÄR—K„  JS–JDS—‹„  Š„Q–ŠÄQ—Ë„  Ę„S–ĘÄS—…  
T–
ET—K…  J…T–JĹT—d@ 

@€• € T      SelectedTarget     Cel    TargetSelector    Q    name    Chomp    range       i@   Ready    W    Frozen Domain       ‰@   width      p‡@   delay       ŕ?   speed       ™@   E    Pillar of Ice      @Ź@     €g@   R 
   Subjugate      ŕ…@   recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    WTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector    killstring    it 
   ItemsCast    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    Ľ>  Ľ>        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ˝>  ˝>        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ľ>  ľ>        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ż>  ż>        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ŕ>  ??   
  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 	 GK GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á  	 GK GÁĹA FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€ Á FM A
 Á
 Â
 A‚
 ]@€F @ GŔĆ LŔÁ Á  A FM  Á
 Â
 A‚
 ]@€F @ GŔĆ LŔÁ ÁŔ  FM A Á
 Â
 A‚
 ]@€F @ GŔĆ LŔÁ Á€ Á FM A
 Á
 Â
 A‚
 ]@€F P † @ Á    C€ € Ă  ]@€F @ L Á Á@  ]@ F @ G€Đ LŔÁ Á  A FG Á ]@ F @ G€Đ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€Đ LŔÁ Á€
 	 GÁJ GÁĹ FH € ]@ F @ G€Đ LŔÁ Á  Á FG Á ]@ F @ G€Đ LŔÁ Á  A FG Á ]@ F @ G€Đ LŔÁ Á€ Á FM Á Á
 Â
 A‚
 ]@€F @ G€Đ LŔÁ ÁŔ  FM Á Á
 Â
 A‚
 ]@€F @ G€Đ LŔÁ Á  Á FG Á ]@ F @ G€Đ LŔÁ Á  A FG Á ]@ F @ G€Đ LŔÁ Á  A FQ   ĆÁQ ÇŇB Ý ]@  F @ L Á Á€ Á ]@ F @ GŔŇ LŔÁ Á  A FG Á ]@ F @ GŔŇ LŔÁ Á  A FH € ]@ F @ GŔŇ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ GŔŇ LŔÁ ÁŔ 	 GK GÁĹÁ FH € ]@ F @ L Á Á  A ]@ G€T LŔÔ Ć @ Ç@Ô]@€F @ L Á Á  A ]@ F @ G@Ő LŔÁ Á  A FG Á ]@ F @ G@Ő LŔÁ Á€ Á FH € ]@ F @ G@Ő LŔÁ Á  A FH € ]@ F @ L Á Á€ Á ]@ F @ GŔÖ LŔÁ Á  A FG Á ]@ F @ GŔÖ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔÖ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔÖ LŔÁ Á  Á FG Á ]@ F @ GŔÖ LŔÁ Á  A FG Á ]@ F @ GŔÖ LŔÁ Á€ Á FM  Á
 Â
 A‚
 ]@€F @ GŔÖ LŔÁ Á  A FM  Á
 Â
 A‚
 ]@€F @ L Á Á@  ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G€× LŔÁ Á  	 GJ GÁĹA
 FH € ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á€ Á FM  Á
 Â
 A‚
 ]@€F @ G€× LŔÁ Á  A FM  Á
 Â
 A‚
 ]@€F @ L Á Á@  ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ FŔX † Y ť € ]   €†AY ÇY ť€€ÇÂŮĂY €€Ć@ Ç‚ŘĚÂÁGZC ÇĂYÄ –ĆH € ÝB ˘  #‚űb€  ă úF @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á€ Á FH € ]@ F @ L Á Á  A ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á€ Á FH € ]@ F @ G@Ű LŔÁ Á  A FH € ]@ F @ G@Ű LŔÁ Á  Á FG Á ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á€ Á FH € ]@ F @ G@Ű LŔÁ Á  A F] ‹ ÁÁ ‚
 AÂ Â ¤A ]@ F @ G@Ű LŔÁ Á  Á FG Á ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á  A FH € ]@ F @ G@Ű LŔÁ Á€ Á F] ‹ ÁÁ Â A‚
 ‚
 ¤A ]@ F @ G@Ű LŔÁ Á  Á FG Á ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á  A FH € ]@ F @ G@Ű LŔÁ Á€ Á F] ‹ ÁÁ ‚
 AÂ ‚
 ¤A ]@ F @ L Á Á   A  ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á€  Á  FH   ]@ F @ G€Đ L á Á  ]@€ € …      MenuTrundle 
   scriptConfig    MasterSeries: Trundle 	   Trundle1    addSubMenu    [Trundle]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Trundle    addTS    [Trundle]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    USER    R     (R)    USER2     (R) When Target Killable    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Trundle]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Trundle]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    RKS    [Trundle]: Items Settings 
   iteConfig    it    LoadToMenu    [Trundle]: Smite Settings    sm    SD    Auto Smite Dragon    SB    Auto Smite Baron    [Trundle]: Farm Settings    farm       D@    [Trundle]: Jungle Farm Settings    jf    QJF    WJF    [Trundle]: Interrupt Settings    iu    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop     UI    Enable    [Trundle]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DWR 
   Draw W Range    DWRC    Draw W Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Trundle]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          A?  R?   /   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡L€D ]@  €       CheckOB    MenuTrundle    WTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    WCel    ECel    RCel    GetCustomTarget    TargetSelector    target    Smite                          T?  h?   ‘   F @ ]€€ [   Ŕ"€G@@ [@   "€F€@ GŔŔ G Á [   @€F@A †€A ÇŔA ]€€‡ B ‡@B€€ @€F€B ‡ŔA ]€ [    €F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡€C@ @ €LŔC ]@ F€@ GŔŔ G Ä [   €€F@A †€A Ç@D ]€€‡€D ‡@B€€ €€F€B ‡@D ]€ [   @€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ŔD@ € €L E Ç@D ]@€F€@ GŔŔ G@Ĺ [   €€F@A †€A Ç€E ]€€‡ŔE ‡@B€€ €€F€B ‡€E ]€ [   @€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ F@ € €L@F Ç€E ]@€F€@ GŔŔ G€Ć [    	€F€B ‡ŔF ]€ [   Ŕ€F€A GŔÂ †€A ‡ CP€€ O@Ă †€@ ‡Ŕ@‡ G@  €F€@ GŔŔ G@Ç [   Ŕ€L€G ÇŔF ]€€‡ŔF ‡ŔGĆ H Ç@ČÁF HÝ€ ŤŔ @ € €ŚŔH ÁF ť@€ € $      ComboActive    recall    MenuTrundle    comboConfig    USEQ    GetDistance    myHero    Cel    Q    range    ValidTarget    mana    maxMana       Y@   QMANA    CastQ    USEE    ECel    E    EMANA    CastE    USEW    WCel    W    WMANA    CastW    USER    RCel    RMANA    USER2    Damage    health    math    floor    shield    CastR                          j?  v?   l   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€F @ G@Ŕ G@Á [   €€F€A †ŔA Ç B ]€€‡@B ‡€B€€ €€FŔB ‡ B ]€ [   @€FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ € €L D Ç B ]@€F @ G@Ŕ G@Ä [   €€F€A †ŔA Ç€D ]€€‡ŔD ‡€B€€ €€FŔB ‡€D ]€ [   @€FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡ E@ € €L@E Ç€D ]@€F @ G@Ŕ G€Ĺ [   @€F€A †ŔA ÇŔE ]€€‡ F ‡€B€€ @€FŔB ‡ŔE ]€ [    €FŔA G Ă †ŔA ‡@CP€€ O€Ă † @ ‡@@‡@F@ @ €L€F ]@  €       MenuTrundle 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEE    GetDistance    myHero    ECel    E    range    ValidTarget    mana    maxMana       Y@   EMANA    CastE    USEW    WCel    W    WMANA    CastW    USEQ    Cel    Q    QMANA    CastQ                          x?  „?   	Q   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @€†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAÄ€€ €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ĆB  €ť€ÇE ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAĹ€@ €ŚE ťA b€  ă€ď €       FarmActive    recall 
   EnemyMinions    update    pairs    objects    MenuTrundle    farm    USEW    GetDistance    myHero    W    range    ValidTarget    mana    maxMana       Y@   WMANA    CastW    USEQ    Q    QMANA    CastQ                          †?  ’?   	Q   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @€†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAÄ€€ €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ĆB  €ť€ÇE ÇĂŔ@€†AC Ŕ€ť ›   €†B ‡CĆB ÇÁĂÁŹDĆA ÇÁÁÇAĹ€@ €ŚE ťA b€  ă€ď €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuTrundle    jf    WJF    GetDistance    myHero    W    range    ValidTarget    mana    maxMana       Y@   WMANA    CastW    QJF    Q    QMANA    CastQ                          ”?  š?   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FÁA †ÁA ĆAB ÂA F‚A †ÂA ĆB CB FB †B ĆB „A FDB †„A Ć„A d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuTrundle 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         ś?  ®?   t   F @ †@@ ť € ]  Ŕ€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€FB GÂÂOB†MB‚††‚C Ŕ€Ă ť‚€›  Ŕ€X Ä@€‡BD ›B  €€†‚D ŚÂD ť‚€ŔŔ€ĆBE Ç‚ĹÇÂĹŰ  €€ĆF  €Ý‚ ĂA CF Ŕ€ÇÂA ÇÂÄÝ‚€ Ű  €€Ě‚F ÝB ĆB ĚÂĆ@€ÝB€ € @€ĆBE Ç‚ĹÇÇŰ   €ĆF  €Ý‚ B CF @€Ç‚B ÇÂÄÝ‚€ Ű   €ĚBG @€ ÝB  €@€€ĆBE Ç‚ĹÇÂÇŰ  @€ĆF  €Ý‚  Č €›  €€ĆBH D H €@€ÝB€b€  ă@ä € #      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   R    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot    MenuTrundle 	   ksConfig    QKS    GetDistance    range    CastQ    Attack    RKS    CastR        @   IKS      Ŕ‚@
   CastSpell    GetSlot                          °?  ´?   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          ¶?  Á?   C   ‡ @ ‡@@ť€€ ›    €†€@ ŚŔ@ € G@ GÁA Ç@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AAÂ ‡@ ‡BBÇ@ Ç‚ÁĂA A   Ă    A  †ÄC ‡D	‡DD	‡DE	]X€Ĺ@ €›A    € € ‚B FÂB ‡ĂÇBĂB  €       W    Ready    VP 
   IsDashing    delay      Ŕr@   speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2    MenuTrundle 	   spConfig    wConfig    WP       y@   circle    WCH                           Ă?  Ň?   \   ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € ‚E @€‚ F‚E †ÂA ]‚ BÂE‚ FÇĂFÍŔ‚ŚÇÇĆÍŔ‚ŤÇBĂFÍŔ‚ŽĆ‚B ĂB FCF †CG ÝB  €       E    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2    MenuTrundle 	   spConfig    eConfig    EP    line    ECH     Vector    normalized    unpack    posX      Ŕb@   posY    y    posZ                          Ô?  Ř?   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       R    Ready 
   CastSpell    _R                          Ú?  ß?   "      Ç@@ Ç€ŔÝ€€ Ű   Ŕ€ĆŔ@ A  @€ †A ÁA Ý€€Ű@    €Á   ŤŔ Ç€A Ç€ŔÝ€€ Ű    €ĆŔ@  @€ †A ÁA Ý€€ĎŔÁŰ@    €Á   ŤŔ ź   €               R    Ready    getDmg    myHero       @   Q        @                         á?  ů?   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@   € ,      MenuTrundle    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DWRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DWR    W    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          ű?  @   ^   F @ L@Ŕ Á€  ]€€†Ŕ@ ‡ AĆ@A Ç€ÁĎŔ€Í ÂAA A„
BFAA GÁOA…MĂ†AA ‡AŹ†ŤCť€€Ć @ ĚŔĂA  Ý€€D ADD  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ć€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAűD ADAG  Ŕ€[   @€ÁD EA AE GÁD GĹŔ€FÂE € Á ]‚€[  @€GBF€Ç€€GÂF€€Ŕ €FG €€Ŕ ]B€"  ŁAű €       SSpells    Ready    smite    math    max    myHero    level       4@      w@      >@      t@      D@      n@      I@      Y@   GetSlot    MenuTrundle    sm    SD    JungleMinions    update    pairs    objects    ValidTarget      Đ@   name    SRU_Dragon6.1.1    health 
   CastSpell    SB    SRU_Baron12.1.1                          @  "@   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    Q    myHero       @   R    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    R Kill! 
   Q+R Kill!                          $@  (@      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         *@  .@      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          0@  =@   ?   [   @€Ç Ŕ Ű   €€›    €Ç@@€Ŕ@ €ĆŔ@ Ý@€ Ć A Ç@ÁÇ€ÁŰ    €ÇŔA Ç ÂÝ€€ Ű   Ŕ	€Ć@B B Ý @€[   Ŕ€ÂÂ FC GÂÂX@€€BĂ FC GBĂ@@€›   Ŕ€B@G‚Ă@Ŕ€A BAG‚ĂB  @€ÂC @€ ‡ÂA ‡D‚€  € €BD €€ B€â€  cÁö €       isMe    name    TrundleTrollSmash    ResetAA    MenuTrundle    iu    UI    R    Ready    pairs    InterruptList    team    myHero    type 
   spellName    ValidTarget    range    CastE                          ?@  Y@   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuTrundle    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          b@  ‰@   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    h@  h@           @ @  €       AfterAA                         k@  k@           @ @  €    	   BeforeAA                         r@  r@           @ @  €       AfterAA                         u@  u@           @ @  €    	   BeforeAA                         {@  {@        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    {@  {@           @ @  €       AfterAA                                               ~@  ~@           @ @  €    	   BeforeAA                         @  @           @ @  €       AfterAA                         †@  †@           @ @  €    	   BeforeAA                              	
                ‹@  ­@   Ž   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€  J@Ä‚Ą@  J€€‡
@ KŔ  JŔÄ‚† E ‡ŔAŤ@EJ€€Ą€  J€€‡
@ ‰KŔ  JŔĹ‚J ĆĄŔ  J€€‡
@ ‹
€ĆŚF G †@G Ç A ÇŔÁE FG ]€€
@€ŤF G † H Ç A ÇŔÁE FG ]€€
@€ŹA@	 @	 Á@	 
@I’
Ŕ€‘
€ ‘
@€FŔ@ †ŔI Ç A ÇŔÁJ C  ]€€
@ “K   
@€”K  †ŔJ Ć K AK FK d@ 
@ •K    Á   A d@ 
@€—KŔ ‹€  ŠŔL™Š€EšJ€€‹€  Š€M™Š€EšJ€€š‹€  Š N™Š€EšJ€€›‹€  Š N™Š DšJ€€ś‹€  ŠŔN™Š€EšJ€ ť‹€  Š@O™Š€EšJ€ ž‹€  ŠŔO™Š€EšJ€ ź‹€  Š@P™Š€EšJ€  ‹€  ŠŔP™Š€EšJ€ ˇ‹€  Š@Q™Š€EšJ€ ˘‹€  ŠŔQ™Š€EšJ€ Ł‹€  Š@R™Š€EšJ€ ¤‹€  ŠŔR™Š€EšJ€ Ą‹   J€ ¦‹   J€€¦
@ FŔS ]€€ 
@ § € P      SelectedTarget     Cel    TargetSelector    Q    name    Rocket Grab    range      h@   speed       ś@   delay       Đ?   width      €Q@   Ready    W 
   Overdrive    E    Power Fist    myHero      @`@   R 
   Static Field      Ŕ‚@   recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    AllCastGrabCount    FailGrabCount    PrecentGrabCount    SuccesGrabCount            QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    killstring    Spells    _Q    _W    _E    _R    Spells2    Counterspells 
   KatarinaR 	   charName 	   Katarina 
   spellSlot    GalioIdolOfDurand    Galio 
   Crowstorm 
   FiddleSticks    Drain 
   AbsoluteZero    Nunu    ShenStandUnited    Shen    UrgotSwap2    Urgot    AlZaharNetherGrasp 	   Malzahar 
   FallenOne    Karthus    Pantheon_GrandSkyfall_Jump 	   Pantheon    CaitlynAceintheHole    Caitlyn    MissFortuneBulletTime    MissFortune    InfiniteDuress    Warwick 	   Meditate 	   Teleport    it 
   ItemsCast    Ź@  Ź@        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          @  @        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ‘@  ‘@        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ’@  ’@        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               Ż@  @A   ­  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 
 FH € ]@ F @ GŔĆ LŔÁ Á@
 
 FÁJ  ÁA ‚ AB ]@€F @ GŔĆ LŔÁ ÁŔ  FÁJ A Á ‚ AB ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GM GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á€
 	 GÁM GÁĹ FB A Ë€‚ AÂ  äA€]@€F @ GŔĆ LŔÁ Á@ 	 GO GÁĹÁ FB A Ë€‚ AÂ  äA€]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FÁJ Á ÁA  AB ]@€F @ GŔĆ LŔÁ Á@  FÁJ Á ÁA  AB ]@€F @ GŔĆ LŔÁ Á  A FÁJ  ÁA  AB ]@€F @ GŔĆ LŔÁ ÁŔ  FÁJ Á ÁA  AB ]@€F@S † @ Á  € C    Ă  ]@€F @ L Á Á€ Á ]@ F @ GŔÓ LŔÁ Á  A FG Á ]@ F @ GŔÓ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔÓ LŔÁ Á€
 	 GÁM GÁĹ FH € ]@ F @ GŔÓ LŔÁ Á  Á FG Á ]@ F @ GŔÓ LŔÁ Á  A FG Á ]@ F @ GŔÓ LŔÁ Á@  FÁJ  ÁA  AB ]@€F @ GŔÓ LŔÁ Á  A FÁJ A ÁA  AB ]@€F @ GŔÓ LŔÁ Á  Á FG Á ]@ F @ GŔÓ LŔÁ Á  A FG Á ]@ F @ GŔÓ LŔÁ Á€ Á FU   ĆAU ÇŐÂ Ý ]@  F @ L Á Á  A ]@ G€V LŔÖ Ć @ Ç@Ö]@€F @ L Á Á  A ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á   FG Á ]@ F @ G@× LŔÁ ÁŔ  FÁJ A ÁA  AB ]@€F @ G@× LŔÁ Á€ Á FH € ]@ F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á   FG Á ]@ F @ G@× LŔÁ Á@  FÁJ Á ÁA  AB ]@€F @ G@× LŔÁ Á  A FH € ]@ F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á   FG Á ]@ F @ G@× LŔÁ ÁŔ  FÁJ A ÁA  AB ]@€F @ G@× LŔÁ Á  A FH € ]@ F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á   FG Á ]@ F @ G@× LŔÁ ÁŔ  FÁJ Á ÁA  AB ]@€F @ G@× LŔÁ Á  A FH € ]@ F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á   FG Á ]@ F @ G@× LŔÁ ÁŔ  FÁJ Á ÁA  AB ]@€F @ G@× LŔÁ Á  A FH € ]@ F @ G@× LŔÁ Á  Á FG Á ]@ F @ G@× LŔÁ Á  A FG Á ]@ F @ G@× LŔÁ Á   FG Á ]@ F @ G@× LŔÁ ÁŔ  FÁJ A ÁA  AB ]@€F @ G@× LŔÁ Á  A FH € ]@ F @ L Á Á€ Á ]@ F @ GŔŢ LŔÁ Á  A FG Á ]@ F @ GŔŢ LŔÁ Á  A FH € ]@ F @ GŔŢ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ GŔŢ LŔÁ ÁŔ 	 GÁM GÁĹ FH € ]@ F @ GŔŢ LŔÁ Á   	 GO GÁĹÁ FH   ]@ F @ L Á Á@    ]@ F @ G€ŕ LŔÁ Á  A FG Á ]@ F @ G€ŕ LŔÁ ÁŔ  	 GAI GÁĹ	 FH € ]@ F @ G€ŕ LŔÁ Á ! 	 GÁM GÁĹ FH € ]@ F @ G€ŕ LŔÁ Á  Á FG Á ]@ F @ G€ŕ LŔÁ Á  A FG Á ]@ F @ G€ŕ LŔÁ Á@  FÁJ A ÁA  AB ]@€F @ G€ŕ LŔÁ Á  A FÁJ A ÁA  AB ]@€F @ L Á Á@! ! ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ ÁŔ! 	 GAI GÁĹ	 FH € ]@ F @ G€á LŔÁ Á " 	 GÁM GÁĹ FH € ]@ F @ G€á LŔÁ Á  Á FG Á ]@ F @ G€á LŔÁ Á  A FG Á ]@ F @ G€á LŔÁ Á@  FÁJ A ÁA  AB ]@€F @ G€á LŔÁ Á  A FÁJ A ÁA  AB ]@€F @ L Á Á@" " ]@ F @ G€â LŔÁ Á  A FG Á ]@ FŔb † c ť € ]  Ŕ€†Áb ÇAc ť@€Ç‚c Ăă€ €ĂEÇŰ  @€Ć@ Ç‚âĚÂÁFd ŚĂă  ť€‡ĂE] C$ Ćd „äÝ Ä$ Fd ‡e ‡D	]„ –CĆH € ÝB ˘  #Â÷b€  ă@öF @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ Á@% % FH € ]@ F @ L Á ÁŔ% & ]@ F @ G ć LŔÁ Á  A FG Á ]@ F @ G ć LŔÁ Á@& & FH € ]@ F @ G ć LŔÁ ÁŔ& ' FH € ]@ F @ L Á Á@' ' ]@ F @ G€ç LŔÁ Á  A FG Á ]@ AŔ †Ŕg ‡ hÁŔ a €FÁg LAčŔ ]€‡čĆÁD ÇčXŔŔ€†@ ‡gŚÁA‚äG‚ä†‚H Ă  ťA `@űF @ G€ç LŔÁ Á  Á FG Á ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ( ) FU   ĆAU ÇŐB) Ý ]@  F @ L Á Á€) Á) ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á * A* FH € ]@ F @ GŔé LŔÁ Á€* Á* FH € ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á + A+ FH € ]@ F @ GŔé LŔÁ Á€+ Á+ FH € ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á , A, FH € ]@ F @ GŔé LŔÁ Á€, Á, Fm ‹ ÁA- B A‚- ‚- ¤A ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ ÁŔ- . FH € ]@ F @ GŔé LŔÁ Á@. . Fm ‹ ÁÁ. B AB Â. ¤A ]@ F @ GŔé LŔÁ Á  Á FG Á ]@ F @ GŔé LŔÁ Á  A FG Á ]@ F @ GŔé LŔÁ Á / A/ FH € ]@ F @ GŔé LŔÁ Á€/ Á/ Fm ‹ ÁÁ. B AÂ. B ¤A ]@ F @ L Á Á 0 A0 ]@ F @ G@đ LŔÁ Á  A FG Á ]@ F @ G@đ LŔÁ Á€0 Á0 FH   ]@ F @ GŔÓ L ń Á€ ]@€F @ G€ç L ń ÁŔ( ]@€ € Ĺ   
   MenuBlitz 
   scriptConfig    MasterSeries: Blitzcrank    Blitzcrank1    addSubMenu    [Blitzcrank]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Blitzcrank    addTS    [Blitzcrank]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEQS    Use Smite If See Collision    QMINR 
   Min. Q Range    SCRIPT_PARAM_SLICE      @o@             @@   QMAXR 
   Max. Q Range      @Ź@     h@   USEW    W     (W)    USEE    E     (E)       @   No    Normal    After Success Grab    USER    R     (R) 	   Killable    QMANA    Min. Mana % To Use (Q)       @      Y@   WMANA    Min. Mana % To Use (W)       9@   EMANA    Min. Mana % To Use (E)       .@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Blitzcrank]: Harras Settings 
   harrasConfig       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Blitzcrank]: Items Settings 
   iteConfig    it    LoadToMenu    [Blitzcrank]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use       D@   umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Blitzcrank]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    RKS !   [Blitzcrank]: LaneClear Settings    farm    QF    EF #   [Blitzcrank]: Jungle Farm Settings    jf    QJF    EJF    [Blitzcrank]: Auto-Interrupt    ES    pairs    GetEnemyHeroes    Spells    Counterspells 
   GetSpellData 	   tostring    Interrupt  	   charName     Spell     Spells2    UI    Enable    [Blitzcrank]: Extra Settings 	   exConfig    AQD    Auto Q On Dashing Targets    AQI    Auto Q On Immobile Targets    [Blitzcrank]: Black List 	   blConfig    heroManager    iCount    GetHero    team    UBL    Enable Black List    T    [Blitzcrank]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DT    Draw Current Target Name    DGS    Draw Grab Stats    DQL    Draw Q Collision Line    DQLC    Draw Q Collision Color    SCRIPT_PARAM_COLOR      Ŕb@      @   DQR 
   Draw Q Range    DQRC    Draw Q Range Color      ŕo@   DRR 
   Draw R Range    DRRC    Draw R Range Color    [Blitzcrank]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          BA  GA      F @ ]€€ [   Ŕ€F@@ G€Ŕ GŔŔ  Á €€F@A G€Á †@A ‡ŔAP€€ O Â †@@ ‡€@‡@B@ Ŕ €L€B ]@ FŔB ]@€  €       ComboActive 
   MenuBlitz    comboConfig    USEE        @   myHero    mana    maxMana       Y@   EMANA    CastE    ResetAA                          IA  [A   0   F @ †@@ ]@ G€@ LŔŔ ]@ G A X@Á Ŕ€F€A ‡ A ÇŔA Ç Â]€€[    €G A 
@€„G A 
@ …€€FŔB ‡ C ]€ 
@€„G€@ G@Ă 
@ …GŔA †@@ ‡€C‡ŔCJ€ „L D ]@ G@D [@   €L€D ]@ F@@ GŔÄ G Ĺ [   @ €L@E ]@  €       CheckOB 
   MenuBlitz    QTargetSelector    update    SelectedTarget     ValidTarget    Q    range    Cel    QCel    GetCustomTarget    TargetSelector    target    comboConfig    QMAXR    Support    recall    QonDash 	   exConfig    AQI    QonImmobile                          ]A  yA   Ź   F @ ]€€ [   @"€G@@ X€Ŕ Ŕ€FŔ@ ‡@@ ]€ [   €€F A G@Á † A ‡€AP€€ OŔÁ † B ‡@B‡€B@ Ŕ€F B GŔÂ G Ă [   Ŕ€F B GŔÂ ‡@@ ‡@CG€€ [     € € F B G@Â G€Ă [   @€FŔ@ ‡@@ ÇŔC Ç Ä]€€[   €€F@D ‡@@ ]€ † B ‡@B‡€D@ € €LŔD Ç@@ ]@€G@@ X€Ŕ  €FŔ@ ‡@@ ]€ [   Ŕ€F A G@Á † A ‡€AP€€ OŔÁ † B ‡@B‡ E@  €G@E L€Ĺ Ç@@ B ÁE]@ F B G@Â G Ć [   @ €L@F ]@ G@@ X€Ŕ Ŕ€FŔ@ ‡@@ ]€ [   €
€F A G@Á † A ‡€AP€€ OŔÁ † B ‡@B‡€F@ Ŕ€F B G@Â GŔĆ  Ç € €L@G Ç@@ ]@€F B G@Â GŔĆ €Ç €€FŔG   Ç@@ A A ]€€‡@@ ‡@HĆ€H ÇŔČA@ IÝ€ ŤŔ @ € €Ś@G A@ ť@€ € %      ComboActive    QCel     ValidTarget    myHero    mana    maxMana       Y@
   MenuBlitz    comboConfig    QMANA 	   blConfig    UBL 	   charName    USEQ    Q    range    GetDistance    QMINR    CastQ    WMANA    it 
   CastItems 
   iteConfig    USEW    CastW    RMANA    USER        @   CastR       @   getDmg    R    health    math    floor    shield                          {A  ‰A   W   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€F@A ‡€A ]€ [   €	€F @ G@Ŕ GŔÁ [   @€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡ C@ €€F @ G@Ă G€Ă [   Ŕ€F @ G@Ă ‡€A ‡ŔCG€€ [     € € F@A ‡€A Ç D Ç@Ä]€€[   € €L€D Ç€A ]@€F@A ‡ŔD ]€ [    €F @ G@Ŕ G Ĺ [   Ŕ€F B G@Â † B ‡€BP€€ OŔÂ † @ ‡@@‡@E@  €F@A ‡ŔD Ç€E Ç@Ä]€€[   @ €LŔE ]@  €    
   MenuBlitz 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    USEQ    myHero    mana    maxMana       Y@   QMANA 	   blConfig    UBL 	   charName    Q    range    CastQ    Cel    USEE    EMANA    E    CastE                          ‹A  ›A   	I   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €
€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€D BDť€›  € €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĹ€€€X€Ă €†ÁC Ŕ€BE BDť€›  @ €ŚE ťA b€  ă€ń €       FarmActive    recall 
   EnemyMinions    update    pairs    objects 
   MenuBlitz    farm    QF    myHero    mana    maxMana       Y@   QMANA     ValidTarget    Q    range    CastQ    EF    EMANA    E    CastE                          ťA  ­A   	I   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €
€†A ‡ÁA‡B›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€Ŕ€X€Ă@€†ÁC Ŕ€D BDť€›  € €ŚD  €ťA€†A ‡ÁA‡ÁD›  @€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĹ€€€X€Ă €†ÁC Ŕ€BE BDť€›  @ €ŚE ťA b€  ă€ń €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuBlitz    jf    QJF    myHero    mana    maxMana       Y@   QMANA     ValidTarget    Q    range    CastQ    EJF    EMANA    E    CastE                          ŻA  ÂA   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €    
   MenuBlitz    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          ÄA  ÎA   9   F @ G@Ŕ G€Ŕ [   €€FŔ@ † A ť € ]  Ŕ
€†AA ŚA €GÂA GÂ‡ÂA ‡BBÇÂA Ç‚ÂĂB ť›  €€Ű   €FC € ]‚ ‡ÂA ‡BC€‚@€FC €€]‚ @‡ €FÂC †ÂB Ŕ€ĂA CBGĂA GCĂ‡D ]‚ [B  @€FBD †‚D ÇÂDE]B  € b€  ă@ô €    
   MenuBlitz 	   exConfig    AQD    pairs    GetEnemyHeroes    VP 
   IsDashing    Q    delay    width    speed    myHero    GetDistance    range      ŕu@   GetMinionCollisionM 
   EnemyMinions 
   CastSpell    _Q    x    z                          ĐA  ŘA   	&   F @ G@Ŕ G€Ŕ [   Ŕ€FŔ@ † A ť € ]   €†AA Ŕ€‚A ÂAť€›  @€‡A ‡Bť€ ›   €†AB Ŕ€ť €…Ŕ€†ÁB Ŕ€ť ›  € €ŚC  €ťA€b€  ă ů € 
   
   MenuBlitz 	   exConfig    AQI    pairs    GetEnemyHeroes    ValidTarget    Q    range    Ready    GetDistance      ŕu@	   HaveBuff    CastQ                          ÚA  ŕA   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuBlitz 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         âA  öA   •   F @ †@@ ť € ]   #€†@ ÁÁ   €FA B ť€Ć@ ‚ @€†A ÁB Ý€‚@ AÂ €€ĆA  ‚€FA GBÂOB…MB‚…†C ŚBC ť‚€ĆÂC  €GĂ@ GÄÝ‚€Ű  Ŕ€X@Ä@€Ç‚D ŰB  €€ÇÂÄE CEGĹ Í@‚ €ĆÂE ÇĆÇBĆŰ  Ŕ€›  @€ĆÂC  €A Ý‚€Ű  Ŕ€ĆÂF C G €@€ÝB€@€ÇÂÄE CEGĹ Í€Ŕ€ĆÂE ÇĆÇBÇŰ  €€ĆÂC  €GĂ@ GÄÝ‚€Ű  Ŕ €Ě‚G @€ÝB€@€ÇÂÄE CEGĹ ÍŔ€€ĆÂE ÇĆÇÂÇŰ  @€ĆÂC  €GA GÄÝ‚€Ű  €€ĚH ÝB ĆA ĚBČ@€ÝB€€€ÇÂÄE CEGĹ Í ‚€€ĆÂE ÇĆÇ‚ČŰ  @€ĆÂC  €GĂA GÄÝ‚€Ű  € €ĚÂH @€ÝB€b€  ă Ü € $      pairs    GetEnemyHeroes    getDmg    Q    myHero       đ?   E    R       @   level       4@      I@   SSpells    Ready    summonerdot    ValidTarget    range     recall    health    math    floor    shield 
   MenuBlitz 	   ksConfig    IKS      Ŕ‚@
   CastSpell    GetSlot    QKS    CastQ    EKS    CastE    Attack    RKS    CastR                          řA  B   S   ‡ @ ‡@@ť€€ ›@    € € †€@ Ś@@Á  ť€€Ć A Ç@ÁÇ€ÁŰ   @€ÇŔA Ě ÂÝ@ Ć@B  € FB ‡@ ‡ÁBÇ@ ÇĂÂA ÝŔ U @Ă€€›    €FC †B ÇAC]€ŔĂ€€FD †@ ŚADÂ  ť€ÇAC]A€Ć€D A ÁDEAE@€ ‡@ ‡EÇ@ ÇÁÂ@ CG@ GÂĹ†‚B Á € C  †CF ‡F‡ĂF‡@Á  A ÄDEGÝ Ű   €€   €†D ĆAG ‚ÇGÂÇťA  €        Q    Ready    SSpells    summonersmite 
   MenuBlitz    comboConfig    USEQS 
   EnemyMinions    update    GetMinionCollisionM    myHero    width    range       đ?   GetDistance       ‰@
   CastSpell    GetSlot    GetPrediction2 	   spConfig    qConfig    QP    delay    speed    line    HP    Presets    Blitzcrank    QCH    _Q    x    z                          B  B   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          B  B   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       E    Ready 
   CastSpell    _E                          B  B      ‡ @ ‡@@ť€€ ›   @€†€@ Ŕ € @ Á@ť€€›   € €† A Ć@A ť@  €       R    Ready    ValidTarget    range 
   CastSpell    _R                          B  >B   -  F @ G@Ŕ G€Ŕ [   @€GŔ@ X Á €€F@A †€A ĆŔA Ç ÂÁA AB
BFÁA GÁÂť  ]€  † C Á@ Á@ CÖ Á GÂ NÄ‡AÂ ŤBÁA ť@ F @ G@Ŕ G€Ä [    €FŔD ‡Ŕ@ Ç E Ç@Ĺ]€€[   @
€F€E †ŔA ÇŔ@ E ÁE]€ [@  @€F@A †€A ĆŔA Ç ÂÁA ABFÁA GÁÂť  ]€  †@A Ć€A Á@ BGÁ@ GAÂ‡Á@ ‡ÁBÝ  ť€  Ć F Â GAÂ ‡BÇABE ÂEFBF †@ ‡B@‡‚F‡ÂFĆ@ ÇBŔÇ‚ĆÇÇ@ C@FCGF@ GCŔGĆGÇ]€Ý@  F @ G@Ŕ GŔÇ [   €€F @ G Č G@Č [   @€G€H X Á €€G€H GŔČ [@  €€F I ‡€H ‡ BÇ€H Ç@ÂH ÁBA †AI Ć@ ÇAŔÇÉÇÇ@ B@‚IBGF@ GBŔG‚ÉG‚Çť ]@  F @ G@Ŕ GŔÉ [   @	€F J †@J ť € ]  €€ŚJ ťA †ÁD Ŕ€Â
 ť€›  €€‡K ÇAË‡ÁX A@€†AA ĆA ÂGBÂ‡ÂÂÝ ť  ĆC K GBËBAÂ ‡BŽ‚KÇBBÎÂËC ÝA b€  ă€÷F @ G@Ŕ G Ě [    €G E G@Ě ]€€ [   Ŕ€F I †ŔA ‡ BĆŔA Ç@ÂÁA ÁBGE GAĹ†AI Ć@ ÇAŔÇÉÇÇ@ B@‚IBGF@ GBŔG‚ÉG‚Çť ]@  F @ G@Ŕ G€Ě [    €GŔL G@Ě ]€€ [   Ŕ€F I †ŔA ‡ BĆŔA Ç@ÂÁA ÁBGÁL GAĹ†AI Ć@ ÇAŔÇÍÇÇ@ B@MBGF@ GBŔGÍG‚Çť ]@  F @ G@Ŕ G@Í [   €€F@A †€A ĆŔA Ç ÂÁA ABFÁA GÁÂť  ]€  † C Á€
 ÁM Ö  GÂ NAÎ‡AÂ ŽNÁÁ ť@ † C Á  AO Ö  GÂ NAÎ‡AÂ ŽOÁÁ ť@ † C Á  AP PGÁP  A Ö@ GÂ NAÎ‡AÂ ŽAQÁÁ ť@  € F   
   MenuBlitz    drawConfig    DT    QCel     WorldToScreen    D3DXVECTOR3    myHero    x    y      Ŕr@   z 	   DrawText    Current Target: 	   charName       4@      Y@   ŕ˙˙ďA   DQL    ValidTarget    Q    range    GetMinionCollision    width 	   DrawLine    ARGB    DQLC       đ?       @      @      @   DST    comboConfig    ST    SelectedTarget    dead    DrawCircle2    RGB    DQRC    DD    pairs    GetEnemyHeroes    DmgCalc      p—@   killstring 
   networkID      €A@      $@   DQR    Ready    DRR    R    DRRC    DGS    Succes Grab's :     SuccesGrabCount       2@      y@      n@   Ł˝âďA   Fail Grab's :     FailGrabCount       i@    ŕ˙ďA   Precent Grab's:     math    floor    PrecentGrabCount    %      €k@                         @B  \B   
–   F @ †@@ ť € ]  @#€‡Ŕ›A  €"€‡ÁŔ›  Ŕ!€†A ÁA  €F‚A Â ť€ĆA  @€†‚A ÁÂ Ý€A AB €€Ć‚A  ‚€F‚A GÂÂOB†MB‚†‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂÍÂÍ‚€‚Ŕ €‡‚D ÇÂÄŠĹŔ€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂ@Ŕ €‡‚D ÇÂÄŠBĹŔ€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂ€Ŕ €‡‚D ÇÂÄŠ‚ĹŔ€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂŔŔ €‡‚D ÇÂÄŠÂĹŔ€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂ Ŕ €‡‚D ÇÂÄŠĆŔ€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂÍÂŔŔ €‡‚D ÇÂÄŠBĆ€	€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂÍŔŔ €‡‚D ÇÂÄŠ‚Ć@€‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂÍÂŔŔ €‡‚D ÇÂÄŠÂĆ €‡‚ĂĆÂC ÇÄCÄÝ‚ ŤÂÍÂÍ‚Ŕ€ €‡‚D ÇÂÄŠÇb€  ăŔŰ €       pairs    GetEnemyHeroes    dead    visible    getDmg    Q    myHero       đ?   E    R       @   level       4@      I@   health    math    floor    shield    killstring 
   networkID    Harass Him!!! 
   Ignite Kill!    Q Kill!    E Kill!    R Kill! 
   Q+E Kill! 
   Q+R Kill! 
   R+E Kill!    Q+E+R Kill!                          ^B  jB   7   [   @	€Ŕ   €€Ű    €›   €€AŔ€@Ŕ€Á@FA GÁŔ@€€AA 
A
 ‚B GAA A
 AA BGB A
 „ÁB €   €€C ACCŔC@ €D A [   Ŕ€Ŕ    €Ű   €€AŔAD €    €
ŔD‰ €       isMe    name    rocketgrab2    type    myHero    SuccesGrabCount       đ?   FailGrabCount    AllCastGrabCount    PrecentGrabCount       Y@   ComboActive 
   MenuBlitz    comboConfig    USEE       @   CastE    find    recall                          lB  pB      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          rB  ‚B   H   [   @€Ç Ŕ Ű   €€›    €Ç@@€Ŕ@ €ĆŔ@ Ý@€ Ć A Ç@ÁÇ€ÁŰ   @€[   Ŕ€ÇŔÁ B ÁAX €€Ç@Â B AB @€›   Ŕ€Ç€B A@Ç Ű   @€Ć A Ç@ÁA@Ç Ű@  @€Ç@@XŔÂ€ €Ç@@ Ă€ €Ě@C @€ Ý@€[   @€Ç@@€Ă€€Ç Ŕ Ű   Ŕ€ÇŔC Í Ä
Ŕ€‡ÇŔC D Î 
Ŕ€Ç€D Ď ĹÁC Đ 
Ŕ€‰ €       isMe    name 
   PowerFist    ResetAA 
   MenuBlitz    ES    UI    team    myHero    type    Counterspells 	   Meditate 	   Teleport    CastR    RocketGrab    AllCastGrabCount       đ?   FailGrabCount    SuccesGrabCount    PrecentGrabCount       Y@                         „B  žB   
M   Ć @ Ŕ€  €Ć@@ Ç€ŔÇŔŔŰ   Ŕ€Á    FAA †A ť€ ] Ŕ€†ÂA Ŕ€ť‚ ›  €€‡ÂĆBB ÇÂŔ@€†‚B Ŕ€ĂB ť‚€ZŔ @ € C@€†‚B Ŕ€ĂB ť‚€Ŕ   €b  ăAů   €@Ă€€GC [   €GÁC‡C ‡ÁC€Ŕ€
 C‡FA@ GŔGÁŔ[   €FD A ÇÁC–Á]A €€
 ‡FA@ GŔGÁŔ[   €FD  ÇÁC–Á]A  €       WM_LBUTTONDOWN 
   MenuBlitz    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    type    myHero    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          §B  ÎB   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ­B  ­B           @ @  €       AfterAA                         °B  °B           @ @  €    	   BeforeAA                         ·B  ·B           @ @  €       AfterAA                         şB  şB           @ @  €    	   BeforeAA                         ŔB  ŔB        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ŔB  ŔB           @ @  €       AfterAA                                               ĂB  ĂB           @ @  €    	   BeforeAA                         ČB  ČB           @ @  €       AfterAA                         ËB  ËB           @ @  €    	   BeforeAA                              	
                ĐB  –D   "  
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚KŔ  J@Ä‚J€ÄĄ@  J€€‡
@ KŔ  J Ĺ‚J€ÄĄ€  J€€‡
@€‰KŔ  J€Ĺ‚JŔĹĄŔ  J€€‡
@€ŠK   
@ ŚC   
ŔFŤ
@€ŚF@G †€G ÁŔ H FAH ]€€
@ ŽF@G †ŔH ÁŔ H FAH ]€€
@ ‘F@G †@I Á€ H FI ]€€
@ ’
 Ę“
@Ŕ”K  †ŔJ Ć K AK FK d@ 
@ •K    Á  Á AA d@ 
@€—FŔ@ †@L Ç A ÇŔÁL C  ]€€
@ FŔ@ †@L Ç D ÇŔÁL C  ]€€
@€™FŔ@ †@L Ç A ÇŔÁÁD ÁAÍ L C  ]€€
@ šK 
 ‹Ŕ  Š Î›Š ÁśŠŔNťJ€ ›‹Ŕ  Š Î›ŠŔÄśŠŔNťJ€ ž‹Ŕ  Š€Ď›Š ÁśŠŔNťJ€€ž‹Ŕ  Š€Ď›Š ÄśŠŔNťJ€€ź‹Ŕ  Š€Ď›ŠŔÄśŠŔNťJ€  ‹Ŕ  Š€Ď›Š@ĹśŠŔNťJ€€ ‹Ŕ  ŠŔĐ›Š ÁśŠ QťJ€ ˇ‹Ŕ  ŠŔĐ›ŠŔÄśŠŔNťJ€€˘‹Ŕ  ŠŔĐ›Š@ĹśŠ QťJ€ Ł‹Ŕ  Š Ň›Š ÁśŠ QťJ€€Ł‹Ŕ  Š Ň›Š ÄśŠ QťJ€€¤‹Ŕ  ŠŔŇ›Š ÁśŠŔNťJ€ Ą‹Ŕ  ŠŔŇ›Š ÄśŠŔNťJ€ ¦‹Ŕ  ŠŔŇ›ŠŔÄśŠŔNťJ€€¦‹Ŕ  ŠŔŇ›Š@ĹśŠŔNťJ€ §‹Ŕ  Š Ô›Š ÁśŠŔNťJ€€§‹Ŕ  Š Ô›ŠŔÄśŠ QťJ€€¨‹Ŕ  Š Ô›Š@ĹśŠŔNťJ€ ©‹Ŕ  Š Ő›Š ÁśŠ QťJ€€©‹Ŕ  Š Ő›Š ÄśŠ QťJ€€Ş‹Ŕ  Š Ő›Š@ĹśŠ QťJ€ «‹Ŕ  Š Ö›Š ÄśŠŔNťJ€€«‹Ŕ  Š Ö›Š@ĹśŠŔNťJ€€¬‹Ŕ  ŠŔÖ›Š ÁśŠŔNťJ€ ­‹Ŕ  ŠŔÖ›ŠŔÄśŠŔNťJ€ ®‹Ŕ  ŠŔÖ›Š@ĹśŠŔNťJ€€®‹Ŕ  ŠŔ×›Š ÁśŠŔNťJ€ Ż‹Ŕ  ŠŔ×›Š ÄśŠŔNťJ€ °‹Ŕ  ŠŔ×›ŠŔÄśŠ QťJ€€°‹Ŕ  ŠŔ×›Š@ĹśŠ QťJ€ ±‹Ŕ  Š Ů›Š ÁśŠŔNťJ€€±‹Ŕ  Š Ů›Š ÁśŠŔNťJ€€˛‹Ŕ  Š Ů›Š@ĹśŠŔNťJ€ ł‹Ŕ  Š Ú›Š ÁśŠŔNťJ€€ł‹Ŕ  Š Ú›Š ÄśŠŔNťJ€€´‹Ŕ  Š Ú›ŠŔÄśŠŔNťJ€ µ‹Ŕ  Š Ú›Š@ĹśŠ QťJ€€µ‹Ŕ  Š@Ű›Š ÁśŠŔNťJ€ ¶‹Ŕ  Š@Ű›Š ÄśŠŔNťJ€ ·‹Ŕ  Š@Ű›ŠŔÄśŠ QťJ€€·‹Ŕ  Š@Ű›Š@ĹśŠŔNťJ€ ¸‹Ŕ  Š€Ü›Š ÁśŠŔNťJ€€¸‹Ŕ  Š€Ü›Š ÄśŠŔNťJ€€ą‹Ŕ  Š€Ü›ŠŔÄśŠ QťJ€ ş‹Ŕ  Š€Ü›Š@ĹśŠ QťJ€€ş‹Ŕ  ŠŔÝ›Š ÁśŠŔNťJ€ »‹Ŕ  ŠŔÝ›Š ÄśŠŔNťJ€ Ľ‹Ŕ  ŠŔÝ›ŠŔÄśŠŔNťJ€€Ľ‹Ŕ  ŠŔÝ›Š@ĹśŠŔNťJ€ ˝‹Ŕ  Š ß›Š ÁśŠ QťJ€€˝‹Ŕ  Š ß›ŠŔÄśŠ QťJ€€ľ‹Ŕ  Š ß›Š@ĹśŠ QťJ€ ż‹Ŕ  Š ŕ›Š ÁśŠŔNťJ€€ż‹Ŕ  Š ŕ›Š ÄśŠŔNťJ€€Ŕ‹Ŕ  Š ŕ›ŠŔÄśŠŔNťJ€ Á‹Ŕ  Š ŕ›Š@ĹśŠ QťJ€€Á‹€  Š@á›Š ÁśJ€ Â‹Ŕ  Š@á›Š ÄśŠŔNťJ€ Ă‹Ŕ  Š â›ŠŔÄśŠ QťJ€€Ă‹Ŕ  Š â›Š@ĹśŠ QťJ€€Ä‹Ŕ  ŠŔâ›Š ÁśŠ QťJ€ Ĺ‹Ŕ  ŠŔâ›Š ÄśŠŔNťJ€ Ć‹Ŕ  ŠŔâ›ŠŔÄśŠŔNťJ€€Ć‹Ŕ  ŠŔâ›Š ÁśŠŔNťJ€ Ç‹Ŕ  ŠŔâ›Š ÄśŠŔNťJ€€Ç‹Ŕ  ŠŔâ›ŠŔÄśŠ QťJ€ Č‹Ŕ  ŠŔâ›ŠŔÄśŠ QťJ€€Č‹Ŕ  ŠŔä›Š ÁśŠŔNťJ€ É‹Ŕ  ŠŔä›ŠŔÄśŠ QťJ€ Ę‹Ŕ  ŠŔä›Š@ĹśŠŔNťJ€€Ę‹Ŕ  ŠŔĺ›Š ÁśŠŔNťJ€ Ë‹Ŕ  ŠŔĺ›Š ÄśŠŔNťJ€ Ě‹Ŕ  ŠŔĺ›ŠŔÄśŠ QťJ€€Ě‹Ŕ  ŠŔĺ›Š@ĹśŠŔNťJ€ Í‹Ŕ  Š ç›Š ÁśŠ QťJ€€Í‹Ŕ  Š ç›Š ÄśŠ QťJ€€Î‹Ŕ  Š ç›ŠŔÄśŠ QťJ€ Ď‹Ŕ  Š ç›Š@ĹśŠŔNťJ€€Ď‹Ŕ  Š@č›Š ÁśŠ QťJ€ Đ‹Ŕ  Š@č›Š@ĹśŠ QťJ€ Ń‹Ŕ  Š é›Š ÁśŠ QťJ€€Ń‹Ŕ  Š é›ŠŔÄśŠŔNťJ€€Ň‹Ŕ  Š é›ŠŔÄśŠŔNťJ€ Ó‹Ŕ  Š é›Š@ĹśŠŔNťJ€€Ó‹Ŕ  Š@ę›Š ÁśŠŔNťJ€ Ô‹Ŕ  Š@ę›ŠŔÄśŠŔNťJ€ Ő‹Ŕ  Š@ę›Š@ĹśŠŔNťJ€€Ő‹Ŕ  Š@ë›Š ÁśŠ QťJ€ Ö‹Ŕ  Š@ë›Š@ĹśŠŔNťJ€ ×‹Ŕ  Š ě›Š ÁśŠŔNťJ€€×‹Ŕ  Š ě›ŠŔÄśŠŔNťJ€€Ř‹Ŕ  Š ě›Š@ĹśŠ QťJ€ Ů‹Ŕ  Š í›Š ÁśŠŔNťJ€€Ů‹Ŕ  Š í›Š ÁśŠŔNťJ€€Ú‹Ŕ  Š í›Š ÄśŠ QťJ€ Ű‹Ŕ  Š í›Š ÄśŠŔNťJ€€Ű‹Ŕ  Š í›ŠŔÄśŠŔNťJ€ Ü‹Ŕ  Š í›Š@ĹśŠŔNťJ€€Ü‹Ŕ  ŠŔî›Š ÁśŠŔNťJ€ Ý‹Ŕ  ŠŔî›Š ÁśŠŔNťJ€ Ţ‹Ŕ  ŠŔî›ŠŔÄśŠŔNťJ€€Ţ‹Ŕ  ŠŔî›Š@ĹśŠŔNťJ€ ß‹Ŕ  Š đ›Š ÁśŠŔNťJ€€ß‹Ŕ  Š đ›Š ÄśŠŔNťJ€€ŕ‹Ŕ  Š đ›Š ÄśŠŔNťJ€ á‹Ŕ  Š đ›Š@ĹśŠŔNťJ€€á‹Ŕ  Š@ń›Š ÁśŠŔNťJ€ â‹Ŕ  Š@ń›Š ÄśŠŔNťJ€ ă‹Ŕ  Š@ń›Š@ĹśŠŔNťJ€€ă‹Ŕ  Š@ň›Š ÁśŠŔNťJ€ ä‹Ŕ  Š@ň›Š ÄśŠŔNťJ€ ĺ‹Ŕ  Š@ň›ŠŔÄśŠŔNťJ€€ĺ‹Ŕ  Š@ó›Š ÁśŠ QťJ€ ć‹Ŕ  Š@ó›ŠŔÄśŠ QťJ€ ç‹Ŕ  Š@ó›Š@ĹśŠŔNťJ€€ç‹Ŕ  Š@ô›Š ÁśŠŔNťJ€ č‹Ŕ  Š@ô›Š ÄśŠ QťJ€ é‹Ŕ  Š ő›Š ÁśŠŔNťJ€€é‹Ŕ  Š ő›ŠŔÄśŠŔNťJ€€ę‹Ŕ  Š ő›Š@ĹśŠŔNťJ€ ë‹Ŕ  Š ö›Š ÁśŠ QťJ€€ë‹Ŕ  Š ö›ŠŔDíŠŔNťJ€€ě‹Ŕ  Š ÷›Š ÁśŠ QťJ€€í‹Ŕ  Š ÷›Š ÄśŠŔNťJ€€î‹Ŕ  Š ÷›ŠŔÄśŠ QťJ€ ď‹Ŕ  Š ÷›Š ÁśŠŔNťJ€€ď‹Ŕ  Š ÷›Š ÄśŠŔNťJ€ đ‹Ŕ  Š ÷›ŠŔÄśŠŔNťJ€€đ‹Ŕ  ŠŔř›Š ÄśŠŔNťJ€ ń‹Ŕ  ŠŔř›Š@ĹśŠŔNťJ€ ň‹Ŕ  Š€ů›Š ÁśŠŔNťJ€€ň‹Ŕ  Š€ů›Š ÄśŠŔNťJ€€ó‹Ŕ  Š€ů›ŠŔÄśŠŔNťJ€ ô‹Ŕ  Š€ů›Š@ĹśŠŔNťJ€€ô‹Ŕ  ŠŔú›Š ÁśŠŔNťJ€ ő‹Ŕ  ŠŔú›Š ÄśŠ QťJ€ ö‹Ŕ  Š€ű›Š ÁśŠ QťJ€€ö‹Ŕ  Š€ű›Š ÄśŠŔNťJ€€÷‹Ŕ  Š€ű›ŠŔÄśŠŔNťJ€ ř‹Ŕ  Š€ű›Š@ĹśŠŔNťJ€€ř‹Ŕ  ŠŔü›Š ÁśŠ QťJ€ ů‹Ŕ  ŠŔü›Š ÄśŠŔNťJ€ ú‹Ŕ  ŠŔü›ŠŔÄśŠ QťJ€€ú‹Ŕ  ŠŔü›Š@ĹśŠŔNťJ€ ű‹Ŕ  Š ţ›Š ÁśŠ QťJ€€ű‹Ŕ  Š ţ›ŠŔÄśŠŔNťJ€€ü‹€  ŠŔţ›Š ÁśJ€ ý‹Ŕ  ŠŔţ›Š ÄśŠŔNťJ€ ţ‹Ŕ  ŠŔţ›Š@ĹśŠŔNťJ€€ţ‹Ŕ  ŠŔ˙›Š ÁśŠ QťJ€ ˙ @ ËŔ  ĘŔ˙›Ę ÄśĘŔNťJŔ @@ ËŔ  ĘŔ˙›ĘŔÄśĘŔNťJŔ €@ ËŔ  ĘŔ˙›Ę ÁśĘ QťJŔ Ŕ@ ËŔ  ĘŔ˙›Ę ÄśĘŔNťJŔ  A ËŔ  ĘŔ˙›ĘŔÄśĘŔNťJŔ @A ËŔ  A Ę ›Ę ÁśĘŔNťJŔ ŔA ËŔ  A Ę ›Ę ÄśĘŔNťJŔ  B ËŔ  A Ę ›ĘŔÄśĘŔNťJŔ @B ËŔ  A Ę ›Ę@ĹśĘŔNťJŔ €B ËŔ  ÁB Ę ›Ę ÁśĘ QťJŔ  C ËŔ  ÁB Ę ›Ę ÄśĘŔNťJŔ @C ËŔ  ÁB Ę ›ĘŔÄśĘŔNťJŔ €C ËŔ  ÁB Ę ›Ę@ĹśĘ QťJŔ ŔC ËŔ  ÁB Ę ›Ę@ĹśĘŔNťJŔ  D ËŔ  ÁB Ę ›Ę@ĹśĘŔNťJŔ @D ËŔ  D Ę ›Ę ÁśĘŔNťJŔ ŔD ËŔ  D Ę ›Ę ÄśĘŔNťJŔ  E ËŔ  D Ę ›ĘŔÄśĘŔNťJŔ @E ËŔ  D Ę ›Ę@ĹśĘ QťJŔ €E ËŔ  D Ę ›Ę ÁśĘ QťJŔ ŔE ËŔ  D Ę ›Ę ÄśĘŔNťJŔ  F ËŔ  D Ę ›ĘŔÄśĘŔNťJŔ @F ËŔ  F Ę ›Ę ÁśĘŔNťJŔ ŔF ËŔ  F Ę ›ĘŔÄśĘŔNťJŔ  G ËŔ  F Ę ›ĘŔÄśĘŔNťJŔ @G ËŔ  F Ę ›Ę@ĹśĘŔNťJŔ €G ËŔ  ÁG Ę ›Ę ÁśĘŔNťJŔ  H ËŔ  ÁG Ę ›Ę ÄśĘŔNťJŔ @H ËŔ  ÁG Ę ›ĘŔÄśĘŔNťJŔ €H ËŔ  ÁG Ę ›Ę@ĹśĘŔNťJŔ ŔH ËŔ  I Ę ›Ę ÁśĘ QťJŔ @I ËŔ  I Ę ›Ę ÄśĘŔNťJŔ €I ËŔ  I Ę ›Ę@ĹśĘŔNťJŔ ŔI ËŔ  J Ę ›Ę ÁśĘŔNťJŔ @J ËŔ  J Ę ›Ę ÄśĘ QťJŔ €J ËŔ  J Ę ›ĘŔÄśĘ QťJŔ ŔJ ËŔ  K Ę ›Ę ÁśĘŔNťJŔ @K ËŔ  K Ę ›ĘŔÄśĘŔNťJŔ €K ËŔ  K Ę ›ĘŔÄśĘŔNťJŔ ŔK ËŔ  K Ę ›Ę@ĹśĘŔNťJŔ  L ËŔ  AL Ę ›Ę ÁśĘ QťJŔ €L ËŔ  AL Ę ›ĘŔÄśĘŔNťJŔ ŔL ËŔ  AL Ę ›Ę@ĹśĘŔNťJŔ  M ËŔ  AM Ę ›Ę ÁśĘ QťJŔ €M ËŔ  AM Ę ›Ę ÄśĘŔNťJŔ ŔM ËŔ  AM Ę ›ĘŔÄśĘ QťJŔ  N ËŔ  AM Ę ›Ę@ĹśĘ QťJŔ @N ËŔ  N Ę ›Ę ÁśĘŔNťJŔ ŔN ËŔ  N Ę ›Ę ÄśĘ QťJŔ  O ËŔ  N Ę ›ĘŔÄśĘŔNťJŔ @O ËŔ  N Ę ›Ę@ĹśĘŔNťJŔ €O ËŔ  ÁO Ę ›Ę ÁśĘ QťJŔ  P ËŔ  AP Ę ›Ę ÁśĘ QťJŔ €P ËŔ  AP Ę ›ĘŔÄśĘŔNťJŔ ŔP ËŔ  AP Ę ›Ę@ĹśĘŔNťJŔ  Q ËŔ  AQ Ę ›Ę ÁśĘŔNťJŔ €Q ËŔ  AQ Ę ›ĘŔÄśĘŔNťJŔ ŔQ ËŔ  AQ Ę ›Ę@ĹśĘ QťJŔ  R ËŔ  AR Ę ›Ę ÁśĘŔNťJŔ €R ËŔ  AR Ę ›Ę ÄśĘŔNťJŔ ŔR ËŔ  AR Ę ›Ę@ĹśĘŔNťJŔ  S ËŔ  AS Ę ›Ę ÁśĘŔNťJŔ €S ËŔ  AS Ę ›Ę ÄśĘ QťJŔ ŔS ËŔ  AS Ę ›ĘŔÄśĘŔNťJŔ  T ËŔ  AS Ę ›Ę@ĹśĘŔNťJŔ @T ËŔ  T Ę ›Ę ÁśĘŔNťJŔ ŔT ËŔ  T Ę ›Ę ÄśĘ QťJŔ  U ËŔ  T Ę ›ĘŔÄśĘŔNťJŔ @U ËŔ  U Ę ›Ę ÁśĘŔNťJŔ ŔU ËŔ  U Ę ›ĘŔÄśĘŔNťJŔ  V ËŔ  U Ę ›Ę@ĹśĘ QťJŔ @V ËŔ  V Ę ›Ę ÁśĘŔNťJŔ ŔV ËŔ  V Ę ›Ę ÄśĘŔNťJŔ  W ËŔ  V Ę ›ĘŔÄśĘŔNťJŔ @W ËŔ  V Ę ›Ę ÁśĘŔNťJŔ €W ËŔ  V Ę ›Ę ÄśĘŔNťJŔ ŔW ËŔ  V Ę ›ĘŔÄśĘŔNťJŔ  X ËŔ  AX Ę ›Ę ÁśĘŔNťJŔ €X ËŔ  AX Ę ›ĘŔÄśĘ QťJŔ ŔX ËŔ  Y Ę ›ĘŔÄśĘ QťJŔ @Y ËŔ  Y Ę ›Ę@ĹśĘŔNťJŔ €Y ËŔ  ÁY Ę ›Ę ÁśĘŔNťJŔ  Z ËŔ  ÁY Ę ›ĘŔÄśĘ QťJŔ @Z ËŔ  Z Ę ›Ę ÁśĘŔNťJŔ ŔZ ËŔ  Z Ę ›Ę ÄśĘŔNťJŔ  [ ËŔ  Z Ę ›Ę@ĹśĘŔNťJŔ @[ ËŔ  [ Ę ›Ę ÁśĘ QťJŔ Ŕ[ ËŔ  [ Ę ›Ę ÄśĘ QťJŔ  \ ËŔ  [ Ę ›ĘŔÄśĘŔNťJŔ @\ ËŔ  \ Ę ›Ę ÁśĘŔNťJŔ Ŕ\ ËŔ  \ Ę ›ĘŔÄśĘ QťJŔ  ] ËŔ  A] Ę ›Ę ÁśĘŔNťJŔ €] ËŔ  A] Ę ›ĘŔÄśĘ QťJŔ Ŕ] ËŔ  ^ Ę ›Ę ÁśĘŔNťJŔ @^ ËŔ  ^ Ę ›ĘŔÄśĘ QťJŔ €^ ËŔ  ^ Ę ›Ę@ĹśĘŔNťJŔ Ŕ^ ËŔ  _ Ę ›Ę ÁśĘŔNťJŔ @_ ËŔ  _ Ę ›Ę ÄśĘŔNťJŔ €_ ËŔ  _ Ę ›ĘŔÄśĘŔNťJŔ Ŕ_ ËŔ  ` Ę ›Ę ÁśĘŔNťJŔ @` ËŔ  ` Ę ›ĘŔÄśĘŔNťJŔ €` ËŔ  Á` Ę ›Ę ÁśĘŔNťJŔ  a ËŔ  Á` Ę ›Ę ÁśĘŔNťJŔ @a ËŔ  Á` Ę ›Ę ÄśĘŔNťJŔ €a ËŔ  Á` Ę ›Ę@ĹśĘŔNťJŔ Ŕa ËŔ  Á` Ę ›Ę@ĹśĘŔNťJŔ  b ËŔ  Ab Ę ›Ę ÁśĘŔNťJŔ €b ËŔ  Ab Ę ›ĘŔÄśĘŔNťJŔ Ŕb ËŔ  Ab Ę ›Ę@ĹśĘŔNťJŔ  c ËŔ  Ac Ę ›Ę ÁśĘ QťJŔ €c ËŔ  Ac Ę ›Ę ÄśĘ QťJŔ Ŕc ËŔ  Ac Ę ›ĘŔÄśĘ QťJŔ  d ËŔ  Ad Ę ›Ę ÁśĘŔNťJŔ €d ËŔ  Ad Ę ›Ę@ĹśĘŔNťJŔ Ŕd ËŔ  e Ę ›Ę ÁśĘŔNťJŔ @e ËŔ  e Ę ›Ę ÄśĘŔNťJŔ €e ËŔ  e Ę ›ĘŔÄśĘ QťJŔ Ŕe ËŔ  f Ę ›Ę ÁśĘ QťJŔ @f ËŔ  f Ę ›ĘŔÄśĘŔNťJŔ €f ËŔ  Áf Ę ›ĘŔÄśĘŔNťJŔ  g ËŔ  Áf Ę ›Ę@ĹśĘŔNťJŔ @g ËŔ  g Ę ›Ę ÁśĘŔNťJŔ Ŕg ËŔ  g Ę ›Ę ÄśĘŔNťJŔ  h ËŔ  g Ę ›ĘŔÄśĘ QťJŔ @h ËŔ  h Ę ›Ę ÁśĘ QťJŔ Ŕh ËŔ  i Ę ›Ę ÁśĘŔNťJŔ @i ËŔ  i Ę ›Ę ÁśĘŔNťJŔ Ŕi ËŔ  i Ę ›ĘŔÄśĘŔNťJŔ  j ËŔ  i Ę ›Ę@ĹśĘ QťJŔ @j ËŔ  j Ę ›Ę ÁśĘ QťJŔ Ŕj ËŔ  j Ę ›Ę ÄśĘŔNťJŔ  k ËŔ  j Ę ›ĘŔÄśĘŔNťJŔ @k ËŔ  j Ę ›Ę@ĹśĘŔNťJŔ €k ËŔ  Ák Ę ›Ę ÁśĘŔNťJŔ  l ËŔ  Ák Ę ›ĘŔÄśĘ QťJŔ @l ËŔ  l Ę ›Ę ÁśĘ QťJŔ Ŕl ËŔ  l Ę ›Ę ÄśĘŔNťJŔ  m ËŔ  l Ę ›ĘŔÄśĘ QťJŔ @m ËŔ  l Ę ›Ę@ĹśĘŔNťJŔ €m ËŔ  Ám Ę ›Ę ÁśĘŔNťJŔ  n ËŔ  Ám Ę ›Ę ÄśĘŔNťJŔ @n ËŔ  Ám Ę ›ĘŔÄśĘŔNťJŔ €n ËŔ  Ám Ę ›Ę@ĹśĘ QťJŔ Ŕn ËŔ  o Ę ›Ę ÄśĘŔNťJŔ @o ËŔ  o Ę ›ĘŔÄśĘ QťJŔ €o ËŔ  Áo Ę ›Ę ÄśĘŔNťJŔ  p ËŔ  Áo Ę ›ĘŔÄśĘ QťJŔ @p ËŔ  Áo Ę ›Ę@ĹśĘŔNťJŔ €p ËŔ  Áp Ę ›Ę ÁśĘ QťJŔ  q ËŔ  Aq Ę ›Ę ÁśĘŔNťJŔ €q ËŔ  Aq Ę ›ĘŔÄśĘŔNťJŔ Ŕq ËŔ  Aq Ę ›Ę@ĹśĘŔNťJŔ  r ËŔ  Ar Ę ›Ę ÄśĘŔNťJŔ €r ËŔ  Ar Ę ›ĘŔÄśĘ QťJŔ Ŕr ËŔ  Ar Ę ›Ę@ĹśĘ QťJŔ  s ËŔ  As Ę ›Ę ÁśĘ QťJŔ €s ËŔ  As Ę ›Ę@ĹśĘ QťJŔ Ŕs ËŔ  t Ę ›ĘŔÄśĘŔNťJŔ @t ËŔ  t Ę ›Ę ÁśĘŔNťJŔ Ŕt ËŔ  u Ę ›Ę ÄśĘŔNťJŔ @u ËŔ  u Ę ›Ę ÄśĘŔNťJŔ €u ËŔ  u Ę ›ĘŔÄśĘŔNťJŔ Ŕu ËŔ  v Ę ›Ę ÁśĘŔNťJŔ @v ËŔ  v Ę ›Ę ÄśĘŔNťJŔ €v ËŔ  v Ę ›ĘŔÄśĘŔNťJŔ Ŕv ËŔ  v Ę ›Ę@ĹśĘŔNťJŔ  w ËŔ  Aw Ę ›Ę ÁśĘŔNťJŔ €w ËŔ  Aw Ę ›ĘŔÄśĘŔNťJŔ Ŕw ËŔ  Aw Ę ›Ę@ĹśĘ QťJŔ  x ËŔ  Ax Ę ›Ę ÁśĘŔNťJŔ €x ËŔ  Ax Ę ›ĘŔÄśĘŔNťJŔ Ŕx ËŔ  Ax Ę ›Ę@ĹśĘŔNťJŔ  y ËŔ  Ay Ę ›ĘŔÄśĘ QťJŔ €y ËŔ  Áy Ę ›Ę ÁśĘ QťJŔ  z ËŔ  Áy Ę ›Ę ÄśĘŔNťJŔ @z ËŔ  Áy Ę ›ĘŔÄśĘŔNťJŔ €z ËŔ  Áy Ę ›Ę@ĹśĘ QťJŔ Ŕz ËŔ  { Ę ›Ę ÁśĘ QťJŔ @{ ËŔ  { Ę ›Ę ÁśĘ QťJŔ €{ ËŔ  { Ę ›Ę ÁśĘ QťJŔ Ŕ{ ËŔ  { Ę ›Ę ÄśĘŔNťJŔ  | ËŔ  { Ę ›ĘŔÄśĘŔNťJŔ @| ËŔ  { Ę ›Ę@ĹśĘŔNťJŔ €| ËŔ  Á| Ę ›Ę ÁśĘŔNťJŔ  } ËŔ  Á| Ę ›Ę@ĹśĘ QťJŔ @} ËŔ  } Ę ›Ę ÁśĘ QťJŔ Ŕ} ËŔ  } Ę ›Ę ÄśĘŔNťJŔ  ~ ËŔ  } Ę ›ĘŔÄśĘŔNťJŔ @~ ËŔ  } Ę ›Ę@ĹśĘŔNťJŔ €~ ËŔ  Á~ Ę ›Ę ÁśĘ QťJŔ   ËŔ  Á~ Ę ›ĘŔÄśĘŔNťJŔ @ ËŔ  Á~ Ę ›Ę@ĹśĘŔNťJŔ € ËŔ  Á Ę ›Ę ÁśĘŔNťJŔ  € ËŔ  Á Ę ›Ę ÄśĘ QťJŔ @€ ËŔ  Á Ę ›ĘŔÄśĘŔNťJŔ €€ ËŔ  Á€ Ę ›Ę ÁśĘ QťJŔ   ËŔ  Á€ Ę ›Ę@ĹśĘ QťJŔ @ ËŔ   Ę ›Ę ÁśĘŔNťJŔ Ŕ ËŔ   Ę ›ĘŔÄśĘ QťJŔ  ‚ ËŔ   Ę ›Ę@ĹśĘŔNťJŔ @‚ ËŔ   Ę ›Ę@ĹśĘŔNťJŔ €‚ ËŔ  Á‚ Ę ›Ę ÁśĘŔNťJŔ   ËŔ  Á‚ Ę ›Ę ÄśĘŔNťJŔ @ ËŔ  Á‚ Ę ›ĘŔÄśĘŔNťJŔ € ËŔ  Á‚ Ę ›Ę@ĹśĘ QťJŔ Ŕ ËŔ  „ Ę ›ĘŔÄśĘ QťJŔ @„ ËŔ  „ Ę ›Ę@ĹśĘŔNťJŔ €„ ËŔ  Á„ Ę ›Ę ÁśĘŔNťJŔ  … ËŔ  Á„ Ę ›Ę ÁśĘŔNťJŔ @… ËŔ  Á„ Ę ›Ę ÁśĘŔNťJŔ €… ËŔ  Á„ Ę ›ĘŔÄśĘ QťJŔ Ŕ… ËŔ  Á„ Ę ›Ę@ĹśĘŔNťJŔ  † ËŔ  A† Ę ›Ę ÁśĘŔNťJŔ €† ËŔ  A† Ę ›Ę ÄśĘŔNťJŔ Ŕ† ËŔ  A† Ę ›ĘŔÄśĘ QťJŔ  ‡ ËŔ  A‡ Ę ›Ę ÁśĘŔNťJŔ €‡ ËŔ  A‡ Ę ›Ę ÄśĘŔNťJŔ Ŕ‡ ËŔ  A‡ Ę ›ĘŔÄśĘŔNťJŔ   ËŔ  A Ę ›Ę ÁśĘŔNťJŔ € ËŔ  A Ę ›Ę@ĹśĘ QťJŔ Ŕ ËŔ  ‰ Ę ›Ę ÁśĘŔNťJŔ @‰ ËŔ  ‰ Ę ›Ę ÄśĘŔNťJŔ €‰ ËŔ  ‰ Ę ›ĘŔÄśĘŔNťJŔ Ŕ‰ ËŔ  ‰ Ę ›Ę@ĹśĘŔNťJŔ  Š ËŔ  AŠ Ę ›Ę ÁśĘ QťJŔ €Š ËŔ  AŠ Ę ›ĘŔÄśĘ QťJŔ ŔŠ ËŔ  ‹ Ę ›Ę ÁśĘŔNťJŔ @‹ ËŔ  ‹ Ę ›ĘŔÄśĘŔNťJŔ €‹ ËŔ  ‹ Ę ›Ę@ĹśĘŔNťJŔ 
@€šAŔ‹ ‹ €ËŔ  Y Ę ›Ś AAY Ę@AŚ AŚ Ę@Á  
Áü›AŚ 
ýAAŚ Ś 
KÁ  AM J›Ś ÁN JÁAŚ ÁŚ JÁ‹Á  Šß›ÁŚ ŠßÁAŚ ‚Ś Š‚ËÁ  ‚ Ę‚›Ś A‚ ĘABŚ A‚Ś ĘAÂ  ABw 
B‚›AŚ Âw 
‚‚ABŚ ‚Ś 
‚‚KÂ  I J‚‚›Ś Á‚I JÂBŚ Á‚Ś JÂ‹Â  ÁÂ‚ ŠÂ‚›ÁŚ  ŠÁBŚ Ś ŠËÂ  { Ę›Ś AC| ĘBCŚ AŚ ĘBĂ  Ai 
C›AŚ j 
ACŚ ĂŚ 
KĂ  Ă€ J›Ś Á JĂCŚ ÁĂŚ JĂ‹Ă  ÁĂ| ŠĂ›ÁŚ } Š„ÁCŚ ÄŚ Š„ËĂ  f Ę„›Ś AŤ ĘCDŚ AÄŚ ĘCÄ  
Dę›AŚ 
ÄęADŚ ÄŚ 
„„KÄ  J„ů›Ś JDz	DŚ ÁÄŚ JÄ	‹Ä  ŠÚ›ÁŚ ŠÄÚ	ÁDŚ ĹŚ Š…	ËÄ  Ęç›Ś ĘÄg
EŚ AĹŚ ĘD
Ĺ  AEP 
E…›AŚ ĹP 
……
AEŚ ĹŚ 
……
¤@ 	
€€ A@Ť ‹ €ËŔ  Ę Î›Ś Ę€MŤ Ę AÁ  
ÁĐ›AŚ 
ŃAŤ 
AĹKÁ  JŇ›Ś JARŤ JD‹Á  ŠAč›ÁŚ ŠčÁŤ ŠÁËÁ  Ęŕ›Ś ĘÁ`‚Ť ĘAEÂ  
Ââ›AŚ 
‚ăA‚Ť 
ÁKÂ  Jé›Ś JÂh‚Ť JA‹Â  ŠÂî›ÁŚ ĂŤ ŠÁ‚Ť ŠÂÄËÂ  ĘBń›Ś ĘÂqŤ ĘBEĂ  
ő›AŚ 
ĂôAŤ 
CĹKĂ  JCó›Ś JsŤ JCE‹Ă  Šö›ÁŚ ŠĂőÁŤ ŠÁËĂ  ĘĂ˙›Ś AD@ ĘC„Ť ĘĂDÄ  
Ä˙›AŚ A 
„„A„Ť 
ÄÄKÄ  Ž J„„›Ś ÁC JÄ	„Ť JD	‹Ä  ÁŽ ŠÄ„›ÁŚ ĹC Š…	Á„Ť ŠÄ	ËÄ  …D Ę…›Ś AEŽ ĘD
…Ť ĘA
Ĺ  A…F 
E…›AŚ ĹF 
……
A…Ť 
ĹÄ
KĹ  EL J……›Ś ÁĹL JĹ…Ť JEE‹Ĺ  Á…[ ŠĹ…›ÁŚ Ć[ Š†Á…Ť ŠÄËĹ  †\ Ę†›Ś AĆ\ ĘE†Ť ĘĹDĆ  A_ 
F†›AŚ †_ 
††A†Ť 
ĆÄKĆ  Ć` J††›Ś Á†Ž JĆ
†Ť JA
‹Ć  ÁFd ŠĆ†›ÁŚ d Š‡
Á†Ť ŠÁ
ËĆ  t Ę‡›Ś AÇs ĘF‡Ť ĘĆDÇ  AÇ| 
G‡›AŚ ‡| 
‡‡A‡Ť 
ÁKÇ  ‡ J‡‡›Ś ÁÇ JÇ‡Ť JÇD‹Ç  ÁÇŽ ŠÇ‡›ÁŚ Č ŠÁ‡Ť ŠÇÄËÇ  Č„ Ę›Ś A… ĘGŤ ĘÇD¤@€
€€ A Ź @Ź †€  ť€€ 
€€  € >     SelectedTarget     Cel    TargetSelector    Q    name 
   Glitterlance    range      °Ť@   speed      ¨–@   delay       Đ?   width       N@   Ready    W    Whimsy      P„@   E    Help, Pix!    R    Wild Growth       Ś@   killstring    recall    ECasted  
   EnemyMinions    minionManager 
   MINION_ENEMY      čŚ@   myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    AllMinions    MINION_ALLY    MINION_SORT_MAXHEALTH_DES 
   ECastTime            Pix    Spells    _Q    _W    _E    _R    Spells2    QTargetSelector    TARGET_LESS_CAST_PRIORITY 
   DAMAGE_MAGIC    WETargetSelector    QETargetSelector 
   Shieldspells    AatroxQ 	   charName    Aatrox 
   spellSlot 
   SpellType 
   skillshot    AatroxE    AhriOrbofDeception    Ahri    AhriFoxFire    AhriSeduce    AhriTumble 
   AkaliMota    Akali    castcel    AkaliShadowSwipe    AkaliShadowDance 
   Pulverize    Alistar 	   Headbutt    BandageToss    Amumu    AuraofDespair    Tantrum    CurseoftheSadMummy    FlashFrost    Anivia 
   Frostbite 
   GlacialStorm 
   Disintegrate    Annie    Incinerate    InfernalGuardian    Volley    Ashe    EnchantedCrystalArrow    RocketGrab    Blitzcrank 
   PowerFist    StaticField    BrandBlaze    Brand 
   BrandFissure    BrandConflagration    BrandWildfire    BraumQ    Braum 
   BraumQMissle    BraumR    CaitlynPiltoverPeacemaker    Caitlyn    CaitlynYordleTrap    CaitlynEntrapment    CaitlynAceintheHole    CassiopeiaNoxiousBlast    Cassiopeia    CassiopeiaMiasma    CassiopeiaTwinFang    CassiopeiaPetrifyingGaze    Rupture    Chogath    FeralScream 
   VorpalSpikes    Feast    PhosphorusBomb    Corki    CarpetBomb    GGun    MissileBarrage 
   DariusCleave    Darius    DariusAxeGrabCone    DariusExecute 	   DianaArc    Diana 
   DianaOrbs    DianaVortex    DianaTeleport    InfectedCleaverMissileCast    DrMundo 
   BurningAgony    DravenDoubleShot    Draven    DravenRCast    EliseHumanQ    Elise    EliseHumanW    EliseHumanE    EliseSpiderQCast 
   EliseSpiderW    EliseSpiderEInitial    elisespideredescent 	   EvelynnQ    Evelynn 	   EvelynnE 	   EvelynnR    EzrealMysticShot    Ezreal    EzrealEssenceFlux    EzrealArcaneShift    EzrealTruehotBarrage    Terrify 
   FiddleSticks    Drain    FiddlesticksDarkWind 
   Crowstorm    FioraQ    Fiora    FioraDance    FizzPiercingStrike    Fizz 	   FizzJump    FizzJumptwo    FizzMarinerDoom    GalioResoluteSmite    Galio    GalioRighteousGust    GalioIdolOfDurand    Parley 
   Gangplank    CannonBarrage    GarenQ    Garen    GarenE    GarenR    GnarQ    Gnar 	   GnarBigQ    GnarWStack 	   GnarBigW 	   GnarBigE 	   GnarBigR    GragasBarrelRoll    Gragas    gragasbarrelrolltoggle    GragasBodySlam    GragasExplosiveCask    GravesClusterShot    Graves    GravesSmokeGrenade    gravessmokegrenadeboom    GravesChargeShot    HecarimRapidSlash    Hecarim 	   HecarimW    HecarimUlt    HeimerdingerQ 
   Heimerdinger    HeimerdingerW    HeimerdingerE    IreliaGatotsu    Irelia    IreliaEquilibriumStrike    IreliaTranscendentBlades    HowlingGale    Janna    SowTheWind    JarvanIVDragonStrike 	   JarvanIV    JarvanIVDemacianStandard    JarvanIVCataclysm    JaxLeapStrike    Jax    JaxCounterStrike 
   spellslot    JayceToTheSkies    Jayce    JayceStaticField    JayceThunderingBlow    jayceshockblast    jaycehypercharge    jayceaccelerationgate    JinxW    Jinx 
   JinxRWrapper 	   LayWaste    Karthus    WallOfPain    Defile 
   FallenOne    KarmaQ    Karma    KarmaSpiritBind 
   NullLance 	   Kassadin    NetherBlade    ForcePulse 	   RiftWalk 
   KatarinaQ 	   Katarina 
   KatarinaW 
   KatarinaE 
   KatarinaR    JudicatorReckoning    Kayle    JudicatorRighteousFury    KennenShurikenHurlMissile1    Kennen    KennenBringTheLight    KennenShurikenStorm     KhazixQ    Khazix    KhazixW    KhazixE    khazixqlong    khazixwlong    khazixelong    KogMawCausticSpittle    KogMaw    KogMawBioArcanBarrage    KogMawVoidOoze    KogMawLivingArtillery    LeblancChaosOrb    Leblanc 
   LeblancSlide    LeblancSoulShackle    LeblancChaosOrbM    LeblancSlideM    LeblancSoulShackleM    BlindMonkQOne    LeeSin    BlindMonkWOne    BlindMonkEOne    BlindMonkRKick    blindmonkqtwo    blindmonkwtwo    blindmonketwo    LeonaShieldOfDaybreak    Leona    LeonaZenithBlade    LeonaZenithBladeMissle    LeonaSolarFlare    LissandraQ 
   Lissandra    LissandraW    LissandraE    LissandraR    LucianQ    Lucian    LucianW    LucianR    LuluQ    Lulu    LuluW    LuluE    LuxLightBinding    Lux    LuxLightStrikeKugel    luxlightstriketoggle    LuxMaliceCannon 
   SeismicShard 	   Malphite 
   Landslide    UFSlash    AlZaharCalloftheVoid 	   Malzahar    AlZaharNullZone    AlZaharMaleficVisions    AlZaharNetherGrasp    MaokaiTrunkLine    Maokai    MaokaiUnstableGrowth    MaokaiSapling2 
   MaokaiDrain3    AlphaStrike 	   MasterYi    MissFortuneRicochetShot    MissFortune    MissFortuneScattershot    MissFortuneBulletTime    MordekaiserMaceOfSpades    Mordekaiser     MordekaiserSyphoneOfDestruction    MordekaiserChildrenOfTheGrave    DarkBindingMissile    Morgana    TormentedSoil 
   SoulShackles    NamiQ    Nami    NamiW    NamiE    NamiR    NasusQ    Nasus    NasusW    NasusE    NautilusAnchorDrag 	   Nautilus    NautilusSplashZone    NautilusGandLine    JavelinToss    Nidalee 
   Bushwhack    PrimalSurge 	   Takedown    Pounce    Swipe    NocturneDuskbringer 	   Nocturne    NocturneUnspeakableHorror 	   IceBlast    Nunu 
   AbsoluteZero    OlafAxeThrowCast    Olaf    OlafRecklessStrike    OrianaIzunaCommand    Orianna    OrianaDissonanceCommand    OrianaDetonateCommand    Pantheon_Throw 	   Pantheon    Pantheon_LeapBash    Pantheon_Heartseeker    PoppyDevastatingBlow    Poppy    PoppyHeroicCharge    QuinnQ    Quinn    QuinnE 
   PowerBall    Rammus    PuncturingTaunt 	   Tremors2    RenektonCleave 	   Renekton    RenektonPreExecute    RenektonSliceAndDice    RengarQ    Rengar    RengarE    RivenTriCleav    Riven    RivenTriCleave_03    RivenMartyr    RivenFengShuiEngine    rivenizunablade    RumbleFlameThrower    Rumble 
   RumbeGrenade    RumbleCarpetBomb 	   Overload    Ryze    RunePrison 
   SpellFlux    SejuaniArcticAssault    Sejuani    SejuaniGlacialPrisonStart    Deceive    Shaco 
   JackInTheBox    TwoShivPoisen    ShenVorpalStar    Shen    ShenShadowDash    ShyvanaFireball    Shyvana    ShyvanaTransformCast    PoisenTrail    Singed 
   MegaAdhesive    Fling    CrypticGaze    Sion    SivirQ    Sivir    SkarnerVirulentSlash    Skarner    SkarnerFracture    SkarnerImpale    SonaHymnofValor    Sona    SonaAriaofPerseverance    SonaSongofDiscord    SonaCrescendo 	   Starcall    Soraka    InfuseWrapper    SwainDecrepify    Swain    SwainShadowGrasp 
   SwainTorment    SwainMetamorphism    SyndraQ    Syndra 	   SyndraW     SyndraE    SyndraR 
   TalonRake    Talon    TalonCutthroat    Shatter    Taric    Dazzle    TaricHammerSmash 
   BlindingDart    Teemo    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    RocketJump 	   Tristana    DetonatingShot    BusterShot    TrundleTrollSmash    Trundle    TrundlePain 
   slashCast    Tryndamere 
   WildCards    TwistedFate    TwitchVenomCask    Twitch    TwitchVenomCaskMissle    Expunge    UdyrTigerStance    Udyr    UdyrTurtleStance    UdyrBearStance    UdyrPhoenixStance    UrgotHeatseekingMissile    Urgot    UrgotPlasmaGrenade    UrgotSwap2    VarusQ    Varus    VarusE    VarusR 
   VayneCondemm    Vayne    VeigarBalefulStrike    Veigar    VeigarDarkMatter    VeigarEventHorizon    VeigarPrimordialBurst    VelkozQ    Velkoz    VelkozQMissle    velkozqplitactive    VelkozW    VelkozE    VelkozR    ViQ    Vi    ViR    ViktorPowerTransfer    Viktor    ViktorGravitonField    ViktorDeathRa    ViktorChaosStorm    VladimirTransfusion 	   Vladimir    VladimirTidesofBlood    VladimirHemoplague 
   VolibearQ 	   Volibear 
   VolibearW 
   VolibearE    HungeringStrike    Warwick    InfiniteDuress    MonkeyKingDoubleAttack    MonkeyKing    MonkeyKingNimbus    MonkeyKingSpinToWin    monkeykingspintowinleave    XerathArcanoPulseChargeUp    Xerath    XerathArcaneBarrage2    XerathMageSpear    XerathLocusOfPower2 
   XenZhaoSweep 	   Xin Zhao 
   XenZhaoParry    YasuoQW    Yasuo 	   yasuoq2w 	   yasuoq3w    YasuoDashWrapper    YasuoRKnockUpComboW    YorickSpectral    Yorick    YorickDecayed    YorickRavenous    ZacQ    Zac    ZacW    ZacE    ZedShuriken    Zed    zedult    ZiggsQ    Ziggs    ZiggsW    ZiggsE    ZiggsR 	   TimeBomb    Zilean 	   TimeWarp 
   ZyraQFissure    Zyra    ZyraGraspingRoots    ZyraBrambleZone    InterruptList 
   spellName    typ    hard    low    ShenStandUnited    GapCloserList 	   menuname    GragasE    LeBlanc    BlindMonkQTwo    RivenTriCleave    XinZhao    it 
   ItemsCast    ÔB  ÔB        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ŐB  ŐB        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ÖB  ÖB        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ×B  ×B        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               D  QE   Ş  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 	 GJ GÁĹÁ
 FH € ]@ F @ GŔĆ LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FAL  ÁÁ 
 AÂ ]@€F @ GŔĆ LŔÁ Á@
 
 FAL Á
 ÁÁ 
 AÂ ]@€F @ GŔĆ LŔÁ Á  A FAL  ÁÁ 
 AÂ ]@€F @ L Á ÁŔ  ]@ F @ G Ď L Á Á@  ]@ F @ G Ď G€Ď LŔÁ Á  A FG Á ]@ F @ G Ď G€Ď LŔÁ ÁŔ  FH € ]@ F @ G Ď G€Ď LŔÁ Á@  FAL Á ÁÁ ‚ AÂ ]@€F @ G Ď G€Ď LŔÁ Á  Á FG Á ]@ F @ G Ď G€Ď LŔÁ Á  A FG Á ]@ F Q †@Q ť € ]  €€†@ ‡O‡OŚÁA‚ŃAÂ ‡‚ŃV‚‚†‚H Ă€ ťA b€  ă€üF @ G Ď L Á Á  A ]@ F @ G Ď G@Ň LŔÁ Á  A FG Á ]@ F @ G Ď G@Ň LŔÁ Á€  FH € ]@ F @ G Ď G@Ň LŔÁ ÁŔ  FAL A ÁÁ 
 AÂ ]@€F @ G Ď G@Ň LŔÁ Á€ Á FAL  ÁÁ B AÂ ]@€F @ G Ď G@Ň LŔÁ Á  Á FG Á ]@ F @ G Ď G@Ň LŔÁ Á  A FG Á ]@ AŔ †€T ‡ŔTÁŔ aŔ€FT LŐŔ ]€‡AŐĆÁD ÇAŐŔ€€†@ ‡O‡ARŚÁA‚ŃA‚ ‡‚ŃV‚‚†‚H Ă€ ťA `€úFŔU † @ Á  € C    Ă  ]@€F @ L Á Á  A ]@ F @ G@Ö LŔÁ Á  A FG Á ]@ F @ G@Ö LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ G@Ö LŔÁ Á@
 	 GJ GÁĹÁ
 FH € ]@ F @ G@Ö LŔÁ Á  	 GAK GÁĹ FH € ]@ F @ G@Ö LŔÁ ÁŔ 	 FH   ]@ F @ G@Ö LŔÁ Á  Á FG Á ]@ F @ G@Ö LŔÁ Á  A FG Á ]@ F @ G@Ö LŔÁ ÁŔ  FAL  ÁÁ 
 AÂ ]@€F @ G@Ö LŔÁ Á@
 
 FAL Á ÁÁ 
 AÂ ]@€F @ G@Ö LŔÁ Á  A FAL Á ÁÁ 
 AÂ ]@€F @ G@Ö LŔÁ Á  Á FG Á ]@ F @ G@Ö LŔÁ Á  A FG Á ]@ F @ G@Ö LŔÁ Á  A FW   ĆÁW ÇŘB Ý ]@  F @ L Á Á€ Á ]@ G Y L@Ů Ć @ ÇŔŘ]@€F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á   FG Á ]@ F @ GŔŮ LŔÁ Á@  FAL Á ÁÁ 
 AÂ ]@€F @ GŔŮ LŔÁ Á  A FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á   FG Á ]@ F @ GŔŮ LŔÁ ÁŔ  FAL A ÁÁ 
 AÂ ]@€F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á   FG Á ]@ F @ GŔŮ LŔÁ Á@  FAL Á ÁÁ 
 AÂ ]@€F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á   FG Á ]@ F @ GŔŮ LŔÁ Á@  FAL A ÁÁ 
 AÂ ]@€F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á   FG Á ]@ F @ GŔŮ LŔÁ Á@  FAL A ÁÁ 
 AÂ ]@€F @ GŔŮ LŔÁ Á€ Á FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á    FG Á ]@ F @ GŔŮ LŔÁ Á@   FAL Á ÁÁ 
 AÂ ]@€F @ GŔŮ LŔÁ Á€  Á  FH € ]@ F @ L Á Á ! A! ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€! Á! FH € ]@ F @ G@á LŔÁ Á " 	 GÁI GÁĹ
 FH € ]@ F @ G@á LŔÁ Á@" 	 GAK GÁĹ FH € ]@ F @ L Á Á€" Á" ]@ F @ GŔâ LŔÁ Á  A FG Á ]@ F @ GŔâ LŔÁ Á # 	 GÁI GÁĹ
 FB Á Ë€B# A‚# Â# äA€]@€F @ GŔâ LŔÁ Á $ 	 GAK GÁĹ FB A$ Ë€B# A‚# Â# äA€]@€F @ GŔâ LŔÁ Á  Á FG Á ]@ F @ GŔâ LŔÁ Á  A FG Á ]@ F @ GŔâ LŔÁ ÁŔ  FAL Á ÁÁ 
 AÂ ]@€F @ GŔâ LŔÁ Á  A FAL Á ÁÁ 
 AÂ ]@€F @ L Á Á€$ Á$ ]@ F @ GŔä LŔÁ Á  A FG Á ]@ F @ GŔä LŔÁ Á % 	 GÁI GÁĹ
 FH € ]@ F @ GŔä LŔÁ Á@% 	 GAK GÁĹ FH € ]@ F @ GŔä LŔÁ Á  Á FG Á ]@ F @ GŔä LŔÁ Á  A FG Á ]@ F @ GŔä LŔÁ ÁŔ  FAL Á ÁÁ 
 AÂ ]@€F @ GŔä LŔÁ Á  A FAL Á ÁÁ 
 AÂ ]@€F @ L Á Á€% Á% ]@ F @ GŔĺ L Á Á & A& ]@ F @ GŔĺ G@ć LŔÁ Á  A FG Á ]@ F Q †@Q ť € ]  €€†f ÇÁf ť €Ç‚ŃQ  €Ć@ ÇÂĺÇBćĚÂÁGgC' ÇQ„' Gg–CĆH € ÝB ˘  #űb€  ă€ůF @ GŔĺ G@ć LŔÁ Á  Á FG Á ]@ F @ GŔĺ G@ć LŔÁ Á  A FG Á ]@ F @ GŔĺ G@ć LŔÁ ÁŔ' ( FH € ]@ F @ GŔĺ L Á Á@( ( ]@ F @ GŔĺ G€č LŔÁ Á  A FG Á ]@ F Q †@Q ť € ]  €€†f ÇÁh ť €Ç‚ŃQ  €Ć@ ÇÂĺÇ‚čĚÂÁGg) ÇQD) G„i–CĆH € ÝB ˘  #űb€  ă€ůF @ GŔĺ G€č LŔÁ Á  Á FG Á ]@ F @ GŔĺ G€č LŔÁ Á  A FG Á ]@ F @ GŔĺ G€č LŔÁ ÁŔ) * FH € ]@ F @ L Á Á@* * ]@ F @ G€ę L Á ÁŔ* A& ]@ F€f †@Q ť € ]   	€†f Çk ť€€ÇBk ë€ €ĂEÇŰ  €€Ć@ Ç‚ęÇBćĚÂÁFĂk Śë  ť€‡ĂE] , ĆĂk „ŃÝ D, FÄk ‡„l ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ G€ę LŔÁ Á  A FG Á ]@ F @ G€ę LŔÁ Á  Á, FG Á ]@ AŔ †€T ‡ŔTÁŔ a €FT LŐŔ ]€‡AŐĆÁD ÇAŐŔŔ€†@ ‡jŚÁA‚ŃG‚Ń†‚H Ă€ ťA `@űF @ G€ę LŔÁ Á  Á FG Á ]@ F @ G€ę LŔÁ Á  A FG Á ]@ F @ G€ę LŔÁ Á -  FH € ]@ F @ L Á Á@- - ]@ F @ G€í LŔÁ Á  A FG Á ]@ F @ G€í LŔÁ ÁŔ- . FH € ]@ F @ G€í LŔÁ Á@. . FH € ]@ F @ G€í LŔÁ Á  Á FG Á ]@ F @ G€í LŔÁ Á  A FG Á ]@ F @ G€í LŔÁ ÁŔ. / FH € ]@ F @ G€í LŔÁ Á@/ / FÁo ‹ Á0 Â AB0 Â ¤A ]@ F @ G€í LŔÁ Á  Á FG Á ]@ F @ G€í LŔÁ Á  A FG Á ]@ F @ G€í LŔÁ Á€0 Á0 FH € ]@ F @ G€í LŔÁ Á 1 A1 FÁo ‹ Á0 Â AÂ 0 ¤A ]@ F @ G€í LŔÁ Á  Á FG Á ]@ F @ G€í LŔÁ Á  A FG Á ]@ F @ G€í LŔÁ Á€1 Á1 FH € ]@ F @ G€í LŔÁ Á 2 A2 FÁo ‹ ÁÁ 0 AÂ 0 ¤A ]@ F @ G€í LŔÁ Á  Á FG Á ]@ F @ G€í LŔÁ Á  A FG Á ]@ F @ G€í LŔÁ Á€2 Á2 FH € ]@ F @ G€í LŔÁ Á 3 A3 FÁo ‹ Á0 Â A0 Â ¤A ]@ F @ L Á Á€3 Á3 ]@ F @ GŔó LŔÁ Á  A FG Á ]@ F @ GŔó LŔÁ Á 4 A4 FH   ]@ F @ GŔó LŔÁ Á€4 Á4 Fu   ĆÁW ÇŘB5 Ý ]@  F @ G@Ö L€ő Á  ]@€F @ GŔĺ G@ć L€ő ÁŔ' ]@€F @ GŔĺ G€č L€ő ÁŔ) ]@€ € ×   	   MenuLulu 
   scriptConfig    MasterSeries: Lulu    Lulu1    addSubMenu    [Lulu]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Lulu    addTS    [Lulu]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    EQ &   Extend Q Range With E On Ally/Minions    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   [Lulu]: Ultimate Settings    uConfig 	   Knokc-UP 	   kuConfig    RKU    Enable    RKUC    Min. Enemy To Knoock UP       @   ipairs    GetEnemyHeroes 	   charName    Use Auto K-U On:  
   Auto Save 	   saConfig    RST    RSTHP 
   Min. HP %       4@   UAUR    Range To Check Near Enemy       ‰@     p§@   heroManager    iCount    GetHero    team    Try Save :  
   AddSpellMenu    [Lulu]: Harras Settings 
   harrasConfig       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Lulu]: Items Settings 
   iteConfig    it    LoadToMenu    [Lulu]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use       D@   umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Lulu]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    EKS    [Lulu]: Farm Settings    farm    QF    No 	   Freezing 
   LaneClear    EF        @   [Lulu]: Jungle Farm Settings    jf    QJF    EJF    [Lulu]: Extra Settings 	   exConfig    Auto-Interrupt    ES    pairs    InterruptList 
   spellName    Stop          UI 
   Enable IS    Anti GapCloser    ES2    GapCloserList    GapCloser     :  	   menuname    UG 
   Enable GC    [Lulu]: Shield Settings    sConfig    Enemy Skills:    Spells 
   Shieldspells 
   GetSpellData 	   tostring    Block      Spell     Spells2    Use Shield On:    UAS    [Lulu]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DAAR    Draw AA Range    DAARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@      i@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR    Draw W&E Range    DWRC    Draw W&E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Lulu]: Misc Settings 	   prConfig    ALS    Auto lvl skills    SE 
   Small Escape    SCRIPT_PARAM_ONKEYDOWN    T 
   permaShow                          SE  mE   F   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡F€D GŔÄ ]€€ ‡ E N€€ @€Š  €
ŔE‹G F [@  Ŕ €L@F ]@ L€F ]@ F@@ GŔĆ G Ç [    €G F [@  @ €L@G ]@  €       CheckOB 	   MenuLulu    QTargetSelector    update    WETargetSelector    QETargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    WECel    QECel    GetCustomTarget    TargetSelector    target    os    clock 
   ECastTime       @   ECasted     recall    Support    AutoR 	   prConfig    SE    Escape                          oE  E   ™   F @ ]€€ [   Ŕ$€G@@ [@   $€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€A G Â G@Â [   €€F€@ ‡Ŕ@ Ç€B ÇŔÂ]€€[   Ŕ€F€A G Â G Ă [@  €€F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡ B‡@D@ Ŕ €L€D ÇŔ@ AC ]@ F€A G Â GŔÄ [    €F€@ ‡ E Ç@E ÇŔÂ]€€[   @€F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡ B‡€E@ € €LŔE Ç E ]@€F€A G Â G Ć [   @€F€@ ‡ E Ç@F ÇŔÂ]€€[   €€F€A G Â G Ă [@  @€F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡ B‡€F@ € €LŔF Ç E ]@€F€@ ‡ G ]€ [   Ŕ	€F@G ‡ G ]€ ‡€B ‡ŔBÇ@F ÇŔÂŤŔ €€ @€F€A G Â G Ă [    €F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡ B‡@D@ @€F@C G€Ă †@C ‡ŔCP€€ O Ä †€A ‡ B‡€F@ € €L€G Ç G ]@€ €       ComboActive    recall    ValidTarget    QCel    it 
   CastItems 	   MenuLulu 
   iteConfig    comboConfig    USEQ    Q    range    EQ    myHero    mana    maxMana       Y@   QMANA    CastQ    USEW    WECel    W    WMANA    CastW    USEE    E    EMANA    CastE    QECel    GetDistance 
   ExtendedQ                          E  ’E   “   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    "€G A [@  @!€F @ G@Ŕ G@Á [   €€F€A ‡ŔA Ç B Ç@Â]€€[   Ŕ€F @ G@Ŕ G€Â [@  €€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ Ŕ €L D ÇŔA ÁB ]@ F @ G@Ŕ G@Ä [    €F€A ‡€D ÇŔD Ç@Â]€€[   @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ E@ € €L@E Ç€D ]@€F @ G@Ŕ G€Ĺ [   @€F€A ‡€D ÇŔE Ç@Â]€€[   €€F @ G@Ŕ G€Â [@  @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ F@ € €L@F Ç€D ]@€F€A ‡€F ]€ [   Ŕ	€FŔF ‡€F ]€ ‡ B ‡@BÇŔE Ç@ÂŤŔ €€ @€F @ G@Ŕ G€Â [    €FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ F@ € €L G Ç€F ]@€ €    	   MenuLulu 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEQ    ValidTarget    QCel    Q    range    EQ    myHero    mana    maxMana       Y@   QMANA    CastQ    USEW    WECel    W    WMANA    CastW    USEE    E    EMANA    CastE    QECel    GetDistance 
   ExtendedQ                          ”E  áE   Ř   X Ŕ Ŕ€‡@Ŕ ›@   €†€@ Ŕ € ť€ ›@    € € Ą   ĺ@  Á@ A€   €€AA @€  GÁ@ GÁ@Ŕ €ÁA €€ A€@.€B A€    €Á@ A€   Ŕ€AA @€  @B€€B ÁBFB LĂĆAC ]€GÁÂ†B ŚC‚C ť€‡ÁBM Ŕ€  @€ Á „  Ő€Ŕ‡€€ĆD  €ÝŔ€ €@€ €€€  @€CD FC €€C€
Ŕ‰ !€â  cBü@ €Ő Ŕ‡€€ĆD   ÝŔ€ €@€ €€€  @€CD FC €€C€
Ŕ‰€€â  cBüŔ€D X @ €B A€ A  Ŕ€Á@ A€   €€AA @€  GÁ@ GÁ†AA ÇD ť MMÁÄ@€€E €€ ÇÁ@ ÇAĹÂ@ ‚EGÂ@ G‚Á‡Â@ ‡ÂEÇ‚D   ĚE @€ ‡Â@ ‡BEÇÂ@ Ç‚ĹĂ@ AGĂ@ GĂĹ†B Ă  ÝX Ŕ@€X @Ŕ€  @€†BA Ŕ€ť‚ ÇÂ@ Ç‚ÁŔ€€†BD ĆBC ĆGCĆťB 
 @‰ 	€X @€€X Ŕ €[  €€†BA Ŕ ť‚ ÇÂ@ Ç‚ÁCA GD  ÍÍÂÄŔ€€†BA Ŕ D ť‚€ÇÂ@ Ç‚ÁŔ€€†BA Ç‚D ť‚ €Ť@€†BD ĆBC FGCFťB 
 @‰ €        dead    ValidTarget    Q    Ready    GetDistance    range    CastQ    E      Č™@   myHero    mana 
   GetSpellData    _Q    _E       đ?   ipairs 
   CastSpell    Pix       Y@   CombinedPredict    delay    width    speed    x    z       n@   –E  łE   ´   K   ‹   Ć @ Ý€€ A@ @€Ŕ	€G‚@[   	€GÂ@[B  @€FA € ]‚ [   €FBA € Ŕ  ]‚€†‚Á ‡ÂA€‚ €GB‡B X€‚ €FBA € ]‚ †BÂ ‡ÂA€‚@€F‚B GÂÂ€€ Ŕ ]B€F‚B GÂÂ€ Ŕ ]B€"  ŁAőC € FA@ € ]@€‡‚Ŕ›  €€‡ÂŔ›B  Ŕ€†BA Ŕ€   ť‚€Ć‚Á ÇÂÁŔŔ€‡ÂÇB XŔŔ€†BA Ŕ€ť‚ ĆBÂ ÇÂÁŔ €†‚B ‡ÂBŔ€  €ťB€b  ăÁ÷FAĂ LĂ]A FA@ †AĂ ‡ÁC]@	€‡‚Ŕ›  €€‡ÂŔ›B  Ŕ€†BA Ŕ€   ť‚€Ć‚Á ÇÂÁŔŔ€‡ÂÇB XŔŔ€†BA Ŕ€ť‚ ĆBÂ ÇÂÁŔ €†D ÁB  €FCD ť‚ Ç‚ÄŔ €†‚B ‡ÂBŔ€  €ťB€b  ăÁőFÁÄ LĂ]A FA@ †ÁÄ ‡ÁC]@€‡‚Ŕ›  €€‡ÂŔ›B  Ŕ€†BA Ŕ€   ť‚€Ć‚Á ÇÂÁŔŔ€‡ÂÇB XŔŔ€†BA Ŕ€ť‚ ĆBÂ ÇÂÁŔ €†‚B ‡ÂBŔ€  €ťB€b  ăÁ÷@€ € _€ €       GetEnemyHeroes    ipairs    valid    dead    ValidTarget    GetDistance    Q    range 
   networkID    E    table    insert    GetAllyHeroes 
   EnemyMinions    update    objects    getDmg    myHero    health    AllMinions                           ´E  żE   	6   X Ŕ  €X @ €€†@@ Ŕ   ť€ €@@
€†@@ Ŕ € ť€ ĆŔŔ Ç ÁŔ €€†@@ Ŕ €    ť€€Ć@Á Ç ÁŔ €€†€A ŚŔA   A †AB ‡BĆÁB   ťŔ€X @Ŕ€X Ŕ@€€ C€€ €FA@ € Ŕ ]€†AÁ ‡A€@ €C€ _    ź   € 
       GetDistance      Č™@   E    range    Q    VP    GetPredictedPos       ŕ?   math    huge    myHero    PredictPixPosition                                                âE  îE   -   † @ Ś@@ € ť€€Ő  Ŕ Ŕ€ĚŔ@ @€  ĆAA ÇÁÂA C  ÝŔ€X Â€€FAB †AB Ŕ€ť ĆAB  € Ý ŽÁ] LÂ] †AB Ŕ€ť ĆAB  €Ý @ ÂB€€ ‚€
CĎ‚ŽÁź   €_   € 
      VP    GetCurrentWayPoints       đ?   CombinedPos       Đ?   math    huge    myHero     Vector    normalized 
   GetHitBox       Y@                         ďE  öE   
   X Ŕ Ŕ€‡AŔ ›A   €†@ Ŕ€ ť ›A    € €  Ŕ  €C  †Á@ ŚA € @ €€Ŕ  €ťÁ€  @€€ €        dead    ValidTarget    VP    GetPredictedPos                          ÷E  űE      X Ŕ € €BŔ     € € ‚@ FÂ@ GÁGBÁG‚Á€€ Ŕ  €@ €€Ŕ Ä C    Ä   FĹ@ GÁ
GEÁ
GEÂ
Ŕ  €ß€ € 
       dead    GetPrediction2 	   MenuLulu 	   spConfig    qConfig    QP    line    Q    QCH                          ýE  %F   Ľ   F @ ]€€ [   €-€G@@ [@  Ŕ,€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ Ŕ(€€Â €
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ
€X Ä€€BD @€‡‚D ‡ÂD‚€  Ŕ€‚D E‚€   €€BE G‚D GÂÄ‡‚D ‡‚EÇ‚@ ÇBÂÂ X D €@‚‹€€€B@€†BD Ŕ€F ĂDť‚€›  € €ŚBF  €ťB€†‚F ĆÂF GGCGťB  
€ŔĹ €	€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ€X Ä@€BD @€‡‚D ‡ÂD‚€  €€‚G ÂG€€ĆH Ý‚€ ĐBČ‚ F‚H ‚ Ŕ€ĂB A ]‚€@Ŕ €ŚÂH  €FĂB ťB €BŔ€ÂB CFÂB GBĂB‚CFA GBÁGÉ ‚ €X Ä€€BD @€‡F ‡ÂD‚€  Ŕ
€BF €€B€Ŕ	€ŔE@	€ÂB CFÂB GBĂB‚CFA GBÁGÉ ‚€€X Ä €BD @€‡F ‡ÂD‚€  @€‚G ÂG€€ĆH Ý‚€ ĐBČ‚ F‚H  Ŕ€ĂB A ]‚€@€ €ŚBF  €ťB€â€  cAÖ € %      FarmActive    recall 
   EnemyMinions    update 	   MenuLulu    farm    QF    EF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA     ValidTarget    Q    range    Ready    GetBestLineFarmPosition    width        @   E    CastE 
   CastSpell    _Q    x    z    VP    GetPredictedHealth    GetLatency      @Ź@   getDmg    CastQ    EMANA                          'F  :F   [   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ	€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €X€Ă€€†ÁC Ŕ€D BDť€›  Ŕ€‡D ‡Dť€ ›  €€†ÁD ÇD ÇAÄD EG‚@ GBÁťÁ X€C €BE F‚E ‡ÂEÇFB †A ‡ÁA‡AF›  €€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇĆ€Ŕ€X€Ă@€†ÁC Ŕ€ÂF BDť€›  € €ŚG  €ťA€b€  ă í €       FarmActive    recall    JungleMinions    update    pairs    objects 	   MenuLulu    jf    QJF    myHero    mana    maxMana       Y@   QMANA     ValidTarget    Q    range    Ready    GetBestLineFarmPosition    width 
   CastSpell    _Q    x    z    EJF    EMANA    E    CastE                          <F  OF   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €    	   MenuLulu    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          QF  TF      L @ Ć@@ ]@€F@@ L€Ŕ ĆŔ@ Ç ÁÁ@ AA]@  €       CastW    myHero    MoveTo 	   mousePos    x    z                          VF  nF   q   F @ G@Ŕ G€Ŕ GŔŔ [    €F A †@A ť € ]  @
€ ĆÁA ÇÂ‚ ˇÁ€†ÂA ŚBB €ť‚€Ç‚BĂB B €€ĆC   AC Ý‚€@ C@@GĂC  Ŕ€@ C@@ĂCŔ@€D @  GCD GÄ@€ €ĂD € C€ öb€  ăŔôF @ G@Ŕ G Ĺ G@Ĺ [   €€A€ †ŔA ‡ BÁ€ a €FÁA LAÂŔ ]€‡ÂĆÁB ÇÂŔŔ€†@ ‡A@‡EÇĂ‡Á›   €‡ĹÇÁĹÁŹFĆ@ ÇAŔÇĹÇAĆŔ€€†D Ŕ€ť ÇAD ÇÄŔŔ€†C Ŕ€@ B@E‚Fť€€Ť€ €ŚÁD  €ťA€`@ô €    	   MenuLulu    uConfig 	   kuConfig    RKU    pairs    GetEnemyHeroes       đ?   heroManager    iCount    GetHero    team    myHero    EnemyCount      Ŕr@	   charName    RKUC    GetDistance    R    range    CastR 	   saConfig    RST    health 
   maxHealth       Y@   RSTHP    UAUR                                  pF  vF   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆB CB FB †B ĆB ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuLulu 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         xF  ‰F   i   F @ †@@ ť € ]   €‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€FB GÂÂOB†MB‚†X€Ă €†ÂC Ŕ€ ť‚€›  €€‡BD ›B  Ŕ€†‚D ŚÂD ť‚€@ €ĆBE Ç‚ĹÇÂĹŰ  Ŕ€ĆÂC  €A Ý‚€Ű  @€›  Ŕ€ĆBF D F €@€ÝB€ 	€Ŕ@€ĆBE Ç‚ĹÇÂĆŰ   €ĆÂC  €GĂA GÇNCÇÝ‚€Ű   €Ě‚G @€†B ÝB  € €€ĆBE Ç‚ĹÇÂÇŰ  @€ĆÂC  €GB GÇÝ‚€Ű  € €ĚH @€ÝB€b€  ă ç € !      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    level       4@      I@    ValidTarget      p—@   recall    SSpells    Ready    summonerdot 	   MenuLulu 	   ksConfig    IKS      Ŕ‚@
   CastSpell    GetSlot    QKS    range       >@   CastQ    EKS    CastE                          ‹F  —F   J   Ç @ Ç@ŔÝ€€ Ű@    € € Ć€@ ĚŔŔ@€ ‡@ ‡AÇ@ ÇAÁ@ ‚AFÂA Ý Ű   €€   €†B Ŕ€ť Ç@ ÇAÂŔ@€†B ĆÁB ĂGBĂťA  € †C ĆÁC ÇÄÇAÄÇÄ € G@ GÁ‡@ ‡BAÇ@ ÇBÂ@ A@ Ă Ă    D    ĆÄC ÇÄ	ÇDÄ	ÇĹ	ťX@E@ €ŰA    € € ›  €€Ű   €F‚B †ÂB ÇCCC]B  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 	   MenuLulu 	   spConfig    qConfig    QP    line    QCH                           ™F  ťF   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       W    Ready 
   CastSpell    _W                          źF  ŁF   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       E    Ready 
   CastSpell    _E                          ĄF  ©F   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       R    Ready 
   CastSpell    _R                          «F  ĆF   
Ý   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€LŔD ]@ F E †@E ť € ]   €†E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă řF @ G@Ŕ G@Č [    €F B †€H ‡@BĆ€H Ç€ÂH ÁBFH GÁČMÉ†AC Ć@ ÇAŔÇAÉÇÁĂ@ B@BIDF@ GBŔGBÉGBÄť ]@  F @ G@Ŕ G€É [    €GŔI G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGÁI GÁČ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G@Ę [   @€G€J G Ę ]€€ [@   €GŔJ G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGJ GÁČ†AC Ć@ ÇAŔÇËÇÁĂ@ B@KDF@ GBŔGËGBÄť ]@  F @ G@Ŕ G@Ë [    €G€K G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGK GÁČ†AC Ć@ ÇAŔÇÁËÇÁĂ@ B@ÂKDF@ GBŔGÂËGBÄť ]@   € 0   	   MenuLulu    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget      @ź@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DAAR    myHero    range      @P@   DAARC    DQR    Q    Ready    DWR    W    E    DWRC    DRR    R    DRRC                          ČF  âF   
Z   F @ †@@ ť € ]  @€‡Ŕ›A  €€‡ÁŔ›  Ŕ€‡ÁĆAA ÇÁÂÁÝ ŤÁĆB B @€†‚B ÁÂ Ý€B A €€Ć‚B Ă ‚€F‚B GBĂOB‡MB‚‡Ť‚ŤB€Ŕ €‡D ÇBÄŠ‚Ä@€ŔŔ €‡D ÇBÄŠÂÄŔ	€ Ŕ €‡D ÇBÄŠĹ@€@Ŕ €‡D ÇBÄŠBĹŔ€ŤB‚€Ŕ €‡D ÇBÄŠ‚Ĺ €ŤB€Ŕ €‡D ÇBÄŠÂĹ@€Ť‚€Ŕ €‡D ÇBÄŠĆ€€Ť‚ŤB€€ €‡D ÇBÄŠBĆb€  ăŔę €       pairs    GetEnemyHeroes    dead    visible    health    math    floor    shield    getDmg    Q    myHero       @   E    level       4@      I@   killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill! 
   Ignite Kill!    Q+Ignite Kill!    E+Ignite Kill! 
   Q+E Kill!    Q+E+Ignite Kill!                          äF  čF      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ęF  îF      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          đF  <G   ß  [    €›   €€Ç Ŕ Ű   Ŕ€Ç@@€Ŕ €
 ÁĆ€A ÇŔÁÝ€€ 
Ŕ€‚Ć B Ç@ÂÇ€ÂÇŔÂŰ   Ŕ€Ç C Ç@ĂÝ€€ Ű   €€Ć€C ÁC Ý  €[   €€Ä FBD GÄX@@€‚Ä FBD G‚Ä@ 
€›   €€B@GÂÄ@€€B BB‚BGÂÄB  Ŕ	€E @€ ‚   €€BĹ€E@€ÂE BC‚€    €F @€ ‚ @FŔ €‚F †BD B€@€BĹX€E€€C BC‚€   @€F @€ ‚ GC GÂĆ@€ €G €€ B€â€  cďĆ B Ç@ÂÇ@ÇÇ€ÇŰ   Ŕ€Ç C Ç@ĂÝ€€ Ű   €€Ć€C ÁG Ý  €[   €€Ä FBD GÄX@@€‚Ä FBD G‚Ä@ €›   €€B@GÂÄ@€€B BBBGGÂÄB  Ŕ€E @€ ‡C ‡ÂF‚€   €H  Ŕ€H@  Ŕ €G €€ B€@
€HB  €€BH @€ ‚ FBH ‡‚H]‚ †BH Ŕ€ ť‚ N‚‚LÂČ]‚ OB‚Ś
BFBH €€ ]‚ †BH Ç‚Hť‚ ĆBH  € Ý‚ ŽÂŚÂHť‚ Ź‚’M‚‚†BI ĆBD  € ť‚€ĆBI CD @ Ý‚€Y€‚@€†BI ĆBD  € ť‚€ĆBI CD @€Ý‚€€‚€ €ŚG  € ťB€â€  cçĆ B Ç€ÉÇŔÉŰ   @A€Ç J Ç@ĂÝ€€ Ű    @€[   €?€Ç Ä AD DX @>€Ć@D Ç@ĘŰ@  @=€Ç€Ä AD D  <€›   €;€Á@ A @K– •Ŕ •Ç€Ä AD D  €Ç€K A@Ç Ű   Ŕ
€Ć B Ç€ÉÇ€ÂA@Ç Ű    €Ć@L  € GA@ÝŔ€ Ŕ€—Ć L X€Ě@€Ć L XŔĚ€ €Ć L  Í  € € ĆŔK X@Í €ĆŔK X Ă@€ĆŔK X Ę€ €ĆŔK ŔĹ €Ć€M ÁÍ Ç ÁK Ç Ç€ÄŔ •Ć€M ÁÍ Ç ÁK Ç ÇŔĘŔ€•Ć€M ÁÍ Ç ÁK Ç Ç ËŔ –Á  AN NA á@(€ĆAN ĚÁÎ@ Ý€  FB G‚É‡ÂÍG‚‚[    € €  Â$€GD†BD ‡D€‚‚#€GBJ[B  Â"€GO@‚–"€€ĎžGÂO†‚J @KŔ€‡H›  €€‡H‡PÇPXŔ  €B  € €‚ž €†‚J  N@€†BP Ŕ€ HFĂJ †K Ŕ  €ť‚€€‚žŔ€†‚J €P@€†ÂP Ŕ€ HFĂJ †K Ŕ  €ť‚€€‚ž€€†‚J  Q@€†BQ Ŕ€ HFĂJ †K Ŕ  €ť‚€€‚ž@€†‚J €L@€†‚Q Ŕ€ HFĂJ †K Ŕ  €ť‚€€‚ž 
€†‚J ŔL@€†ÂQ Ŕ€ HFĂJ †K Ŕ  €ť‚€€‚žŔ	€†‚J  M €†BP Ŕ€ HFĂJ †K Ŕ  €ť‚€›B   €†BP Ŕ€ CH @€  PGHCFĂJ †K Ŕ  €ť‚€€‚žŔ€†‚J  R €†‚Q Ç‚H € FĂJ †K Ŕ  €ť‚€€‚ž†BO ›  Â€†F Ŕ ť‚ ÇJ ÇÂĆŔ€†BR ĺ   ťB€Â˙ŕ × € K      isMe    name    LuluE    ECasted 
   ECastTime    os    clock 	   MenuLulu 	   exConfig    ES    UI    W    Ready    pairs    InterruptList    team    myHero    type 
   spellName    ValidTarget    typ    hard    R    GetDistance      Ŕr@   CastR    range    CastW    ES2    UG    GapCloserList    target    Vector    endPos    normalized       Y@   GetDistanceSqr    sConfig    UAS    E    dead 	   shottype    radius    maxdistance         
   Shieldspells 
   spelltype 	   casttype 
   getSpellType       @      @      @   Q 
   skillData 	   charName       đ?   heroManager    iCount    GetHero    health    hitchampion     boundingRadius 
   networkID    checkhitlinepass        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall       @   DelayAction š™™™™™É?   4G  6G           @ … € @€ €       CastE                                              >G  XG   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuLulu    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          bG  ‰G   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    hG  hG           @ @  €       AfterAA                         kG  kG           @ @  €    	   BeforeAA                         rG  rG           @ @  €       AfterAA                         uG  uG           @ @  €    	   BeforeAA                         {G  {G        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    {G  {G           @ @  €       AfterAA                                               ~G  ~G           @ @  €    	   BeforeAA                         G  G           @ @  €       AfterAA                         †G  †G           @ @  €    	   BeforeAA                              	
                ‹G  ;I   "b
  
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€ J@Ä‚J€ÄJ Â„JŔÄ…J Ĺ†Ą@  J€€‡
@ KŔ  J€Ĺ‚JŔĹĄ€  J€€‡
@€ŠKŔ  J@Ć‚J€ĆĄŔ  J€€‡
@ Ś
 ÇŤF€G †ŔG Ç A ÇŔÁH FAH ]€€
@€ŽF€G †ŔH Ç A ÇŔÁH FAH ]€€
@ ‘FŔ@ †@I Ç A ÇŔÁI C  ]€€
@ ’FŔ@ †@I Ç D ÇŔÁI C  ]€€
@€“K  †@J Ć€J ÁJ FK d@ 
@ ”K    Á  A A d@ 
@€–K   
@ —K 
 ‹Ŕ  Š€ĚŠ Á™Š@MšJ€ ‹Ŕ  Š€ĚŠ@Ĺ™Š@MšJ€ ›‹Ŕ  Š ÎŠ Á™Š@MšJ€€›‹Ŕ  Š ÎŠ Ä™Š@MšJ€€ś‹Ŕ  Š ÎŠ@Ĺ™Š@MšJ€ ť‹Ŕ  Š ÎŠ Ć™Š@MšJ€€ť‹Ŕ  Š@ĎŠ Á™Š€OšJ€ ž‹Ŕ  Š@ĎŠ@Ĺ™Š@MšJ€€ź‹Ŕ  Š@ĎŠ Ć™Š€OšJ€  ‹Ŕ  Š€ĐŠ Á™Š€OšJ€€ ‹Ŕ  Š€ĐŠ Ä™Š€OšJ€€ˇ‹Ŕ  Š@ŃŠ Á™Š@MšJ€ ˘‹Ŕ  Š@ŃŠ Ä™Š@MšJ€ Ł‹Ŕ  Š@ŃŠ@Ĺ™Š@MšJ€€Ł‹Ŕ  Š@ŃŠ Ć™Š@MšJ€ ¤‹Ŕ  Š€ŇŠ Á™Š@MšJ€€¤‹Ŕ  Š€ŇŠ@Ĺ™Š€OšJ€€Ą‹Ŕ  Š€ŇŠ Ć™Š@MšJ€ ¦‹Ŕ  Š€ÓŠ Á™Š€OšJ€€¦‹Ŕ  Š€ÓŠ Ä™Š€OšJ€€§‹Ŕ  Š€ÓŠ Ć™Š€OšJ€ ¨‹Ŕ  Š€ÔŠ Ä™Š@MšJ€€¨‹Ŕ  Š€ÔŠ Ć™Š@MšJ€€©‹Ŕ  Š@ŐŠ Á™Š@MšJ€ Ş‹Ŕ  Š@ŐŠ@Ĺ™Š@MšJ€ «‹Ŕ  Š@ŐŠ Ć™Š@MšJ€€«‹Ŕ  Š@ÖŠ Á™Š@MšJ€ ¬‹Ŕ  Š@ÖŠ Ä™Š@MšJ€ ­‹Ŕ  Š@ÖŠ@Ĺ™Š€OšJ€€­‹Ŕ  Š@ÖŠ Ć™Š€OšJ€ ®‹Ŕ  Š€×Š Á™Š@MšJ€€®‹Ŕ  Š€×Š Á™Š@MšJ€€Ż‹Ŕ  Š€×Š Ć™Š@MšJ€ °‹Ŕ  Š€ŘŠ Á™Š@MšJ€€°‹Ŕ  Š€ŘŠ Ä™Š@MšJ€€±‹Ŕ  Š€ŘŠ@Ĺ™Š@MšJ€ ˛‹Ŕ  Š€ŘŠ Ć™Š€OšJ€€˛‹Ŕ  ŠŔŮŠ Á™Š@MšJ€ ł‹Ŕ  ŠŔŮŠ Ä™Š@MšJ€ ´‹Ŕ  ŠŔŮŠ@Ĺ™Š€OšJ€€´‹Ŕ  ŠŔŮŠ Ć™Š@MšJ€ µ‹Ŕ  Š ŰŠ Á™Š@MšJ€€µ‹Ŕ  Š ŰŠ Ä™Š@MšJ€€¶‹Ŕ  Š ŰŠ@Ĺ™Š€OšJ€ ·‹Ŕ  Š ŰŠ Ć™Š€OšJ€€·‹Ŕ  Š@ÜŠ Á™Š@MšJ€ ¸‹Ŕ  Š@ÜŠ Ä™Š@MšJ€ ą‹Ŕ  Š@ÜŠ@Ĺ™Š@MšJ€€ą‹Ŕ  Š@ÜŠ Ć™Š@MšJ€ ş‹Ŕ  Š€ÝŠ Á™Š€OšJ€€ş‹Ŕ  Š€ÝŠ@Ĺ™Š€OšJ€€»‹Ŕ  Š€ÝŠ Ć™Š€OšJ€ Ľ‹Ŕ  Š€ŢŠ Á™Š@MšJ€€Ľ‹Ŕ  Š€ŢŠ Ä™Š@MšJ€€˝‹Ŕ  Š€ŢŠ@Ĺ™Š@MšJ€ ľ‹Ŕ  Š€ŢŠ Ć™Š€OšJ€€ľ‹€  ŠŔßŠ Á™J€ ż‹Ŕ  ŠŔßŠ Ä™Š@MšJ€ Ŕ‹Ŕ  Š€ŕŠ@Ĺ™Š€OšJ€€Ŕ‹Ŕ  Š€ŕŠ Ć™Š€OšJ€€Á‹Ŕ  Š@áŠ Á™Š€OšJ€ Â‹Ŕ  Š@áŠ Ä™Š@MšJ€ Ă‹Ŕ  Š@áŠ@Ĺ™Š@MšJ€€Ă‹Ŕ  Š@áŠ Á™Š@MšJ€ Ä‹Ŕ  Š@áŠ Ä™Š@MšJ€€Ä‹Ŕ  Š@áŠ@Ĺ™Š€OšJ€ Ĺ‹Ŕ  Š@áŠ@Ĺ™Š€OšJ€€Ĺ‹Ŕ  Š@ăŠ Á™Š@MšJ€ Ć‹Ŕ  Š@ăŠ@Ĺ™Š€OšJ€ Ç‹Ŕ  Š@ăŠ Ć™Š@MšJ€€Ç‹Ŕ  Š@äŠ Á™Š@MšJ€ Č‹Ŕ  Š@äŠ Ä™Š@MšJ€ É‹Ŕ  Š@äŠ@Ĺ™Š€OšJ€€É‹Ŕ  Š@äŠ Ć™Š@MšJ€ Ę‹Ŕ  Š€ĺŠ Á™Š€OšJ€€Ę‹Ŕ  Š€ĺŠ Ä™Š€OšJ€€Ë‹Ŕ  Š€ĺŠ@Ĺ™Š€OšJ€ Ě‹Ŕ  Š€ĺŠ Ć™Š@MšJ€€Ě‹Ŕ  ŠŔćŠ Á™Š€OšJ€ Í‹Ŕ  ŠŔćŠ Ć™Š€OšJ€ Î‹Ŕ  Š€çŠ Á™Š€OšJ€€Î‹Ŕ  Š€çŠ@Ĺ™Š@MšJ€€Ď‹Ŕ  Š€çŠ@Ĺ™Š@MšJ€ Đ‹Ŕ  Š€çŠ Ć™Š@MšJ€€Đ‹Ŕ  ŠŔčŠ Á™Š@MšJ€ Ń‹Ŕ  ŠŔčŠ@Ĺ™Š@MšJ€ Ň‹Ŕ  ŠŔčŠ Ć™Š@MšJ€€Ň‹Ŕ  ŠŔéŠ Á™Š€OšJ€ Ó‹Ŕ  ŠŔéŠ Ć™Š@MšJ€ Ô‹Ŕ  Š€ęŠ Á™Š@MšJ€€Ô‹Ŕ  Š€ęŠ@Ĺ™Š@MšJ€€Ő‹Ŕ  Š€ęŠ Ć™Š€OšJ€ Ö‹Ŕ  Š€ëŠ Á™Š@MšJ€€Ö‹Ŕ  Š€ëŠ Á™Š@MšJ€€×‹Ŕ  Š€ëŠ Ä™Š€OšJ€ Ř‹Ŕ  Š€ëŠ Ä™Š@MšJ€€Ř‹Ŕ  Š€ëŠ@Ĺ™Š@MšJ€ Ů‹Ŕ  Š€ëŠ Ć™Š@MšJ€€Ů‹Ŕ  Š@íŠ Á™Š@MšJ€ Ú‹Ŕ  Š@íŠ Á™Š@MšJ€ Ű‹Ŕ  Š@íŠ@Ĺ™Š@MšJ€€Ű‹Ŕ  Š@íŠ Ć™Š@MšJ€ Ü‹Ŕ  Š€îŠ Á™Š@MšJ€€Ü‹Ŕ  Š€îŠ Ä™Š@MšJ€€Ý‹Ŕ  Š€îŠ Ä™Š@MšJ€ Ţ‹Ŕ  Š€îŠ Ć™Š@MšJ€€Ţ‹Ŕ  ŠŔďŠ Á™Š@MšJ€ ß‹Ŕ  ŠŔďŠ Ä™Š@MšJ€ ŕ‹Ŕ  ŠŔďŠ Ć™Š@MšJ€€ŕ‹Ŕ  ŠŔđŠ Á™Š@MšJ€ á‹Ŕ  ŠŔđŠ Ä™Š@MšJ€ â‹Ŕ  ŠŔđŠ@Ĺ™Š@MšJ€€â‹Ŕ  ŠŔńŠ Á™Š€OšJ€ ă‹Ŕ  ŠŔńŠ@Ĺ™Š€OšJ€ ä‹Ŕ  ŠŔńŠ Ć™Š@MšJ€€ä‹Ŕ  ŠŔňŠ Á™Š@MšJ€ ĺ‹Ŕ  ŠŔňŠ Ä™Š€OšJ€ ć‹Ŕ  Š€óŠ Á™Š@MšJ€€ć‹Ŕ  Š€óŠ@Ĺ™Š@MšJ€€ç‹Ŕ  Š€óŠ Ć™Š@MšJ€ č‹Ŕ  Š€ôŠ Á™Š€OšJ€€č‹Ŕ  Š€ôŠ@EęŠ@MšJ€€é‹Ŕ  Š€őŠ Á™Š€OšJ€€ę‹Ŕ  Š€őŠ Ä™Š@MšJ€€ë‹Ŕ  Š€őŠ@Ĺ™Š€OšJ€ ě‹Ŕ  Š€őŠ Á™Š@MšJ€€ě‹Ŕ  Š€őŠ Ä™Š@MšJ€ í‹Ŕ  Š€őŠ@Ĺ™Š@MšJ€€í‹Ŕ  Š@÷Š Ä™Š@MšJ€ î‹Ŕ  Š@÷Š Ć™Š@MšJ€ ď‹Ŕ  Š řŠ Á™Š@MšJ€€ď‹Ŕ  Š řŠ Á™Š@MšJ€€đ‹Ŕ  Š řŠ Á™Š@MšJ€ ń‹Ŕ  Š řŠ Á™Š@MšJ€€ń‹Ŕ  Š řŠ Ä™Š@MšJ€ ň‹Ŕ  Š řŠ@Ĺ™Š@MšJ€€ň‹Ŕ  Š řŠ Ć™Š@MšJ€ ó‹Ŕ  Š úŠ Á™Š@MšJ€€ó‹Ŕ  Š úŠ Ä™Š€OšJ€€ô‹Ŕ  ŠŔúŠ Á™Š€OšJ€ ő‹Ŕ  ŠŔúŠ Ä™Š@MšJ€ ö‹Ŕ  ŠŔúŠ@Ĺ™Š@MšJ€€ö‹Ŕ  ŠŔúŠ Ć™Š@MšJ€ ÷‹Ŕ  Š üŠ Á™Š€OšJ€€÷‹Ŕ  Š üŠ Ä™Š@MšJ€€ř‹Ŕ  Š üŠ@Ĺ™Š€OšJ€ ů‹Ŕ  Š üŠ Ć™Š@MšJ€€ů‹Ŕ  Š@ýŠ Á™Š€OšJ€ ú‹Ŕ  Š@ýŠ@Ĺ™Š@MšJ€ ű‹€  Š ţŠ Á™J€€ű‹Ŕ  Š ţŠ Ä™Š@MšJ€€ü‹Ŕ  Š ţŠ Ć™Š@MšJ€ ý‹Ŕ  Š ˙Š Á™Š€OšJ€€ý‹Ŕ  Š ˙Š Ä™Š@MšJ€€ţ‹Ŕ  Š ˙Š@Ĺ™Š@MšJ€ ˙‹Ŕ  Š ˙Š Á™Š€OšJ€€˙ @ ËŔ  Ę ˙Ę Ä™Ę@MšJŔ @@ ËŔ  Ę ˙Ę@Ĺ™Ę@MšJŔ €@ ËŔ  Á@ Ę Ę Á™Ę@MšJŔ  A ËŔ  Á@ Ę Ę Ä™Ę@MšJŔ @A ËŔ  Á@ Ę Ę@Ĺ™Ę@MšJŔ €A ËŔ  Á@ Ę Ę Ć™Ę@MšJŔ ŔA ËŔ  B Ę Ę Á™Ę€OšJŔ @B ËŔ  B Ę Ę Ä™Ę@MšJŔ €B ËŔ  B Ę Ę@Ĺ™Ę@MšJŔ ŔB ËŔ  B Ę Ę Ć™Ę€OšJŔ  C ËŔ  B Ę Ę Ć™Ę@MšJŔ @C ËŔ  B Ę Ę Ć™Ę@MšJŔ €C ËŔ  ÁC Ę Ę Á™Ę@MšJŔ  D ËŔ  ÁC Ę Ę Ä™Ę@MšJŔ @D ËŔ  ÁC Ę Ę@Ĺ™Ę@MšJŔ €D ËŔ  ÁC Ę Ę Ć™Ę€OšJŔ ŔD ËŔ  ÁC Ę Ę Á™Ę€OšJŔ  E ËŔ  ÁC Ę Ę Ä™Ę@MšJŔ @E ËŔ  ÁC Ę Ę@Ĺ™Ę@MšJŔ €E ËŔ  ÁE Ę Ę Á™Ę@MšJŔ  F ËŔ  ÁE Ę Ę@Ĺ™Ę@MšJŔ @F ËŔ  ÁE Ę Ę@Ĺ™Ę@MšJŔ €F ËŔ  ÁE Ę Ę Ć™Ę@MšJŔ ŔF ËŔ  G Ę Ę Á™Ę@MšJŔ @G ËŔ  G Ę Ę Ä™Ę@MšJŔ €G ËŔ  G Ę Ę@Ĺ™Ę@MšJŔ ŔG ËŔ  G Ę Ę Ć™Ę@MšJŔ  H ËŔ  AH Ę Ę Á™Ę€OšJŔ €H ËŔ  AH Ę Ę Ä™Ę@MšJŔ ŔH ËŔ  AH Ę Ę Ć™Ę@MšJŔ  I ËŔ  AI Ę Ę Á™Ę@MšJŔ €I ËŔ  AI Ę Ę Ä™Ę€OšJŔ ŔI ËŔ  AI Ę Ę@Ĺ™Ę€OšJŔ  J ËŔ  AJ Ę Ę Á™Ę@MšJŔ €J ËŔ  AJ Ę Ę@Ĺ™Ę@MšJŔ ŔJ ËŔ  AJ Ę Ę@Ĺ™Ę@MšJŔ  K ËŔ  AJ Ę Ę Ć™Ę@MšJŔ @K ËŔ  K Ę Ę Á™Ę€OšJŔ ŔK ËŔ  K Ę Ę@Ĺ™Ę@MšJŔ  L ËŔ  K Ę Ę Ć™Ę@MšJŔ @L ËŔ  L Ę Ę Á™Ę€OšJŔ ŔL ËŔ  L Ę Ę Ä™Ę@MšJŔ  M ËŔ  L Ę Ę@Ĺ™Ę€OšJŔ @M ËŔ  L Ę Ę Ć™Ę€OšJŔ €M ËŔ  ÁM Ę Ę Á™Ę@MšJŔ  N ËŔ  ÁM Ę Ę Ä™Ę€OšJŔ @N ËŔ  ÁM Ę Ę@Ĺ™Ę@MšJŔ €N ËŔ  ÁM Ę Ę Ć™Ę@MšJŔ ŔN ËŔ  O Ę Ę Á™Ę€OšJŔ @O ËŔ  O Ę Ę Á™Ę€OšJŔ ŔO ËŔ  O Ę Ę@Ĺ™Ę@MšJŔ  P ËŔ  O Ę Ę Ć™Ę@MšJŔ @P ËŔ  P Ę Ę Á™Ę@MšJŔ ŔP ËŔ  P Ę Ę@Ĺ™Ę@MšJŔ  Q ËŔ  P Ę Ę Ć™Ę€OšJŔ @Q ËŔ  Q Ę Ę Á™Ę@MšJŔ ŔQ ËŔ  Q Ę Ę Ä™Ę@MšJŔ  R ËŔ  Q Ę Ę Ć™Ę@MšJŔ @R ËŔ  R Ę Ę Á™Ę@MšJŔ ŔR ËŔ  R Ę Ę Ä™Ę€OšJŔ  S ËŔ  R Ę Ę@Ĺ™Ę@MšJŔ @S ËŔ  R Ę Ę Ć™Ę@MšJŔ €S ËŔ  ÁS Ę Ę Á™Ę@MšJŔ  T ËŔ  ÁS Ę Ę Ä™Ę€OšJŔ @T ËŔ  ÁS Ę Ę@Ĺ™Ę@MšJŔ €T ËŔ  ÁT Ę Ę Á™Ę@MšJŔ  U ËŔ  ÁT Ę Ę@Ĺ™Ę@MšJŔ @U ËŔ  ÁT Ę Ę Ć™Ę€OšJŔ €U ËŔ  ÁU Ę Ę Á™Ę@MšJŔ  V ËŔ  ÁU Ę Ę Ä™Ę@MšJŔ @V ËŔ  ÁU Ę Ę@Ĺ™Ę@MšJŔ €V ËŔ  ÁU Ę Ę Á™Ę@MšJŔ ŔV ËŔ  ÁU Ę Ę Ä™Ę@MšJŔ  W ËŔ  ÁU Ę Ę@Ĺ™Ę@MšJŔ @W ËŔ  W Ę Ę Á™Ę@MšJŔ ŔW ËŔ  W Ę Ę@Ĺ™Ę€OšJŔ  X ËŔ  AX Ę Ę@Ĺ™Ę€OšJŔ €X ËŔ  AX Ę Ę Ć™Ę@MšJŔ ŔX ËŔ  Y Ę Ę Á™Ę@MšJŔ @Y ËŔ  Y Ę Ę@Ĺ™Ę€OšJŔ €Y ËŔ  ÁY Ę Ę Á™Ę@MšJŔ  Z ËŔ  ÁY Ę Ę Ä™Ę@MšJŔ @Z ËŔ  ÁY Ę Ę Ć™Ę@MšJŔ €Z ËŔ  ÁZ Ę Ę Á™Ę€OšJŔ  [ ËŔ  ÁZ Ę Ę Ä™Ę€OšJŔ @[ ËŔ  ÁZ Ę Ę@Ĺ™Ę@MšJŔ €[ ËŔ  Á[ Ę Ę Á™Ę@MšJŔ  \ ËŔ  Á[ Ę Ę@Ĺ™Ę€OšJŔ @\ ËŔ  \ Ę Ę Á™Ę@MšJŔ Ŕ\ ËŔ  \ Ę Ę@Ĺ™Ę€OšJŔ  ] ËŔ  A] Ę Ę Á™Ę@MšJŔ €] ËŔ  A] Ę Ę@Ĺ™Ę€OšJŔ Ŕ] ËŔ  A] Ę Ę Ć™Ę@MšJŔ  ^ ËŔ  A^ Ę Ę Á™Ę@MšJŔ €^ ËŔ  A^ Ę Ę Ä™Ę@MšJŔ Ŕ^ ËŔ  A^ Ę Ę@Ĺ™Ę@MšJŔ  _ ËŔ  A_ Ę Ę Á™Ę@MšJŔ €_ ËŔ  A_ Ę Ę@Ĺ™Ę@MšJŔ Ŕ_ ËŔ  ` Ę Ę Á™Ę@MšJŔ @` ËŔ  ` Ę Ę Á™Ę@MšJŔ €` ËŔ  ` Ę Ę Ä™Ę@MšJŔ Ŕ` ËŔ  ` Ę Ę Ć™Ę@MšJŔ  a ËŔ  ` Ę Ę Ć™Ę@MšJŔ @a ËŔ  a Ę Ę Á™Ę@MšJŔ Ŕa ËŔ  a Ę Ę@Ĺ™Ę@MšJŔ  b ËŔ  a Ę Ę Ć™Ę@MšJŔ @b ËŔ  b Ę Ę Á™Ę€OšJŔ Ŕb ËŔ  b Ę Ę Ä™Ę€OšJŔ  c ËŔ  b Ę Ę@Ĺ™Ę€OšJŔ @c ËŔ  c Ę Ę Á™Ę@MšJŔ Ŕc ËŔ  c Ę Ę Ć™Ę@MšJŔ  d ËŔ  Ad Ę Ę Á™Ę@MšJŔ €d ËŔ  Ad Ę Ę Ä™Ę@MšJŔ Ŕd ËŔ  Ad Ę Ę@Ĺ™Ę€OšJŔ  e ËŔ  Ae Ę Ę Á™Ę€OšJŔ €e ËŔ  Ae Ę Ę@Ĺ™Ę@MšJŔ Ŕe ËŔ  f Ę Ę@Ĺ™Ę@MšJŔ @f ËŔ  f Ę Ę Ć™Ę@MšJŔ €f ËŔ  Áf Ę Ę Á™Ę@MšJŔ  g ËŔ  Áf Ę Ę Ä™Ę@MšJŔ @g ËŔ  Áf Ę Ę@Ĺ™Ę€OšJŔ €g ËŔ  Ág Ę Ę Á™Ę€OšJŔ  h ËŔ  Ah Ę Ę Á™Ę@MšJŔ €h ËŔ  Áh Ę Ę Á™Ę@MšJŔ  i ËŔ  Áh Ę Ę@Ĺ™Ę@MšJŔ @i ËŔ  Áh Ę Ę Ć™Ę€OšJŔ €i ËŔ  Ái Ę Ę Á™Ę€OšJŔ  j ËŔ  Ái Ę Ę Ä™Ę@MšJŔ @j ËŔ  Ái Ę Ę@Ĺ™Ę@MšJŔ €j ËŔ  Ái Ę Ę Ć™Ę@MšJŔ Ŕj ËŔ  k Ę Ę Á™Ę@MšJŔ @k ËŔ  k Ę Ę@Ĺ™Ę€OšJŔ €k ËŔ  Ák Ę Ę Á™Ę€OšJŔ  l ËŔ  Ák Ę Ę Ä™Ę@MšJŔ @l ËŔ  Ák Ę Ę@Ĺ™Ę€OšJŔ €l ËŔ  Ák Ę Ę Ć™Ę@MšJŔ Ŕl ËŔ  m Ę Ę Á™Ę@MšJŔ @m ËŔ  m Ę Ę Ä™Ę@MšJŔ €m ËŔ  m Ę Ę@Ĺ™Ę@MšJŔ Ŕm ËŔ  m Ę Ę Ć™Ę€OšJŔ  n ËŔ  An Ę Ę Ä™Ę@MšJŔ €n ËŔ  An Ę Ę@Ĺ™Ę€OšJŔ Ŕn ËŔ  o Ę Ę Ä™Ę@MšJŔ @o ËŔ  o Ę Ę@Ĺ™Ę€OšJŔ €o ËŔ  o Ę Ę Ć™Ę@MšJŔ Ŕo ËŔ  p Ę Ę Á™Ę€OšJŔ @p ËŔ  p Ę Ę Á™Ę@MšJŔ Ŕp ËŔ  p Ę Ę@Ĺ™Ę@MšJŔ  q ËŔ  p Ę Ę Ć™Ę@MšJŔ @q ËŔ  q Ę Ę Ä™Ę@MšJŔ Ŕq ËŔ  q Ę Ę@Ĺ™Ę€OšJŔ  r ËŔ  q Ę Ę Ć™Ę€OšJŔ @r ËŔ  r Ę Ę Á™Ę€OšJŔ Ŕr ËŔ  r Ę Ę Ć™Ę€OšJŔ  s ËŔ  As Ę Ę@Ĺ™Ę@MšJŔ €s ËŔ  Ás Ę Ę Á™Ę@MšJŔ  t ËŔ  At Ę Ę Ä™Ę@MšJŔ €t ËŔ  At Ę Ę Ä™Ę@MšJŔ Ŕt ËŔ  At Ę Ę@Ĺ™Ę@MšJŔ  u ËŔ  Au Ę Ę Á™Ę@MšJŔ €u ËŔ  Au Ę Ę Ä™Ę@MšJŔ Ŕu ËŔ  Au Ę Ę@Ĺ™Ę@MšJŔ  v ËŔ  Au Ę Ę Ć™Ę@MšJŔ @v ËŔ  v Ę Ę Á™Ę@MšJŔ Ŕv ËŔ  v Ę Ę@Ĺ™Ę@MšJŔ  w ËŔ  v Ę Ę Ć™Ę€OšJŔ @w ËŔ  w Ę Ę Á™Ę@MšJŔ Ŕw ËŔ  w Ę Ę@Ĺ™Ę@MšJŔ  x ËŔ  w Ę Ę Ć™Ę@MšJŔ @x ËŔ  x Ę Ę@Ĺ™Ę€OšJŔ Ŕx ËŔ  y Ę Ę Á™Ę€OšJŔ @y ËŔ  y Ę Ę Ä™Ę@MšJŔ €y ËŔ  y Ę Ę@Ĺ™Ę@MšJŔ Ŕy ËŔ  y Ę Ę Ć™Ę€OšJŔ  z ËŔ  Az Ę Ę Á™Ę€OšJŔ €z ËŔ  Az Ę Ę Á™Ę€OšJŔ Ŕz ËŔ  Az Ę Ę Á™Ę€OšJŔ  { ËŔ  Az Ę Ę Ä™Ę@MšJŔ @{ ËŔ  Az Ę Ę@Ĺ™Ę@MšJŔ €{ ËŔ  Az Ę Ę Ć™Ę@MšJŔ Ŕ{ ËŔ  | Ę Ę Á™Ę@MšJŔ @| ËŔ  | Ę Ę Ć™Ę€OšJŔ €| ËŔ  Á| Ę Ę Á™Ę€OšJŔ  } ËŔ  Á| Ę Ę Ä™Ę@MšJŔ @} ËŔ  Á| Ę Ę@Ĺ™Ę@MšJŔ €} ËŔ  Á| Ę Ę Ć™Ę@MšJŔ Ŕ} ËŔ  ~ Ę Ę Á™Ę€OšJŔ @~ ËŔ  ~ Ę Ę@Ĺ™Ę@MšJŔ €~ ËŔ  ~ Ę Ę Ć™Ę@MšJŔ Ŕ~ ËŔ   Ę Ę Á™Ę@MšJŔ @ ËŔ   Ę Ę Ä™Ę€OšJŔ € ËŔ   Ę Ę@Ĺ™Ę@MšJŔ Ŕ ËŔ  € Ę Ę Á™Ę€OšJŔ @€ ËŔ  € Ę Ę Ć™Ę€OšJŔ €€ ËŔ  Á€ Ę Ę Á™Ę@MšJŔ   ËŔ  Á€ Ę Ę@Ĺ™Ę€OšJŔ @ ËŔ  Á€ Ę Ę Ć™Ę@MšJŔ € ËŔ  Á€ Ę Ę Ć™Ę@MšJŔ Ŕ ËŔ  ‚ Ę Ę Á™Ę@MšJŔ @‚ ËŔ  ‚ Ę Ę Ä™Ę@MšJŔ €‚ ËŔ  ‚ Ę Ę@Ĺ™Ę@MšJŔ Ŕ‚ ËŔ  ‚ Ę Ę Ć™Ę€OšJŔ   ËŔ  A Ę Ę@Ĺ™Ę€OšJŔ € ËŔ  A Ę Ę Ć™Ę@MšJŔ Ŕ ËŔ  „ Ę Ę Á™Ę@MšJŔ @„ ËŔ  „ Ę Ę Á™Ę@MšJŔ €„ ËŔ  „ Ę Ę Á™Ę@MšJŔ Ŕ„ ËŔ  „ Ę Ę@Ĺ™Ę€OšJŔ  … ËŔ  „ Ę Ę Ć™Ę@MšJŔ @… ËŔ  … Ę Ę Á™Ę@MšJŔ Ŕ… ËŔ  … Ę Ę Ä™Ę@MšJŔ  † ËŔ  … Ę Ę@Ĺ™Ę€OšJŔ @† ËŔ  † Ę Ę Á™Ę@MšJŔ Ŕ† ËŔ  † Ę Ę Ä™Ę@MšJŔ  ‡ ËŔ  † Ę Ę@Ĺ™Ę@MšJŔ @‡ ËŔ  ‡ Ę Ę Á™Ę@MšJŔ Ŕ‡ ËŔ  ‡ Ę Ę Ć™Ę€OšJŔ   ËŔ  A Ę Ę Á™Ę@MšJŔ € ËŔ  A Ę Ę Ä™Ę@MšJŔ Ŕ ËŔ  A Ę Ę@Ĺ™Ę@MšJŔ  ‰ ËŔ  A Ę Ę Ć™Ę@MšJŔ @‰ ËŔ  ‰ Ę Ę Á™Ę€OšJŔ Ŕ‰ ËŔ  ‰ Ę Ę@Ĺ™Ę€OšJŔ  Š ËŔ  AŠ Ę Ę Á™Ę@MšJŔ €Š ËŔ  AŠ Ę Ę@Ĺ™Ę@MšJŔ ŔŠ ËŔ  AŠ Ę Ę Ć™Ę@MšJŔ 
@€—A ‹ ‹ €ËŔ  Ę€ĚA‹ Ę L‹ Ę AÁ  
AĎAA‹ 
ĐA‹ 
ĆKÁ  JĐA‹ JÁP‹ JD‹Á  ŠÁćÁA‹ ŠćÁ‹ ŠÁËÁ  ĘŢB‹ ĘA_‚‹ ĘFÂ  
BáAB‹ 
âA‚‹ 
ÁKÂ  J‚çB‹ JBg‚‹ JA‹Â  ŠBíÁB‹ Ă‹ ŠÁ‚‹ ŠBĹËÂ  ĘÂďC‹ ĘBp‹ ĘFĂ  
óAC‹ 
CóA‹ 
ĆKĂ  JĂńC‹ Jq‹ JF‹Ă  ŠôÁC‹ ŠCôÁ‹ ŠÁËĂ  Ę˙D‹ Ę„‹ ĘCEÄ  
˙AD‹ D@ 
„„A„‹ 
DĹKÄ  Ś J„„D‹ ÁDB JÄ	„‹ JD	‹Ä  ÁŚ ŠÄ„ÁD‹ C Š…	Á„‹ ŠÄ	ËÄ  ĹC Ę…E‹ AEŚ ĘD
…‹ ĘA
Ĺ  AĹE 
E…AE‹ F 
……
A…‹ 
EĹ
KĹ  …K J……E‹ ÁL JĹ…‹ JF‹Ĺ  ÁĹZ ŠĹ…ÁE‹ [ Š†Á…‹ ŠÄËĹ  Ć[ Ę†F‹ A\ ĘE†‹ ĘEEĆ  AF^ 
F†AF‹ Ć^ 
††A†‹ 
FĹKĆ  ` J††F‹ Á†Ś JĆ
†‹ JA
‹Ć  Á†c ŠĆ†ÁF‹ Gc Š‡
Á†‹ ŠÁ
ËĆ  Gs Ę‡G‹ As ĘF‡‹ ĘFEÇ  A| 
G‡AG‹ Ç{ 
‡‡A‡‹ 
ÁKÇ  Ç€ J‡‡G‹ Á JÇ‡‹ JGE‹Ç  ÁÇŚ ŠÇ‡ÁG‹  ŠÁ‡‹ ŠGĹËÇ  „ ĘH‹ AČ„ ĘG‹ ĘGE¤@€
€€ A Ť @Ť †€  ť€€ 
€€  € 6     SelectedTarget     Cel    TargetSelector    Q    name 
   Dark Binding    range      Ŕ’@   speed      P”@   delay       Đ?   width       T@   Ready    W    Tormented Soil      čŚ@333333Ă?     @Z@   E 
   Black Shield      8@   R    Soul Shackles      Ŕ‚@   recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    WTargetSelector    Spells    _Q    _W    _E    _R    Spells2    killstring 
   Shieldspells    AatroxQ 	   charName    Aatrox 
   spellSlot 
   SpellType 
   skillshot    AatroxE    AhriOrbofDeception    Ahri    AhriFoxFire    AhriSeduce    AhriTumble 
   AkaliMota    Akali    castcel    AkaliShadowSwipe    AkaliShadowDance 
   Pulverize    Alistar 	   Headbutt    BandageToss    Amumu    AuraofDespair    Tantrum    CurseoftheSadMummy    FlashFrost    Anivia 
   Frostbite 
   GlacialStorm 
   Disintegrate    Annie    Incinerate    InfernalGuardian    Volley    Ashe    EnchantedCrystalArrow    RocketGrab    Blitzcrank 
   PowerFist    StaticField    BrandBlaze    Brand 
   BrandFissure    BrandConflagration    BrandWildfire    BraumQ    Braum 
   BraumQMissle    BraumR    CaitlynPiltoverPeacemaker    Caitlyn    CaitlynYordleTrap    CaitlynEntrapment    CaitlynAceintheHole    CassiopeiaNoxiousBlast    Cassiopeia    CassiopeiaMiasma    CassiopeiaTwinFang    CassiopeiaPetrifyingGaze    Rupture    Chogath    FeralScream 
   VorpalSpikes    Feast    PhosphorusBomb    Corki    CarpetBomb    GGun    MissileBarrage 
   DariusCleave    Darius    DariusAxeGrabCone    DariusExecute 	   DianaArc    Diana 
   DianaOrbs    DianaVortex    DianaTeleport    InfectedCleaverMissileCast    DrMundo 
   BurningAgony    DravenDoubleShot    Draven    DravenRCast    EliseHumanQ    Elise    EliseHumanW    EliseHumanE    EliseSpiderQCast 
   EliseSpiderW    EliseSpiderEInitial    elisespideredescent 	   EvelynnQ    Evelynn 	   EvelynnE 	   EvelynnR    EzrealMysticShot    Ezreal    EzrealEssenceFlux    EzrealArcaneShift    EzrealTruehotBarrage    Terrify 
   FiddleSticks    Drain    FiddlesticksDarkWind 
   Crowstorm    FioraQ    Fiora    FioraDance    FizzPiercingStrike    Fizz 	   FizzJump    FizzJumptwo    FizzMarinerDoom    GalioResoluteSmite    Galio    GalioRighteousGust    GalioIdolOfDurand    Parley 
   Gangplank    CannonBarrage    GarenQ    Garen    GarenE    GarenR    GnarQ    Gnar 	   GnarBigQ    GnarWStack 	   GnarBigW 	   GnarBigE 	   GnarBigR    GragasBarrelRoll    Gragas    gragasbarrelrolltoggle    GragasBodySlam    GragasExplosiveCask    GravesClusterShot    Graves    GravesSmokeGrenade    gravessmokegrenadeboom    GravesChargeShot    HecarimRapidSlash    Hecarim 	   HecarimW    HecarimUlt    HeimerdingerQ 
   Heimerdinger    HeimerdingerW    HeimerdingerE    IreliaGatotsu    Irelia    IreliaEquilibriumStrike    IreliaTranscendentBlades    HowlingGale    Janna    SowTheWind    JarvanIVDragonStrike 	   JarvanIV    JarvanIVDemacianStandard    JarvanIVCataclysm    JaxLeapStrike    Jax    JaxCounterStrike 
   spellslot    JayceToTheSkies    Jayce    JayceStaticField    JayceThunderingBlow    jayceshockblast    jaycehypercharge    jayceaccelerationgate    JinxW    Jinx 
   JinxRWrapper    KarthusLayWaste    Karthus    KarthusLayWasteA1    karthuslaywastea2    karthuslaywastea3    KarthusWallOfPain    KarthusDefile    KarthusFallenOne    KarmaQ    Karma    KarmaSpiritBind 
   NullLance 	   Kassadin    NetherBlade    ForcePulse 	   RiftWalk 
   KatarinaQ 	   Katarina 
   KatarinaW 
   KatarinaE 
   KatarinaR    JudicatorReckoning    Kayle    JudicatorRighteousFury    KennenShurikenHurlMissile1    Kennen    KennenBringTheLight    KennenShurikenStorm     KhazixQ    Khazix    KhazixW    KhazixE    khazixqlong    khazixwlong    khazixelong    KogMawCausticSpittle    KogMaw    KogMawBioArcanBarrage    KogMawVoidOoze    KogMawLivingArtillery    LeblancChaosOrb    Leblanc 
   LeblancSlide    LeblancSoulShackle    LeblancChaosOrbM    LeblancSlideM    LeblancSoulShackleM    BlindMonkQOne    LeeSin    BlindMonkWOne    BlindMonkEOne    BlindMonkRKick    blindmonkqtwo    blindmonkwtwo    blindmonketwo    LeonaShieldOfDaybreak    Leona    LeonaZenithBlade    LeonaZenithBladeMissle    LeonaSolarFlare    LissandraQ 
   Lissandra    LissandraW    LissandraE    LissandraR    LucianQ    Lucian    LucianW    LucianR    LuluQ    Lulu    LuluW    LuluE    LuxLightBinding    Lux    LuxLightStrikeKugel    luxlightstriketoggle    LuxMaliceCannon 
   SeismicShard 	   Malphite 
   Landslide    UFSlash    AlZaharCalloftheVoid 	   Malzahar    AlZaharNullZone    AlZaharMaleficVisions    AlZaharNetherGrasp    MaokaiTrunkLine    Maokai    MaokaiUnstableGrowth    MaokaiSapling2 
   MaokaiDrain3    AlphaStrike 	   MasterYi    MissFortuneRicochetShot    MissFortune    MissFortuneScattershot    MissFortuneBulletTime    MordekaiserMaceOfSpades    Mordekaiser     MordekaiserSyphoneOfDestruction    MordekaiserChildrenOfTheGrave    DarkBindingMissile    Morgana    TormentedSoil 
   SoulShackles    NamiQ    Nami    NamiW    NamiE    NamiR    NasusQ    Nasus    NasusW    NasusE    NautilusAnchorDrag 	   Nautilus    NautilusSplashZone    NautilusGandLine    JavelinToss    Nidalee 
   Bushwhack    PrimalSurge 	   Takedown    Pounce    Swipe    NocturneDuskbringer 	   Nocturne    NocturneUnspeakableHorror 	   IceBlast    Nunu 
   AbsoluteZero    OlafAxeThrowCast    Olaf    OlafRecklessStrike    OrianaIzunaCommand    Orianna    OrianaDissonanceCommand    OrianaDetonateCommand    Pantheon_Throw 	   Pantheon    Pantheon_LeapBash    Pantheon_Heartseeker    PoppyDevastatingBlow    Poppy    PoppyHeroicCharge    QuinnQ    Quinn    QuinnE 
   PowerBall    Rammus    PuncturingTaunt 	   Tremors2    RenektonCleave 	   Renekton    RenektonPreExecute    RenektonSliceAndDice    RengarQ    Rengar    RengarE    RivenTriCleav    Riven    RivenTriCleave_03    RivenMartyr    RivenFengShuiEngine    rivenizunablade    RumbleFlameThrower    Rumble 
   RumbeGrenade    RumbleCarpetBomb 	   Overload    Ryze    RunePrison 
   SpellFlux    SejuaniArcticAssault    Sejuani    SejuaniGlacialPrisonStart    Deceive    Shaco 
   JackInTheBox    TwoShivPoisen    ShenVorpalStar    Shen    ShenShadowDash    ShyvanaFireball    Shyvana    ShyvanaTransformCast    PoisenTrail    Singed 
   MegaAdhesive    Fling    CrypticGaze    Sion    SivirQ    Sivir    SkarnerVirulentSlash    Skarner    SkarnerFracture    SkarnerImpale    SonaHymnofValor    Sona    SonaAriaofPerseverance    SonaSongofDiscord    SonaCrescendo 	   Starcall    Soraka    InfuseWrapper    SwainDecrepify    Swain    SwainShadowGrasp 
   SwainTorment    SwainMetamorphism    SyndraQ    Syndra 	   SyndraW     SyndraE    SyndraR 
   TalonRake    Talon    TalonCutthroat    Shatter    Taric    Dazzle    TaricHammerSmash 
   BlindingDart    Teemo    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    RocketJump 	   Tristana    DetonatingShot    BusterShot    TrundleTrollSmash    Trundle    TrundlePain 
   slashCast    Tryndamere 
   WildCards    TwistedFate    TwitchVenomCask    Twitch    TwitchVenomCaskMissle    Expunge    UdyrTigerStance    Udyr    UdyrTurtleStance    UdyrBearStance    UdyrPhoenixStance    UrgotHeatseekingMissile    Urgot    UrgotPlasmaGrenade    UrgotSwap2    VarusQ    Varus    VarusE    VarusR 
   VayneCondemm    Vayne    VeigarBalefulStrike    Veigar    VeigarDarkMatter    VeigarEventHorizon    VeigarPrimordialBurst    VelkozQ    Velkoz    VelkozQMissle    velkozqplitactive    VelkozW    VelkozE    VelkozR    ViQ    Vi    ViR    ViktorPowerTransfer    Viktor    ViktorGravitonField    ViktorDeathRa    ViktorChaosStorm    VladimirTransfusion 	   Vladimir    VladimirTidesofBlood    VladimirHemoplague 
   VolibearQ 	   Volibear 
   VolibearW 
   VolibearE    HungeringStrike    Warwick    InfiniteDuress    MonkeyKingDoubleAttack    MonkeyKing    MonkeyKingNimbus    MonkeyKingSpinToWin    monkeykingspintowinleave    XerathArcanoPulseChargeUp    Xerath    XerathArcaneBarrage2    XerathMageSpear    XerathLocusOfPower2 
   XenZhaoSweep 	   Xin Zhao 
   XenZhaoParry    YasuoQW    Yasuo 	   yasuoq2w 	   yasuoq3w    YasuoDashWrapper    YasuoRKnockUpComboW    YorickSpectral    Yorick    YorickDecayed    YorickRavenous    ZacQ    Zac    ZacW    ZacE    ZedShuriken    Zed    zedult    ZiggsQ    Ziggs    ZiggsW    ZiggsE    ZiggsR 	   TimeBomb    Zilean 	   TimeWarp 
   ZyraQFissure    Zyra    ZyraGraspingRoots    ZyraBrambleZone    GapCloserList 
   spellName 	   menuname    GragasE    LeBlanc    BlindMonkQTwo    RivenTriCleave    XinZhao    it 
   ItemsCast    ŹG  ŹG        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          G  G        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ‘G  ‘G        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ’G  ’G        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               =I  ×I   ó  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FB 
 Ë Â
 A B Á‚ äA ]@€F @ GŔĆ LŔÁ ÁŔ 	 GL GÁĹA FH   ]@ F @ GŔĆ LŔÁ Á€ 	 GÁL GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 
 FÁM  ÁÁ B A‚ ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ  FÁM A Á B A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FÁM  Á B A‚ ]@€F @ GŔĆ LŔÁ Á@  FÁM Á Á B A‚ ]@€F @ GŔĆ LŔÁ Á  A FÁM  Á B A‚ ]@€FŔQ † @ Á  € C€   Ă  ]@€F @ L Á Á  A ]@ F @ G@Ň LŔÁ Á  A FG Á ]@ F @ G@Ň LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ G@Ň LŔÁ ÁŔ 	 GJ GÁĹA
 FB 
 Ë Â
 A B Á‚ äA ]@€F @ G@Ň LŔÁ Á  Á FG Á ]@ F @ G@Ň LŔÁ Á  A FG Á ]@ F @ G@Ň LŔÁ ÁŔ  FÁM  Á B A‚ ]@€F @ G@Ň LŔÁ Á€ Á FÁM A Á B A‚ ]@€F @ G@Ň LŔÁ Á  Á FG Á ]@ F @ G@Ň LŔÁ Á  A FG Á ]@ F @ G@Ň LŔÁ Á€ Á FT   ĆAT ÇÔÂ Ý ]@  F @ L Á Á  A ]@ G€U LŔŐ Ć @ Ç@Ő]@€F @ L Á Á  A ]@ F @ G@Ö LŔÁ Á  A FG Á ]@ F @ G@Ö LŔÁ Á€ Á FH € ]@ F @ G@Ö LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ G@Ö LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ G@Ö LŔÁ Á€ 	 GÁL GÁĹ
 FH   ]@ F @ L Á ÁŔ  ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ Á@ 	 GAI GÁĹ	 FB  Ë€Â
 A‚ Â äA€]@€F @ G Ř LŔÁ Á  	 GJ GÁĹA
 FB 
 Ë€Â
 A‚ Â äA€]@€F @ G Ř LŔÁ Á  Á FG Á ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ ÁŔ  FÁM A Á B A‚ ]@€F @ G Ř LŔÁ Á€ Á FÁM A Á B A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á  	 GAI GÁĹ	 FH € ]@ F @ GŔŮ LŔÁ Á@ 	 GJ GÁĹA
 FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ ÁŔ  FÁM A Á B A‚ ]@€F @ GŔŮ LŔÁ Á€ Á FÁM A Á B A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á   FG Á ]@ F @ GŔÚ LŔÁ Á@  FÁM A Á B A‚ ]@€F @ GŔÚ LŔÁ ÁŔ  FH € ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á€ Á FÁM  Á B A‚ ]@€F @ GŔÚ LŔÁ Á@  FH € ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á   FÁM A Á B A‚ ]@€F @ GŔÚ LŔÁ Á@  FH € ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  Á FÁM  Á B A‚ ]@€F @ GŔÚ LŔÁ Á@  FH € ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á   Á FÁM  Á B A‚ ]@€F @ GŔÚ LŔÁ Á@    FH € ]@ F @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á  Á  FG Á ]@ F @ GŔÚ LŔÁ Á !  FÁM A Á B A‚ ]@€F @ GŔÚ LŔÁ Á@! ! FH € ]@ F @ L Á ÁŔ! " ]@ F @ G â L Á Á@" " ]@ FŔb † c ť € ]   	€†Áb ÇAc ť€€Ç‚c Ăă€ €ĂEÇŰ  €€Ć@ ÇâÇ‚âĚÂÁFd ŚĂă  ť€‡ĂE] C$ Ćd „äÝ Ä$ Fd ‡e ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á  A% FG Á ]@ AŔ †€e ‡ŔeÁŔ a €Fe LćŔ ]€‡AćĆÁD ÇAćŔŔ€†@ ‡bŚÁA‚äG‚ä†‚H Ă€ ťA `@űF @ G â LŔÁ Á  Á FG Á ]@ F @ G â LŔÁ Á  A FG Á ]@ F @ G â LŔÁ Á€& Á& FH € ]@ F @ L Á Á ' A' ]@ F @ G@ç LŔÁ Á  A FG Á ]@ F€g † c ť € ]  @€†Áb ÇÁg ťŔ€Ç‚äd Ŕ€Ć@ ÇBçĚÂÁGhC( Çd„( GÄh–CĆH € ÝB ˘  #Bűb€  ăŔůF @ G@ç LŔÁ Á  Á FG Á ]@ F @ G@ç LŔÁ Á  A FG Á ]@ F @ G@ç LŔÁ Á ) Á& FH € ]@ F @ L Á Á@) ) ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ ÁŔ) * FH € ]@ F @ G€é LŔÁ Á@* * FH € ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ ÁŔ* + FH € ]@ F @ G€é LŔÁ Á@+ + FÁk ‹ Á, ‚ AB, ‚ ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á€, Á, FH € ]@ F @ G€é LŔÁ Á - A- FÁk ‹ Á- B AÂ- Â- ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á . A. FH € ]@ F @ G€é LŔÁ Á€. Á. FÁk ‹ Á, ‚ A‚ , ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á / A/ FH € ]@ F @ G€é LŔÁ Á€/ Á/ FÁk ‹ Á, B A‚ , ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á 0 A0 FH € ]@ F @ G€é LŔÁ Á€0 Á0 FÁk ‹ Á, , A‚ ‚ ¤A ]@ F @ G€é LŔÁ Á  Á FG Á ]@ F @ G€é LŔÁ Á  A FG Á ]@ F @ G€é LŔÁ Á 1 A1 FH € ]@ F @ G€é LŔÁ Á€1 Á1 FÁk ‹ Á, ‚ A, ‚ ¤A ]@ F @ L Á Á 2 A2 ]@ F @ G@ň LŔÁ Á  A FG Á ]@ F @ G@ň LŔÁ Á€2 Á2 FH   ]@ F @ G@Ň L ó Á€ ]@€ € Í   	   MenuMorg 
   scriptConfig    MasterSeries: Morgana 	   Morgana1    addSubMenu    [Morgana]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Morgana    addTS    [Morgana]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)       @   No    Always    If Enemy Can't Move    If Enemy Have Q    USEE    E     (E)    USER    R     (R) 	   ENEMYTOR    Min Enemies to Cast R:     SCRIPT_PARAM_SLICE        @      @           QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       9@   RMANA    Min. Mana % To Use (R)       $@
   AddSpellMenu    [Morgana]: Harras Settings 
   harrasConfig    QH    WH       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Morgana]: Items Settings 
   iteConfig    it    LoadToMenu    [Morgana]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    RKS    [Morgana]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    WF       D@   [Morgana]: Jungle Farm    jf    QJF    WJF    [Morgana]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use    umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Morgana]: Shield Settings 	   exConfig    Enemy Skills:    ES    pairs    GetEnemyHeroes    Spells 
   Shieldspells 
   GetSpellData 	   tostring    Block  	   charName     Spell     Spells2    Use Shield On:    heroManager    iCount    GetHero    team    UAS    Enable    [Morgana]: Anti-GapCloser 	   gpConfig    ipairs    GapCloserList 
   spellName    GapCloser     :  	   menuname    UG    [Morgana]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DSE    Draw Stunned Enemy    DSEC    Draw Stunned Enemy Color    SCRIPT_PARAM_COLOR      ŕo@      n@   DQL    Draw Q Collision Line    DQLC    Draw Q Collision Color      Ŕb@      @   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Morgana]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ŮI  éI   *   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ †G D [@  @ €L@D ]@  €       CheckOB 	   MenuMorg    QTargetSelector    update    WTargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    WCel    GetCustomTarget    TargetSelector    target    recall    Support                          ëI  J   ľ   F @ ]€€ [    .€G@@ [@  @-€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€A G Â G@Â [   €€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡€C@ Ŕ€GŔC G Ä ]€€ [   €€F€A G Â G@Â [   @€F€@ ‡@D ÇŔC Ç€Ä]€€[   € €LŔD Ç@D ]@€G E G Ä ]€€ [    €F€A G Â G@Ĺ X€Ĺ Ŕ
€F€@ ‡Ŕ@ Ç E Ç€Ä]€€[    €F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡ŔE@ @	€F€A G Â G@Ĺ  Ć Ŕ €L@F ÇŔ@ ]@€ €F€A G Â G@Ĺ €Ć @€G A LŔĆ ÇŔ@ ]€€[   @€L@F ÇŔ@ ]@€@€F€A G Â G@Ĺ  Ç  €F@G € ÇŔ@ ]€€[   € €L@F ÇŔ@ ]@€F€A G Â GŔÇ [    €F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡ H@ @€G@H G Ä ]€€ [    €F€A G Â GŔÇ [   Ŕ €F€H †ŔH Ć€B ]@€F€A G Â G É [   @€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡@I@ €€F€I †€B ÇŔI Ç€Ä]€€‡ŔI ‡ Dť€€ ›    €†€A ‡ B‡ I›   Ŕ€†€A ‡ B‡ J@ € €†€H Ć@J ť@  € *      ComboActive    recall    ValidTarget    WCel    it 
   CastItems 	   MenuMorg 
   iteConfig    comboConfig    USEQ    myHero    mana    maxMana       Y@   QMANA    Q    Ready    QCel    range    CastQ    W    USEW       đ?   WMANA        @   CastW       @	   HaveStun       @   TargetHaveBuff2    DarkBindingMissile    USEE    EMANA    E 
   CastSpell    _E    USER    RMANA    EnemyCount    R 	   ENEMYTOR    _R                          J  'J   n   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ€G A [@   €F @ G@Ŕ G@Á [   @€F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡€B@ €€GŔB G Ă ]€€ [   @€F@C ‡€C ÇŔB ÇŔĂ]€€[   € €L D Ç€C ]@€F @ G@Ŕ G@Ä X€Ä  €F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡ŔD@ @€G E G Ă ]€€ [    €F@C ‡@E Ç E ÇŔĂ]€€[   @	€F @ G@Ŕ G@Ä €Ĺ Ŕ €LŔE Ç@E ]@€ €F @ G@Ŕ G@Ä  Ć @€G@F L€Ć Ç@E ]€€[   @€LŔE Ç@E ]@€@€F @ G@Ŕ G@Ä ŔĆ  €F G @ Ç@E ]€€[   € €LŔE Ç@E ]@€ €    	   MenuMorg 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QH    myHero    mana    maxMana       Y@   QMANA    Q    Ready    ValidTarget    QCel    range    CastQ    WH       đ?   WMANA    W    WCel        @   CastW       @   it 	   HaveStun       @   TargetHaveBuff2    DarkBindingMissile                          )J  NJ   ľ   F @ ]€€ [    .€G@@ [@  @-€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ @)€€Â  €ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€D BD‚€   @€X€ÄŔ
€ÂD @€‡D ‡E‚€   €BE €€B€ €€Ĺ €
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ€D BD‚€   €€X€Ä €ÂD @€‡D ‡E‚€  @€ÂE F€€ĆBF Ý‚€ Đ‚Ć‚ FÂF  Ŕ€ĂB A ]‚€@€ €ŚBE  €ťB€€B€
€ÂB CFÂB GBĂB‚CFA GBÁGÇ ‚Ŕ€BG BD‚€   Ŕ€X€Ä@€ÂD @€‡BG ‡E‚€  €€‚G GBG GĹ‡BG ‡ÂGÇ‚@ ÇBÂÂ X€D 
€@…€€†H ĆBH HGĂHťB  €€E€
€ÂB CFÂB GBĂB‚CFA GBÁGÇ ‚Ŕ€BG BD‚€   €€X€Ä €ÂD @€‡BG ‡E‚€  @€ÂE F€€ĆBF Ý‚€ Đ‚Ć‚ FÂF B Ŕ€ĂB A ]‚€@€ €ŚI  €ťB€â€  cÁŐ € %      FarmActive    recall 
   EnemyMinions    update 	   MenuMorg    farm    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CastQ        @   VP    GetPredictedHealth    GetLatency      @Ź@   getDmg    WMANA    W    GetBestCircleFarmPosition    width 
   CastSpell    _W    x    z    CastW                          PJ  cJ   `   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€†A ‡ÁA‡E›  Ŕ	€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€ €‡E ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇE ÇÄŔ€€†ÁE ÇE ÇÄ‚E FG‚@ GBÁťÁ X D €BF F‚F ‡ÂFÇGB b€  ăŔë €       FarmActive    recall    JungleMinions    update    pairs    objects 	   MenuMorg    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     GetDistance    range    CastQ    WJF    WMANA    W    GetBestCircleFarmPosition    width 
   CastSpell    _W    x    z                          eJ  xJ   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €    	   MenuMorg    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          zJ  €J   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FÁA †ÁA ĆAB ÂA FB †ÂA ĆB CB FB †B ĆA „A FDB †„A Ć„A d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuMorg 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _Q    _E    _R    LevelSpell       đ?                         ‚J  ¤J   X  F @ †@@ ť € ]  ŔS€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ĚÁÁ@€†‚A ŚBC ť‚€‡‚BŹ‚‚…Ť‚†Ć‚A ÇBĂĎ‚ĂŤÂÝ ‚A ÂA€€Ć‚A ĚÂAĂ Ý‚€Ç‚ÂĎÂÍÂ‚ŔGÄC‡ĂD
‡ĎA CCEGŔ‡ÄPNC‡OĂÄMC‡CÍ‚ F‚A LÂÁŔ€A BC €B‹
EFA GCĂOC‹
C]‚ †‚A ‡‚BŹ‚ŚŤ‚‚ŚX€Ć B€ĆÂF  €A Ý‚€Ű  €@€ÇBG ŰB  Ŕ?€Ŕ €Ç‚G ÇÂÇÝ‚€ Ű  Ŕ€ĆÂF  €GG GČÝ‚€Ű   €ĆBH Ç‚ČÇÂČŰ  Ŕ €ĚI @€ÝB€€3€  €ÇBI ÇÂÇÝ‚€ Ű  Ŕ€ĆÂF  €GCI GČÝ‚€Ű   €ĆBH Ç‚ČÇ‚ÉŰ  Ŕ €ĚÂI @€ÝB€Ŕ-€@ €ÇJ ÇÂÇÝ‚€ Ű  Ŕ€ĆÂF  €GJ GČÝ‚€Ű   €ĆBH Ç‚ČÇBĘŰ  Ŕ €Ć‚J ĂJ ÝB  (€Í‚Ŕ@€Ç‚G ÇÂÇÝ‚€ Ű   €ÇBI ÇÂÇÝ‚€ Ű  Ŕ€ĆÂF  €GCI GČÝ‚€Ű   €ĆBH Ç‚ČÇÂČŰ  Ŕ€ĆBH Ç‚ČÇ‚ÉŰ  €€ĚI @€ÝB€ĚÂI @€ÝB€Ŕ€ÍB‚Ŕ@€Ç‚G ÇÂÇÝ‚€ Ű   €ÇJ ÇÂÇÝ‚€ Ű  Ŕ€ĆÂF  €GJ GČÝ‚€Ű   €ĆBH Ç‚ČÇÂČŰ  Ŕ€ĆBH Ç‚ČÇBĘŰ  €€ĚI @€ÝB€Ć‚J ĂJ ÝB €€ÍBŔ@€ÇBI ÇÂÇÝ‚€ Ű   €ÇJ ÇÂÇÝ‚€ Ű  Ŕ€ĆÂF  €GCI GČÝ‚€Ű   €ĆBH Ç‚ČÇ‚ÉŰ  Ŕ€ĆBH Ç‚ČÇBĘŰ  €€ĚÂI @€ÝB€Ć‚J ĂJ ÝB @€Í‚ÍB‚Ŕ@€Ç‚G ÇÂÇÝ‚€ Ű   
€ÇBI ÇÂÇÝ‚€ Ű  Ŕ€ÇJ ÇÂÇÝ‚€ Ű  €€ĆÂF  €GJ GČÝ‚€Ű  Ŕ€ĆBH Ç‚ČÇÂČŰ  €€ĆBH Ç‚ČÇ‚ÉŰ  @€ĆBH Ç‚ČÇBĘŰ   €ĚI @€ÝB€ĚÂI @€ÝB€Ć‚J ĂJ ÝB ĆK ĚÂÇAC Ý‚€€Ŕ€CH HK  €€ĂF @€Ă €   €Ű  €€J FK LĚÁC ]€€€C€b€  ă@« € 1      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    CalcMagicDamage 
   GetSpellData            level      €K@      9@   ap ÍĚĚĚĚĚě?      đ?      @      @
   maxHealth       ŕ?)\ŹÂő(Ľ?      @     ŔR@ffffffć?      4@      I@    ValidTarget      p—@   recall    Q    Ready    range 	   MenuMorg 	   ksConfig    QKS    CastQ    W    WKS    CastW    R    RKS 
   CastSpell    _R    SSpells    summonerdot    IKS      Ŕ‚@   GetSlot                          ¦J  ±J   S   ‡ @ ‡@@ť€€ ›@    € € †€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   @€Ű   Ŕ€FB € ] ‡@ ‡AB€ €FB €€ ĆÁA @ BAG@ GBÂ‡ÂB ] [A  @€FC †AC ÇCÂC]A  € FD †AD ‡D‡ÁD‡EŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AC € Ă  „E ÄEF@A  †DD ‡„D	‡ÄD	‡DF	][  €€›   €C FBC ‡‚ĂÇÂĂB  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range    GetMinionCollisionM 
   EnemyMinions 
   CastSpell    _Q    x    z    GetPrediction2 	   MenuMorg 	   spConfig    qConfig    QP    line    HP    Presets    Morgana    QCH                          łJ  ľJ   H   ‡ @ ‡@@ť€€ ›@    € € †€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă€ E DE„E@A  †ÄC ‡D	‡DD	‡ÄE	][  €€›   €‚B FÂB ‡ĂÇBĂB  €       W    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2 	   MenuMorg 	   spConfig    wConfig    WP    circle    HP    Presets    Morgana    WCH                          ŔJ  čJ   O  F @ G@Ŕ G€Ŕ [   @€GŔ@ X Á €€GŔ@ G@Á [@  €€F€A ‡Ŕ@ ‡ŔAÇŔ@ Ç ÂÁ@ ABA †ÁB Ć@ ÇAŔÇĂÇAĂ@ B@C‚CF@ GBŔGĂGÂĂť ]@  F @ G@Ŕ G Ä [    €F@D ‡€D ÇŔD Ç Ĺ]€€[   @
€F@E †€E Ç€D ÁD ÁE]€ [@  @€F F †@F Ć€E ÇŔÁE BFE GAÂť  ]€  † F Ć@F D ÁAGD GÂ‡D ‡ABÝ  ť€  Ć€F ÁÁ GÂ ‡ÁAÇBÂD ÂEFÂF †@ ‡B@‡G‡BGĆ@ ÇBŔÇÇÇBĂ@ C@GCF@ GCŔGÇGĂĂ]€Ý@  F @ G@Ŕ G€Ç [    €A@ †ŔG ‡ HÁ@ a€
€FÁG LAČŔ ]€X Á 	€‡ČĆÁH ÇČXŔŔ€‡I ŚAI €ť€›  @€‡AÁ›A  €€‡É›  Ŕ€†A ÇÁÁÂGBÂ‚ ĆÂB @ C@ĂICCF@ GCŔGĂÉGĂ†@ ‡C@‡ĂI‡ĂCÝ ťA  `ŔôF @ G@Ŕ G Ę [   @	€F@J †€J ť € ]  €€ŚÁJ ťA †AD Ŕ€ ť€›  €€‡AK ÇË‡ÁX A@€†F ĆAF ÂÁGÂ‡BÂÝ ť  ĆÁK BK G‚ËBA ‡ÂAŽBLÇBÎ‚ĚĂ ÝA b€  ă€÷F @ G@Ŕ G Í [    €GŔD G@Í ]€€ [   Ŕ€F€A †€E ‡ŔAĆ€E Ç ÂE ABGÁD GĹ†ÁB Ć@ ÇAŔÇĂÇAĂ@ B@C‚CF@ GBŔGĂGÂĂť ]@  F @ G@Ŕ G€Í [    €GŔM G@Í ]€€ [   Ŕ€F€A †€E ‡ŔAĆ€E Ç ÂE ABGÁM GĹ†ÁB Ć@ ÇAŔÇÎÇAĂ@ B@N‚CF@ GBŔGÎGÂĂť ]@  F @ G@Ŕ G@Î [    €G€N G@Í ]€€ [   Ŕ€F€A †€E ‡ŔAĆ€E Ç ÂE ABGN GĹ†ÁB Ć@ ÇAŔÇÁÎÇAĂ@ B@ÂN‚CF@ GBŔGÂÎGÂĂť ]@  F @ G@Ŕ G Ď [    €G@O G@Í ]€€ [   Ŕ€F€A †€E ‡ŔAĆ€E Ç ÂE ABGAO GĹ†ÁB Ć@ ÇAŔÇĎÇAĂ@ B@‚O‚CF@ GBŔG‚ĎGÂĂť ]@   € ?   	   MenuMorg    drawConfig    DST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DQL    ValidTarget    Cel    Q    range    GetMinionCollision    myHero    width    WorldToScreen    D3DXVECTOR3 	   DrawLine    ARGB    DQLC       đ?   DSE    heroManager    iCount    getHero    team    player    it 	   HaveStun    visible    DSEC    DD    pairs    GetEnemyHeroes    DmgCalc      @ź@   killstring 
   networkID 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Ready    DWR    W    DWRC    DER    E    DERC    DRR    R    DRRC                          ęJ  K   ˛   A   †@@ ‡€@Á   a€*€FA@ LÁŔŔ ]€‡Á›A  Ŕ(€‡AÁ›   (€†A ŚÁA €F‚A LÂÁB ]‚€G‚ÂOB‚…MB††‚A ‡BCŹ‚CM‚‚ť ĆA ĚÁÁ@€†‚A ŚB  ť‚€‡‚BŹ‚‚‡Ť‚ÇBÄÄĐÎÂ€ĎÂÄÍÂ€ŹÂĆ‚A ÇBĂĎĹCÄGÄC€ĂD
€ĎŤÂÝ ‚A ÂA€€Ć‚A ĚÂAC Ý‚€Ç‚ÂĎÂ‹Í‚ĹA CC‹Í‚ GBÄ†F ‡BFÇ‚Ćť‚ M‚‚ŤÂŤ@Ŕ €GÂF ‡ÇJBGŔ€GBÄ†F ‡BFÇ‚Ćť‚ M‚‚€Ŕ €GÂF ‡ÇJ‚GŔ€GBÄ†F ‡BFÇ‚Ćť‚ M‚‚ŔŔ €GÂF ‡ÇJÂGŔ€GBÄ†F ‡BFÇ‚Ćť‚ M‚‚ ‚Ŕ €GÂF ‡ÇJHŔ€GBÄ†F ‡BFÇ‚Ćť‚ M‚‚ŤÂ€‚Ŕ €GÂF ‡ÇJBH€	€GBÄ†F ‡BFÇ‚Ćť‚ M‚‚Ť€‚Ŕ €GÂF ‡ÇJ‚H@€GBÄ†F ‡BFÇ‚Ćť‚ M‚‚Ť‚€‚Ŕ €GÂF ‡ÇJÂH €GBÄ†F ‡BFÇ‚Ćť‚ M‚‚ŤÂŤ€‚€ €GÂF ‡ÇJI`ŔÔ € %         đ?   heroManager    iCount    GetHero    dead    visible    myHero    CalcDamage 
   GetSpellData            level      €K@      9@   ap ÍĚĚĚĚĚě?      @      @   health 
   maxHealth       ŕ?)\ŹÂő(Ľ?      @     ŔR@ffffffć?   math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    W Kill!    R Kill! 
   Q+W Kill! 
   Q+R Kill! 
   W+R Kill!    Q+W+R Kill!                          K  
K      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         K  K      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          K  KK   |  Ć @ Ç@ŔÇ€ŔŰ   @A€ÇŔ@ Ç ÁÝ€€ Ű    @€[   €?€Ç@Á A AAX @>€Ć€A ÇŔÁŰ@  @=€Ç Â A B  <€›   €;€Á    Ă… …Ŕ€„Ç Â A B  €Ç@C CÇ Ű   Ŕ
€Ć @ Ç@ŔÇŔĂCÇ Ű    €Ć€D  € GCÝŔ€ Ŕ Ć@D XŔÄ@€Ć@D X Ĺ€ €Ć@D @Ĺ  € € Ć D X€Ĺ €Ć D XŔĹ@€Ć D XŔŔ€ €Ć D  Ć €Ć@F Ć Ç D Ç Ç ÂŔ€„Ć@F Ć Ç D Ç Ç€ÂŔ …Ć@F Ć Ç D Ç ÇŔÂŔ€…ÁŔ G AGAÁ á@(€ĆG ĚÇ@ Ý€  F@ GBŔ‡‚ĆG‚‚[    € €  Â$€GBA†‚A ‡BA€‚‚#€GÂA[B  Â"€GÂG@†"€@HG‚H†BB  CŔ€‡ÂH›  €€‡ÂH‡IÇIXŔ  €B  € € €†BB ŔF@€†BI Ŕ€ IFB †ĂB Ŕ  €ť‚€€Ŕ€†BB ŔI@€†J Ŕ€ IFB †ĂB Ŕ  €ť‚€€€€†BB @J@€†‚J Ŕ€ IFB †ĂB Ŕ  €ť‚€€@€†BB ŔD@€†ÂJ Ŕ€ IFB †ĂB Ŕ  €ť‚€€ 
€†BB  E@€†K Ŕ€ IFB †ĂB Ŕ  €ť‚€€Ŕ	€†BB @E €†BI Ŕ€ IFB †ĂB Ŕ  €ť‚€›B   €†BI Ŕ€ CK @€  ĂIGICFB †ĂB Ŕ  €ť‚€€Ŕ€†BB €K €†ÂJ Ç‚I € FB †ĂB Ŕ  €ť‚€€†H ›  Â€†ÂK Ŕ ť‚ ÇÂ@ ÇĚŔ€†BL ĺ   ťB€Â˙ŕ ×Ć @ ÇŔĚÇ ÍŰ   €€Ç€E Ç ÁÝ€€ Ű   @€Ć@M M Ý Ŕ€[   @€BÁ F‚A GBÁX@ €Â F‚A GÂ@Ŕ€›   @€‚CGÂÍ@@€@ ÂLGÂÍB  Ŕ€N @€ ‡‚E ‡L‚€   €ÂH  Ŕ€ÂHBN  Ŕ €‚N €€ B€@
€ÂHB  €€BK @€ ‚ FBK ‡‚I]‚ †BK Ŕ€ ť‚ N‚‚LÂÎ]‚ OBž
BFBK €€ ]‚ †BK Ç‚Iť‚ ĆBK  € Ý‚ ŽÂŚÂNť‚ Ź‚‚žM‚‚†‚O Ć‚A  € ť‚€Ć‚O A @ Ý‚€Y€‚@€†‚O Ć‚A  € ť‚€Ć‚O A @€Ý‚€€‚€ €Ś‚N  € ťB€â€  cAç € ?   	   MenuMorg 	   exConfig    UAS    E    Ready    team    myHero    dead    type 	   shottype    radius    maxdistance         
   Shieldspells    name    ES 
   spelltype 	   casttype 
   getSpellType       @      @      @   Q    W    R 
   skillData 	   charName       đ?   heroManager    iCount    GetHero    health    hitchampion     boundingRadius    target 
   networkID    checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   GetDistance    range    DelayAction š™™™™™É?	   gpConfig    UG    pairs    GapCloserList 
   spellName    ValidTarget    isMe    CastQ    normalized      Ŕr@      Y@   GetDistanceSqr    2K  4K        @ F@@ … € @€ €    
   CastSpell    _E                                               MK  gK   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuMorg    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          rK  ™K   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    xK  xK           @ @  €       AfterAA                         {K  {K           @ @  €    	   BeforeAA                         ‚K  ‚K           @ @  €       AfterAA                         …K  …K           @ @  €    	   BeforeAA                         ‹K  ‹K        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ‹K  ‹K           @ @  €       AfterAA                                               ŽK  ŽK           @ @  €    	   BeforeAA                         “K  “K           @ @  €       AfterAA                         –K  –K           @ @  €    	   BeforeAA                              	
                ›K  ©K   >   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€  J@Ä‚Ą@  J€€‡
@ KŔ  JŔÄ‚J ĹĄ€  J€€‡
@ ‰KŔ  J€Ĺ‚J ÂĄŔ  J€€‡
@€ŠFŔ@ † F Ç A ÇŔÁAF C  ]€€
@€‹C    ÇŤ
@ ŤF€G †ŔG Ç A ÇŔÁH FAH ]€€
@€ŽF€G †ŔH Ç A ÇŔÁH FAH ]€€
@ ‘K   
@ ’F€I ]€€ 
@€’ € '      SelectedTarget     Cel    TargetSelector    Q    name 
   Time Bomb    range      čŚ@   speed       ś@   delay       Đ?   width       Y@   Ready    W    Rewind    E 
   Time Warp      ¨†@   R    Chronoshift    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    recall    MAQCel  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast    źK  źK        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                           K   K        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ˇK  ˇK        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ˘K  ˘K        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               «K  !L   Ó  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FAI   ĆI ÇÁÉ
 Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@
 
 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 
 GK GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á  
 GAL GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 
 FAM 
 ÁÁ
  AÂ
 ]@€F @ GŔĆ LŔÁ Á@  FAM Á ÁÁ
  AÂ
 ]@€F @ GŔĆ LŔÁ Á  A FAM 
 ÁÁ
  AÂ
 ]@€F€O † @ Á  € C    Ă  ]@€F @ L Á ÁŔ  ]@ F @ G Đ LŔÁ Á  A FG Á ]@ F @ G Đ LŔÁ Á@ 
 GÁJ GÁĹ FH € ]@ F @ G Đ LŔÁ Á€ 
 GAL GÁĹ FH € ]@ F @ G Đ LŔÁ Á  Á FG Á ]@ F @ G Đ LŔÁ Á  A FG Á ]@ F @ G Đ LŔÁ ÁŔ 
 FAM Á ÁÁ
  AÂ
 ]@€F @ G Đ LŔÁ Á  A FAM  ÁÁ
  AÂ
 ]@€F @ G Đ LŔÁ Á  Á FG Á ]@ F @ G Đ LŔÁ Á  A FG Á ]@ F @ G Đ LŔÁ Á@  FÁQ   ĆI ÇÁÉ Ý ]@  F @ L Á Á@  ]@ GŔR L Ó Ć @ Ç€Ň]@€F @ L Á Á@  ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ AŔ †ŔS ‡ TÁŔ a €FÁS LAÔŔ ]€‡ÔĆÁD ÇÔŔŔ€†@ ‡SŚÁAÂÔGÂÔ†‚H Ă€ ťA `@űF @ G€Ó LŔÁ Á  Á FG Á ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ Á  A FAM  ÁÁ
 Â AÂ
 ]@€F @ G€Ó LŔÁ ÁŔ  FAM A ÁÁ ‚ AÂ
 ]@€F @ G€Ó LŔÁ Á  Á FG Á ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ ÁŔ  FH € ]@ F @ L Á Á@  ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FAM  ÁÁ
  AÂ
 ]@€F @ G€× LŔÁ ÁŔ  FH € ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á€ Á FAM  ÁÁ
  AÂ
 ]@€F @ G€× LŔÁ Á@  FH € ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FAM  ÁÁ
  AÂ
 ]@€F @ G€× LŔÁ Á@  FH € ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  Á FAM  ÁÁ
  AÂ
 ]@€F @ G€× LŔÁ Á@  FH € ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  Á FAM  ÁÁ
  AÂ
 ]@€F @ G€× LŔÁ Á@  FH € ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FG Á ]@ F @ G€× LŔÁ Á  Á FG Á ]@ F @ G€× LŔÁ Á  A FAM  ÁÁ
  AÂ
 ]@€F @ G€× LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G ß LŔÁ Á  A FG Á ]@ F @ G ß LŔÁ Á@  FH € ]@ F @ G ß LŔÁ ÁŔ 
 GÁJ GÁĹ FH € ]@ F @ L Á Á   A  ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ Á€  
 GÁJ GÁĹ FB Á  Ë€! AB! ‚! äA€]@€F @ G@ŕ LŔÁ ÁŔ! 
 GK GÁĹÁ FB " Ë ! A‚! äA ]@€F @ G@ŕ LŔÁ Á  Á FG Á ]@ F @ G@ŕ LŔÁ Á  A FG Á ]@ F @ G@ŕ LŔÁ ÁŔ 
 FAM  ÁÁ
  AÂ
 ]@€F @ G@ŕ LŔÁ Á@  FAM  ÁÁ
  AÂ
 ]@€F @ L Á Á@" " ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ" 
 GÁJ GÁĹ FH € ]@ F @ G€â LŔÁ Á # 
 GK GÁĹÁ FH € ]@ F @ G€â LŔÁ Á  Á FG Á ]@ F @ G€â LŔÁ Á  A FG Á ]@ F @ G€â LŔÁ ÁŔ 
 FAM  ÁÁ
  AÂ
 ]@€F @ G€â LŔÁ Á@  FAM  ÁÁ
  AÂ
 ]@€F @ L Á Á@# # ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ# $ FH € ]@ F @ G€ă LŔÁ Á@$ $ FH € ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ ÁŔ$ % FH € ]@ F @ G€ă LŔÁ Á@% % FÁe ‹ Á& & AÂ
 Â
 ¤A ]@ F @ G€ă LŔÁ Á  Á FG Á ]@ F @ G€ă LŔÁ Á  A FG Á ]@ F @ G€ă LŔÁ Á@& & FH € ]@ F @ G€ă LŔÁ ÁŔ& ' FÁe ‹ Á& Â
 A& Â
 ¤A ]@ F @ L Á Á@' ' ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ' ( FH   ]@ F @ G Đ L@č Á@ ]@€F @ G€ç L@č ÁŔ' ]@€ € ˘      MenuZilean 
   scriptConfig    MasterSeries: Zilean    Zilean1    addSubMenu    [Zilean]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Zilean    addTS    [Zilean]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF 
   CEnabled2    Stun Combo    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E) 
   AddSpellMenu    [Zilean]: Harras Settings 
   harrasConfig    QH    EH       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Zilean]: Items Settings 
   iteConfig    it    LoadToMenu    [Zilean]: Ultimate Settings    uConfig    heroManager    iCount    GetHero    team 	   charName    UAUHP    Min. HP% To Use       $@   UAUR    Range To Check Near Enemy       ‰@     p§@   UAU    Enable    [Zilean]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use       D@   umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Zilean]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    [Zilean]: Farm Settings    farm    QF       @   No 	   Freezing 
   LaneClear    WF        @   [Zilean]: Jungle Farm    jf    QJF    WJF    [Zilean]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DER 
   Draw E Range    DERC    Draw E Range Color    SCRIPT_PARAM_COLOR      ŕo@   DRR    Draw Q&R Range    DRRC    Draw Q&R Range Color    [Zilean]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          #L  4L   +   F @ †@@ ]@ G€@ LŔŔ ]@ G A X@Á Ŕ€F€A ‡ A ÇŔA Ç Â]€€[    €G A 
@€„G A 
@ …€€FŔB ‡ C ]€ 
@€„G€@ G@Ă 
@ …G€C [@  Ŕ €LŔC ]@ L D ]@ F@@ G@Ä G€Ä [   @ €LŔD ]@  €       CheckOB    MenuZilean    QTargetSelector    update    SelectedTarget     ValidTarget    Q    range    Cel    QCel    GetCustomTarget    TargetSelector    target    recall    Support    AutoULT    comboConfig 
   CEnabled2 
   StunCombo                          6L  EL   j   F @ ]€€ [    €G@@ [@  @€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€A G Â G@Â [    €F€@ ‡Ŕ@ Ç€B ÇŔÂ]€€[   @€F C G@Ă † C ‡€CP€€ OŔĂ †€A ‡ B‡ D@ € €L@D ÇŔ@ ]@€F€A G Â G€Ä [    €F€@ ‡Ŕ@ ÇŔD ÇŔÂ]€€[   @€F C G@Ă † C ‡€CP€€ OŔĂ †€A ‡ B‡ E@ € €L@E ÇŔ@ ]@€F€A G Â G€Ĺ [   Ŕ€F€@ ‡Ŕ@ Ç€B ÇŔÂ]€€[    €G€B GŔĹ ]€€ [   Ŕ€GŔD GŔĹ ]€€ [@   €F C G@Ă † C ‡€CP€€ OŔĂ †€A ‡ B‡ F@ @ €L@F ]@  €       ComboActive    recall    ValidTarget    QCel    it 
   CastItems    MenuZilean 
   iteConfig    comboConfig    USEQ    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    USEE    E    EMANA    CastE    USEW    Ready    WMANA    CastW                          GL  PL   A   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €
€G A [@  Ŕ€F @ G@Ŕ G@Á [    €F€A ‡ŔA Ç B Ç@Â]€€[   @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@ € €LŔC ÇŔA ]@€F @ G@Ŕ G Ä [    €F€A ‡ŔA Ç@D Ç@Â]€€[   @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€D@ € €LŔD ÇŔA ]@€ €       MenuZilean 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QH    ValidTarget    QCel    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    EH    E    EMANA    CastE                          RL  oL   ”   F @ ]€€ [   €#€G@@ [@  Ŕ"€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ Ŕ€€Â  
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€D BD‚€   @€X€ÄŔ€ÂD @€‡D ‡E‚€   €BE GD GĹ‡D ‡‚EÇ‚@ ÇBÂÂ X€D€€†ÂE ĆF CFGFťB  €ŔĆ €
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ€D BD‚€   €€X€Ä €ÂD @€‡D ‡E‚€  @€G BG€€Ć‚G Ý‚€ ĐÂÇ‚ FH  Ŕ€ĂB A ]‚€@€ €ŚBH  €ťB€ŔF@€€Â Ŕ€ÂB CFÂB GBĂB‚CFA GBÁG‚Č ‚ €ÂH BD‚€   Ŕ€X€Ä@€ÂD @€‡ÂH ‡E‚€  €€D BD‚€ B  @ €I B â€  cAŕ € %      FarmActive    recall 
   EnemyMinions    update    MenuZilean    farm    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    GetBestCircleFarmPosition    width 
   CastSpell    _Q    x    z        @   VP    GetPredictedHealth    GetLatency      @Ź@   getDmg    CastQ    WMANA    W    CastW                          qL  L   	X   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€‚C ‚Dť€›  € €ŚÁD  €ťA€†A ‡ÁA‡E›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€ €‡E ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€‚E ‚Dť€›  €€‡C ‡ÁCť€ ›A  @ €ŚÁE ťA b€  ăŔí €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuZilean    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CastQ    WJF    WMANA    W    CastW                          L  –L   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €       MenuZilean    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          L  ¨L   G   L @ ]@ F@@ L€Ŕ ĆŔ@ ]€€G Á †@@ Ś€@AA ť€€‡ AÇ€A ÇŔÁÝ€€ Ű    €Ç B ÇŔÁÝ€€ Ű   Ŕ€Ć@B B GA GÁÂÝ€€Ű    €Ć@@ Ç ÁĂ 
 Ŕ € €Ě@C GB Ý@€Ç€C Ű   @€Ç€A ÇŔÁÝ€€ Ű@  @ €ĚŔC Ý@ Ç€A ÇŔÁÝ€€ Ű   @€Ć@B B GA GÁÂÝ€€Ű   € €Ě@C GB Ý@€Ć@@ Ě ÄFAD GÄ†AD ‡ÁDÝ@  €    
   CheckBomb    myHero 
   GetSpellData    _Q    mana    _W    Q    Ready    W    ValidTarget    QCel    range        @   CastQ    MAQCel    CastW    MoveTo 	   mousePos    x    z                          ŞL  ¶L      F @ ‡@@ ]€ [   Ŕ€A€  ‡@@ ‡Ŕ@Á€  a@€GA@ LÁŔ ]€†AA Ŕ€ť ›   €
ŔA‡Â@B  €
€B` ü €       ValidTarget    QCel       đ?
   buffCount    getBuff    BuffIsValid    MAQCel     name    zileanqenemybomb                          ¸L  ÁL   	1   A   †@@ ‡€@Á   a@
€FA@ LÁŔŔ ]€‡ÁĆAA ÇÁŔ €†A Ŕ€ť ÇÁA ÇÂŔ@€‡AÂÇÂÁŹÁBĆC ÇAĂÇĂŔ €†C ‡ACÇÁĂ‡Á›  €€†D Ŕ€C BCBDť€€‰€ €ŚÁD  €ťA€` ő €          đ?   heroManager    iCount    GetHero    team    myHero    GetDistance    R    range    health 
   maxHealth       Y@   MenuZilean    uConfig    UAUHP 	   charName    EnemyCount    UAUR            CastR                          ĂL  ÉL   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuZilean 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         ËL  ŮL   P   F @ †@@ ť € ]  Ŕ€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€B ‚B‚…
†X@Ă@
€F‚C €€ÇÂA ÇÂĂ]‚€[  €€GD [B  Ŕ
€FBD L‚ÄÁÂ ]‚€[   € €€†E ‡BE‡‚E›  @€†‚C Ŕ€Ă ť‚€›  Ŕ€†F ĆBD ĚBĆAĂ Ý‚€ €ťB€ €Ŕ€€†E ‡BE‡‚F›  @€†‚C Ŕ€ĂA ĂCť‚€›  € €ŚÂF  €ťB€b€  ă@í €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   level       4@      I@    ValidTarget    range    recall    SSpells    Ready    summonerdot    MenuZilean 	   ksConfig    IKS      Ŕ‚@
   CastSpell    GetSlot    QKS    CastQ                          ŰL  ćL   E   ‡ @ ‡@@ť€€ ›@    € € †€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	][  €€›   €‚B FÂB ‡ĂÇBĂB  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2    MenuZilean 	   spConfig    qConfig    QP    circle    QCH                          čL  ěL   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          îL  ňL   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       E    Ready 
   CastSpell    _E                          ôL  řL   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       R    Ready 
   CastSpell    _R                          úL  M   
ť   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇÉÇÁĂ@ B@‚IDF@ GBŔG‚ÉGBÄť ]@  F @ G@Ŕ GŔÉ [    €G J GŔČ ]€€ [@   €G@J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGAJ GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@‚JDF@ GBŔG‚ĘGBÄť ]@   € +      MenuZilean    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DER    E    Ready    myHero    range    DERC    DRR    Q    R    DRRC                          M  !M   O   F @ †@@ ť € ]  €€‡Ŕ›A  Ŕ€‡ÁŔ›   €†A Ŕ€ť @AŔ€†A ÁÁ  €FB B ť€ĆB ÇÂĎÁ…ÍÁ†BĂF‚C GÂĂ‡Ä]‚ 
BOBDMÂ ‚Ŕ €‚D GÂÄ
ĹŔ€BĂF‚C GÂĂ‡Ä]‚ 
BŔŔ €‚D GÂÄ
BĹŔ€BĂF‚C GÂĂ‡Ä]‚ 
B€Ŕ €‚D GÂÄ
‚ĹŔ€BĂF‚C GÂĂ‡Ä]‚ 
BO‚@€ €‚D GÂÄ
ÂĹb€  ă€í €       pairs    GetEnemyHeroes    dead    visible    GetDistance      p§@   getDmg    Q    myHero       @   level       4@      I@   health    math    floor    shield        @   killstring 
   networkID    Harass Him!!! 
   Ignite Kill!    Q Kill! 
   2xQ Kill!                          #M  'M      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         )M  -M      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          /M  IM   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuZilean    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          RM  yM   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    XM  XM           @ @  €       AfterAA                         [M  [M           @ @  €    	   BeforeAA                         bM  bM           @ @  €       AfterAA                         eM  eM           @ @  €    	   BeforeAA                         kM  kM        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    kM  kM           @ @  €       AfterAA                                               nM  nM           @ @  €    	   BeforeAA                         sM  sM           @ @  €       AfterAA                         vM  vM           @ @  €    	   BeforeAA                              	
                {M   M   š   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚KŔ  J@Ä‚J€ÄĄ@  J€€‡
@ K€ J Ĺ‚J@ĹJ€Â„J Ă…J€Ĺ†Ą€  J€€‡
@€‰K€  J Ć‚ĄŔ  J€€‡
@€‹FŔ@ †€F Ç A ÇŔÁÁF C  ]€€
@€ŚFŔ@ †€F ÇŔD ÇŔÁÁF C  ]€€
@ Ž
€ÇŽF H †@H Ç A ÇŔÁH FÁH ]€€
@€ŹF H †@I Ç A ÇŔÁH FÁH ]€€
@ ’K   
@ “F J ]€€ 
@€“K  	‹Ŕ  ŠŔJ•Š@K–ŠŔE—ËŔ  ĘŔK•Ę L–ĘŔE—Á  
AL•
L–
ÁE—KÁ  JÁL•JM–JÁE—‹Á  ŠAM•ŠM–ŠÁE—ËÁ  ĘÁM•ĘN–ĘÁE—Â  
BN•
‚N–
ÂE—KÂ  JÂN•JO–JÂE—‹Â  ŠBO•Š‚O–ŠÂE—ËÂ  ĘÂO•ĘP–ĘÂE—Ă  
CP•
P–
ĂE—KĂ  JĂP•JQ–JĂE—‹Ă  ŠCQ•ŠQ–ŠĂE—ËĂ  ĘĂQ•ĘR–ĘĂE—Ä  
DR•
„R–
ÄE—KÄ  JÄR•JS–JÄE—‹Ä  ŠDQ•Š„Q–ŠÄE—ËÄ  ĘDS•Ę„S–ĘÄE—Ĺ  
ĹS•
T–
ĹE—KĹ  JET•J…T–JĹE—d@ 

@€” € S      SelectedTarget     Cel    TargetSelector    Q    name 	   Starcall    range      Č‰@   speed      X›@   delay       ŕ?   width      @p@   Ready    W    Astral Infusion      ř@   E    Equinox      °Ť@     €Q@   R    Wish    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    M  M        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          €M  €M        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          M  M        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ‚M  ‚M        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ˘M  )N     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€
 Á
 FK A Á Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FK A Á Â A‚ ]@€F€L † @ Á  € C  € Ă  ]@€F @ L Á ÁŔ 
 ]@ F @ G Í LŔÁ Á  A FG Á ]@ F @ G Í LŔÁ Á@
 	 GAI GÁĹ	 FH € ]@ F @ G Í LŔÁ Á€
 	 GJ GÁĹA
 FH € ]@ F @ G Í LŔÁ Á  Á FG Á ]@ F @ G Í LŔÁ Á  A FG Á ]@ F @ G Í LŔÁ Á€
 Á
 FK Á
 Á Â A‚ ]@€F @ G Í LŔÁ Á  A FK  Á Â A‚ ]@€F @ G Í LŔÁ Á  Á FG Á ]@ F @ G Í LŔÁ Á  A FG Á ]@ F @ G Í LŔÁ Á@  FÁN   ĆO ÇAĎ‚ Ý ]@  F @ L Á ÁŔ  ]@ G@P L€Đ Ć @ Ç Đ]@€F @ L Á ÁŔ  ]@ F @ G Ń LŔÁ Á  A FG Á ]@ F@Q †€Q ť € ]  @€†ÁQ ÇR ťŔ€ÇBŇCR Ŕ€Ć@ ÇŃĚÂÁGRĂ ÇCR GDS–CĆH € ÝB ˘  #Bűb€  ăŔůF @ G Ń LŔÁ Á  Á FG Á ]@ F @ G Ń LŔÁ Á  A FG Á ]@ F @ G Ń LŔÁ Á€ Á FH € ]@ F @ L Á Á  A ]@ F @ G@Ô LŔÁ Á  A FG Á ]@ AŔ †€T ‡ŔTÁŔ a €FT LŐŔ ]€‡AŐĆÁD ÇAŐŔŔ€†ÁD X€ €†@ ‡ATŚÁABŇGBŇ‚ V‚‚†K ÁÂ
  AĂ  ťA€`@ůF @ G@Ô LŔÁ Á  Á FG Á ]@ F @ G@Ô LŔÁ Á  A FG Á ]@ F @ G@Ô LŔÁ ÁŔ  FK A ÁÁ ‚ A‚ ]@€F @ G@Ô LŔÁ ÁŔ  FK A Á Â A‚ ]@€F @ L Á Á€ Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ AŔ †€T ‡ŔTÁŔ a@€FT LŐŔ ]€‡AŐĆÁD ÇAŐŔ €†@ ‡ÁWŚÁABŇGBŇ‚ V‚‚†K Á  AĂ  ťA€` úF @ GŔ× LŔÁ Á  Á FG Á ]@ F @ GŔ× LŔÁ Á  A FG Á ]@ F @ GŔ× LŔÁ ÁŔ  FK A ÁÁ ‚ A‚ ]@€F @ L Á Á@  ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FK  Á Â A‚ ]@€F @ G€Ř LŔÁ ÁŔ  FH € ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á€ Á FK  Á Â A‚ ]@€F @ G€Ř LŔÁ Á@  FH € ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FK  Á Â A‚ ]@€F @ G€Ř LŔÁ Á@  FH € ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  Á FK  Á Â A‚ ]@€F @ G€Ř LŔÁ Á@  FH € ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  Á FK  Á Â A‚ ]@€F @ G€Ř LŔÁ Á@  FH € ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FK  Á Â A‚ ]@€F @ G€Ř LŔÁ Á@  FH € ]@ F @ L Á ÁŔ   ]@ F @ G ŕ LŔÁ Á  A FG Á ]@ F @ G ŕ LŔÁ Á@    FH € ]@ F @ G ŕ LŔÁ ÁŔ  	 GAI GÁĹ	 FH € ]@ F @ L Á Á ! A! ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€! 	 GAI GÁĹ	 FB Á! Ë€" AB" ‚" äA€]@€F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€
 Á
 FK  Á Â A‚ ]@€F @ L Á ÁŔ" # ]@ F @ G ă LŔÁ Á  A FG Á ]@ F @ G ă LŔÁ Á@# 	 GAI GÁĹ	 FH € ]@ F @ G ă LŔÁ Á  Á FG Á ]@ F @ G ă LŔÁ Á  A FG Á ]@ F @ G ă LŔÁ Á€
 Á
 FK  Á Â A‚ ]@€F @ L Á Á€# Á# ]@ F @ GŔă LŔÁ Á  A FG Á ]@ F @ GŔă LŔÁ Á $ A$ FH € ]@ F @ GŔă LŔÁ Á€$ Á$ FH € ]@ F @ GŔă LŔÁ Á  Á FG Á ]@ F @ GŔă LŔÁ Á  A FG Á ]@ F @ GŔă LŔÁ Á % A% FH € ]@ F @ GŔă LŔÁ Á€% Á% Ff ‹ ÁA& ‚& AÂ
 ‚ ¤A ]@ F @ GŔă LŔÁ Á  Á FG Á ]@ F @ GŔă LŔÁ Á  A FG Á ]@ F @ GŔă LŔÁ ÁŔ& ' FH € ]@ F @ GŔă LŔÁ Á@' ' Ff ‹ Á& Â' A‚ ‚ ¤A ]@ F @ GŔă LŔÁ Á  Á FG Á ]@ F @ GŔă LŔÁ Á  A FG Á ]@ F @ GŔă LŔÁ Á ( A( FH € ]@ F @ GŔă LŔÁ Á€( Á( Ff ‹ Á& ‚& A‚& ‚ ¤A ]@ F @ L Á Á ) A) ]@ F @ G@é LŔÁ Á  A FG Á ]@ F @ G@é LŔÁ Á€) Á) FH   ]@ F @ G Í L ę Á@ ]@€F @ G@é L ę Á€) ]@€ € ©      MenuSoraka 
   scriptConfig    MasterSeries: Soraka    Soraka1    addSubMenu    [Soraka]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Soraka    addTS    [Soraka]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEE    E     (E)    QMANA    Min. Mana % To Use (Q)    SCRIPT_PARAM_SLICE       @              Y@   EMANA    Min. Mana % To Use (E) 
   AddSpellMenu    [Soraka]: Harras Settings 
   harrasConfig    QH    EH       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Soraka]: Items Settings 
   iteConfig    it    LoadToMenu    [Soraka]: Auto Interrupt 	   aiConfig    ipairs    GetEnemyHeroes    pairs    InterruptList 	   charName 
   spellName    Stop       	   menuname    UAI    Enable    [Soraka]: Auto Heal Settings    uConfig    heroManager    iCount    GetHero    team 
    Min. HP%    UAUR    Range To Check Near Enemy:       ‰@     p§@   UAUR2    Use If My HP% >       9@!   [Soraka]: Auto Ultimate Settings 
   ultConfig       $@   [Soraka]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use       D@   umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Soraka]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    [Soraka]: Farm Settings    farm    QF       @   No 	   Freezing 
   LaneClear    [Soraka]: Jungle Farm    jf    QJF    [Soraka]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      `c@     ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color      @Z@   DER 
   Draw E Range    DERC    Draw E Range Color    [Soraka]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          +N  =N   .   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G€@ GŔĂ 
@ †G D [@  @€L@D ]@ L€D ]@ LŔD ]@  €       CheckOB    MenuSoraka    QTargetSelector    update    ETargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    ECel    GetCustomTarget    TargetSelector    target    recall    Support    AutoULT 	   AutoULT2                          ?N  KN   G   F @ ]€€ [   @€G@@ [@  €€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€A G Â G@Â [    €F€@ ‡Ŕ@ Ç€B ÇŔÂ]€€[   @€F C G@Ă † C ‡€CP€€ OŔĂ †€A ‡ B‡ D@ € €L@D ÇŔ@ ]@€F€A G Â G€Ä [    €F€@ ‡ŔD Ç E ÇŔÂ]€€[   @€F C G@Ă † C ‡€CP€€ OŔĂ †€A ‡ B‡@E@ € €L€E ÇŔD ]@€ €       ComboActive    recall    ValidTarget    QCel    it 
   CastItems    MenuSoraka 
   iteConfig    comboConfig    USEQ    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    USEE    ECel    E    EMANA    CastE                          MN  VN   A   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €
€G A [@  Ŕ€F @ G@Ŕ G@Á [    €F€A ‡ŔA Ç B Ç@Â]€€[   @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡€C@ € €LŔC ÇŔA ]@€F @ G@Ŕ G Ä [    €F€A ‡@D Ç€D Ç@Â]€€[   @€F€B GŔÂ †€B ‡ CP€€ O@Ă † @ ‡@@‡ŔD@ € €L E Ç@D ]@€ €       MenuSoraka 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QH    ValidTarget    QCel    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    EH    ECel    E    EMANA    CastE                          XN  pN   p   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ Ŕ€€Â  
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚@€D BD‚€   @€X€ÄŔ€ÂD @€‡D ‡E‚€   €BE GD GĹ‡D ‡‚EÇ‚@ ÇBÂÂ X€D€€†ÂE ĆF CFGFťB  €ŔĆ €
€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚Ŕ€D BD‚€   €€X€Ä €ÂD @€‡D ‡E‚€  @€G BG€€Ć‚G Ý‚€ ĐÂÇ‚ FH  Ŕ€ĂB A ]‚€@€ €ŚBH  €ťB€â€  cAé € "      FarmActive    recall 
   EnemyMinions    update    MenuSoraka    farm    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    GetBestCircleFarmPosition    width 
   CastSpell    _Q    x    z        @   VP    GetPredictedHealth    GetLatency      @Ź@   getDmg    CastQ                          rN  }N   	3   F @ ]€€ [   @€G@@ [@  €
€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€‚C ‚Dť€›  € €ŚÁD  €ťA€b€  ă ÷ €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuSoraka    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CastQ                          N  ’N   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €       MenuSoraka    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          ”N  źN   	N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡ÁĆAA ÇÁŔ@€†A Ŕ€ť ÇÁA ÇÂŔ€
€‡AÂ›A  Ŕ€†AA ‡BĆAA ÇÁÂÁŹCĆAC ÇĂÇÁĂ€ 
€†AC ‡CÇÄ‡Á›  €€†AC ‡CÇÄ‡Á€ €‡ÂÇÁÂÁŹCĆAC ÇĂÄÇ‚Ŕ€€†D Ŕ€BC ‚CÂDť€€€€†E Ŕ€ť ÇÁA ÇÂŇAĹŔ€ €ŚE  €ťA€`Ŕí €          đ?   heroManager    iCount    GetHero    team    myHero    GetDistance    W    range    dead    health 
   maxHealth       Y@   MenuSoraka    uConfig    UAUR2 	   charName            EnemyCount    UAUR    GetDistanceSqr        @   CastW                          ˇN  ŻN   
B   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡ÁĆAA ÇÁŔ@€‡Á›A  €€†ÁA ‡BÇAÂ‡Á›   
€†ÁA ‡BÇAÂ‡Á€…€€‡ÁÂÇĂÁŹACĆÁA ÇÂBÂÇ‚Ŕ €†C Ŕ€ÂA BÂCť€€… €‡D ‡ADť€ ›  Ŕ€ŚD ťA  ÁÁ   ˇ€†E ÁB CÂÖťB  Aţ`Ŕđ €          đ?   heroManager    iCount    GetHero    team    myHero    dead    MenuSoraka 
   ultConfig 	   charName            health 
   maxHealth       Y@   EnemyCount    UAUR    R    Ready    CastR       @   print f   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Save With ULTIMATE!!: </font>                          ±N  ·N   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FĂA †B ĆĂA ÄA FDB †ÄA ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuSoraka 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _Q    _E    _R    LevelSpell       đ?                         ąN  ÇN   P   F @ †@@ ť € ]  Ŕ€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€B ‚B‚…
†X@Ă@
€F‚C €€ÇÂA ÇÂĂ]‚€[  €€GD [B  Ŕ
€FBD L‚ÄÁÂ ]‚€[   € €€†E ‡BE‡‚E›  @€†‚C Ŕ€Ă ť‚€›  Ŕ€†F ĆBD ĚBĆAĂ Ý‚€ €ťB€ €Ŕ€€†E ‡BE‡‚F›  @€†‚C Ŕ€ĂA ĂCť‚€›  € €ŚÂF  €ťB€b€  ă@í €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   level       4@      I@    ValidTarget    range    recall    SSpells    Ready    summonerdot    MenuSoraka 	   ksConfig    IKS      Ŕ‚@
   CastSpell    GetSlot    QKS    CastQ                          ÉN  ÔN   E   ‡ @ ‡@@ť€€ ›@    € € †€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	][  €€›   €‚B FÂB ‡ĂÇBĂB  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2    MenuSoraka 	   spConfig    qConfig    QP    circle    QCH                          ÖN  ÚN   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       W    Ready 
   CastSpell    _W                          ÜN  çN   E   ‡ @ ‡@@ť€€ ›@    € € †€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	][  €€›   €‚B FÂB ‡ĂÇBĂB  €       E    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2    MenuSoraka 	   spConfig    eConfig    EP    circle    ECH                          éN  íN   	   ‡ @ ‡@@ť€€ ›   € €†€@ ĆŔ@ ť@  €       R    Ready 
   CastSpell    _R                          ďN  ţN   
Ź   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €GŔD G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁD GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGF GĹ†AC Ć@ ÇAŔÇAĆÇÁĂ@ B@BFDF@ GBŔGBĆGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@   €       MenuSoraka    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DQR    Q    Ready    myHero    range    DWR    W    DWRC    DER    E    DERC                           O  O      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         O  
O      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          O  O   .   Ć @ Ç@ŔÇ€ŔŰ   Ŕ	€ĆŔ@ A Ý @€[   Ŕ€BÁ F‚A GBÁX@€€ÂÁ F‚A GÂÁ@@€›   Ŕ€BGBÂ@Ŕ€@ B@GBÂB  @€‚B @€ ‡ÂB ‡C‚€  € €BC €€ B€â€  cÁö €       MenuSoraka 	   aiConfig    UAI    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    E    range    CastE                          O  2O   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuSoraka    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ;O  bO   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    AO  AO           @ @  €       AfterAA                         DO  DO           @ @  €    	   BeforeAA                         KO  KO           @ @  €       AfterAA                         NO  NO           @ @  €    	   BeforeAA                         TO  TO        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    TO  TO           @ @  €       AfterAA                                               WO  WO           @ @  €    	   BeforeAA                         \O  \O           @ @  €       AfterAA                         _O  _O           @ @  €    	   BeforeAA                              	
                dO  ŞO      
@@€D   
@Ŕ
@ KŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …KŔ  J€Ă‚JŔĂĄ€  J€€„
@€†K€  J@Ä‚ĄŔ  J€€„
@ FŔ@ †ŔD Ç A ÇŔÁE ]€ 
@ ‰FŔ@ †ŔD Ç€B ÇŔÁE ]€ 
@€ŠFŔ@ †ŔD ÁŔ ]€€
@ ‹C      
@ Ś
€ĆŚF G ]€€ 
@€ŤF€G †ŔG Ç A ÇŔÁH FAH ]€€
@€ŽF€G †ŔH Ç A ÇŔÁH FAH ]€€
@ ‘K €@	 Á€	 Á	 A
 A
 d@€
@ ’K €@	 Á€	 Á	 A
 A
 d@€
@ •K  	‹Ŕ  Š@K–ŠŔK—Š DËŔ  Ę@L–Ę€L—Ę DÁ  
ÁL–
M—
DKÁ  JAM–JM—JD‹Á  ŠÁM–ŠN—ŠDËÁ  ĘAN–ĘN—ĘDÂ  
ÂN–
O—
DKÂ  JBO–J‚O—JD‹Â  ŠÂO–ŠP—ŠDËÂ  ĘBP–Ę‚P—ĘDĂ  
ĂP–
Q—
DKĂ  JCQ–JQ—JD‹Ă  ŠĂQ–ŠR—ŠDËĂ  ĘCR–ĘR—ĘDÄ  
ÄR–
S—
DKÄ  JDS–J„S—JD‹Ä  ŠÄQ–ŠR—ŠDËÄ  ĘÄS–ĘT—ĘDĹ  
ET–
…T—
DKĹ  JĹT–JU—JDd@ 

@€•K €‹Ŕ  Š€U–ŠŔU—Š AËŔ  Ę V–Ę@V—Ę DÁ  
V–
ÁB—
BKÁ  JÁV–JW—JA‹Á  ŠAW–ŠW—ŠDËÁ  ĘÁW–ĘX—ĘAÂ  
BX–
‚X—
AKÂ  JÂX–JY—JBC‹Â  ŠBY–Š‚Y—ŠDËÂ  ĘÂY–ĘZ—ĘDĂ  
CZ–
Z—
DKĂ  JĂZ–J[—JA‹Ă  ŠC[–Š[—ŠCCËĂ  ĘC[–ĘĂ[—ĘCCÄ  
\–
D\—
„BKÄ  J\–J„\—J„B‹Ä  ŠÄ\–Š]—ŠAËÄ  ĘD]–Ę„]—ĘDCĹ  
Ĺ]–
^—
DKĹ  JER–JE^—J…B‹Ĺ  Š…^–ŠĹ^—ŠECËĹ  Ę_–ĘE_—ĘECĆ  
†_–
Ć_—
AKĆ  J`–JF`—JA‹Ć  Š†`–ŠĆ`—ŠFCËĆ  ĘĆP–Ęa—ĘAÇ  
GP–
Ga—
GCKÇ  J‡a–JÇa—JGC‹Ç  Šb–ŠGb—ŠGCd@€
@€Ş € Š      Cel     SelectedTarget    TargetSelector    Q    name 
   Pulverize    range      Đv@   Ready    W 	   Headbutt      P„@   E    Triumphant Roar      ř@   R    Unbreakable Will    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    WTargetSelector    FQTargetSelector      @@   recall    endT š™™™™™ą?   it 
   ItemsCast 
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QMANA      @P@     €Q@     ŔR@      T@     @U@   WMANA    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    GapCloserList    Aatrox    AatroxQ    Akali    AkaliShadowDance    Alistar    Fiora    FioraQ    Diana    DianaTeleport    Elise    EliseSpiderQCast    Fizz    FizzPiercingStrike    Gragas    GragasE    Hecarim    HecarimUlt 	   JarvanIV    JarvanIVDragonStrike    Irelia    IreliaGatotsu    Jax    JaxLeapStrike    Khazix    KhazixE    khazixelong    LeBlanc 
   LeblancSlide    LeblancSlideM    LeeSin    BlindMonkQTwo    Leona    LeonaZenithBlade 	   Malphite    UFSlash    Pantheon_LeapBash    Poppy    PoppyHeroicCharge 	   Renekton    RenektonSliceAndDice    Riven    RivenTriCleave    Sejuani    SejuaniArcticAssault    Tryndamere 
   slashCast    ViQ    MonkeyKingNimbus    XinZhao 
   XenZhaoSweep    Yasuo    YasuoDashWrapper    gO  gO        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          hO  hO        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          iO  iO        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          jO  jO        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ¬O  AP   ˇ  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH   ]@ F @ GŔĆ LŔÁ Á€
 Á
 FH € ]@ F @ GŔĆ LŔÁ Á  A FK Á Á B A ]@€F @ GŔĆ LŔÁ Á€ Á FK 
 Á B
 A ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€
 Á
 FK A
 Á B A ]@€F @ GŔĆ LŔÁ Á  A FK A
 Á B A ]@€F @ GŔĆ LŔÁ Á€ Á FK A
 Á B A ]@€F @ L Á Á  A ]@ F @ G@Ď LŔÁ Á  A FG Á ]@ F @ G@Ď LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G@Ď LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ F @ G@Ď LŔÁ Á  Á FG Á ]@ F @ G@Ď LŔÁ Á  A FG Á ]@ F @ G@Ď LŔÁ Á€
 Á
 FK  Á B A ]@€F @ G@Ď LŔÁ Á  A FK  Á B A ]@€F @ G@Ď LŔÁ Á  Á FG Á ]@ F @ G@Ď LŔÁ Á  A FG Á ]@ F @ G@Ď LŔÁ ÁŔ  FAP   ĆP ÇÁĐ Ý ]@  F @ L Á Á@  ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ AŔ †ŔQ ‡ RÁŔ a@€FÁQ LAŇŔ ]€‡ŇĆÁD ÇŇŔ €†@ ‡QŚÁAÂŇGÂŇ V‚‚†‚K ÁÂ  AC  ťA€` úF @ G€Ń LŔÁ Á  Á FG Á ]@ F @ G€Ń LŔÁ Á  A FG Á ]@ F @ G€Ń LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ô LŔÁ Á  A FG Á ]@ F @ G Ô LŔÁ Á@  FÁT   Á ]@€F @ G Ô LŔÁ Á@  FK Á ÁÁ B
 A ]@€F @ G Ô LŔÁ Á  A FÁT   ĆP ÇÁĐ‚ Ý ]@  F @ L Á ÁŔ  ]@ G@W L€× Ć @ Ç ×]@€F @ L Á ÁŔ  ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F@X †€X ť € ]  @€†ÁX ÇY ťŔ€ÇÂŇĂR Ŕ€Ć@ ÇŘĚÂÁGCY ÇĂRÄ GZ–CĆH € ÝB ˘  #Bűb€  ăŔůF @ G Ř LŔÁ Á  Á FG Á ]@ F @ G Ř LŔÁ Á  A FG Á ]@ F @ G Ř LŔÁ Á@  FH € ]@ F @ L Á Á€ Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F@X †€X ť € ]  @€†ÁX Ç[ ťŔ€ÇÂŇĂR Ŕ€Ć@ ÇÂÚĚÂÁGCYC ÇĂRÄ GZ–CĆH € ÝB ˘  #Bűb€  ăŔůF @ GŔÚ LŔÁ Á  Á FG Á ]@ F @ GŔÚ LŔÁ Á  A FG Á ]@ F @ GŔÚ LŔÁ Á€  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@ 	 GAI GÁĹ	 FB  Ë€Â A B äA€]@€F @ G Ü LŔÁ Á€ 	 GJ GÁĹA
 FB Á Ë€Â A B äA€]@€F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á€
 Á
 FK Á Á B A ]@€F @ G Ü LŔÁ Á  A FK Á Á B A ]@€F @ L Á Á  A ]@ F @ G@Ţ LŔÁ Á  A FG Á ]@ F @ G@Ţ LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ G@Ţ LŔÁ ÁŔ 	 GJ GÁĹA
 FH € ]@ F @ G@Ţ LŔÁ Á  Á FG Á ]@ F @ G@Ţ LŔÁ Á  A FG Á ]@ F @ G@Ţ LŔÁ Á€
 Á
 FK Á Á B A ]@€F @ G@Ţ LŔÁ Á  A FK Á Á B A ]@€F @ L Á Á  A ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á   FG Á ]@ F @ G@ß LŔÁ ÁŔ   FK Á Á B A ]@€F @ G@ß LŔÁ Á@    FH € ]@ F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á  Á  FG Á ]@ F @ G@ß LŔÁ Á ! A! FK ! Á B A ]@€F @ G@ß LŔÁ ÁŔ! " FH € ]@ F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á  A" FG Á ]@ F @ G@ß LŔÁ Á€"   FK Á Á B A ]@€F @ G@ß LŔÁ ÁŔ" # FH € ]@ F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á  A# FG Á ]@ F @ G@ß LŔÁ Á€# A! FK ! Á B A ]@€F @ G@ß LŔÁ ÁŔ# $ FH € ]@ F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á  A$ FG Á ]@ F @ G@ß LŔÁ Á€$ A! FK ! Á B A ]@€F @ G@ß LŔÁ ÁŔ$ % FH € ]@ F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á  A% FG Á ]@ F @ G@ß LŔÁ Á€%   FK Á Á B A ]@€F @ G@ß LŔÁ ÁŔ% & FH € ]@ F @ L Á Á@& & ]@ F @ G€ć LŔÁ Á  A FG Á ]@ F @ G€ć LŔÁ ÁŔ& 	 GAI GÁĹ	 FH € ]@ F @ G€ć LŔÁ Á ' 	 GJ GÁĹA
 FH € ]@ F @ L Á Á@' ' ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ' ( FH € ]@ F @ G€ç LŔÁ Á  Á FG Á ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ Á@( ( FH € ]@ F @ G€ç LŔÁ ÁŔ( ) FAi ‹ Á) ‚) A ‚) ¤A ]@ F @ G€ç LŔÁ Á  Á FG Á ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ) * FH € ]@ F @ G€ç LŔÁ Á@* * FAi ‹ Á)  A ‚) ¤A ]@ F @ G€ç LŔÁ Á  Á FG Á ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ* + FH € ]@ F @ G€ç LŔÁ Á@+ + FAi ‹ Á)  A‚) ‚) ¤A ]@ F @ G€ç LŔÁ Á  Á FG Á ]@ F @ G€ç LŔÁ Á  A FG Á ]@ F @ G€ç LŔÁ ÁŔ+ , FH € ]@ F @ G€ç LŔÁ Á@, , FAi ‹ Á) ‚) A  ¤A ]@ F @ L Á ÁŔ, - ]@ F @ G í LŔÁ Á  A FG Á ]@ F @ G í LŔÁ Á@- - FH   ]@ FŔm Ą   ]@  € ¸      MenuAlistar 
   scriptConfig    MasterSeries: Alistar 	   Alistar1    addSubMenu    [Alistar]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    [Alistar]: TS    addTS    [Alistar]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    USEWQ    Use WQ    USER    Use (R) If HP% <    SCRIPT_PARAM_SLICE      €A@              Y@   USER2    Use (R) If X Enemy Around       @      @   QMANA    Min. Mana % To Use (Q)    WMANA    Min. Mana % To Use (W)    RMANA    Min. Mana % To Use (R)    [Alistar]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Alistar]: Auto Heal Settings 	   heConfig    heroManager    iCount    GetHero    team 	   charName 
    If HP% <    USEE    Enable    [Alistar]: Flash>Q Settings    fConfig    FQ    Enable Flash+Q    SCRIPT_PARAM_ONKEYDOWN       @@   FQC    Enemy Count To KnockUP       @   FQ2    Cast Flash+Q To Target    J    [Alistar]: Items Settings 
   iteConfig    it    LoadToMenu #   [Alistar]: Anti-GapCloser Settings 	   gpConfig    ipairs    GetEnemyHeroes    pairs    GapCloserList 
   spellName    GapCloser     :  	   menuname    UG #   [Alistar]: Auto-Interrupt Settings 	   aiConfig    InterruptList    Interrupt     UI    [Alistar]: Farm Settings    farm    QF        @   No 	   Freezing 
   LaneClear    WF       D@   [Alistar]: Jungle Farm    jf    QJF    WJF    [Alistar]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use    umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Alistar]: KS Settings 	   ksConfig    QKS    WKS    [Alistar]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    [Alistar]: Misc Settings 	   prConfig    ALS    Auto lvl skills    AddNewPathCallback    @P  @P      Ĺ  ĚŔ@  €€ Ŕ  €@ €€Ŕ ÝA€ €    
   OnNewPath                                              CP  _P   O   F @ †@@ ]@ G€@ XŔŔ €€F A ‡€@ Á@ ]€€[    €G€@ 
@ G€@ 
@€G€@ 
@ „G€@ 
@€„@€F€B ‡ŔB ]€ 
@ G C L@Ă ]@ G C G€Ă 
@€GŔC L@Ă ]@ GŔC G€Ă 
@ „G D L@Ă ]@ G D G€Ă 
@€„G@D G€Ä ]€€ [@  Ŕ €GŔD @ Š  €
 Ĺ‰G@E [@  @ €L€E ]@ F@@ GŔĹ G Ć [    €G@E [@  @ €L@F ]@ F@@ GŔĹ G€Ć [   @€G@E [@  € €L@F ÁŔ ]@€ €       CheckOB    MenuAlistar    SelectedTarget     ValidTarget      Ŕ‚@   Cel    QCel    WCel    FQCel    GetCustomTarget    TargetSelector    QTargetSelector    update    target    WTargetSelector    FQTargetSelector    W    Ready    endT            recall    CastE    fConfig    FQ    FlashQ    FQ2       đ?                         aP  gP      @  ‚ Ŕ€  @€B@ ‚@‚€ FÂ@ ]‚€ PÁBFBA € Ŕ€]‚€BŤ‚ĆB@ Ç‚ŔÝ‚€ ŽÂ
€ €       myHero    os    clock    GetLatency      @ź@   GetDistance    endT                          iP  ‡P   Ő   F @ ]€€ [   Ŕ3€G@@ [@   3€F€@ ‡Ŕ@ ]€ [   €€F A G@Á G€Á [   @€GŔA G Â ]€€ [    
€G@B G Â ]€€ [   Ŕ€F€B ‡Ŕ@ ]€ ‡@B ‡ŔB€€  
€F C G@Ă ‡€C Ć C ĚŔĂFD Ý€€Ç@Ä‡Ŕ Ç€D C ÁC†ÁD €ADÇ ŤŔ @ Ŕ€F E G@Ĺ € Ć€B C GÁ@ Ý€€ÎŔĹ]€€P Ć N@Ć Ś€F Á@ ť@€‡ŔF € ‹€€† G ĺ   ÁF ť@€@€F€@ ‡@G ]€ [   @€F A G@Á G€Ç [    €F€B ‡@G ]€ ‡ŔA ‡ŔB€€ @€F C G@Ă † C ‡ŔGP€€ O Č † A ‡@A‡€C@ € €L@H Ç@G ]@€F€@ ‡Ŕ@ ]€ [   @€F A G@Á G€Č [    €F€B ‡Ŕ@ ]€ ‡@B ‡ŔB€€ @€F C G@Ă † C ‡ŔGP€€ O Č † A ‡@A‡€D@ € €L€F ÇŔ@ ]@€F A G@Á GŔČ @ ‹€€F C G É † C ‡@IP€€ O Č † A ‡@A‡ŔH€€ Ŕ€F€I † C Ç@B ÇŔÂ]€€@€“ €F C G@Ă † C ‡ŔGP€€ O Č † A ‡@A‡ J@ @ €L@J ]@ F A G@Á G€Ę @ ‹€€F€I † C Ç@B ÇŔÂ]€€† A ‡@A‡€J@  €F C G@Ă † C ‡ŔGP€€ O Č † A ‡@A‡ J@ @ €L@J ]@ F€@ ‡Ŕ@ ]€ [   @€GŔJ L Ë ÇŔ@ A AK]@  € .      ComboActive    recall    ValidTarget    WCel    MenuAlistar    comboConfig    USEWQ    Q    Ready    W    GetDistance    range    myHero    mana    QMANA 
   GetSpellData    _Q    level    WMANA    _W    math    max              Đv@333333ó?      9@   CastW    endT    DelayAction    QCel    USEQ    maxMana       Y@   CastQ    USEW    USER    health 
   maxHealth    EnemyCount       đ?   RMANA    CastR    USER2    it 
   CastItems 
   iteConfig    pP  rP        @ F@@ @  €    
   CastSpell    _Q                                               ‰P  ’P   K   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @€F@A ‡€A ]€ [   @€F @ G@Ŕ GŔÁ [    €F B ‡€A ]€ ‡@B ‡€B€€ @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ € €L D Ç€A ]@€F@A ‡@D ]€ [   @€F @ G@Ŕ G€Ä [    €F B ‡@D ]€ ‡ŔD ‡€B€€ @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ E@ € €L@E Ç@D ]@€ €       MenuAlistar 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    USEQ    GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    WCel    USEW    W    WMANA    CastW                          ”P  ¤P   
h   X Ŕ @ €ś@€ € €†@@ ‡€@‡Ŕ@Ć A Ě@ÁA Ý€€ÁA AA€   Ŕ€Ű   @€B   €€AB GB ‡ÁA ‡B€ Ŕ
€ÁB FC ‡B € †@€C FC ‡B ‡ÁCĆC ÇÁĂŽÁÁ B BDFC GBÄB] LÄ] OAĂ
A   €FÁB € ] @ĂŔ
€FÁD †E ÇÁCBEGBDť ]  [A  €€FE †A ŚÁE‚ ť€ÇÁCBD]A GF @Ŕ€FAF Ą  ÇF ]A€€€B   Ŕ€AB GB ‡ÁA ‡B€  €ÁB FC ‡B €@C€ €E FF A  €        MenuAlistar    fConfig    FQC    SSpells    Ready    flash    Q    FQCel    EnemyCount    range    GetDistance    myHero      z@   Vector    x            z    normalized    IsWall    D3DXVECTOR3    y 
   CastSpell    GetSlot    endT    DelayAction    _Q    śP  žP        @ F@@ @  €    
   CastSpell    _Q                                               ¦P  ËP   
ł   F @ ]€€ [   @+€G@@ [@  €*€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B @ ABÝ €&€€Â @	€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚€€D BD‚€   Ŕ€X€Ä@€ÂD @€‡D ‡E‚€  €
€BE FÂB ‡D ‡EÇ‚@ ÇBÂ‚  …@€L‚E Ŕ€]B€@
€ŔĹ Ŕ	€ÂB CFÂB GBĂB‚CFA GBÁGÂĂ ‚ €D BD‚€   Ŕ€X€Ä@€ÂD @€‡D ‡E‚€  €€F BF€€Ć‚F Ý‚€ ĐÂĆ‚ LG Ŕ€]‚€@€ €Ś‚E  €ťB€€B €ÂB CFÂB GBĂB‚CFA GBÁGBÇ ‚@€‚G BD‚€   €
€X€Ä 
€ÂD @€‡‚G ‡E‚€  @€ÂG €€B€@
€ŔEŔ	€ÂB CFÂB GBĂB‚CFA GBÁGBÇ ‚ €‚G BD‚€   Ŕ€X€Ä@€ÂD @€‡‚G ‡E‚€  €€F BF€€Ć‚F Ý‚€ ĐÂĆ‚ LH Ŕ€]‚€@€ €ŚÂG  €ťB€â€  cŘ € !      FarmActive    recall 
   EnemyMinions    update    MenuAlistar    farm    QF    WF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CountObjectsNearPos    CastQ        @   VP    GetPredictedHealth    GetLatency      @Ź@   QDamage    WMANA    W    CastW    WDamage                          ÍP  ÝP   	T   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€†A ‡ÁA‡E›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĹ€ €‡E ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇE ÇÄŔ€ €ŚÁE  €ťA€b€  ăŔî €       FarmActive    recall    JungleMinions    update    pairs    objects    MenuAlistar    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     GetDistance    range    CastQ    WJF    WMANA    W    CastW                          ßP  ňP   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €       MenuAlistar    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          ôP  Q   
­   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@   €        MenuAlistar    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range       ^@   DARC    DQR    Q    Ready    DWR    W    DWRC    DER    E    DERC                          Q  Q   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuAlistar 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         Q  Q      ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMA„†@ ‡ABM†@ ‡ABĆ@ ÇÂŹÁŹÁBMť€ ›@    €  ź   € 
      Q    Ready    myHero    CalcMagicDamage 
   GetSpellData    _Q    level      €F@      .@   ap 
   apPercent       ŕ?                                 Q  Q      ‡ @ ‡@@ť€€ ›   @€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOA†@ ‡BM†@ ‡BĆ@ ÇAÂŹÁŹBMť€ ›@    €Ŕ ź   €       W    Ready    myHero    CalcMagicDamage 
   GetSpellData    _W    level      €K@   ap 
   apPercent ffffffć?                                 Q  Q   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       R    Ready 
   CastSpell    _R                          Q  )Q   
5   ‡ @ ‡@@ť€€ ›   €€†€@ ‡Ŕ@‡ A›   @
€@ Ć€A ÇŔÁA ˇŔ€†A ŚB €ť€ÇAB‚B BB ‚€€ĆÁB   F‚B Ý€@ C ‚€€Ć@ ÇÁŔBCÇ‚Ŕ‡ €ÇÁCDĐ‚ĎAÄ‚@ Â@GBCB ‚€ €ĆD ÂD ÝA  €ö €       E    Ready    MenuAlistar 	   heConfig    USEE       đ?   heroManager    iCount    GetHero    team    myHero    GetDistance    range 	   charName            health 
   maxHealth       Y@
   CastSpell    _E                          +Q  /Q   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       W    Ready 
   CastSpell    _W                          1Q  5Q   	   ‡ @ ‡@@ť€€ ›   € €†€@ ĆŔ@ ť@  €       Q    Ready 
   CastSpell    _Q                          7Q  ;Q      [    €Ŕ   @€Ű   Ŕ €AŔ€@  €
Ŕ@ €       isMe    name    recall                         =Q  AQ      [    €Ç Ŕ Ű   @€›   Ŕ €Ç@@€Ŕ  €
Ŕ@ €       isMe    name    recall                          CQ  ^Q   Ş   Ć @ Ç@ŔÇ€ŔŰ   €€ÇŔ@ Ç ÁÝ€€ Ű   @€Ć@A Ý€€ Ű@  @€Ć€A ÁA Ý Ŕ€[   @€Â FBB GÂX@ €‚Â FBB G‚Â@Ŕ€›   @€ÂBGĂ@@€@ B@GĂB  Ŕ€BC @€ ‡Â@ ‡‚C‚€   €ÂC  Ŕ€ÂCD  Ŕ €BD €€ B€@
€ÂCB  €€‚D @€ ‚ F‚D ‡ÂD]‚ †‚D Ŕ€ ť‚ N‚‚LĹ]‚ OB‚Š
BF‚D €€ ]‚ †‚D ÇÂDť‚ Ć‚D  € Ý‚ ŽÂŚEť‚ Ź‚‹M‚‚†ÂE ĆBB  € ť‚€ĆÂE CB @ Ý‚€Y€‚@€†ÂE ĆBB  € ť‚€ĆÂE CB @€Ý‚€€‚€ €ŚBD  € ťB€â€  cAçĆ @ Ç ĆÇ@ĆŰ   Ŕ€Ç€F Ç ÁÝ€€ Ű   €
€Ć@A Ý€€ Ű@  €	€Ć€A ÁF Ý  €[   €€Â FBB GÂX@@€‚Â FBB G‚Â@ €›   €€ÂBGĂ@€€@ FGĂB   €BC @€ ‡‚F ‡‚C‚€  @ €G B â€  c÷ €       MenuAlistar 	   gpConfig    UG    W    Ready    ComboActive    pairs    GapCloserList    team    myHero    type    name 
   spellName    ValidTarget    range    target    isMe    CastW    Vector    endPos    normalized      Ŕr@      Y@   GetDistanceSqr 	   aiConfig    UI    Q    InterruptList    CastQ                          `Q  mQ   J   F @ †@@ ť € ]  @€‡ŔĚÁ@ @€Ý€A €€‚€FBA €€]‚ [  @
€F‚A €€]‚ ‡ÂA ‡BŤBB€‚@€F‚B GÂÂGĂ[  @€G‚Ŕ†BC ‡‚CÇÂĂť‚ M‚‚Ŕ@€FBA €€ÇD ÇÂ]‚€[  € €LBD ]B €€F‚B GÂÂG‚Ä[  @€G‚Ŕ†BC ‡‚CÇÂĂť‚ M‚‚ ‚@€FBA €€ÇÂA ÇÂ]‚€[  € €LÂD Ŕ€]B€b€  ăŔî €       pairs    GetEnemyHeroes    health    QDamage    WDamage    ValidTarget    GetDistance    W    range       Y@   MenuAlistar 	   ksConfig    QKS    math    floor    shield    Q    CastQ    WKS    CastW                          oQ  ‰Q   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuAlistar    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> `   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target selected:</font>                          ŹQ  ¶Q   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    •Q  •Q           @ @  €       AfterAA                         Q  Q           @ @  €    	   BeforeAA                         źQ  źQ           @ @  €       AfterAA                         ˘Q  ˘Q           @ @  €    	   BeforeAA                         ¨Q  ¨Q        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ¨Q  ¨Q           @ @  €       AfterAA                                               «Q  «Q           @ @  €    	   BeforeAA                         °Q  °Q           @ @  €       AfterAA                         łQ  łQ           @ @  €    	   BeforeAA                              	
                ¸Q  YS   ş	  
@@€D   
@Ŕ
@ K€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚KŔ  J@Ä‚J€ÄĄ@  J€€‡
@ K€  J Ĺ‚Ą€  J€€‡
@€‰K€ J€Ĺ‚JŔĹJ Ć„J@Ć…J€Ć†ĄŔ  J€€‡
@€ŠFŔ@ † G Ç A ÇŔÁAG ]€ 
@€ŤFŔ@ † G Ç@E ÇŔÁAG ]€ 
@ Ź
 ČŹF€H ]€€ 
@€F I †@I Ç A ÇŔÁI FÁI ]€€
@€‘F I †@J Ç A ÇŔÁI FÁI ]€€
@ ”K  	‹Ŕ  Š Ë•Š€Ë–Š@Ĺ—ËŔ  Ę Ě•Ę@Ě–Ę@Ĺ—Á  
Ě•
ÁĚ–
AĹ—KÁ  JÍ•JAÍ–JAĹ—‹Á  ŠÍ•ŠÁÍ–ŠAĹ—ËÁ  ĘÎ•ĘAÎ–ĘAĹ—Â  
‚Î•
ÂÎ–
BĹ—KÂ  JĎ•JBĎ–JBĹ—‹Â  Š‚Ď•ŠÂĎ–ŠBĹ—ËÂ  ĘĐ•ĘBĐ–ĘBĹ—Ă  
Đ•
ĂĐ–
CĹ—KĂ  JŃ•JCŃ–JCĹ—‹Ă  ŠŃ•ŠĂŃ–ŠCĹ—ËĂ  ĘŇ•ĘCŇ–ĘCĹ—Ä  
„Ň•
ÄŇ–
DĹ—KÄ  JÓ•JDÓ–JDĹ—‹Ä  Š„Ń•ŠÄŃ–ŠDĹ—ËÄ  Ę„Ó•ĘÄÓ–ĘDĹ—Ĺ  
Ô•
EÔ–
EĹ—KĹ  J…Ô•JĹÔ–JEĹ—d@ 

@ •K 
 ‹Ŕ  Š€Ő•Š Á«Š@V¬J€€Ş‹Ŕ  Š€Ő•ŠŔÄ«Š@V¬J€ ­‹Ŕ  Š ×•Š Á«Š@V¬J€€­‹Ŕ  Š ×•ŠŔÄ«Š@V¬J€€®‹Ŕ  Š ×•Š@Ĺ«Š@V¬J€ Ż‹Ŕ  Š Ř•Š Á«Š@X¬J€€Ż‹Ŕ  Š Ř•ŠŔÄ«Š@V¬J€ ±‹Ŕ  Š Ř•Š@Ĺ«Š@X¬J€€±‹Ŕ  Š@Ů•Š Á«Š@X¬J€ ˛‹Ŕ  Š@Ů•Š Ä«Š@X¬J€ ł‹Ŕ  Š Ú•Š Á«Š@V¬J€€ł‹Ŕ  Š Ú•Š Ä«Š@V¬J€€´‹Ŕ  Š Ú•ŠŔÄ«Š@V¬J€ µ‹Ŕ  Š Ú•Š@Ĺ«Š@V¬J€€µ‹Ŕ  Š@Ű•Š Á«Š@V¬J€ ¶‹Ŕ  Š@Ű•ŠŔÄ«Š@X¬J€ ·‹Ŕ  Š@Ű•Š@Ĺ«Š@V¬J€€·‹Ŕ  Š@Ü•Š Á«Š@X¬J€ ¸‹Ŕ  Š@Ü•Š Ä«Š@X¬J€ ą‹Ŕ  Š@Ü•Š@Ĺ«Š@X¬J€€ą‹Ŕ  Š@Ý•Š Ä«Š@V¬J€ ş‹Ŕ  Š@Ý•Š@Ĺ«Š@V¬J€ »‹Ŕ  Š Ţ•Š Á«Š@V¬J€€»‹Ŕ  Š Ţ•ŠŔÄ«Š@V¬J€€Ľ‹Ŕ  Š Ţ•Š@Ĺ«Š@V¬J€ ˝‹Ŕ  Š ß•Š Á«Š@V¬J€€˝‹Ŕ  Š ß•Š Ä«Š@V¬J€€ľ‹Ŕ  Š ß•ŠŔÄ«Š@X¬J€ ż‹Ŕ  Š ß•Š@Ĺ«Š@X¬J€€ż‹Ŕ  Š@ŕ•Š Á«Š@V¬J€ Ŕ‹Ŕ  Š@ŕ•Š Á«Š@V¬J€ Á‹Ŕ  Š@ŕ•Š@Ĺ«Š@V¬J€€Á‹Ŕ  Š Í•Š Á«Š@V¬J€ Â‹Ŕ  Š Í•Š Ä«Š@V¬J€€Â‹Ŕ  Š Í•ŠŔÄ«Š@V¬J€ Ă‹Ŕ  Š Í•Š@Ĺ«Š@X¬J€€š‹Ŕ  Š â•Š Á«Š@V¬J€€Ă‹Ŕ  Š â•Š Ä«Š@V¬J€€Ä‹Ŕ  Š â•ŠŔÄ«Š@X¬J€ Ĺ‹Ŕ  Š â•Š@Ĺ«Š@V¬J€€Ĺ‹Ŕ  Š@ă•Š Á«Š@V¬J€ Ć‹Ŕ  Š@ă•Š Ä«Š@V¬J€ Ç‹Ŕ  Š@ă•ŠŔÄ«Š@X¬J€€Ç‹Ŕ  Š@ă•Š@Ĺ«Š@X¬J€ Č‹Ŕ  Š€ä•Š Á«Š@V¬J€€Č‹Ŕ  Š€ä•Š Ä«Š@V¬J€€É‹Ŕ  Š€ä•ŠŔÄ«Š@V¬J€ Ę‹Ŕ  Š€ä•Š@Ĺ«Š@V¬J€€Ę‹Ŕ  Š€Ď•Š Á«Š@X¬J€ Ë‹Ŕ  Š€Ď•ŠŔÄ«Š@X¬J€€Ë‹Ŕ  Š€Ď•Š@Ĺ«Š@X¬J€€ź‹Ŕ  Š@ć•Š Á«Š@V¬J€ Ě‹Ŕ  Š@ć•Š Ä«Š@V¬J€ Í‹Ŕ  Š@ć•ŠŔÄ«Š@V¬J€€Í‹Ŕ  Š@ć•Š@Ĺ«Š@X¬J€ Î‹€  Š€ç•Š Á«J€€Î‹Ŕ  Š€ç•Š Ä«Š@V¬J€€Ď‹Ŕ  Š@č•ŠŔÄ«Š@X¬J€ Đ‹Ŕ  Š@č•Š@Ĺ«Š@X¬J€ Ń‹Ŕ  Š é•Š Á«Š@X¬J€€Ń‹Ŕ  Š é•Š Ä«Š@V¬J€€Ň‹Ŕ  Š é•ŠŔÄ«Š@V¬J€ Ó‹Ŕ  Š é•Š Á«Š@V¬J€€Ó‹Ŕ  Š é•Š Ä«Š@V¬J€ Ô‹Ŕ  Š é•ŠŔÄ«Š@X¬J€€Ô‹Ŕ  Š é•ŠŔÄ«Š@X¬J€ Ő‹Ŕ  Š ë•Š Á«Š@V¬J€€Ő‹Ŕ  Š ë•ŠŔÄ«Š@X¬J€€Ö‹Ŕ  Š ë•Š@Ĺ«Š@V¬J€ ×‹Ŕ  Š ě•Š Á«Š@V¬J€€×‹Ŕ  Š ě•Š Ä«Š@V¬J€€Ř‹Ŕ  Š ě•ŠŔÄ«Š@X¬J€ Ů‹Ŕ  Š ě•Š@Ĺ«Š@V¬J€€Ů‹Ŕ  Š Ë•Š Á«Š@X¬J€ Ú‹Ŕ  Š Ë•Š Ä«Š@X¬J€€Ú‹Ŕ  Š Ë•ŠŔÄ«Š@X¬J€ Ű‹Ŕ  Š Ë•Š@Ĺ«Š@V¬J€ —‹Ŕ  Š î•Š Á«Š@X¬J€€Ű‹Ŕ  Š î•Š@Ĺ«Š@X¬J€€Ü‹Ŕ  ŠŔî•Š Á«Š@X¬J€ Ý‹Ŕ  ŠŔî•ŠŔÄ«Š@V¬J€ Ţ‹Ŕ  ŠŔî•ŠŔÄ«Š@V¬J€€Ţ‹Ŕ  ŠŔî•Š@Ĺ«Š@V¬J€ ß‹Ŕ  Š Ď•Š Á«Š@V¬J€€ß‹Ŕ  Š Ď•ŠŔÄ«Š@V¬J€ ŕ‹Ŕ  Š Ď•Š@Ĺ«Š@V¬J€€ž‹Ŕ  Š€đ•Š Á«Š@X¬J€€ŕ‹Ŕ  Š€đ•Š@Ĺ«Š@V¬J€€á‹Ŕ  Š@ń•Š Á«Š@V¬J€ â‹Ŕ  Š@ń•ŠŔÄ«Š@V¬J€ ă‹Ŕ  Š@ń•Š@Ĺ«Š@X¬J€€ă‹Ŕ  Š@ň•Š Á«Š@V¬J€ ä‹Ŕ  Š@ň•Š Á«Š@V¬J€ ĺ‹Ŕ  Š@ň•Š Ä«Š@X¬J€€ĺ‹Ŕ  Š@ň•Š Ä«Š@V¬J€ ć‹Ŕ  Š@ň•ŠŔÄ«Š@V¬J€€ć‹Ŕ  Š@ň•Š@Ĺ«Š@V¬J€ ç‹Ŕ  Š ô•Š Á«Š@V¬J€€ç‹Ŕ  Š ô•Š Á«Š@V¬J€€č‹Ŕ  Š ô•ŠŔÄ«Š@V¬J€ é‹Ŕ  Š ô•Š@Ĺ«Š@V¬J€€é‹Ŕ  Š@ő•Š Á«Š@V¬J€ ę‹Ŕ  Š@ő•Š Ä«Š@V¬J€ ë‹Ŕ  Š@ő•Š Ä«Š@V¬J€€ë‹Ŕ  Š@ő•Š@Ĺ«Š@V¬J€ ě‹Ŕ  Š€ö•Š Á«Š@V¬J€€ě‹Ŕ  Š€ö•Š Ä«Š@V¬J€€í‹Ŕ  Š€ö•Š@Ĺ«Š@V¬J€ î‹Ŕ  Š€÷•Š Á«Š@V¬J€€î‹Ŕ  Š€÷•Š Ä«Š@V¬J€€ď‹Ŕ  Š€÷•ŠŔÄ«Š@V¬J€ đ‹Ŕ  Š€ř•Š Á«Š@X¬J€€đ‹Ŕ  Š€ř•ŠŔÄ«Š@X¬J€€ń‹Ŕ  Š€ř•Š@Ĺ«Š@V¬J€ ň‹Ŕ  Š€ů•Š Á«Š@V¬J€€ň‹Ŕ  Š€ů•Š Ä«Š@X¬J€€ó‹Ŕ  Š@ú•Š Á«Š@V¬J€ ô‹Ŕ  Š@ú•ŠŔÄ«Š@V¬J€ ő‹Ŕ  Š@ú•Š@Ĺ«Š@V¬J€€ő‹Ŕ  Š@ű•Š Á«Š@X¬J€ ö‹Ŕ  Š@ű•ŠŔÄ÷Š@V¬J€ ÷‹Ŕ  Š@ü•Š Á«Š@X¬J€ ř‹Ŕ  Š@ü•Š Ä«Š@V¬J€ ů‹Ŕ  Š@ü•ŠŔÄ«Š@X¬J€€ů‹Ŕ  Š@ü•Š Á«Š@V¬J€ ú‹Ŕ  Š@ü•Š Ä«Š@V¬J€€ú‹Ŕ  Š@ü•ŠŔÄ«Š@V¬J€ ű‹Ŕ  Š ţ•Š Ä«Š@V¬J€€ű‹Ŕ  Š ţ•Š@Ĺ«Š@V¬J€€ü‹Ŕ  Š Î•Š Á«Š@V¬J€ ý‹Ŕ  Š Î•Š Ä«Š@V¬J€€ý‹Ŕ  Š Î•ŠŔÄ«Š@V¬J€ ţ‹Ŕ  Š Î•Š@Ĺ«Š@V¬J€€ś‹Ŕ  Š€˙•Š Á«Š@V¬J€€ţ‹Ŕ  Š€˙•Š Ä«Š@X¬J€€˙ @ ËŔ  A@ Ę •Ę Á«Ę@X¬JŔ €@ ËŔ  A@ Ę •Ę Ä«Ę@V¬JŔ Ŕ@ ËŔ  A@ Ę •ĘŔÄ«Ę@V¬JŔ  A ËŔ  A@ Ę •Ę@Ĺ«Ę@V¬JŔ @A ËŔ  Ę€Í•Ę Á«Ę@X¬JŔ €A ËŔ  Ę€Í•Ę Ä«Ę@V¬JŔ ŔA ËŔ  Ę€Í•ĘŔÄ«Ę@X¬JŔ ‹Ŕ  Š€Í•Š@Ĺ«Š@V¬J€€› B ËŔ  AB Ę •Ę Á«Ę@X¬JŔ €B ËŔ  AB Ę •ĘŔÄ«Ę@V¬JŔ ŔB Ë€  C Ę •Ę Á«JŔ @C ËŔ  C Ę •Ę Ä«Ę@V¬JŔ €C ËŔ  C Ę •Ę@Ĺ«Ę@V¬JŔ ŔC ËŔ  D Ę •Ę Á«Ę@X¬JŔ @D ËŔ  D Ę •Ę Ä«Ę@V¬JŔ €D ËŔ  D Ę •ĘŔÄ«Ę@V¬JŔ ŔD ËŔ  D Ę •Ę Á«Ę@X¬JŔ  E ËŔ  D Ę •Ę Ä«Ę@V¬JŔ @E ËŔ  D Ę •ĘŔÄ«Ę@V¬JŔ €E ËŔ  ÁE Ę •Ę Á«Ę@V¬JŔ  F ËŔ  ÁE Ę •Ę Ä«Ę@V¬JŔ @F ËŔ  ÁE Ę •ĘŔÄ«Ę@V¬JŔ €F ËŔ  ÁE Ę •Ę@Ĺ«Ę@V¬JŔ ŔF ËŔ  G Ę •Ę Á«Ę@X¬JŔ @G ËŔ  G Ę •Ę Ä«Ę@V¬JŔ €G ËŔ  G Ę •ĘŔÄ«Ę@V¬JŔ ŔG ËŔ  G Ę •Ę@Ĺ«Ę@X¬JŔ  H ËŔ  G Ę •Ę@Ĺ«Ę@V¬JŔ @H ËŔ  G Ę •Ę@Ĺ«Ę@V¬JŔ €H ËŔ  ÁH Ę •Ę Á«Ę@V¬JŔ  I ËŔ  ÁH Ę •Ę Ä«Ę@V¬JŔ @I ËŔ  ÁH Ę •ĘŔÄ«Ę@V¬JŔ €I ËŔ  ÁH Ę •Ę@Ĺ«Ę@X¬JŔ ŔI ËŔ  ÁH Ę •Ę Á«Ę@X¬JŔ  J ËŔ  ÁH Ę •Ę Ä«Ę@V¬JŔ @J ËŔ  ÁH Ę •ĘŔÄ«Ę@V¬JŔ €J ËŔ  ÁJ Ę •Ę Á«Ę@V¬JŔ  K ËŔ  ÁJ Ę •ĘŔÄ«Ę@V¬JŔ @K ËŔ  ÁJ Ę •ĘŔÄ«Ę@V¬JŔ €K ËŔ  ÁJ Ę •Ę@Ĺ«Ę@V¬JŔ ŔK ËŔ  L Ę •Ę Á«Ę@V¬JŔ @L ËŔ  L Ę •Ę Ä«Ę@V¬JŔ €L ËŔ  L Ę •ĘŔÄ«Ę@V¬JŔ ŔL ËŔ  L Ę •Ę@Ĺ«Ę@V¬JŔ  M ËŔ  Ę€Ň•Ę Á«Ę@X¬JŔ @M ËŔ  Ę€Ň•Ę Ä«Ę@V¬JŔ ‹Ŕ  Š€Ň•Š@Ĺ«Š@V¬J€€Ą€M ËŔ  ÁM Ę •Ę Á«Ę@V¬JŔ  N ËŔ  ÁM Ę •Ę Ä«Ę@X¬JŔ @N ËŔ  ÁM Ę •ĘŔÄ«Ę@X¬JŔ €N ËŔ  ÁN Ę •Ę Á«Ę@V¬JŔ  O ËŔ  ÁN Ę •ĘŔÄ«Ę@V¬JŔ @O ËŔ  ÁN Ę •ĘŔÄ«Ę@V¬JŔ €O ËŔ  ÁN Ę •Ę@Ĺ«Ę@V¬JŔ ŔO ËŔ  P Ę •Ę Á«Ę@X¬JŔ @P ËŔ  P Ę •ĘŔÄ«Ę@V¬JŔ €P ËŔ  P Ę •Ę@Ĺ«Ę@V¬JŔ ŔP ËŔ  Ę€Î•Ę Á«Ę@X¬JŔ  Q ËŔ  Ę€Î•Ę Ä«Ę@V¬JŔ @Q ËŔ  Ę€Î•ĘŔÄ«Ę@X¬JŔ ‹Ŕ  Š€Î•Š@Ĺ«Š@X¬J€€ť€Q ËŔ  ÁQ Ę •Ę Á«Ę@V¬JŔ  R ËŔ  ÁQ Ę •Ę Ä«Ę@X¬JŔ @R ËŔ  ÁQ Ę •ĘŔÄ«Ę@V¬JŔ €R ËŔ  ÁQ Ę •Ę@Ĺ«Ę@V¬JŔ ŔR ËŔ  S Ę •Ę Á«Ę@X¬JŔ @S ËŔ  Ę Ě•Ę Á«Ę@X¬JŔ €S ËŔ  Ę Ě•ĘŔÄ«Ę@V¬JŔ ‹Ŕ  Š Ě•Š@Ĺ«Š@V¬J€€ŔS ËŔ  T Ę •Ę Á«Ę@V¬JŔ @T ËŔ  T Ę •ĘŔÄ«Ę@V¬JŔ €T ËŔ  T Ę •Ę@Ĺ«Ę@X¬JŔ ŔT ËŔ  U Ę •Ę Á«Ę@V¬JŔ @U ËŔ  U Ę •Ę Ä«Ę@V¬JŔ €U ËŔ  U Ę •Ę@Ĺ«Ę@V¬JŔ ŔU ËŔ  V Ę •Ę Á«Ę@V¬JŔ @V ËŔ  V Ę •Ę Ä«Ę@X¬JŔ €V ËŔ  V Ę •ĘŔÄ«Ę@V¬JŔ ŔV ËŔ  V Ę •Ę@Ĺ«Ę@V¬JŔ  W ËŔ  AW Ę •Ę Á«Ę@V¬JŔ €W ËŔ  AW Ę •Ę Ä«Ę@X¬JŔ ŔW ËŔ  AW Ę •ĘŔÄ«Ę@V¬JŔ  X ËŔ  AX Ę •Ę Á«Ę@V¬JŔ €X ËŔ  AX Ę •ĘŔÄ«Ę@V¬JŔ ŔX ËŔ  AX Ę •Ę@Ĺ«Ę@X¬JŔ  Y ËŔ  AY Ę •Ę Á«Ę@V¬JŔ €Y ËŔ  AY Ę •Ę Ä«Ę@V¬JŔ ŔY ËŔ  AY Ę •ĘŔÄ«Ę@V¬JŔ  Z ËŔ  AY Ę •Ę Á«Ę@V¬JŔ @Z ËŔ  AY Ę •Ę Ä«Ę@V¬JŔ €Z ËŔ  AY Ę •ĘŔÄ«Ę@V¬JŔ ŔZ ËŔ  [ Ę •Ę Á«Ę@V¬JŔ @[ ËŔ  [ Ę •ĘŔÄ«Ę@X¬JŔ €[ ËŔ  Ę€Ě•ĘŔÄ«Ę@X¬JŔ ‹Ŕ  Š€Ě•Š@Ĺ«Š@V¬J€€™Ŕ[ ËŔ  \ Ę •Ę Á«Ę@V¬JŔ @\ ËŔ  \ Ę •ĘŔÄ«Ę@X¬JŔ €\ ËŔ  Á\ Ę •Ę Á«Ę@V¬JŔ  ] ËŔ  Á\ Ę •Ę Ä«Ę@V¬JŔ @] ËŔ  Á\ Ę •Ę@Ĺ«Ę@V¬JŔ €] ËŔ  Ę Ň•Ę Á«Ę@X¬JŔ Ŕ] ËŔ  Ę Ň•Ę Ä«Ę@X¬JŔ  ^ ËŔ  Ę Ň•ĘŔÄ«Ę@V¬JŔ @^ ËŔ  ^ Ę •Ę Á«Ę@V¬JŔ Ŕ^ ËŔ  ^ Ę •ĘŔÄ«Ę@X¬JŔ  _ ËŔ  A_ Ę •Ę Á«Ę@V¬JŔ €_ ËŔ  A_ Ę •ĘŔÄ«Ę@X¬JŔ Ŕ_ ËŔ  ` Ę •Ę Á«Ę@V¬JŔ @` ËŔ  ` Ę •ĘŔÄ«Ę@X¬JŔ €` ËŔ  ` Ę •Ę@Ĺ«Ę@V¬JŔ Ŕ` ËŔ  a Ę •Ę Á«Ę@V¬JŔ @a ËŔ  a Ę •Ę Ä«Ę@V¬JŔ €a ËŔ  a Ę •ĘŔÄ«Ę@V¬JŔ Ŕa ËŔ  b Ę •Ę Á«Ę@V¬JŔ @b ËŔ  b Ę •ĘŔÄ«Ę@V¬JŔ €b ËŔ  Áb Ę •Ę Á«Ę@V¬JŔ  c ËŔ  Áb Ę •Ę Á«Ę@V¬JŔ @c ËŔ  Áb Ę •Ę Ä«Ę@V¬JŔ €c ËŔ  Áb Ę •Ę@Ĺ«Ę@V¬JŔ Ŕc ËŔ  Áb Ę •Ę@Ĺ«Ę@V¬JŔ  d ËŔ  Ad Ę •Ę Á«Ę@V¬JŔ €d ËŔ  Ad Ę •ĘŔÄ«Ę@V¬JŔ Ŕd ËŔ  Ad Ę •Ę@Ĺ«Ę@V¬JŔ  e ËŔ  Ae Ę •Ę Á«Ę@X¬JŔ €e ËŔ  Ae Ę •Ę Ä«Ę@X¬JŔ Ŕe ËŔ  Ae Ę •ĘŔÄ«Ę@X¬JŔ  f ËŔ  Af Ę •Ę Á«Ę@V¬JŔ €f ËŔ  Af Ę •Ę@Ĺ«Ę@V¬JŔ Ŕf ËŔ  g Ę •Ę Á«Ę@V¬JŔ @g ËŔ  g Ę •Ę Ä«Ę@V¬JŔ €g ËŔ  g Ę •ĘŔÄ«Ę@X¬JŔ Ŕg ËŔ  Ę Ń•Ę Á«Ę@X¬JŔ  h ËŔ  Ę Ń•ĘŔÄ«Ę@V¬JŔ @h ËŔ  h Ę •ĘŔÄ«Ę@V¬JŔ Ŕh ËŔ  h Ę •Ę@Ĺ«Ę@V¬JŔ  i ËŔ  Ai Ę •Ę Á«Ę@V¬JŔ €i ËŔ  Ai Ę •Ę Ä«Ę@V¬JŔ Ŕi ËŔ  Ai Ę •ĘŔÄ«Ę@X¬JŔ  j ËŔ  Aj Ę •Ę Á«Ę@X¬JŔ €j ËŔ  Áj Ę •Ę Á«Ę@V¬JŔ  k ËŔ  Ę€Ô•Ę Á«Ę@V¬JŔ @k ËŔ  Ę€Ô•ĘŔÄ«Ę@V¬JŔ ‹Ŕ  Š€Ô•Š@Ĺ«Š@X¬J€€©€k ËŔ  Ák Ę •Ę Á«Ę@X¬JŔ  l ËŔ  Ák Ę •Ę Ä«Ę@V¬JŔ @l ËŔ  Ák Ę •ĘŔÄ«Ę@V¬JŔ €l ËŔ  Ák Ę •Ę@Ĺ«Ę@V¬JŔ Ŕl ËŔ  m Ę •Ę Á«Ę@V¬JŔ @m ËŔ  m Ę •ĘŔÄ«Ę@X¬JŔ €m ËŔ  Ám Ę •Ę Á«Ę@X¬JŔ  n ËŔ  Ám Ę •Ę Ä«Ę@V¬JŔ @n ËŔ  Ám Ę •ĘŔÄ«Ę@X¬JŔ €n ËŔ  Ám Ę •Ę@Ĺ«Ę@V¬JŔ Ŕn ËŔ  o Ę •Ę Á«Ę@V¬JŔ @o ËŔ  o Ę •Ę Ä«Ę@V¬JŔ €o ËŔ  o Ę •ĘŔÄ«Ę@V¬JŔ Ŕo ËŔ  o Ę •Ę@Ĺ«Ę@X¬JŔ  p ËŔ  Ap Ę •Ę Ä«Ę@V¬JŔ €p ËŔ  Ap Ę •ĘŔÄ«Ę@X¬JŔ Ŕp ËŔ  q Ę •Ę Ä«Ę@V¬JŔ @q ËŔ  q Ę •ĘŔÄ«Ę@X¬JŔ €q ËŔ  q Ę •Ę@Ĺ«Ę@V¬JŔ Ŕq ËŔ  r Ę •Ę Á«Ę@X¬JŔ @r ËŔ  r Ę •Ę Á«Ę@V¬JŔ Ŕr ËŔ  r Ę •ĘŔÄ«Ę@V¬JŔ  s ËŔ  r Ę •Ę@Ĺ«Ę@V¬JŔ @s ËŔ  s Ę •Ę Ä«Ę@V¬JŔ Ŕs ËŔ  s Ę •ĘŔÄ«Ę@X¬JŔ  t ËŔ  s Ę •Ę@Ĺ«Ę@X¬JŔ @t ËŔ  t Ę •Ę Á«Ę@X¬JŔ Ŕt ËŔ  t Ę •Ę@Ĺ«Ę@X¬JŔ  u ËŔ  Au Ę •ĘŔÄ«Ę@V¬JŔ €u ËŔ  Áu Ę •Ę Á«Ę@V¬JŔ  v ËŔ  Av Ę •Ę Ä«Ę@V¬JŔ €v ËŔ  Av Ę •Ę Ä«Ę@V¬JŔ Ŕv ËŔ  Av Ę •ĘŔÄ«Ę@V¬JŔ  w ËŔ  Aw Ę •Ę Á«Ę@V¬JŔ €w ËŔ  Aw Ę •Ę Ä«Ę@V¬JŔ Ŕw ËŔ  Aw Ę •ĘŔÄ«Ę@V¬JŔ  x ËŔ  Aw Ę •Ę@Ĺ«Ę@V¬JŔ @x ËŔ  Ę€Ń•Ę Á«Ę@V¬JŔ €x ËŔ  Ę€Ń•ĘŔÄ«Ę@V¬JŔ ‹Ŕ  Š€Ń•Š@Ĺ«Š@X¬J€€ŁŔx ËŔ  y Ę •Ę Á«Ę@V¬JŔ @y ËŔ  y Ę •ĘŔÄ«Ę@V¬JŔ €y ËŔ  y Ę •Ę@Ĺ«Ę@V¬JŔ Ŕy ËŔ  z Ę •ĘŔÄ«Ę@X¬JŔ @z ËŔ  z Ę •Ę Á«Ę@X¬JŔ Ŕz ËŔ  z Ę •Ę Ä«Ę@V¬JŔ  { ËŔ  z Ę •ĘŔÄ«Ę@V¬JŔ @{ ËŔ  z Ę •Ę@Ĺ«Ę@X¬JŔ €{ ËŔ  Ę Ô•Ę Á«Ę@X¬JŔ Ŕ{ ËŔ  Ę Ô•Ę Á«Ę@X¬JŔ  | ËŔ  Ę Ô•Ę Á«Ę@X¬JŔ @| ËŔ  Ę Ô•Ę Ä«Ę@V¬JŔ €| ËŔ  Ę Ô•ĘŔÄ«Ę@V¬JŔ ‹Ŕ  Š Ô•Š@Ĺ«Š@V¬J€€¨Ŕ| ËŔ  Ę€Đ•Ę Á«Ę@V¬JŔ ‹Ŕ  Š€Đ•Š@Ĺ«Š@X¬J€€ˇ } ËŔ  A} Ę •Ę Á«Ę@X¬JŔ €} ËŔ  A} Ę •Ę Ä«Ę@V¬JŔ Ŕ} ËŔ  A} Ę •ĘŔÄ«Ę@V¬JŔ  ~ ËŔ  A} Ę •Ę@Ĺ«Ę@V¬JŔ @~ ËŔ  ~ Ę •Ę Á«Ę@X¬JŔ Ŕ~ ËŔ  ~ Ę •ĘŔÄ«Ę@V¬JŔ   ËŔ  ~ Ę •Ę@Ĺ«Ę@V¬JŔ @ ËŔ   Ę •Ę Á«Ę@V¬JŔ Ŕ ËŔ   Ę •Ę Ä«Ę@X¬JŔ  € ËŔ   Ę •ĘŔÄ«Ę@V¬JŔ @€ ËŔ  Ę Ó•Ę Á«Ę@X¬JŔ ‹Ŕ  Š Ó•Š@Ĺ«Š@X¬J€€¦€€ ËŔ  Ę Đ•Ę Á«Ę@V¬JŔ Ŕ€ ËŔ  Ę Đ•ĘŔÄ«Ę@X¬JŔ ‹Ŕ  Š Đ•Š@Ĺ«Š@V¬J€€   ËŔ  Ę Đ•Ę@Ĺ«Ę@V¬JŔ @ ËŔ  Ę€Ó•Ę Á«Ę@V¬JŔ € ËŔ  Ę€Ó•Ę Ä«Ę@V¬JŔ Ŕ ËŔ  Ę€Ó•ĘŔÄ«Ę@V¬JŔ ‹Ŕ  Š€Ó•Š@Ĺ«Š@X¬J€€§ ‚ ËŔ  A‚ Ę •ĘŔÄ«Ę@X¬JŔ €‚ ËŔ  A‚ Ę •Ę@Ĺ«Ę@V¬JŔ Ŕ‚ ËŔ   Ę •Ę Á«Ę@V¬JŔ @ ËŔ   Ę •Ę Á«Ę@V¬JŔ € ËŔ   Ę •Ę Á«Ę@V¬JŔ Ŕ ËŔ   Ę •ĘŔÄ«Ę@X¬JŔ  „ ËŔ   Ę •Ę@Ĺ«Ę@V¬JŔ @„ ËŔ  „ Ę •Ę Á«Ę@V¬JŔ Ŕ„ ËŔ  „ Ę •Ę Ä«Ę@V¬JŔ  … ËŔ  „ Ę •ĘŔÄ«Ę@X¬JŔ @… ËŔ  … Ę •Ę Á«Ę@V¬JŔ Ŕ… ËŔ  … Ę •Ę Ä«Ę@V¬JŔ  † ËŔ  … Ę •ĘŔÄ«Ę@V¬JŔ @† ËŔ  † Ę •Ę Á«Ę@V¬JŔ Ŕ† ËŔ  † Ę •Ę@Ĺ«Ę@X¬JŔ  ‡ ËŔ  A‡ Ę •Ę Á«Ę@V¬JŔ €‡ ËŔ  A‡ Ę •Ę Ä«Ę@V¬JŔ Ŕ‡ ËŔ  A‡ Ę •ĘŔÄ«Ę@V¬JŔ   ËŔ  A‡ Ę •Ę@Ĺ«Ę@V¬JŔ @ ËŔ   Ę •Ę Á«Ę@X¬JŔ Ŕ ËŔ   Ę •ĘŔÄ«Ę@X¬JŔ  ‰ ËŔ  A‰ Ę •Ę Á«Ę@V¬JŔ €‰ ËŔ  A‰ Ę •ĘŔÄ«Ę@V¬JŔ Ŕ‰ ËŔ  A‰ Ę •Ę@Ĺ«Ę@V¬JŔ 
@ ŞA Š ‹  Á@Š ĆŔ  Š  AÁŠ FA ‹ † ¤@ 
€€ A@‹ ‹  Á   AÁ A ¤@ 
€€  € .     Cel     SelectedTarget    TargetSelector    Q    name    Winter's Bite    range      @Ź@   speed      š@   delay       Đ?   width       N@   Ready    W    Stand Behind Me      …@   E    Unbreakable    R    Glacial Fissure      “@     ŕ•@      ŕ?     Ŕ\@   QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    RTargetSelector    recall     it 
   ItemsCast 
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm 	   menuname    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    Shield    AatroxQ    Aatrox 
   spellSlot 
   SpellType 
   skillshot    AatroxE    AhriOrbofDeception    Ahri    AhriSeduce    AhriTumble 
   AkaliMota    Akali    castcel    AkaliShadowSwipe    AkaliShadowDance 
   Pulverize    Alistar 	   Headbutt    BandageToss    Amumu    AuraofDespair    Tantrum    CurseoftheSadMumm    FlashFrost    Anivia 
   Frostbite 
   GlacialStorm 
   Disintegrate    Annie    Incinerate    InfernalGuardian    Volley    Ashe    EnchantedCrystalArrow    RocketGrab    Blitzcrank 
   PowerFist    StaticField    BrandBlaze    Brand 
   BrandFissure    BrandConflagration    BrandWildfire    BraumQ    Braum 
   BraumQMissle    BraumR    CaitlynPiltoverPeacemaker    CaitlynYordleTrap    CaitlynEntrapment    CassiopeiaNoxiousBlast    Cassiopeia    CassiopeiaMiasma    CassiopeiaTwinFang    CassiopeiaPetrifyingGaze    Rupture    Chogath    FeralScream 
   VorPalSpikes    Feast    PhosphorusBomb    Corki    CarpetBomb    GGun    MissileBarrage 
   DariusCleave    DariusAxeGrabCone 	   DianaArc    Diana 
   DianaOrbs    DianaVortex    DianaTeleport    InfectedCleaverMissileCast    DrMundo 
   BurningAgony    DravenDoubleShot    Draven    DravenRCast    EliseHumanQ    Elise    EliseHumanW    EliseHumanE    EliseSpiderQCast 
   EliseSpiderW    EliseSpiderEInitial    elisespideredescent 	   EvelynnQ    Evelynn 	   EvelynnE 	   EvelynnR    EzrealMysticShot    Ezreal    EzrealEssenceFlux    EzrealArcaneShift    EzrealTruehotBarrage    Terrify    Drain    FiddlesticksDarkWind    FioraQ    Fiora    FioraDance    FizzPiercingStrike    Fizz 	   FizzJump    FizzJumptwo    FizzMarinerDoom    GalioResoluteSmite    GalioRighteousGust    Parley 
   Gangplank    CannonBarrage    GarenQ    Garen    GarenE    GarenR    GnarQ    Gnar 	   GnarBigQ    GnarWStack 	   GnarBigW 	   GnarBigE 	   GnarBigR    GragasBarrelRoll    Gragas    gragasbarrelrolltoggle    GragasBodySlam    GragasExplosiveCask    GravesClusterShot    Graves    GravesSmokeGrenade    gravessmokegrenadeboom    GravesChargeShot    HecarimRapidSlash    Hecarim 	   HecarimW    HecarimUlt    HeimerdingerQ 
   Heimerdinger    HeimerdingerW    HeimerdingerE    IreliaGatotsu    Irelia    IreliaEquilibriumStrike    IreliaTranscendentBlades    HowlingGale    Janna    SowTheWind    JarvanIVDragonStrike 	   JarvanIV    JarvanIVDemacianStandard    JarvanIVCataclysm    JaxLeapStrike    Jax    JaxCounterStrike 
   spellslot    JayceToTheSkies    Jayce    JayceStaticField    JayceThunderingBlow    jayceshockblast    jaycehypercharge    jayceaccelerationgate    JinxW    Jinx 
   JinxRWrapper 	   LayWaste    WallOfPain    Defile    KarmaQ    Karma    KarmaSpiritBind 
   NullLance 	   Kassadin    NetherBlade    ForcePulse 	   RiftWalk 
   KatarinaQ 
   KatarinaW 
   KatarinaE    JudicatorReckoning    Kayle    JudicatorRighteousFury    KennenShurikenHurlMissile1    Kennen    KennenBringTheLight    KennenShurikenStorm     KhazixQ    Khazix    KhazixW    KhazixE    khazixqlong    khazixwlong    khazixelong    KogMawCausticSpittle    KogMaw    KogMawBioArcanBarrage    KogMawVoidOoze    KogMawLivingArtillery    LeblancChaosOrb    Leblanc 
   LeblancSlide    LeblancSoulShackle    LeblancChaosOrbM    LeblancSlideM    LeblancSoulShackleM    BlindMonkQOne    LeeSin    BlindMonkWOne    BlindMonkEOne    BlindMonkRKick    blindmonkqtwo    blindmonkwtwo    blindmonketwo    LeonaShieldOfDaybreak    Leona    LeonaZenithBlade    LeonaZenithBladeMissle    LeonaSolarFlare    LissandraQ 
   Lissandra    LissandraW    LissandraE    LissandraR    LucianQ    LucianW    LuluQ    Lulu    LuluW    LuluE    LuxLightBinding    Lux    LuxLightStrikeKugel    luxlightstriketoggle    LuxMaliceCannon 
   SeismicShard 	   Malphite 
   Landslide    UFSlash    AlZaharCalloftheVoid    AlZaharNullZone    AlZaharMaleficVisions    MaokaiTrunkLine    Maokai    MaokaiUnstableGrowth    MaokaiSapling2 
   MaokaiDrain3    AlphaStrike 	   MasterYi    MissFortuneRicochetShot    MissFortuneScattershot    MordekaiserMaceOfSpades    Mordekaiser     MordekaiserSyphoneOfDestruction    MordekaiserChildrenOfTheGrave    DarkBindingMissile    Morgana    TormentedSoil 
   SoulShackles    NamiQ    Nami    NamiW    NamiE    NamiR    NasusQ    Nasus    NasusW    NasusE    NautilusAnchorDrag 	   Nautilus    NautilusSplashZone    NautilusGandLine    JavelinToss    Nidalee 
   Bushwhack    PrimalSurge 	   Takedown    Pounce    Swipe    NocturneDuskbringer 	   Nocturne    NocturneUnspeakableHorror 	   IceBlast    OlafAxeThrowCast    Olaf    OlafRecklessStrike    OrianaIzunaCommand    Orianna    OrianaDissonanceCommand    OrianaDetonateCommand    Pantheon_Throw    Pantheon_LeaP2ash    Pantheon_Heartseeker    PoppyDevastatingBlow    Poppy    PoppyHeroicCharge    QuinnQ    Quinn    QuinnE 
   PowerBall    Rammus    PuncturingTaunt 	   Tremors2    RenektonCleave 	   Renekton    RenektonPreExecute    RenektonSliceAndDice    RengarQ    Rengar    RengarE    RivenTriCleav    Riven    RivenTriCleave_03    RivenMartyr    RivenFengShuiEngine    rivenizunablade    RumbleFlameThrower    Rumble 
   RumbeGrenade    RumbleCarpetBomb 	   Overload    Ryze    RunePrison 
   SpellFlux    SejuaniArcticAssault    Sejuani    SejuaniGlacialPrisonStart    Deceive    Shaco 
   JackInTheBox    TwoShivPoisen    ShenVorpalStar    ShenShadowDash    ShyvanaFireball    Shyvana    ShyvanaTransformCast    PoisenTrail    Singed 
   MegaAdhesive    Fling    CrypticGaze    Sion    SivirQ    Sivir    SkarnerVirulentSlash    SkarnerFracture    SonaHymnofValor    Sona    SonaAriaofPerseverance    SonaSongofDiscord    SonaCrescendo 	   Starcall    Soraka    InfuseWrapper    SwainDecrepify    Swain    SwainShadowGrasp 
   SwainTorment    SwainMetamorphism    SyndraQ    Syndra 	   SyndraW     SyndraE    SyndraR 
   TalonRake    Talon    TalonCutthroat    Shatter    Taric    Dazzle    TaricHammerSmash 
   BlindingDart    Teemo    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    RocketJump 	   Tristana    DetonatingShot    BusterShot    TrundleTrollSmash    Trundle    TrundlePain 
   slashCast    Tryndamere 
   WildCards    TwistedFate    TwitchVenomCask    Twitch    TwitchVenomCaskMissle    Expunge    UdyrTigerStance    Udyr    UdyrTurtleStance    UdyrBearStance    UdyrPhoenixStance    UrgotHeatseekingMissile    UrgotPlasmaGrenade    VarusQ    Varus    VarusE    VarusR 
   VayneCondemm    Vayne    VeigarBalefulStrike    Veigar    VeigarDarkMatter    VeigarEventHorizon    VeigarPrimordialBurst    VelkozQ    VelkozQMissle    velkozqplitactive    VelkozW    VelkozE    ViQ    ViktorPowerTransfer    Viktor    ViktorGravitonField    ViktorDeathRa    ViktorChaosStorm    VladimirTransfusion 	   Vladimir    VladimirTidesofBlood    VladimirHemoplague 
   VolibearQ 	   Volibear 
   VolibearW 
   VolibearE    HungeringStrike    MonkeyKingDoubleAttack    MonkeyKingNimbus    monkeykingspintowinleave    XerathArcanoPulseChargeUp    XerathArcaneBarrage2    XerathMageSpear 
   XenZhaoSweep 	   Xin Zhao 
   XenZhaoParry    YasuoQW    Yasuo 	   yasuoq2w 	   yasuoq3w    YasuoDashWrapper    YasuoRKnockUpComboW    YorickSpectral    Yorick    YorickDecayed    YorickRavenous    ZacQ    Zac    ZacW    ZacE    ZedShuriken    Zed    zedult    ZiggsQ    Ziggs    ZiggsW    ZiggsE    ZiggsR 	   TimeBomb    Zilean 	   TimeWarp 
   ZyraQFissure    Zyra    ZyraGraspingRoots    ZyraBrambleZone    Spells    _Q    _W    _E    _R    Spells2    »Q  »Q        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ĽQ  ĽQ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ˝Q  ˝Q        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ľQ  ľQ        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               [S  áS   *  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ ÁŔ	 	 GJ GÁĹA
 FH € ]@ AŔ †€J ‡ŔJÁŔ a@€FJ LËŔ ]€‡AËĆÁD ÇAËŔ €†@ ‡ÁFŚÁA‚ËG‚ËÂ V‚‚†L ÁB  AĂ  ťA€` úF @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á 
 	 GAM GÁĹ
 FB Á
 Ë  AB ‚ ÁÂ äA ]@€F @ GŔĆ LŔÁ Á  A FL  ÁÁ Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FP   ĆÁP ÇŃB Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€ Á FL Á Á Â A‚ ]@€F @ GŔĆ LŔÁ Á  A FL Á Á Â A‚ ]@€F @ GŔĆ LŔÁ Á€ Á FL  Á Â A‚ ]@€F @ L Á Á  A ]@ F @ G@Ó LŔÁ Á  A FG Á ]@ F @ G@Ó LŔÁ ÁŔ 	 GAI GÁĹ	 FH € ]@ F @ G@Ó LŔÁ Á  Á FG Á ]@ F @ G@Ó LŔÁ Á  A FG Á ]@ F @ G@Ó LŔÁ Á€ Á FL  Á Â A‚ ]@€F @ G@Ó LŔÁ Á  Á FG Á ]@ F @ G@Ó LŔÁ Á  A FG Á ]@ F @ G@Ó LŔÁ ÁŔ  FAT   ĆÁP ÇŃ‚ Ý ]@  FŔT † @ Á  € C    Ă€ ]@€F @ L Á Á@  ]@ F @ G€Ő LŔÁ Á  A FG Á ]@ FŔU † V ť € ]  €€†ÁU ÇAV ť €Ç‚V ĂÖ€ €ĂEÇŰ   €Ć@ Ç‚ŐĚÂÁFW ŚĂÖ  ť€‡ĂE] †W ÇËť ÁC W G„W GD‚„ –ĆH € ÝB ˘  #řb€  ă€öF @ G€Ő LŔÁ Á  Á FG Á ]@ F @ G€Ő LŔÁ Á  A FG Á ]@ F @ G€Ő LŔÁ ÁŔ  FH € ]@ F @ L Á Á@  ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ FŔX † V ť € ]  @€†ÁU ÇY ťŔ€Ç‚ËK Ŕ€Ć@ Ç‚ŘĚÂÁGCY ÇKÄ GZ–CĆH € ÝB ˘  #Bűb€  ăŔůF @ G€Ř LŔÁ Á  Á FG Á ]@ F @ G€Ř LŔÁ Á  A FG Á ]@ F @ G€Ř LŔÁ Á@  FH € ]@ F @ L Á Á€ Á ]@ G [ L@Ű Ć @ ÇŔÚ]@€F @ L Á Á€ Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á  	 GAI GÁĹ	 FB Á
 Ë€ AB ‚ äA€]@€F @ GŔŰ LŔÁ Á  Á FG Á ]@ F @ GŔŰ LŔÁ Á  A FG Á ]@ F @ GŔŰ LŔÁ Á€ Á FL Á Á Â A‚ ]@€F @ L Á Á  A ]@ F @ G@Ý LŔÁ Á  A FG Á ]@ F @ G@Ý LŔÁ Á€ 	 GAI GÁĹ	 FH € ]@ F @ G@Ý LŔÁ Á  Á FG Á ]@ F @ G@Ý LŔÁ Á  A FG Á ]@ F @ G@Ý LŔÁ Á€ Á FL Á Á Â A‚ ]@€F @ L Á ÁŔ  ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á€ Á FL Á Á Â A‚ ]@€F @ G Ţ LŔÁ Á  A FH € ]@ F @ G Ţ LŔÁ Á  Á FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á   FG Á ]@ F @ G Ţ LŔÁ ÁŔ   FL A  Á Â A‚ ]@€F @ G Ţ LŔÁ Á€  Á  FH € ]@ F @ G Ţ LŔÁ Á  Á FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á  ! FG Á ]@ F @ G Ţ LŔÁ Á@! Á FL Á Á Â A‚ ]@€F @ G Ţ LŔÁ Á€! Á! FH € ]@ F @ G Ţ LŔÁ Á  Á FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á  " FG Á ]@ F @ G Ţ LŔÁ Á@"   FL A  Á Â A‚ ]@€F @ G Ţ LŔÁ Á€" Á" FH € ]@ F @ G Ţ LŔÁ Á  Á FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á  # FG Á ]@ F @ G Ţ LŔÁ Á@#   FL A  Á Â A‚ ]@€F @ G Ţ LŔÁ Á€# Á# FH € ]@ F @ G Ţ LŔÁ Á  Á FG Á ]@ F @ G Ţ LŔÁ Á  A FG Á ]@ F @ G Ţ LŔÁ Á  $ FG Á ]@ F @ G Ţ LŔÁ Á@$ Á FL Á Á Â A‚ ]@€F @ G Ţ LŔÁ Á€$ Á$ FH € ]@ F @ L Á Á % A% ]@ F @ G@ĺ LŔÁ Á€% 	 GAI GÁĹ	 FH € ]@ F @ G@ĺ LŔÁ ÁŔ% 	 GAM GÁĹ
 FH € ]@ F @ L Á Á & A& ]@ F @ G@ć LŔÁ Á  A FG Á ]@ F @ G@ć LŔÁ Á€& Á& FH € ]@ F @ G@ć LŔÁ Á  Á FG Á ]@ F @ G@ć LŔÁ Á  A FG Á ]@ F @ G@ć LŔÁ Á ' A' FH € ]@ F @ G@ć LŔÁ Á€' Á' Fh ‹ ÁA( B( A‚ B( ¤A ]@ F @ G@ć LŔÁ Á  Á FG Á ]@ F @ G@ć LŔÁ Á  A FG Á ]@ F @ G@ć LŔÁ Á€( Á( FH € ]@ F @ G@ć LŔÁ Á ) A) Fh ‹ ÁA( ‚ A‚ B( ¤A ]@ F @ G@ć LŔÁ Á  Á FG Á ]@ F @ G@ć LŔÁ Á  A FG Á ]@ F @ G@ć LŔÁ Á€) Á) FH € ]@ F @ G@ć LŔÁ Á * A* Fh ‹ ÁA( ‚ AB( B( ¤A ]@ F @ G@ć LŔÁ Á  Á FG Á ]@ F @ G@ć LŔÁ Á  A FG Á ]@ F @ G@ć LŔÁ Á€* Á* FH € ]@ F @ G@ć LŔÁ Á + A+ Fh ‹ ÁA( B( A‚ ‚ ¤A ]@ F @ L Á Á€+ Á+ ]@ F @ GŔë LŔÁ Á  A FG Á ]@ F @ GŔë LŔÁ Á , A, FH   ]@  € ˛   
   MenuBraum 
   scriptConfig    MasterSeries: Braum    Braum1    addSubMenu    [Braum]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    [Braum]: TS    addTS    [Braum]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEQ    Use     Q     (Q)    USEW    W     (W)    heroManager    iCount    GetHero    team 	   charName 
    If HP% <    SCRIPT_PARAM_SLICE      €A@              Y@   USER    R     (R)        @   No    Normal 
   Can Hit X 	   Killable    USERX    X =        @      @   CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    QMANA    Min. Mana % To Use (Q)    WMANA    Min. Mana % To Use (W)    RMANA    Min. Mana % To Use (R)    [Braum]: Harras Settings 
   harrasConfig       I@
   HTEnabled    Harass Toggle    SCRIPT_PARAM_ONKEYTOGGLE    L 
   AddSpellMenu    Braum    [Braum]: Unbreakable Settings 
   shieldConfig    pairs    GetEnemyHeroes    Spells    Shield 
   GetSpellData 	   tostring     -     Spells2    USE    Enable !   [Braum]: Auto-Interrupt Settings 	   aiConfig    ipairs    InterruptList 
   spellName    Interrupt     :  	   menuname    UI    [Braum]: Items Settings 
   iteConfig    it    LoadToMenu    [Braum]: Farm Settings    farm    QF 	   Freezing 
   LaneClear       D@   [Braum]: Jungle Farm    jf    QJF    [Braum]: Support Settings    ss    ---- Mikael's Crucible ----    mchp    Min. Hero HP% To Use    umc    Use Mikael's Crucible    ---- Frost Queen's Claim ----    fqhp    Min. Enemy HP% To Use       N@   ufq    Use Frost Queen's Claim $   ---- Locket of the Iron Solari ----    ishp    uis    Use Locket of the Iron Solari    ---- Twin Shadows ----    tshp    uts    Use Twin Shadows    ---- Exhaust ----    exhp    uex    Use Exhaust    ---- Heal ----    hhp    uh 	   Use Heal    [Braum]: KS Settings 	   ksConfig    QKS    RKS    [Braum]: Draw Settings    drawConfig    DST    Draw Selected Target    DAR    Draw AA Range    DARC    Draw AA Range Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DWR 
   Draw W Range    DWRC    Draw W Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Braum]: Misc Settings 	   prConfig    ALS    Auto lvl skills                          ăS  öS   ?   F @ †@@ ]@ G€@ XŔŔ @€F A ‡€@ Ç@A Ç€Á]€€[   €€G€@ 
@€G€@ 
@ „G€@ 
@€„Ŕ€F€B ‡ŔB ]€ 
@€G C L@Ă ]@ G C G€Ă 
@ „GŔC L@Ă ]@ GŔC G€Ă 
@€„F@@ G Ä G@Ä [    €G€D [@  @ €LŔD ]@ F@@ G Ä G Ĺ [   €€F A ‡@B ]€ [   @€G€D [@  € €L@E Ç@B ]@€ €       CheckOB 
   MenuBraum    SelectedTarget     ValidTarget    R    range    Cel    QCel    RCel    GetCustomTarget    TargetSelector    QTargetSelector    update    target    RTargetSelector    comboConfig    USEW    recall    CastW    CRKD    CastR                          řS  
T      F @ ]€€ [   Ŕ€G@@ [@   €F€@ ‡Ŕ@ ]€ [   @€F A G@Á G€Á [    €FŔA ‡Ŕ@ ]€ ‡ B ‡@B€€ @€F€B GŔÂ †€B ‡ CP€€ O@Ă † A ‡@A‡€C@ € €LŔC ÇŔ@ ]@€F€@ ‡ D ]€ [   €€F A G@Á G@Ä €Ä @€F€B GŔÂ †€B ‡ CP€€ O@Ă † A ‡@A‡ŔD@ € €L E Ç D ]@€F€@ ‡ D ]€ [   Ŕ€F A G@Á G@Ä @Ĺ €€F€B GŔÂ †€B ‡ CP€€ O@Ă † A ‡@A‡ŔD@ Ŕ€L€E Ç D ]€€‡ D ‡ŔEĆ F Ç@ĆD FÝ€ ŤŔ @ € €Ś E D ť@€F A G@Á G@Ä ŔĆ  €F€B GŔÂ †€B ‡ CP€€ O@Ă † A ‡@A‡ŔD@ @ €L G ]@ F€@ ‡Ŕ@ ]€ [   @€G@G L€Ç ÇŔ@ A ÁG]@  €        ComboActive    recall    ValidTarget    QCel 
   MenuBraum    comboConfig    USEQ    GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ    RCel    USER        @   RMANA    CastR       @   RDamage    health    math    floor    shield       @   CastR2    it 
   CastItems 
   iteConfig                          T  T   ,   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€F@A ‡€A ]€ [   @€F @ G@Ŕ GŔÁ [    €F B ‡€A ]€ ‡@B ‡€B€€ @€FŔB G Ă †ŔB ‡@CP€€ O€Ă † @ ‡@@‡ŔC@ € €L D Ç€A ]@€ €    
   MenuBraum 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    USEQ    GetDistance    Q    range    myHero    mana    maxMana       Y@   QMANA    CastQ                          T  +T   ^   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A G@Á G€Á †ŔA Ç€@ Ç Âť  €@Â  €ĆB ÇÁÂ‚B CĐ‚ĎAĂA BA‚CŔ@€ÇÁC ÇÄÝ€ Ű  €
€X@D 
€ĆD   GÂC GÂÄÝ€Ű  @€ĚE @ ÝA€@
€@Ĺ Ŕ	€ĆB ÇÁÂ‚B CĐ‚ĎAĂA BA‚CŔ €ÇÁC ÇÄÝ€ Ű  Ŕ€X@D@€ĆD   GÂC GÂÄÝ€Ű  €€ĆE ĚÁĹ@ †F ť‚€ BFÝ ‚F € ‚€ ‚€ €LE Ŕ ]B€˘€  #í €       FarmActive    recall 
   EnemyMinions    update 
   MenuBraum    farm    QF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    CastQ        @   VP    GetPredictedHealth    GetLatency      @Ź@   QDamage                          -T  8T   	3   F @ ]€€ [   @€G@@ [@  €
€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ‡BĆAB ÇÁÂÁŹCĆA ÇÁÁÇAĂ€ €‡C ‡ÁCť€ ›  Ŕ€X Ä@€†AD Ŕ€ť ÇC ÇÄŔ€ €ŚÁD  €ťA€b€  ă ÷ €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuBraum    jf    QJF    myHero    mana    maxMana       Y@   QMANA    Q    Ready     GetDistance    range    CastQ                          :T  MT   =   F @ G@Ŕ G€Ŕ [    €FŔ@ † @ ‡@@‡ A]@ F @ G@Ŕ G@Á [    €F€A † @ ‡@@‡ŔA]@ F @ G@Ŕ G Â [    €F@B † @ ‡@@‡€B]@ F @ G@Ŕ GŔÂ [    €F C † @ ‡@@‡@C]@ F @ G@Ŕ G€Ă [    €FŔC † @ ‡@@‡ D]@ F @ G@Ŕ G@Ä [    €F€D † @ ‡@@‡ŔD]@  €    
   MenuBraum    ss    umc    Mikael    mchp    ufq    Frost    fqhp    uis    Solari    ishp    uts    Twin    tshp    uex    Exhaust    exhp    uh    Heall    hhp                          OT  aT   
­   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBFÁD GĹMAĹ†AC Ć@ ÇAŔÇĹÇÁĂ@ B@‚EDF@ GBŔG‚ĹGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGF GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ć [    €GŔF G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGÁF GĹ†AC Ć@ ÇAŔÇÇÇÁĂ@ B@GDF@ GBŔGÇGBÄť ]@  F @ G@Ŕ G@Ç [    €G€G G@Ć ]€€ [   Ŕ€F B †ŔD ‡@BĆŔD Ç€ÂÁD ÁBGG GĹ†AC Ć@ ÇAŔÇÁÇÇÁĂ@ B@ÂGDF@ GBŔGÂÇGBÄť ]@   €     
   MenuBraum    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DAR    myHero    range       ^@   DARC    DQR    Q    Ready    DWR    W    DWRC    DRR    R    DRRC                          cT  iT   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuBraum 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         kT  mT      ‡ @ ‡@@ť€€ ›    €†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMA„†@ ‡ABŹBMť€ ›@    €Ŕ ź   €       Q    Ready    myHero    CalcMagicDamage 
   GetSpellData    _Q    level      €F@      .@
   maxHealth       Đ?                                 oT  qT      ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMA„†@ ‡ABM†@ ‡ABĆ@ ÇÂŹÁŹÁBMť€ ›@    €  ź   € 
      R    Ready    myHero    CalcMagicDamage 
   GetSpellData    _R    level       Y@      I@   ap 
   apPercent 333333ă?                                 sT  |T   0   F @ †@@ ť € ]  Ŕ	€‡@ ‡Á@ť€ ›  €€†A Ŕ€‚@ BA
‚Ať€›  €€†ÁA ŚB €G‚@ GBÂ‡‚@ ‡‚BÇ‚@ ÇBÁ@ ĂBFC ťAX@CŔ€†‚C ‡ÂC‡D €€Ŕ €†‚D ĆÂD EGCEťB b€  ă@ő €       pairs    GetEnemyHeroes    R    Ready    ValidTarget    range       Y@   VP    GetLineAOECastPosition    delay    width    speed    myHero  
   MenuBraum    comboConfig    USERX        @
   CastSpell    _R    x    z                          ~T  ‰T   J   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă€   A  †D ‡DD	‡„D	‡DE	]X€Ĺ@ €›A    € € ÂB FC ‡BĂÇ‚ĂB  €       R    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _R    x    z    GetPrediction2 
   MenuBraum 	   spConfig    rConfig    RP    line    RCH                           ‹T  ŹT   
   ‡ @ ‡@@ť€€ ›   €€†€@ ĆŔ@ A AAFA GÁť@  €       E    Ready 
   CastSpell    _E 
   CastPosition    x    z                          ‘T  śT   
I   ‡ @ ‡@@ť€€ ›   €€†€@ ‡Ŕ@Ć€@ Ç ÁŔ Ź@AĆ€A ÇŔÁÇ Â€€Ŕ
€@ Ć€B ÇŔÂA ˇ@€†B ŚC €ť€ÇAC‚@ BC ‚ 
€ĆC   F‚@ Ý€@ ÂC ‚ €ĆA ÇÁÁDÇ‚Ű  €€ĆA ÇÁÁDÇ‚Ŕ €ÇDÂDĐ‚ĎAÁ‚A ÂAGDB ‚€€ĆE   G@ GÂĂÝ€Ŕ„Ŕ €ĆAE ‚E @ ÝA€  ó €       W    Ready    myHero    mana    maxMana       Y@
   MenuBraum    comboConfig    WMANA       đ?   heroManager    iCount    GetHero    team    GetDistance    range 	   charName            health 
   maxHealth    EnemyCount 
   CastSpell    _W                          žT  ©T   E   ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ € Ă    A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € ‚B FÂB ‡ĂÇBĂB  €       Q    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 
   MenuBraum 	   spConfig    qConfig    QP    line    QCH                           «T  ŻT      [    €Ŕ   @€Ű   Ŕ €AŔ€@  €
Ŕ@ €       isMe    name    recall                         ±T  µT      [    €Ç Ŕ Ű   @€›   Ŕ €Ç@@€Ŕ  €
Ŕ@ €       isMe    name    recall                          ·T  őT   -  Ć @ Ç@ŔÇ€ŔŰ    €ÇŔ@ Ç ÁÝ€€ Ű   Ŕ
€Ć@A Ý€€ Ű@  Ŕ	€Ć€A ÁA Ý @€[   Ŕ€Â FBB GÂX@€€‚Â FBB G‚Â@@€›   Ŕ€ÂBGĂ@Ŕ€@ B@GĂB  @€BC @€ ‡Â@ ‡‚C‚€  € €ÂC €€ B€â€  cÁöĆ @ Ç ÄÇ@ÄŰ    <€Ć@B Ě€ÄFÁD Ý€€E  @:€[   Ŕ9€Ç Â AB BX €8€Ç€Â AB B @7€›   Ŕ6€Ç@E ÁBÇ Ű   €5€Ć @ Ç ÄÁBÇ Ű    4€Á@ A @FŚ ‹Ŕ ‹Ç€Â AB B  	€Ć€F  € GÁBÝŔ€XŔFŔ €X G@ €@G  € € X€Ç@€XŔÇŔ €X Č@ €ŔŔ@€FAH ‡Č GGÁ€GÂ@‹FAH ‡Č GGÁ€GÁĹ@‹FAH ‡Č GGÁ€GĆ@ŚĆ@B ÂFAB GÂ@Ŕ&€ÁČA   &€É Ś@%€  D  ‡AÉĆE @Ć€€ÇI€€€ÇIÇÁÉÂÉX ‚  €A  € ĆJ  € Ý @€ €ĆE @Ę@€ĆJ  € GÂJ†ÂE ĆF  €@ Ý€ €Ŕ€ĆE  Ë@€ĆAK  € GÂJ†ÂE ĆF  €@ Ý€ €€€ĆE €Ë@€ĆÁK  € GÂJ†ÂE ĆF  €@ Ý€ €@€ĆE ŔĆ@€ĆL  € GÂJ†ÂE ĆF  €@ Ý€ € 
€ĆE  Ç@€ĆAL  € GÂJ†ÂE ĆF  €@ Ý€ €Ŕ	€ĆE @Ç €ĆJ  € GÂJ†ÂE ĆF  €@ Ý€A€@€ĆJ  € FJ €€ ]‚ OË‡ÂJN‚‚†ÂE ĆF  €@ Ý€ €Ŕ€ĆE €Ě €ĆL ÂJ@€ †ÂE ĆF  €@ Ý€ €  WA€ÇÁLŰ   €ĆJ ÂLÝ M e  B
 B€W€WA€[  WÁ€ÇÁLŰA  W€ĆM %B  AB
 ÝA€WÁ˙ € 6   
   MenuBraum 	   aiConfig    UI    R    Ready    ComboActive    pairs    InterruptList    team    myHero    type    name 
   spellName    ValidTarget    range    CastR 
   shieldConfig    USE    CanUseSpell    _E    READY    Shield 	   shottype    radius    maxdistance         
   getSpellType       @      @      @   Q    W    E 
   skillData 	   charName    dead    health    boundingRadius    target 
   networkID    Vector       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall       @	   startPos    DelayAction š™™™™™ą?   čT  ęT        @ F@@ †€Ŕ ĆŔŔ @  €    
   CastSpell    _E    x    z                          ěT  îT        @ F@@ †€Ŕ ĆŔŔ @  €    
   CastSpell    _E    x    z                                               ÷T  U   K   F @ †@@ ť € ]  €€‡ŔĚÁ@ @€Ý€A €€‚€FBA €€]‚ [  €
€F‚A €€]‚ ‡ÂA ‡BŤBB€‚€€F‚B GÂÂGĂ[  €€G‚Ŕ†BC ‡‚CÇÂĂť‚ M‚‚Ŕ€€FBA €€ÇD ÇÂ]‚€[  Ŕ €LBD Ŕ€]B€€€F‚B GÂÂG‚Ä[  @€G‚Ŕ†BC ‡‚CÇÂĂť‚ M‚‚ ‚@€FBA €€ÇÂA ÇÂ]‚€[  € €LÂD Ŕ€]B€b€  ă€î €       pairs    GetEnemyHeroes    health    QDamage    RDamage    ValidTarget    GetDistance    R    range       Y@
   MenuBraum 	   ksConfig    QKS    math    floor    shield    Q    CastQ    RKS    CastR                          U   U   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuBraum    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> `   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target selected:</font>                          &U  MU   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ,U  ,U           @ @  €       AfterAA                         /U  /U           @ @  €    	   BeforeAA                         6U  6U           @ @  €       AfterAA                         9U  9U           @ @  €    	   BeforeAA                         ?U  ?U        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ?U  ?U           @ @  €       AfterAA                                               BU  BU           @ @  €    	   BeforeAA                         GU  GU           @ @  €       AfterAA                         JU  JU           @ @  €    	   BeforeAA                              	
                OU  fU   W   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚J ĂĄ@  J€€„
@ …K€ J€Ă‚JŔĂJ@DJŔD‰J@EŠĄ€  J€€„
@€†K€ JŔĹ‚J Ć†@F ‡€FJ€ JŔF‰J GŠĄŔ  J€€„
@ ‹FŔ@ †€G ÁŔ H C  ]€€
@€ŽFŔ@ †€G Á€ H C  ]€€
@€FŔ@ †€G Á  H C  ]€€
@€‘
@I’FŔI † J Ç A ÇŔÁAJ FJ ]€€
@ “FŔI † K Ç A ÇŔÁAJ FJ ]€€
@€•K   
@€–FŔK ]€€ 
@ —K   
@ 
 Ă
@E™
 Ă™
@Mš
 C›
@Í› € 8      SelectedTarget     Cel    TargetSelector    Q    name 	   Parrrley    range      P„@   Ready    W    Remove Scurvy            E    Powder Keg      @Ź@   speed      Ŕ’@   delay       đ?   width      u@   R    Cannon Barrage    ŕĎcA   math    huge       @      i@   QTargetSelector    TARGET_LESS_CAST_PRIORITY      ŕ…@   DAMAGE_PHYSICAL    ETargetSelector      @ź@   RTargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast    beczki    tt1hp    eradius 
   lastautoe 
   autoeflag    lastautoe2    autoeflag2    SU  SU        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          TU  TU        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          UU  UU        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          VU  VU        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               hU  ÉU   Q  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FAI   ĆI ÇÁÉ
 Ý ]@  F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@
 
 GÁJ GÁĹ FH € ]@ F @ GŔĆ LŔÁ Á@ 
 GK GÁĹÁ FH   ]@ F @ GŔĆ LŔÁ Á  
 GAL GÁĹ FH € ]@ F @ GŔĆ LŔÁ ÁŔ 
 GM GÁĹA
 FB 
 Ë Â
 A B Á‚ äA ]@€F @ GŔĆ LŔÁ ÁŔ  FAO  ÁÁ Â A ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@  FAO Á Á Â A ]@€F @ GŔĆ LŔÁ Á  A FAO  Á Â A ]@€F @ GŔĆ LŔÁ ÁŔ  FAO A Á Â A ]@€F @ GŔĆ LŔÁ Á€ Á FAO Á Á Â A ]@€F S † @ Á    C    Ă€ ]@€F @ L Á Á@  ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ ÁŔ 
 GÁJ GÁĹ FH € ]@ F @ G€Ó LŔÁ Á  
 GAL GÁĹ FH € ]@ F @ G€Ó LŔÁ Á  Á FG Á ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ Á@  FAO A Á Â A ]@€F @ G€Ó LŔÁ ÁŔ  FAO  Á Â A ]@€F @ G€Ó LŔÁ Á  Á FG Á ]@ F @ G€Ó LŔÁ Á  A FG Á ]@ F @ G€Ó LŔÁ ÁŔ  FAU   ĆI ÇÁÉ‚ Ý ]@  F @ L Á ÁŔ  ]@ G@V L€Ö Ć @ Ç Ö]@€F @ L Á ÁŔ  ]@ F @ G × LŔÁ Á  A FG Á ]@ F @ G × LŔÁ Á@  FH € ]@ F @ G × LŔÁ ÁŔ 
 GÁJ GÁĹ FH € ]@ F @ G × LŔÁ Á  
 GM GÁĹA
 FH € ]@ F @ G × LŔÁ Á@  FAO  ÁÁ Â A ]@€F @ L Á Á  A ]@ F @ G@Ů LŔÁ Á  A FG Á ]@ F @ G@Ů LŔÁ Á€ 
 GÁJ GÁĹ FB 
 Ë€Â
 AÂ  äA€]@€F @ G@Ů LŔÁ Á@ 
 GAL GÁĹ FB 
 Ë Â
 A äA ]@€F @ G@Ů LŔÁ Á  Á FG Á ]@ F @ G@Ů LŔÁ Á  A FG Á ]@ F @ G@Ů LŔÁ Á@  FAO  Á Â A ]@€F @ G@Ů LŔÁ ÁŔ  FAO  Á Â A ]@€F @ L Á ÁŔ  ]@ F @ G Ű LŔÁ Á  A FG Á ]@ F @ G Ű LŔÁ Á@ 
 GÁJ GÁĹ FH € ]@ F @ G Ű LŔÁ Á€ 
 GAL GÁĹ FH € ]@ F @ G Ű LŔÁ Á  Á FG Á ]@ F @ G Ű LŔÁ Á  A FG Á ]@ F @ G Ű LŔÁ Á@  FAO  Á Â A ]@€F @ G Ű LŔÁ ÁŔ  FAO  Á Â A ]@€F @ L Á ÁŔ  ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á@  FH € ]@ F @ G Ü LŔÁ Á  Á FH € ]@ F @ G Ü LŔÁ Á  A FH € ]@ F @ G Ü LŔÁ Á€ Á FH € ]@ F @ G Ü LŔÁ Á  A FH € ]@ F @ G Ü LŔÁ Á  Á FG Á ]@ F @ G Ü LŔÁ Á  A FG Á ]@ F @ G Ü LŔÁ Á€ Á FH € ]@ F @ L Á Á  A ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ Á€ Á FAO   Á Â A ]@€F @ G@ß LŔÁ Á@    FAO  Á Â A ]@€F @ G@ß LŔÁ Á  Á FG Á ]@ F @ G@ß LŔÁ Á  A FG Á ]@ F @ G@ß LŔÁ ÁŔ  Á FH € ]@ F @ L Á Á ! A! ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€! Á! FH € ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á " A" FH € ]@ F @ G@á LŔÁ Á€" Á" Fc ‹ ÁA# B# AÂ B# ¤A ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€# Á# FH € ]@ F @ G@á LŔÁ Á $ A$ Fc ‹ ÁA#  A B# ¤A ]@ F @ G@á LŔÁ Á  Á FG Á ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€$ Á$ FH € ]@ F @ G@á LŔÁ Á % A% Fc ‹ ÁA# B# A  ¤A ]@ F @ L Á Á€% Á% ]@ F @ GŔĺ LŔÁ Á  A FG Á ]@ F @ GŔĺ LŔÁ Á & A& FH   ]@ F @ G€Ó L€ć ÁŔ ]@€ € ›      MenuGP 
   scriptConfig    MasterSeries: Gangplank    Gangplank1    addSubMenu    [Gangplank]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name 
   Gangplank    addTS    [Gangplank]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    USEE2    Manual Cast (E)    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    USEQ    Use     Q     (Q)    USEW    W     (W)    USEE    E     (E)    USER    R     (R)        @   No    Normal 	   Killable    Can Hit X Enemy    USER2C    X =     SCRIPT_PARAM_SLICE       @      @           QMANA    Min. Mana % To Use (Q)       Y@   WMANA    Min. Mana % To Use (W)       .@   EMANA    Min. Mana % To Use (E)       $@   RMANA    Min. Mana % To Use (R) 
   AddSpellMenu    [Gangplank]: Harras Settings 
   harrasConfig    QH    EH       I@     €K@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    [Gangplank]: Items Settings 
   iteConfig    it    LoadToMenu    [Gangplank]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    RKS    ULTHITS    Ult Hit Times:       (@   [Gangplank]: Farm Settings    farm    QF 	   Freezing 
   LaneClear    EF       D@"   [Gangplank]: Jungle Farm Settings    jf    QJF    EJF    [Gangplank]: Anty CC 
   accConfig    SL 
   If Have Slow 
   If Have Stun    RT 
   If Have Root    CH    If Have Charm    TA    If Have Taunt    CC    Enable    [Gangplank]: Auto Heal 	   ahConfig 	   MINHPTOW    Min % HP To Heal       N@	   MINMPTOW    Min % MP To Heal    aw    [Gangplank]: Draw Settings    drawConfig    DD    Draw DMG Text    DEH    Draw E Helper    DEHC    Draw E Helper Color    SCRIPT_PARAM_COLOR      ŕo@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    [Gangplank]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ËU  ÷U   	Ź   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡F@@ G€Ä GŔÄ [    €G E [@  @ €LŔD ]@ F@@ G@Ĺ G€Ĺ [    €G E [@  @ €LŔE ]@ L F ]@ F@F G€Ć ŔĆ @ €
@GŽ€€F@F G€Ć €Ç @€F@F G€Ć @€Ť@ €
ŔGŽ €F@F G€Ć @ Ź  €
 HŽF@H G€Č ]€€ ‡ŔH Ć I Ç@ÉG “A Ý€€ŤŔ @   €
 Ę“F@H G€Č ]€€ ‡@J Ć I Ç@É
 A Ý€€ŤŔ @   €
 Ę•F@@ G Ë G@Ë [   €€G@B G€Ë ]€€ [   @ €LŔK ]@ F L †@L ť € ]   €†B Ŕ€‚ ť€›  € €ŚÁL  €ťA€b€  ă ý € 4      CheckOB    MenuGP    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target 
   accConfig    cc    recall 	   ahConfig    aw    autow    updatebarrels    myHero    level       @   tt1hp        @      *@      ô?      đ?   os    clock 
   lastautoe    math    max       ř?
   autoeflag    lastautoe2       @   autoeflag2    comboConfig    USEE2    Ready    CastLinkedBarel    pairs    GetEnemyHeroes      p§@   DetonateBarels                          ůU  (V   1  F @ ]€€ [   ŔJ€G@@ [@   J€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€A G Â G@Â [   Ŕ€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡€C@  €GŔC G Ä ]€€ [   Ŕ€F€A G Â G@Â [   € €F@D †€D ]@ F€A G Â GŔÄ [   €€F€@ ‡ E ]€ [   @€F€B L@Ĺ Ć€E ]€€†ŔE €€ €€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡ F@ Ŕ €L@F Ç E  ]@ F€A G Â GŔĆ  Ç €
€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡@G@ Ŕ
€G€G G Ä ]€€ [   €	€FŔG ‡ H ]€ @Č @€F€H †€A ‡ŔH‡ I‡@IÇ H G IGG GÁÉ‡G ‡JÇG ÇAĘ‚B A‚
   Ă€   A †A ‡ĂH‡I‡ĂJ] X Ë €€›    €AD FAK ‡Ë ÇÁË A F€A G Â GŔĆ  Ě @€F€@ ‡ H ]€ [    €F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡@G@ @€G€G G Ä ]€€ [    €FŔG ‡ H ]€ @Č Ŕ€L@L Ç H ]€€O Ç Ś€L H ť€€Ź GĚŔL GH Ý€€Ď Í
Á 
A GH GAÍ @€FH †A ‡ÁH‡I‡AIÇH ‚G ‚IG‚G GÂÉ‡‚G ‡JÇ‚G ÇBĘB A
   Ă€   A„ †„A ‡ÄH	‡I	‡ÄJ	]X Ë€€›   €BD FBK ‡‚ËÇÂËB F€A G Â GŔĆ  Í @
€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡@G@ €€F€M LŔÍ Ç H  A A Á ‚B ]@GG GÄ]€ [   €F@ ‡H ] [  Ŕ€X Ë @€FA GÂGÁÎŔ€ €FAD †AK ÇË ÂË ]A F€A G Â G Ď [   @€F€B GŔÂ †€B ‡ CP€€ O@Ă †€A ‡ B‡@O@ €€G€O G Ä ]€€ [   @€F€@ ‡Ŕ@ ]€ [    €LŔO ÇŔ@ ]€€€Î Ŕ €F@D † P ÇŔ@ ]@€ € A      ComboActive    recall    ValidTarget    QCel    it 
   CastItems    MenuGP 
   iteConfig    comboConfig    USEW    myHero    mana    maxMana       Y@   WMANA    W    Ready 
   CastSpell    _W    USEE    ECel    CanUseSpell    _E    READY    EMANA    CastE       đ?   USER        @   RMANA    R    GetDistance    RCel      p—@   GetPrediction2 	   spConfig    rConfig    RP    delay    width    range    speed    circle    RCH     _R    x    z       @   AAMDG    QMDG    RMDG       @   health    VP    GetCircularAOECastPosition      Ŕr@     @ź@           USER2C    USEQ    QMANA    Q    ONEHPBarelsCountOnTarget    _Q                          *V  wV   
Ź  Ç @ Ç@ŔÝ€€ Ű    b€[   €a€Ä   €@€€Á@ A€€ ÁA  Ŕ  €€A ÁAA B G@ GAÂ‡B ÇA ÇÁÂÁ   € €@†  €Ŕ  €@€€AC @€ €CŔ €ÁC  X D€€ÁC  €@ €AC GÁC GŔGAÄ  ‰@
€ÁD †E Ŕ€  AA   €€@ €†E ĆÁE FGBFťA €€Ű    €AC @€ €CŔ €ÁC  X D€€ÁC  €@Ŕ€AC GÁC GŔGAÄ  ‰ €E FÁE ‡ĆÇAĆA F  €@Ŕ5€  ŔI€Ű   @I€FAC ‡ADŔ€]€€ÄŔG€GÁF  Ç G€GADGAÇX€Ŕ@€GG@@E€GGŔÇ€D€FAC €€ÇAD]€‡B @ 
€LH Ŕ€B ] @Ĺ@A€FH ‡AD] †H ĆH  €Ý ‚H GBD‚ Î‚ť ŚÁHť ŹIM†E ĆÁE ĆGBĆťA †I ‡ÁIť€ 
€’
 ĘŤ  @:€†AC ÇAD €ť€ÇB Ŕ€8€†AC Ŕ€ €ť€ÇB ŔŔ6€†E ĆAJ BDťA€€5€FAC €€ÇAD]€‡B €€€FAC †E ÇAD]€€Ę 
€LH Ŕ€B ] @ĹŔ0€FH ‡AD] †H ĆH  €Ý ‚H GBD‚ Î‚ť ŚÁHť ŹÁJM†E ĆÁE ĆGBĆťA †I ‡ÁIť€ 
€’
 ĘŤ  Ŕ)€†AC ÇAD €ť€ÇB Ŕ (€†AC Ŕ€ €ť€ÇB Ŕ@&€†E ĆAJ BDťA€ %€FAC €€ÇAD]€‡B €@#€FAC †E ÇAD]€@•Ŕ!€LH Ŕ€B ] @Ĺ@ €FH ‡AD] †H ĆH  €Ý ‚H GBD‚ Î‚ť ŚÁHť ŹJM†E ĆÁE ĆGBĆťA †I ‡ÁIť€ 
€’
 ĘŤ  @€†AC ÇAD €ť€ÇB Ŕ€€†AC Ŕ€ €ť€ÇB ŔŔ€†E ĆAJ BDťA€€€@€  Ŕ€Ű   @€FAC ‡ADŔ€]€€ÄŔ€GK  Ç €GADGAÇX€Ŕ@€GG@@€GGŔÇ€€FAC €€ÇAD]€‡B @Ŕ€LH Ŕ€B ] @Ĺ@€FH ‡AD] †H ĆH  €Ý ‚H GBD‚ Î‚ť ŚÁHť ŹAKM†E ĆÁE ĆGBĆťA †I ‡ÁIť€ 
€—
 J–  @€†AC ÇAD €ť€ÇB Ŕ€€†AC Ŕ€ €ť€ÇB ŔŔ €†E ĆAJ BDťA€ € /      E    Ready       đ?   VP    GetPredictedPos       Đ?
   EnemyMinions    update    GetBestCircleFarmPosition    range    eradius    objects       @   GetDistance      Ŕ’@   beczki            Object      @Ź@   GetMidPoint    myHero        @
   CastSpell    _E    x    z 	   GetBarel 
   autoeflag    health 
   TimeTo1HP ÍĚĚĚĚĚÜ?   BarelsCountOnTarget      @@   Vector    normalized      @…@
   lastautoe    os    clock     _Q      Ŕ‚@      y@   autoeflag2      @o@   lastautoe2                          yV  …V   3   G @ U € @Ŕ € €F€@ Ŕ  ]@ F A ‡ @ ]  	€[  €€†AA ÇÁÂA ť€ B €‡AB €B@€†ÁB ÇÁť ĆÁB ÂB FÂA ‚ FÂB ‡‚Á]‚ BÝ ĚĂÝ ĎAĂŤÁĆC ÂC GD‡BDÝA ĆÁD ÇĹÝ€ 
Ŕ‰
@Ĺ„b€  ă ö €       beczki            print    Pls Cast First Barel Manual    ipairs    GetDistance    Object 	   mousePos      ŕu@
   autoeflag    Vector    normalized      @…@
   CastSpell    _E    x    z 
   lastautoe    os    clock                           ‡V  ťV   G   Ś @  € ť€€Ě@@ A  €€ Ý€ ›    €Á@ A€   €€AA @ †A €€@ €ÁA FB € A€ €AB €    
€AA FA € €FA GÂMÁÂ@Ŕ€C @ A Ŕ€Ű   @€Á@ A€    €ÁA FB €€A€Ŕ€AB €   Ŕ€AA FA €€€FA GÂMÁÂ@€ €C @€A  € 
      Find1HPBarelToEnemy    Find1HPLinkedBarel      P„@   Q    Ready    GetDistance    myHero 
   CastSpell    _Q 
   CanAttack    range       ^@   Attack                          źV  ´V   d   † @ Ç@@ ť €€Ç@Ő€ŔŔ@€›   €ĆA BA@€ Ý€‚A  ‚@€ÇAAÇÁÁX Â@€ÇABŔ€€ÇABA GBA‚ ‚B ‚Ŕ€ÇAAß  €Ç@Ő€XŔŔ €Ć@ ‚@Ý€€Ű  Ŕ€A GCÁ€€ €GA @ €CÁĂAX B@€CÂ @€CÂFA ‡CÁ] PÂ@€ €CÁ  €›  €€A GCA€€ €GA @Ŕ€CAĂAX B@€CB  €CBFA ‡CA] PÂ@@ €CA â  c‚ň˘€  #č„   ź   €       ipairs    beczki 
   LinkedBarels            GetDistance    Object    eradius    health       đ?
   TimeTo1HP      ŕĄ@                         ¶V  ÉV   X   Ć @ A@ Ý €€‚Ŕ Ŕ@Ŕ€Ű   €A GBÁ†‚A ‚€@ €€A GBÁ€ ‚€GÂA @Ŕ€BÁBX@B@€‚Â ‚ 
€‚ÂFA ‡BÁ]‚ PÂÂ@@€BÁ €
€‚Ŕ XŔ@€	€@ G‚Ŕ €  €€FA ‡CAŔ ]€‡ĂA €Ŕ€Ű  @€FA ‡CÁĆA ]€@€Ŕ€GCÁGÂX@Â@€GÂ@ €GÂ†A ÇCÁť ĂB€@ €GCÁ_ "‚  Ł÷â€  cëÄ   ß   €       ipairs    beczki 
   LinkedBarels            GetDistance    Object    myHero    eradius    health       đ?
   TimeTo1HP      ŕĄ@                         ËV  ŃV   '   Ç @Ŕ€€@€Ć€@  € Ý€ @ F@ €€ ] †@ Ŕ ť N Á@ A@Î ß   €Ć€@  € Ý€ @ F@ €€ ] †@ Ŕ ť N Á@ AÎ ß   €       range      Ŕr@   Vector    normalized      0@                         ÓV  ÚV      F @ ‡@@ ] Ŕ€[  @€†@ ÇÁŔť  A  €_ b€  ă@ýD   _   €       ipairs    beczki    GetDistance    Object      @Ź@                         ÜV  ęV   *   Á   A@ G@  €GÂ@U€ Ŕ@€  Ŕ€FA ‡BAŔ€ ]‚€€€@ €Í€Á€€GÂ@U€X Ŕ€€FB@ ‡Â@] €[  €€†A ÇCÁ € ť€€   €Í€Áb‚  ăý"  Ł÷ß   €               ipairs    beczki 
   LinkedBarels    GetDistance    Object       đ?                         ěV  úV   5      Ć@@ @ Ý Ŕ
€ÂŔ  @Ŕ€Ű  @€ÁBA€A@€ÂA GÁ€€ ‚€GB MBÂ@@ €Ť€AŔ€ÂŔ X @Ŕ€B@ GÂŔ@€  Ŕ€GAGCÁ€ÁŔ€FĂA ‡AŔ€ ]€‡B €  €Ť€A"‚  ŁÂűâ€  cAôź   € 
              ipairs    beczki 
   LinkedBarels    Object    health       đ?   GetDistance    eradius       I@                         üV  	W   N   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ€G A [@   €F @ G@Ŕ G@Á [   @€F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡€B@ €€GŔB G Ă ]€€ [   @€F@C ‡€C ]€ [    €LŔC Ç€C ]€€ Ä Ŕ €F@D †€D Ç€C ]@€F @ G@Ŕ GŔÄ [    €F€A GŔÁ †€A ‡ BP€€ O@Â † @ ‡@@‡ E@ @€G@E G Ă ]€€ [    €F@C ‡€E ]€ [   Ŕ €LŔE Ç€E  ]@  €       MenuGP 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    QH    myHero    mana    maxMana       Y@   QMANA    Q    Ready    ValidTarget    QCel    ONEHPBarelsCountOnTarget         
   CastSpell    _Q    EH    EMANA    E    ECel    CastE       đ?                         W  #W      F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A G@Á G€Á †ŔA Ç€@ Ç Âť Ŕ€@Â €€ĆB ÇÁÂ‚B CĐ‚ĎAĂA BA‚CŔŔ€ÇÁC ÇÄÝ€ Ű   €X@D€€ĆD   GÂC GÂÄÝ€Ű  Ŕ€ĚE @ Ý€@Ĺ€€ĆE ÂE @ ÝA€@
€ Ć Ŕ	€ĆB ÇÁÂ‚B CĐ‚ĎAĂA BA‚CŔ €ÇÁC ÇÄÝ€ Ű  Ŕ€X@D@€ĆD   GÂC GÂÄÝ€Ű  €€ÇAF‚F € ‚€ ‚ €ĚE @ Ý€@ĹŔ €ĆE ÂE @ ÝA€ĆA ÇAÁÇÁĆ ĆŔ€ĆB ÇÁÂ‚B CĐ‚ĎAĂA BAGŔ €ĆD   AB Ý€Ű  €€ĚG @ ÝA€ĚÁG @  ÝA ˘€  #Aä €        FarmActive    recall 
   EnemyMinions    update    MenuGP    farm    QF    pairs    objects       @   myHero    mana    maxMana       Y@   QMANA    Q    Ready     ValidTarget    range    ONEHPBarelsCountOnTarget         
   CastSpell    _Q        @   health    QMDG    EF    EMANA      @Ź@   DetonateBarels    CastE                          %W  8W   
]   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A G@Á G€Á [    
€FŔA G Â †ŔA ‡@BP€€ O€Â † A ‡@A‡ŔB@ @€F C ‡€@ ‡@C] €€‡C ‡ÁCť€ ›  @€X ÄŔ€†AD Ŕ€ť ÇC ÇÄŔ €ŚÁD  €ť€ EŔ €†AE ĆE  €ťA€b€  ă€ůF A G@Á GŔĹ [   €€FŔA G Â †ŔA ‡@BP€€ O€Â † A ‡@A‡ F@ Ŕ€F C ‡€@ ‡@C]  €†AF Ŕ€‚ ť€›  €€ŚÁF  €A ťA ŚAG  €ťA€b€  ă ü €       FarmActive    recall    JungleMinions    update    MenuGP    jf    QJF    myHero    mana    maxMana       Y@   QMANA    pairs    objects    Q    Ready     GetDistance    range    ONEHPBarelsCountOnTarget         
   CastSpell    _Q    EJF    EMANA    ValidTarget      @Ź@   CastE        @   DetonateBarels                          :W  LW   Q   F @ G@Ŕ G€Ŕ [   €€GŔ@ G Á ]€€ [   @€F @ G@Ŕ G@Á [    €G€A LŔÁ Ć B ]€€[   € €F@B †€B ]@ F @ G@Ŕ GŔÂ [    €G€A L Ă Ć B ]€€[   € €F@B †€B ]@ F @ G@Ŕ G@Ă [    €G€A L€Ă Ć B ]€€[   € €F@B †€B ]@ F @ G@Ŕ GŔĂ [    €G€A L Ä Ć B ]€€[   € €F@B †€B ]@ F @ G@Ŕ G@Ä [    €G€A L€Ä Ć B ]€€[   € €F@B †€B ]@  €       MenuGP 
   accConfig    CC    W    Ready    CH    it 
   HaveCharm    myHero 
   CastSpell    _W    RT 	   HaveRoot    ST 	   HaveStun    TA 
   HaveTaunt    SL 	   HaveSlow                          NW  TW   $   F @ G@Ŕ G€Ŕ [   @€GŔ@ G Á ]€€ [    €F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@B@ @€F@A G€Â †@A ‡ŔBP€€ O Â † @ ‡@@‡ C€€ € €F@C †€C ]@  €       MenuGP 	   ahConfig    aw    W    Ready    myHero    mana    maxMana       Y@	   MINMPTOW    health 
   maxHealth 	   MINHPTOW 
   CastSpell    _W                          VW  \W   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuGP 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         ^W  `W      † @ Ŕ € ť€ Ć@@ Ç€ŔÍŔŔŔ €€†@@ Ś A € FA@ GAÁ†A@ ‡AMť€ ›@    €Ŕ ź   €       GetDistance    myHero    range      Ŕb@   CalcDamage    totalDamage 
   addDamage                                  bW  eW   	!   ‹ €Á   A  A  Á  Á ¤@€Ç@A Ç€ÁÝ€€ Ű   @€ĆŔA Ě Â@€ †ÁA ŚAB‚B ť€‡ÁB‡ĆÁA ÇĂŤÁĆÁA ÇAĂŤÁÝ€ Ű@    €Á€ ß   €          4@     €F@     €Q@     ŔW@      ^@   Q    Ready    myHero    CalcDamage 
   GetSpellData    _Q    level    totalDamage 
   addDamage                                  gW  jW   	#   ‹ €Á   A  A  ¤@€ÇŔ@ Ç ÁÝ€€ Ű   @€Ć@A Ě€Á@€ †AA ŚÁAB ť€‡AB‡ĆAA ÇÂŤÁĆAA ÇÂBA ÂBĎ‚ĎĂŤÁÝ€ Ű@    €Á@ ß   €          I@     €Q@     €V@   R    Ready    myHero    CalcMagicDamage 
   GetSpellData    _R    level    ap 
   apPercent š™™™™™ą?                                 lW  †W   Ą   F @ †@@ ť € ]   '€‡ŔĆÁ@  €Ý A €€‚€LBA Ŕ€]‚€†‚A ‡ÂA‡BO‚‚†BB ‡‚BŹ‚‚…Ť‚†X@Ă "€Ć‚C  €Ý‚ Ű  Ŕ €ÇÂC ŰB    € €€ÇD ÇBÄÝ‚€ Ű  @€ÇD Ç‚ÄŔ‚@€Ć‚A ÇÂÁÇÂÄŰ   €ĆE CE @€ÝB€@€@ €Ç‚E ÇBÄÝ‚€ Ű  Ŕ
€Ç‚E Ç‚ÄŔ‚Ŕ	€Ć‚A ÇÂÁÇÂĹŰ  €€ĆF A CFFĂF@€‡E ‡GÇE ÇCÇ„E „DG„E G„Ç†DB ÁÄ   C€ „  Á… †A FF†FHÝX@Ă€
€   
€†E ĆCH „ČGÄČťC €€ÍBŔŔ€ÇD ÇBÄÝ‚€ Ű  €€Ç‚E ÇBÄÝ‚€ Ű  @€ÇD Ç‚ÄŔ‚@€Ć‚A ÇÂÁÇÂÄŰ   €Ć‚A ÇÂÁÇÂĹŰ  Ŕ€ĆE CE @€ÝB€ĆE CH @€ÝB€ĆI ĚBÄAC	 Ý‚€Ű  Ŕ€€@€A ĂAI   €ŔÉ€€E FI LĘÁC	 ]€€€C€b€  ă Ř € )      pairs    GetEnemyHeroes    health    GetDistance    QMDG    RMDG    MenuGP 	   ksConfig    ULTHITS    myHero    level       4@      I@    ValidTarget    recall    Q    Ready    range    QKS 
   CastSpell    _Q    R    RKS    GetPrediction2 	   spConfig    rConfig    RP    delay    width    speed    circle    RCH    _R    x    z    SSpells    summonerdot    IKS      Ŕ‚@   GetSlot                          W  ˘W   ˝   F @ G@Ŕ G€Ŕ [    	€LŔ@ ]@ F A †@A ť € ]  Ŕ€†A Ŕ€ť ›  €€‡ÁA ÇÂ‡ÁX@B@€†B ĆÁB ĂGBĂ‡‚ĂÝ ť  ĆÁC ÂA GÂBA ‡CŽBDÇBCÎ‚ÄĂ ÝA b€  ă@řF @ G@Ŕ G Ĺ [    €G@E G€Ĺ ]€€ [   Ŕ€FŔE † F ‡ CĆ F Ç@ĂF CGAE GAĆ†F Ć@ ÇAŔÇÁĆÇÇ@ B@ÂFBGF@ GBŔGÂĆG‚Çť ]@  F @ G@Ŕ GŔÇ [    €G H G€Ĺ ]€€ [   Ŕ€FŔE † F ‡ CĆ F Ç@ĂF CGH GAĆ†F Ć@ ÇAŔÇAČÇÇ@ B@BHBGF@ GBŔGBČG‚Çť ]@  F @ G@Ŕ G€Č [    €G H G€Ĺ ]€€ [   Ŕ€FŔH ‡ I ] @€[  Ŕ€†AI ÇÉÂI ť€ J@
€‡AJ €J€€†ÁJ ÇÉť ĆÁJ ÂJ FÂI ‚ FÂJ ‡‚É]‚ BÝ ĚËÝ ĎAËŤÁĆÁE CGBC‡‚CÁ‚ F F@ GCŔGĂËGÇ†@ ‡C@‡ĂK‡CGĆ@ ÇCŔÇĂËÇÇ ÝA  ĆB ÂB GC‡BCÇ‚C Ý  ÂC A B ÇĂÎ‚ĚCĂAĂ B b€  ăŔď € 3      MenuGP    drawConfig    DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID     WorldToScreen    D3DXVECTOR3    x    y    z 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    DrawCircle2    myHero    range    RGB    DQRC        @      @      @   DER    E    DERC    DEH    ipairs    beczki    GetDistance    Object 	   mousePos      ŕu@
   autoeflag    Vector    normalized      @…@      N@   DEHC    Cast Barel Here       .@      D@                         ¤W  µW   
5   A   †@@ ‡€@Á   a@€FA@ LÁŔŔ ]€‡Á›A  €	€‡AÁ›  Ŕ€ŚA  €ť€ĚÁA @€Ý€ĎÂBÂMÂ ‚Ŕ €‚B GÂÂ
Ă €BÂ€Ŕ €‚B GÂÂ
BĂ@€BÂŔŔ €‚B GÂÂ
‚Ă€€BÂMÂ@€ €‚B GÂÂ
ÂĂ` ô €          đ?   heroManager    iCount    GetHero    dead    visible    QMDG    RMDG       @   health    killstring 
   networkID    Harass Him!!!    Q Kill!    R Kill! 
   Q+R Kill!                          ·W  ËW   B   [   €€‡ Ŕ @@Ŕ€‡€@ Ç€@ Ő €ÍŔŔA 
A ‚FA GÁÁ]€ 
A‚GAB 
A„FA GÁÁ]€ MÁÂ†C ť€ ACN
A…K  
A‡Š [   @€‡ Ŕ ŚŔC ť€€›   Ŕ€†@D Ç€@ ť @€ÇC‚C 
Â@K JB ‚†‚A ‡ÂAť‚€ J‚‚‚‡BB J‚„†‚A ‡ÂAť‚€ ŤÂBĆC Ý‚€ ĐBĂŽÂJ‚…ĘA˘€  #Áů €       name    Barrel    beczki       đ?   Object 	   CastTime    os    clock 
   TimeTo1HP    tt1hp    EndT       N@   GetLatency      @ź@
   LinkedBarels    find    E_Link.troy    pairs                          ÍW  ăW   I   F @ ‡@@ ] @€[   €‡Ŕ‡Á@X A@€‡AÁĆA ÇÁÁÝ€ Ŕ€€†B ‡ABÇA@   ťA€B†ÁB ÇĂť@€Ç‚@ÇÂŔ Á@€ĆB ÇBÂC@ @€ÝB€N‚Â˘  #Âü€€‡Ŕ‡Á@€‚€€‡AĂÇC ĎÁ‡ŤÁĆA ÇÁÁÝ€ ŽÁĆD ÇAÄD ‚DG‚C PBM‚Â‚ A‚ Ý€‚ŔÂ@ŔŔ €‚C ŽJ‰  €J‰b€  ăŔî €       ipairs    beczki    Object    health            EndT    os    clock    table    remove       đ?   pairs 
   LinkedBarels 	   CastTime    tt1hp        @   math    max    ceil 
   TimeTo1HP                          ĺW  éW   
   [   @€Ç Ŕ Ű   €€›    €Ç@@€Ŕ@ €ĆŔ@ Ý@€  €       isMe    name    GangplankQWrapper    ResetAA                          ëW  ďW      [   Ŕ€@    €Ű   €€AŔ@Á  €    €
 Á €       myHero    name    find    recall                          ńW  őW      [   Ŕ€Ć @ Ŕ€  €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       myHero    name    find    recall                           ÷W  X   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuGP    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          X  BX   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    !X  !X           @ @  €       AfterAA                         $X  $X           @ @  €    	   BeforeAA                         +X  +X           @ @  €       AfterAA                         .X  .X           @ @  €    	   BeforeAA                         4X  4X        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    4X  4X           @ @  €       AfterAA                                               7X  7X           @ @  €    	   BeforeAA                         <X  <X           @ @  €       AfterAA                         ?X  ?X           @ @  €    	   BeforeAA                              	
                DX  ĄX   Ě  
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚K€  J@Ä‚Ą@  J€€‡
@ KŔ  JŔÄ‚J ĹĄ€  J€€‡
@ ‰K€  J€Ĺ‚ĄŔ  J€€‡
@€ŠC   
@FŚ
@€‹FŔF † G Ç A ÇŔÁAG FG ]€€
@ ŤFŔF † H Ç A ÇŔÁAG FG ]€€
@€ŹFŔ@ †€H Ç A ÇŔÁÁH C  ]€€
@€FŔ@ †€H Ç€D ÇŔÁÁH C  ]€€
@ ’
@Ŕ’K   
@ “K  † J Ć@J J FÁJ d@ 
@€“K    Á   AA d@ 
@ –K€ ‹Ŕ  Š Ě—Š@ĹŠŔL™J€ —‹Ŕ  Š@Í—Š ÄŠŔL™J€ š‹Ŕ  Š@Í—Š@ĹŠŔL™J€ ›‹Ŕ  Š Î—Š ÁŠŔL™J€€›‹Ŕ  Š Î—Š@ĹŠŔL™J€€ś‹Ŕ  ŠŔÎ—Š ÁŠŔL™J€ ť‹Ŕ  Š@Ď—Š ÄŠŔL™J€ ž‹Ŕ  ŠŔĎ—Š ÁŠŔL™J€ ź‹Ŕ  ŠŔĎ—Š@ĹŠŔL™J€  ‹Ŕ  Š€Đ—Š€ÄŠŔL™J€€ ‹Ŕ  Š Ń—Š€ÄŠŔL™J€€ˇ‹Ŕ  Š Ń—Š@ĹŠŔL™J€€˘‹Ŕ  ŠŔŃ—Š ÄŠŔL™J€ Ł‹Ŕ  Š@Ň—Š ÄŠŔL™J€ ¤‹Ŕ  Š@Ň—Š@ĹŠŔL™J€ Ą‹Ŕ  Š Ó—Š@ĹŠŔL™J€€Ą‹Ŕ  Š€Ó—Š ÁŠŔL™J€€¦‹Ŕ  Š€Ó—Š@ĹŠŔL™J€€§‹Ŕ  Š@Ô—Š@ĹŠŔL™J€ ¨‹Ŕ  ŠŔÔ—Š€ÄŠŔL™J€ ©‹Ŕ  Š@Ő—Š€ÄŠŔL™J€ Ş‹Ŕ  ŠŔŐ—Š@ĹŠŔL™J€ «‹Ŕ  Š@Ö—Š ÄŠŔL™J€ ¬‹Ŕ  ŠŔÖ—Š ÄŠŔL™J€ ­‹Ŕ  Š@×—Š@ĹŠŔL™J€ ®‹Ŕ  ŠŔ×—Š@ĹŠŔL™J€ Ż‹Ŕ  Š@Ř—Š€ÄŠŔL™J€ °‹Ŕ  ŠŔŘ—Š€ÄŠŔL™J€ ±‹Ŕ  Š@Ů—Š ÄŠŔL™J€ ˛‹Ŕ  ŠŔŮ—Š ÁŠŔL™J€ ł‹Ŕ  ŠŔŮ—Š€ÄŠŔL™J€ ´‹Ŕ  ŠŔŮ—Š@ĹŠŔL™J€€´‹Ŕ  ŠŔÚ—Š€ÄŠŔL™J€ µ‹Ŕ  Š@Ű—Š ÁŠŔL™J€ ¶‹Ŕ  Š@Ű—Š@ĹŠŔL™J€ ·‹Ŕ  Š Ü—Š ÁŠŔL™J€€·‹Ŕ  Š€Ü—Š@ĹŠŔL™J€€¸‹Ŕ  Š Ý—Š@ĹŠŔL™J€€ą‹Ŕ  Š€Ý—Š€ÄŠŔL™J€€ş‹Ŕ  Š Ţ—Š@ĹŠŔL™J€€»‹Ŕ  Š Ţ—Š@ĹŠŔL™J€€Ľ‹Ŕ  ŠŔŢ—Š@ĹŠŔL™J€ ˝‹Ŕ  Š@ß—Š€ÄŠŔL™J€ ľ‹Ŕ  Š@ß—Š@ĹŠŔL™J€ ż‹Ŕ  Š ŕ—Š@ĹŠŔL™J€€ż‹Ŕ  Š€ŕ—Š ÁŠŔL™J€€Ŕ‹Ŕ  Š€ŕ—Š@ĹŠŔL™J€€Á‹Ŕ  Š@á—Š€ÄŠŔL™J€ Â‹Ŕ  ŠŔá—Š ÁŠŔL™J€ Ă‹Ŕ  ŠŔá—Š ÄŠŔL™J€ Ä‹Ŕ  Š€â—Š ÄŠŔb™J€€Ä‹Ŕ  Š@ă—Š@ĹŠŔL™J€ Ć‹Ŕ  ŠŔă—Š@ĹŠŔL™J€ Ç‹Ŕ  Š@ä—Š@ĹŠŔL™J€ Č‹Ŕ  ŠŔä—Š@ĹŠŔL™J€ É‹Ŕ  Š@ĺ—Š ÁŠŔb™J€ Ę‹Ŕ  Š@ĺ—Š ÄŠŔb™J€ Ë‹Ŕ  Š ć—Š ÄŠŔb™J€€Ë‹Ŕ  Š€ć—Š€ÄŠŔb™J€€Ě‹Ŕ  Š ç—Š@ĹŠŔb™J€€Í‹Ŕ  Š€ç—Š€ÄŠŔb™J€€Î‹Ŕ  Š č—Š@ĹŠŔb™J€€Ď‹Ŕ  Š€č—Š@ĹŠŔb™J€€Đ‹Ŕ  Š é—Š ÁŠŔb™J€€Ń‹Ŕ  Š é—Š ÄŠŔb™J€€Ň‹Ŕ  ŠŔé—Š@ĹŠŔb™J€ Ó‹Ŕ  Š@ę—Š ÁŠŔb™J€ Ô‹Ŕ  Š@ę—Š@ĹŠŔb™J€ Ô‹Ŕ  ŠŔę—Š€ÄŠŔb™J€ Ő‹Ŕ  Š@ë—Š@ĹŠŔb™J€ Ö‹Ŕ  ŠŔë—Š€ÄŠŔb™J€ ×‹Ŕ  Š@ě—Š ÄŠŔb™J€ Ř‹Ŕ  ŠŔě—Š ÄŠŔb™J€ Ů‹Ŕ  Š@í—Š@ĹŠŔb™J€ Ú
@€–FŔm ]€€ 
@ Ű
@nÜK   
@ Ý
 ďÝ € ˝      SelectedTarget     Cel    TargetSelector    Q    name 	   Undertow    range      @Ź@   speed       ™@   delay       Đ?   width       N@   Ready    W    Vicious Strikes    E    Reckless Swing      Pt@   R 	   Ragnarok    pickaxe    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    axe    killstring    Spells    _Q    _W    _E    _R    Spells2 	   ccspells    GalioIdolOfDurand 	   charName    Galio 
   spellSlot 
   SpellType 
   skillshot 	   GnarBigW    Gnar 	   GnarBigR    NamiQ    Nami    NamiR    LuxLightBinding    Lux    RenektonPreExecute 	   Renekton    LeonaShieldOfDaybreak    Leona    LeonaSolarFlare    RengarE    Rengar    LeblancSoulShackle    Leblanc    LeblancSoulShackleM    RivenMartyr    Riven    LissandraW 
   Lissandra    LissandraR    UFSlash 	   Malphite    DarkBindingMissile    Morgana 
   SoulShackles    VarusR    Varus    VeigarEventHorizon    Veigar    VelkozE    Velkoz    BraumR    Braum    ViktorGravitonField    Viktor 
   JackInTheBox    Shaco    SejuaniGlacialPrisonStart    Sejuani    SonaCrescendo    Sona    InfuseWrapper    Soraka    ShenShadowDash    Shen    SwainShadowGrasp    Swain    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    AhriSeduce    Ahri    BandageToss    Amumu    CurseoftheSadMummy    FlashFrost    Anivia    EnchantedCrystalArrow    Ashe    YasuoRKnockUpComboW    Yasuo    EliseHumanE    Elise    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave    OrianaDetonateCommand    Orianna    ZyraGraspingRoots    Zyra    ZyraBrambleZone    ZacR    Zac    HowlingGale    Janna    ReapTheWhirlwind    XerathMageSpear    Xerath    Rupture    Chogath    FeralScream    KarmaSpiritBind    Karma    castcel    CassiopeiaPetrifyingGaze    Cassiopeia    KennenShurikenStorm     Kennen    FizzMarinerDoom    Fizz    HecarimUlt    Hecarim    Terrify 
   FiddleSticks    Drain    Pantheon_LeapBash 	   Pantheon    Dazzle    Taric    zedult    Zed    IreliaEquilibriumStrike    Irelia    InfiniteDuress    Warwick    UrgotSwap2    Urgot 
   Pulverize    Alistar 	   Headbutt    SkarnerImpale    Skarner    CrypticGaze    Sion 
   VayneCondemm    Vayne    ViR    Vi    PuncturingTaunt    Rammus    LuluW    Lulu    MaokaiUnstableGrowth    Maokai    AlZaharNetherGrasp 	   Malzahar    it 
   ItemsCast 	   BlobTime       @   Blobs 
   CurrentBlobs            HX  HX        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          IX  IX        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          JX  JX        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          KX  KX        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               §X  óX   {  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á@ A GH GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á 	 A GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ GŔĆ LŔÁ ÁŔ
  FH   ]@ F@K † @ Á  € C    Ă  ]@€F @ L Á Á€ Á ]@ F @ GŔË LŔÁ Á  A FB  Ë Â A
 äA ]@€F @ GŔË LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ GŔË LŔÁ Á@
 
 FÁM   ĆN ÇAÎ‚ Ý ]@  F @ GŔË LŔÁ ÁŔ  FAO  ÁÁ  AÂ ]@€F @ L Á Á@  ]@ GŔP L Ń Ć @ Ç€Đ]@€F @ L Á Á@  ]@ F @ G€Ń LŔÁ ÁŔ  FH € ]@ F @ G€Ń LŔÁ Á@ A GG GÁĹÁ FH € ]@ F @ G€Ń LŔÁ Á€ A GAI GÁĹ	 FH   ]@ F @ L Á ÁŔ  ]@ F @ G Ó LŔÁ Á@ A GG GÁĹÁ FB  Ë€Â A B äA€]@€F @ G Ó LŔÁ Á€ A GH GÁĹÁ FH € ]@ F @ G Ó LŔÁ ÁŔ A GAI GÁĹ	 FB  Ë€Â A B äA€]@€F @ G Ó LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ G Ó LŔÁ Á  A FAO  ÁÁ  AÂ ]@€F @ L Á ÁŔ  ]@ F @ G Ö LŔÁ Á@ A GG GÁĹÁ FH € ]@ F @ G Ö LŔÁ Á€ A GH GÁĹÁ FH € ]@ F @ G Ö LŔÁ ÁŔ A GAI GÁĹ	 FH € ]@ F @ G Ö LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ G Ö LŔÁ Á  A FAO  ÁÁ  AÂ ]@€F @ L Á Á€ Á ]@ F @ GŔ× L Á Á  A ]@ FŔX ]€€ @ ±F Y †€X ]  	€†Y ÇAY ť€€Ç‚Y ĂŮ€ €ĂEÇŰ  €€Ć@ ÇÂ×ÇBŘĚÂÁFZ ŚĂŮ  ť€‡ĂE] C ĆZ „ÚÝ Ä FZ ‡[ ‡D	]„ –CĆH € ÝB ˘  #‚÷b€  ă öF @ GŔ× LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ü L Á Á@  ]@ F @ G Ü G€Ü LŔÁ ÁŔ  FH € ]@ F @ G Ü G€Ü LŔÁ Á@  FH € ]@ F @ G Ü G€Ü LŔÁ ÁŔ  FA^ ‹ Á ‚ AÂ Â ¤A ]@ F @ G Ü LŔÁ Á  A FH € ]@ F @ G Ü LŔÁ Á€ Á FB  Ë   AB  äA ]@€F @ G Ü LŔÁ Á€  Á  FH € ]@ F @ G Ü LŔÁ Á ! A! FAO ! Á Â! AÂ ]@€F @ G Ü LŔÁ Á " A" FAO " Á Â! AÂ ]@€F @ G Ü LŔÁ ÁŔ" # FAO A# Á ‚# AÂ ]@€F @ L Á ÁŔ# $ ]@ F @ G ä LŔÁ Á@$ $ FH € ]@ F @ G ä LŔÁ ÁŔ$ % FH   ]@ F @ G ä LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ G ä LŔÁ Á@% % FH € ]@ F @ G ä LŔÁ ÁŔ% & FA^ ‹ ÁÁ Â AB& Â ¤A ]@ F @ G ä LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ G ä LŔÁ Á€& Á& FH € ]@ F @ G ä LŔÁ Á ' A' FA^ ‹ ÁÁ Â AÂ Â ¤A ]@ F @ G ä LŔÁ ÁŔ	 
 FAJ 
 ]@ F @ G ä LŔÁ Á€' Á' FH € ]@ F @ G ä LŔÁ Á ( A( FA^ ‹ ÁÁ Â AÂ Â ¤A ]@ F @ L Á Á€( Á( ]@ F @ GŔč LŔÁ Á ) A) FH   ]@ F @ GŔË L€é Á@
 ]@€F @ GŔ× L€é Á@ ]@€ € §   	   MenuOlaf 
   scriptConfig    MasterSeries: Olaf    Olaf1    addSubMenu    [Olaf]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@   DAMAGE_PHYSICAL    name    Olaf    addTS    [Olaf]: Combo Settings    comboConfig    USEQ    Use     Q    (Q)    SCRIPT_PARAM_ONOFF    USEW    W    (W)    USEE    E    (E)    qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        ST    Focus Selected Target 
   AddSpellMenu    [Olaf]: Harras Settings 
   harrasConfig    HM    Harrass Mode:        @   |Q|    |E| 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    manah    Min. MP% To Harass    SCRIPT_PARAM_SLICE       N@              Y@   [Olaf]: Items Settings 
   iteConfig    it    LoadToMenu    [Olaf]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    EKS    [Olaf]: LaneClear Settings    farm    QF       @   No 	   Last Hit    Clear    WF    EF    manaf    Min. Mana To Farm       D@   [Olaf]: Jungle Farm Settings    jf    QJF    WJF    EJF    manajf    Min. Mana To Jungle Farm    [Olaf]: Extra Settings 	   exConfig 
   CC Spells    ES    Enemies    GetEnemyHeroes    pairs    Spells 	   ccspells 
   GetSpellData 	   tostring    Block  	   charName     Spell     Spells2    AUCC    Anty CC With (R)    [Olaf]: Axe's Settings 	   blConfig    Draws 
   bldConfig    dr    Draw Radius    drb    Draw Circle On Axe    DSRC    Color    SCRIPT_PARAM_COLOR      `c@     ŕo@   cb    Enable Collect Axe    cbm 
   Collect Mode    Mouse In Radius    MyHero In Radius    cbt    Dont Collect Under Turret    cbcr 
   Combo Radius      Ŕb@     Ŕ‚@   cbhr    Harass Radius      @o@   cblr    LaneClear Radius       y@      ‰@   [Olaf]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DAAR    Draw AA Range    DAARC    Draw AA Range Color       i@   DQR 
   Draw Q Range    DQRC    Draw Q Range Color    DER 
   Draw E Range    DERC    Draw E Range Color    [Olaf]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          őX  Y   3   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ †F D ]€€ [@  Ŕ€F@D ]€€ [@  Ŕ €F€D ]€€ [   @ €LŔD ]@  €       CheckOB 	   MenuOlaf    QTargetSelector    update    ETargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    ECel    GetCustomTarget    TargetSelector    target    ComboActive 
   HarassActive    FarmActive    CheckCatch                          Y  Y   :   F @ ]€€ [    
€G@@ [@  @€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F€@ ‡ B ]€ [   Ŕ€F€A G@Â G€Â [   € €LŔB Ç B ]@€F€@ ‡Ŕ@ ]€ [   Ŕ€F€A G@Â G Ă [   € €L@C ÇŔ@ ]@€F€@ ‡€C ]€ [   Ŕ€F€A G@Â GŔĂ [   € €L D Ç€C ]@€ €       ComboActive    recall    ValidTarget    Cel    it 
   CastItems 	   MenuOlaf 
   iteConfig    QCel    comboConfig    USEQ    CastQ    USEW    CastW    ECel    USEE    CastE                          Y  !Y   2   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ	€G A [@   	€F@A ‡€A ]€ [   €€F @ G@Ŕ GŔÁ  Â @€F@B G€Â †@B ‡ŔBP€€ O Ă † @ ‡@@‡@C@ € €L€C Ç€A ]@€F@A ‡ŔC ]€ [   Ŕ€F @ G@Ŕ GŔÁ  Ä € €L@D ÇŔC ]@€ €    	   MenuOlaf 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    ValidTarget    QCel    HM       đ?   myHero    mana    maxMana       Y@   manah    CastQ    ECel        @   CastE                          #Y  EY      F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇĂ€Ŕ€†B ‡ÁB‡AC€C €†ÁC ÇD ÇAÄD ‚DG‚@ GBÁťÁ XŔD€€ŔŠ €BE F‚E ‡ÂEÇFB †B ‡ÁB‡AF›  € €ŚF  €ťA€†B ‡ÁB‡ÁF€C€ €ŚG  €ťA€†B ‡ÁB‡AC E€€†AG Ŕ€D BDť€›  Ŕ€†G ŚÁG €FH ]‚€ PBČť ĆH  @€†‚A Á‚ Ý€Ŕ €BE F‚E ‡ÂĹÇĆB †B ‡ÁB‡ÁF E €†AG Ŕ€ÂH BDť€›  @€†G ŚÁG €FH ]‚€ PBČť ĆH Â @€†‚A Á‚ Ý€Ŕ€ €G €€B€b€  ă€ă € $      FarmActive    recall 
   EnemyMinions    update    pairs    objects    myHero    mana    maxMana       Y@	   MenuOlaf    farm    manaf    QF       @   GetBestLineFarmPosition    Q    range    width         @
   CastSpell    _Q    x    z    WF    CastW    EF    CastE    ValidTarget    VP    GetPredictedHealth    GetLatency      @Ź@   getDmg    E                          GY  [Y   A   F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇĂ€Ŕ€†B ‡ÁB‡AC›  €€†C ÇÁC ÇÄÂC BDG‚@ GBÁťÁ X€D €ÂD FE ‡BEÇ‚EB †B ‡ÁB‡ÁE›  € €ŚF  €ťA€†B ‡ÁB‡AF›  € €ŚF  €ťA€b€  ă€ó €       FarmActive    recall    JungleMinions    update    pairs    objects    myHero    mana    maxMana       Y@	   MenuOlaf    jf    manajf    QJF    GetBestLineFarmPosition    Q    range    width  
   CastSpell    _Q    x    z    WJF    CastW    EJF    CastE                          ]Y  hY   /   F @ ]€€ [@   €F @ ]€€ [@   €G@@ [   @€F€@ †Ŕ@ Ç@@ ]€€ Á Ŕ€
€Á‚FŔ@ LŔÁ Ç@@ Ç ÂA@ AB]@ G@@ [   Ŕ€G€B GŔÂ ]€€ [@  €€F€@ †Ŕ@ Ç@@ ]€€@ ‚  €
 Ă‚G€B GŔÂ ]€€ [     €
 Ă‚ € 
      FarmActive    axe    GetDistance    myHero      Đv@   pickaxe    MoveTo    x    z    Q    Ready                           jY  uY   E   [   Ŕ€‡ Ŕ ›    €‡ Ŕ Ś@@  ť€€›   €
€†Ŕ@ Ć A  € ť€€Ç@A A AĎ AA FA GÁAĎ Ŕ Ŕ€‡ŔA ÇŔA Ő €Í ÂÁ  K  JÁB…JA †
A„FC GÁĂ]€ †D ť€ ADN
A†FC GÁĂ]€ ‡AA M†D ť€ ADN
A‰Š [   Ŕ€‡ Ŕ ›    €‡ Ŕ Ś@@Á ť€€›   € €‡ E Ť B
€ Š €       name    find "   olaf_axe_totem_team_id_green.troy    GetDistanceSqr    myHero 	   BlobTime    ms    Blobs       đ?   Object    valid    obj 	   CastTime    os    clock    GetLatency      @ź@   EndTime 	   olaf_axe 
   CurrentBlobs                          wY  ~Y      [   @€‡ Ŕ ›   €€‡ Ŕ Ś@@  ť€€›    €ŚŔ@  € ť@€‡ A €€‚€ €‡ A Ž€A
€ ‚ €       name    find     olaf_axe_refresh_indicator.troy 
   RemoveAxe 
   CurrentBlobs               đ?                        Y  ‡Y      † @ Ç@@ ť  €Ç@ÇÁŔAX@ÁŔ€F‚A €€Ŕ€ ]‚€ŔÁ@€FB GBÂ‡B@ Ŕ€]B€@ €˘€  #ű € 
      pairs    Blobs    Object    obj 	   CastTime     GetDistanceSqr       Ś@   table    remove                          Y  ŽY      F @ G@Ŕ G€Ŕ ŔŔ  €F A †@A ^  _   Ŕ €F A †€A ^  _    €    	   MenuOlaf 	   blConfig    cbm       đ?   Vector 	   mousePos    myHero                          ŹY  ™Y      F @ ]€€ [    €F@@ G€Ŕ GŔŔ _  Ŕ€F A ]€€ [    €F@@ G€Ŕ G@Á _  €€F€A ]€€ [    €F@@ G€Ŕ GŔÁ _  @ €A  _   € 	      ComboActive 	   MenuOlaf 	   blConfig    cbcr 
   HarassActive    cbhr    FarmActive    cblr      @o@                         šY  ¨Y   4   † @ Ś@@@ ť€€Ŕ@X Á @
€Ç@Á Ű   €	€Ć€A ÇŔÁÇ ÂŰ   @€Ć@B Ý€€ X Á@€Ć€B AB € Ý  €€X Á €BÁ  @€ÂB @€ €€‚€GĂM‚€‡ĂŤ‚ O‚‚@€€BĂF‚@ GBĂX@@ €€  â€  cůĂ   ß   €       VP 
   GetHitBox    myHero        @    valid 	   MenuOlaf 	   blConfig    cbt    GetTurrets    pairs    GetDistanceSqr    range    team                          ©Y  ®Y      [   €€† @ Ě@@ Ý€  € ť€€Ě€@ Ý€ Ŕ @ € € ź     ź   €       GetDistance 
   GetSource 
   GetRadius                          ŻY  ˛Y         X@Ŕ €€Ç€Ŕ Ű   @€ĆŔ@ A AA@€ Ý€€ Y   €Ă@  Ă € ß   €          ^@    valid    GetDistanceSqr    myHero    pos                          łY  ËY      Ă   X Ŕ €€A@ @€ FÁ@ ]€ PÁ
A GAA @Ŕ€A €€ €  €€ÁA €€ €A  @€AA FA@ GŔ]€ †Á@ ť€ AMN€AA †AB Ŕ€ ť ĆAB BB F‚B ‚ FBB €€ ]‚ BÝ ĚÁÂÝ C BC@€†‚C Ć‚B  € ť€‚  Ď‚ŤÁĆAB  € Ý BB FBB †ÂC ]‚ †BB Ŕ€ ť‚ N‚‚‚ ÂB‚ FC GBĂ€€Ć‚C ĂC @€ Ý€]‚  BÍ‚  FD GBÄG‚ÄŔÄ@ €    € €F‚C †‚B Ŕ ]‚€†‚B ‡EP‚‚NB†Â@ ť‚€ AM‚‚†‚C Ć‚B   ť‚€ŤBEĆ‚B ÇĹĎĎÂÄ€‚@ €Ă     €Ă € A@ @€   ‹€ €ÁE €€ A€ß   €        os    clock    GetLatency      @ź@	   BlobTime 	   InRadius 	   InTurret       ^@   Vector    myHero    normalized    math    min    GetDistance 	   mousePos 	   MenuOlaf 	   blConfig    cbm       đ?   ms       I@ÍĚĚĚĚĚ@
   RemoveAxe                          ĚY  âY   
4   F @ ‡@@ ] €	€[  €€†@ ‡Á@‡A›  @€‡AÁ‡AÇÁÁB € Ŕ€‚ ›  @€  Ŕ€LBB Ŕ ]‚€[B  Ŕ€F‚B ]B€ FÂB LĂÇBCC]B Ŕ€FÂC ]B€  €FÂC ]B€ @ €†ÁC ťA€ b€  ă€őG@@ U €  Ä @ €FŔC ]@€  €       pairs    Blobs 	   MenuOlaf 	   blConfig    cb    Object    obj 	   CastTime 	   CheckAxe    InAxeRadius    DisableMove    myHero    MoveTo    x    z    EnableMove                                  äY  ęY   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuOlaf 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         ěY  
Z   '  F @ †@@ ť € ]  €G€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA ĚÁÁ@€†‚A ŚBC ť‚€‡‚BŹ‚‚…ŤCĆ‚A ÇBĂŤÂÝ ‚A ÂA€€Ć‚A ĚÂA Ý‚€Ç‚ÂĎÂ‚…ÍĂA ĂCÍ‚ F‚A G‚ÂOB‚MB‰†ÂD Ŕ€ ť‚€›  @<€X@ĹŔ;€‡‚E ›B   ;€†ÂE ŚFC ť‚€Ŕ@€Ć‚F ÇÂĆÇÇŰ   €ĆBG  €Ý‚ G ĂGH  €Ç‚G ÇĆÝ‚€ Ű  Ŕ €ĚBH @€ÝB€ 4€  €Ć‚F ÇÂĆÇ‚ČŰ  Ŕ€ĆBG  €Ý‚ ĂH ĂG  €ÇÂH ÇĆÝ‚€ Ű  Ŕ €ĚI @€ÝB€@.€@Ŕ€Ć‚F ÇÂĆÇBÉŰ  €€ĆBG  €Ý‚ €É@€›  Ŕ€ĆÂI ĂE JC €@€ÝB€Ŕ(€Í‚Ŕ@€Ć‚F ÇÂĆÇÇŰ   €Ć‚F ÇÂĆÇ‚ČŰ  Ŕ€ĆBG  €Ý‚ ĂH ĂG  €Ç‚G ÇĆÝ‚€ Ű  Ŕ€ÇÂH ÇĆÝ‚€ Ű  €€ĚI @€ÝB€ĚBH @€ÝB€€€ÍB‚Ŕ€€Ć‚F ÇÂĆÇÇŰ  @€Ć‚F ÇÂĆÇBÉŰ   €ĆBG  €Ý‚ ĂH ĂG @€Ç‚G ÇĆÝ‚€ Ű   €›  €€ĚBH @€ÝB€ĆÂI ĂE JC €@€ÝB€ €ÍBŔ€€Ć‚F ÇÂĆÇ‚ČŰ  @€Ć‚F ÇÂĆÇBÉŰ   €ĆBG  €Ý‚ ĂH ĂG @€ÇÂH ÇĆÝ‚€ Ű   €›  €€ĚI @€ÝB€ĆÂI ĂE JC €@€ÝB€€€Í‚ÍB‚Ŕ€€Ć‚F ÇÂĆÇÇŰ  @
€Ć‚F ÇÂĆÇ‚ČŰ   	€Ć‚F ÇÂĆÇBÉŰ  Ŕ€ĆBG  €Ý‚ ĂH ĂG  €Ç‚G ÇĆÝ‚€ Ű  Ŕ€ÇÂH ÇĆÝ‚€ Ű  €€›   €ĚBH @€ÝB€ĚI @€ÝB€ĆÂI ĂE JC €@€ÝB€b€  ă€· € )      pairs    GetEnemyHeroes    health    math    floor    shield    myHero    CalcDamage 
   GetSpellData            level      €F@      9@
   addDamage        @   totalDamage š™™™™™Ů?      4@      I@   ValidTarget      P”@    recall    SSpells    Ready    summonerdot 	   MenuOlaf 	   ksConfig    QKS    GetDistance    Q    range       >@   CastQ    EKS    E    CastE    IKS      Ŕ‚@
   CastSpell    GetSlot                          Z  Z   c   ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € @ Á@ť€€›   @€† A Ś@A € G@ GÁ‡@ ‡ÁAÇ@ ÇÂBB ť ›   €€Ű    €FB € ] ‡@ ‡Á@€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ ‚AG@ GÂÁ‡@ ‡Â@Ç@ ÇÂCB A   Ă€   A  †D ‡DD	‡„D	‡DE	]X€Ĺ@ €›A    € € ÂE @€‚ FÂE †BB ]‚ BF‚ BFÇBĂĂFÍŔŤÇBÇĂĆÍŔŽÇ‚ĂĂFÍŔŹĆÂB C FF †G ÝB  €       Q    Ready    ValidTarget    range    VP 
   IsDashing    delay    width    speed    myHero    GetDistance 
   CastSpell    _Q    x    z    GetPrediction2 	   MenuOlaf 	   spConfig    qConfig    QP    line    QCH     Vector    normalized    unpack    posX      Ŕb@   posY    y    posZ                          Z  !Z      ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € Á@ A
AAť€€›   € €†€A ĆŔA ť@  €       W    Ready    ValidTarget    myHero    range       ^@
   CastSpell    _W                          #Z  'Z      ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € @ Á@ť€€›   Ŕ €† A Ć@A  € ť@€ €       E    Ready    ValidTarget    range 
   CastSpell    _E                          )Z  _Z   ä  F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €F B †€H ‡@BĆ€H Ç€ÂH ÁBFH GÁČ†I ŚAI‚H ť€M†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGÁI GÁČ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J G Ę ]€€ [   Ŕ€F B †€H ‡@BĆ€H Ç€ÂH ÁBGJ GÁČ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@  F @ G Ë G@Ë G€Ë [    >€F @ G Ë GŔË ŔĂ €€F L ]€€ [    €F B †€H ‡@BĆ€H Ç€ÂH ÁBF@ GËGAĚ†AC Ć@ ÇËÇAËÇĚÇÁĂ@ KBK‚LDF@ GËGBËG‚ĚGBÄť ]@  €4€FŔL ]€€ [    €F B †€H ‡@BĆ€H Ç€ÂH ÁBF@ GËGÍ†AC Ć@ ÇËÇAËÇĚÇÁĂ@ KBK‚LDF@ GËGBËG‚ĚGBÄť ]@  @,€F@M ]€€ [   @+€F B †€H ‡@BĆ€H Ç€ÂH ÁBF@ GËGÍ†AC Ć@ ÇËÇAËÇĚÇÁĂ@ KBK‚LDF@ GËGBËG‚ĚGBÄť ]@   $€FŔD ‡ŔM ] €"€X€Á "€†L ť€ ›  @
€†N ÇAÎÇÎÂN ť€Ć@ ÇËÇAĚŔŔ€†B ÇAÎÇÎÇAÂBÎ‚N‚BGBÎG‚ÎGÂÂ†@ ‡K‡BLĆBC @ KCKLĂCF@ GËGCËGĚGÄ†@ ‡K‡CK‡L‡CDÝ ťA  €€†ÁL ť€ ›  @
€†N ÇAÎÇÎÂN ť€Ć@ ÇËÇÍŔŔ€†B ÇAÎÇÎÇAÂBÎ‚N‚BGBÎG‚ÎGÂÂ†@ ‡K‡MĆBC @ KCKLĂCF@ GËGCËGĚGÄ†@ ‡K‡CK‡L‡CDÝ ťA   €†AM ť€ ›   
€†N ÇAÎÇÎÂN ť€Ć@ ÇËÇÍŔ€€†B ÇAÎÇÎÇAÂBÎ‚N‚BGBÎG‚ÎGÂÂ†@ ‡K‡‚MĆBC @ KCKLĂCF@ GËGCËGĚGÄ†@ ‡K‡CK‡L‡CDÝ ťA  b€  ă€ÜF @ G Ë G@Ë G Ď [    	€FŔD ‡ŔM ] €€X€Á €†B ÇAÎÇÎÇAÂBÎ‚N‚BGBÎG‚ÎGÂÂB ĆBC @ KCKLĂCF@ GËGCËGĚGÄ†@ ‡K‡CK‡L‡CDÝ ťA  b€  ă€÷ € >   	   MenuOlaf    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DAAR    myHero    range    VP 
   GetHitBox    DQR    Q    Ready    DER    E    DERC 	   blConfig 
   bldConfig    dr    cbm    ComboActive    cbcr    DSRC 
   HarassActive    cbhr    FarmActive    cblr    Blobs    GetDistance    Object    obj 	   mousePos    drb       ^@                         aZ  zZ   
š   F @ †@@ ť € ]  @$€‡Ŕ›A  €#€‡ÁŔ›  Ŕ"€†A Ŕ€ť @A€!€†A ŚÁA €F‚A LÂÁB ]‚€G‚ÂOB‚…MĂ†‚A ‡BCM‚‚ť ĆA ĚÁÁ@€†‚A ŚB ť‚€‡‚BŹ‚‚…ŤCĆ‚A ÇÂĂĎÂŤÂÝ ‚A ‚B‚
‰GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŤÂŤ@Ŕ €GÂE ‡ĆJBFŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚€Ŕ €GÂE ‡ĆJ‚FŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŔŔ €GÂE ‡ĆJÂFŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ ‚Ŕ €GÂE ‡ĆJGŔ€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŤÂ€‚Ŕ €GÂE ‡ĆJBG€	€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚Ť€‚Ŕ €GÂE ‡ĆJ‚G@€GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚Ť‚€‚Ŕ €GÂE ‡ĆJÂG €GÂÄ†E ‡BEÇ‚Ĺť‚ M‚‚ŤÂŤ€‚€ €GÂE ‡ĆJHb€  ăŔÚ € !      pairs    GetEnemyHeroes    dead    visible    GetDistance      p§@   myHero    CalcDamage 
   GetSpellData            level      €F@      9@
   addDamage        @   totalDamage š™™™™™Ů?      4@      I@   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill! 
   IGNITE Kill! 
   Q+E Kill!    Q+IGNITE Kill!    E+IGNITE Kill!    Q+E+IGNITE Kill!                          |Z  €Z      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ‚Z  †Z      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          Z  ®Z   ĺ   Ć @ Ç@ŔÇ€ŔŰ   €7€[    7€ÇŔŔ A Á@X Ŕ5€Ć A Ç@ÁŰ@  Ŕ4€Ç€Á A A €3€›    3€Á€  €Â„ „Ŕ€Ç€Á A A @
€Ć@C  € GCÝŔ€ †Ŕ€…Ć C XŔĂ@€Ć C X Ä€ €Ć C @Ä  € € ĆŔB X€Ä €ĆŔB XŔÄ@€ĆŔB X Ĺ€ €ĆŔB @Ĺ@€Ç€E CÇ Ű    €ĆŔE Ć Ç ÁB Ç Ç€ÁŔ€ĆŔE Ć Ç ÁB Ç Ç ÂŔ „ĆŔE Ć Ç ÁB Ç Ç@ÂŔ€„Ć A AĆŔFŤFÁA €ÂŔ€GG[  €€GGGAÇ‡AÇX€  €CA  C€ @Ť €FÁA €Ç@€FÁG €€ ÇHB FBB €€Ŕ ]€@ŤŔ€FÁA @Č@€FH €€ ÇHB FBB €€Ŕ ]€@Ť€€FÁA ŔČ@€FI €€ ÇHB FBB €€Ŕ ]€@Ť@€FÁA ŔĂ@€FAI €€ ÇHB FBB €€Ŕ ]€@Ť 
€FÁA  Ä@€FI €€ ÇHB FBB €€Ŕ ]€@ŤŔ	€FÁA @Ä €FÁG €€ ÇHB FBB €€Ŕ ]€[A   €FÁG €€ ĆÁI  € Ý ĎAČHÎ‚B FBB †J Ŕ ]€@ŤŔ€FÁA @Ę €FAI ‡HŔ€ B FBB €€Ŕ ]€@ŤFF [  €€GAE GĘ]€ [  @€F@ GAŔGÁĘ‡CG[  € €FK †AK ]A  € .   	   MenuOlaf 	   exConfig    AUCC    team    myHero    dead    type 	   shottype    radius    maxdistance         
   spelltype 	   casttype 
   getSpellType    name       @      @      @   Q    W    E    R 	   ccspells 
   skillData 	   charName    boundingRadius    hitchampion     target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector    tar       @   Ready    ES 
   CastSpell    _R                          °Z  ĘZ   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuOlaf    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          ÔZ  űZ   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ÚZ  ÚZ           @ @  €       AfterAA                         ÝZ  ÝZ           @ @  €    	   BeforeAA                         äZ  äZ           @ @  €       AfterAA                         çZ  çZ           @ @  €    	   BeforeAA                         íZ  íZ        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    íZ  íZ           @ @  €       AfterAA                                               đZ  đZ           @ @  €    	   BeforeAA                         őZ  őZ           @ @  €       AfterAA                         řZ  řZ           @ @  €    	   BeforeAA                              	
                ýZ  ![   }   
@@€
@@
@ŔKŔ  J€Á‚† B ‡ŔAŤ@BJ€€Ą   J€ …
@ ‚KŔ  J Ă‚J@ĂĄ@  J€ …
@€…K  JŔĂ‚J@ĂJ@DĄ€  J€ …
@ ‡KŔ  JŔÄ‚J ĹĄŔ  J€ …
@ ‰
€ĹŠF F †@F Ç€C ÇŔÁB FF ]€€
@€‹F F † G Ç€C ÇŔÁB FF ]€€
@€ŤFŔ@ †€G Ç€C ÇŔÁÁG C  ]€€
@€ŽK   
@ K  	‹€  ŠŔH‘Š@I’Ë€  Ę€I‘ĘŔI’  
J‘
AJ’K  JJ‘JÁJ’‹  ŠK‘ŠAK’Ë  ĘK‘ĘÁK’‚  
L‘
BL’K‚  J‚L‘JÂL’‹‚  ŠM‘ŠBM’Ë‚  Ę‚M‘ĘÂM’  
N‘
CN’K  JN‘JĂN’‹  ŠO‘ŠCO’Ë  ĘO‘ĘĂO’„  
P‘
DP’K„  J„P‘JÄP’‹„  ŠO‘ŠDO’Ë„  ĘQ‘ĘDQ’…  
…Q‘
ĹQ’K…  JR‘JER’d@ 

@€FŔR ]€€ 
@ Ą € L      SelectedTarget     Cel    TargetSelector    Q    name    Devastating Blow    range    myHero       ^@   Ready    W    Paragon of Demacia      h€@   E    Heroic Charge    range2      Pt@   R    Diplomatic Immunity       Ś@   recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    ETargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    killstring    InterruptList 	   charName 
   FiddleSticks 
   spellName 
   Crowstorm    MissFortune    MissFortuneBulletTime    Nunu 
   AbsoluteZero    Caitlyn    CaitlynAceintheHole 	   Katarina 
   KatarinaR    Karthus 
   FallenOne 	   Malzahar    AlZaharNetherGrasp    Galio    GalioIdolOfDurand    Darius    DariusExecute    MonkeyKing    MonkeyKingSpinToWin    Vi    ViR    Shen    ShenStandUnited    Urgot    UrgotSwap2 	   Pantheon    Pantheon_GrandSkyfall_Jump    Lucian    LucianR    Warwick    InfiniteDuress    Xerath    XerathLocusOfPower2    Velkoz    VelkozR    Skarner    SkarnerImpale    it 
   ItemsCast    [  [        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          [  [        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          [  [        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          [  [        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               #[  s[   o  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ L Á Á  A ]@ F @ GŔĆ G@Ç LŔÁ Á€ Á GH GÁĹA FH € ]@ F @ GŔĆ L Á ÁŔ 	 ]@ F @ GŔĆ G É LŔÁ Á@	 Á GI GÁĹÁ	 FH € ]@ F @ GŔĆ L Á Á 
 A
 ]@ F @ GŔĆ G@Ę LŔÁ Á€
 Á GÁJ GÁĹ FH € ]@ F @ GŔĆ G@Ę LŔÁ Á@  FH   ]@ F @ GŔĆ L Á ÁŔ  ]@ F @ GŔĆ G Ě LŔÁ Á@ Á GL GÁĹÁ FH € ]@ F @ GŔĆ G Ě LŔÁ Á 
 A
 FB 
 Ë Â
 A B Á‚ Ă A äA ]@€F @ GŔĆ G Ě LŔÁ Á@  FÁO  ÁA ‚ AB ]@€F @ GŔĆ G Ě LŔÁ ÁŔ  FÁO A ÁÁ ‚
 AB ]@€F @ GŔĆ G Ě LŔÁ Á€ Á FR A ]@ F @ GŔĆ G Ě LŔÁ Á€  FR A ]@ FŔR † S ť € ]  @€‡AÓĆÁD ÇAÓXŔ €†@ ‡ÁF‡LŚÁA‚ÓG‚Ó†‚H Ă€ ťA b€  ăŔűF @ GŔĆ LŔÁ Á€ Á FR A ]@ F @ GŔĆ LŔÁ ÁŔ  FH   ]@ F @ GŔĆ LŔÁ Á@  FÁO Á ÁA ‚ AB ]@€F @ L Á Á  A ]@ F @ G@Ő LŔÁ Á€  GH GÁĹA FH € ]@ F @ G@Ő LŔÁ Á€
  GÁJ GÁĹ FH € ]@ F @ G@Ő LŔÁ Á€ Á FR A ]@ F @ G@Ő LŔÁ ÁŔ  FÁO A ÁA ‚ AB ]@€F @ G@Ő LŔÁ Á€ Á FW   ĆAW Ç×Â Ý ]@  F @ L Á Á  A ]@ G€X LŔŘ Ć @ Ç@Ř]@€F @ L Á Á  A ]@ F @ G@Ů L Á Á€ Á ]@ FŔR † S ť € ]  @€‡AÓĆÁD ÇAÓXŔ €†@ ‡AY‡ÁYŚÁA‚ÓG‚Ó†‚H Ă€ ťA b€  ăŔűF @ G@Ů LŔÁ Á  A FH € ]@ F @ G@Ů L Á Á€ Á ]@ F [ † S ť € ]  €€†ÁR ÇA[ ť €Ç‚ÓS  €Ć@ ÇBŮÇÂÚĚÂÁG[Ă ÇS G„[–CĆH € ÝB ˘  #űb€  ă€ůF @ G@Ů LŔÁ Á@  FH € ]@ F @ L Á ÁŔ  ]@ F @ G Ý LŔÁ Á@  FH € ]@ F @ G Ý LŔÁ ÁŔ Á GH GÁĹA FH € ]@ F @ G Ý LŔÁ Á  Á GÁJ GÁĹ FH € ]@ F @ L Á Á@  ]@ F @ G€Ţ LŔÁ ÁŔ Á GH GÁĹA FB  Ë€B A‚ Â äA€]@€F @ G€Ţ LŔÁ Á   Á GÁJ GÁĹ FB A  Ë€B A‚ Â äA€]@€F @ G€Ţ LŔÁ Á€ Á FR A ]@ F @ G€Ţ LŔÁ Á€  Á  FÁO ! ÁA ‚ AB ]@€F @ L Á Á@! ! ]@ F @ G€á LŔÁ ÁŔ! Á GH GÁĹA FH € ]@ F @ G€á LŔÁ Á " Á GÁJ GÁĹ FH € ]@ F @ G€á LŔÁ Á€ Á FR A ]@ F @ G€á LŔÁ Á@" " FÁO Á ÁA ‚ AB ]@€F @ L Á ÁŔ" # ]@ F @ G ă LŔÁ Á@# # FH € ]@ F @ G ă LŔÁ Á€ Á FR A ]@ F @ G ă LŔÁ ÁŔ# $ FH € ]@ F @ G ă LŔÁ Á@$ $ FÁd ‹ Á% % AB B ¤A ]@ F @ G ă LŔÁ Á€ Á FR A ]@ F @ G ă LŔÁ Á@% % FH € ]@ F @ G ă LŔÁ ÁŔ% & FÁd ‹ Á% B A% B ¤A ]@ F @ L Á Á@& & ]@ F @ G€ć LŔÁ ÁŔ& ' FH   ]@  € ť   
   MenuPoppy 
   scriptConfig    MasterSeries: Poppy    Poppy1    addSubMenu    [Poppy]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Poppy    addTS    [Poppy]: Combo Settings    comboConfig    [Poppy]: Q Settings    qConfig    USEQ    Use     Q    (Q)    SCRIPT_PARAM_ONOFF    [Poppy]: W Settings    wConfig    USEW    W    (W)    [Poppy]: E Settings    eConfig    USEE    E    (E)    USEE2    Use Only If Can Stun    [Poppy]: R Settings    rConfig    USER    R    (R)    RM 
   R Cast Mode:       @   Normal    If My HP% <    Weakest Enemy    X Enemy Around Me    Weakest Enemy + HP% <    HP% < + X Enemy    HP    My HP % <     SCRIPT_PARAM_SLICE       >@              Y@   X    X Enemy =        @   qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        Use Ultimate On:     pairs    GetEnemyHeroes    team 	   charName    ST    Focus Selected Target    manac    Min. Mana To Cast Combo       $@   [Poppy]: Harras Settings 
   harrasConfig    Harras Use     manah    Min. Mana To Harass       N@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Poppy]: Items Settings 
   iteConfig    it    LoadToMenu    [Poppy]: Extra Settings 	   exConfig    [Poppy]: Auto Stun Enemy List    EL    AS    Auto Stun Enemy (E)    [Poppy]: Auto-Interrupt Spells    ES    ipairs    InterruptList 
   spellName    Stop          UI    Use Auto-Interrupt (E)    [Poppy]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    EKS    [Poppy]: Farm Settings    farm    QF       @   No 	   Freezing 
   LaneClear    EF        @   manaf    Min. Mana To Farm       D@   [Poppy]: Jungle Farm Settings    jf    QJF    EJF    manajf    Min. Mana To Jungle Farm    [Poppy]: Draw Settings    drawConfig    DD    Draw DMG Text    DER 
   Draw E Range    DERC    Draw E Range Color    SCRIPT_PARAM_COLOR      ŕo@   DRR 
   Draw R Range    DRRC    Draw R Range Color    [Poppy]: Misc Settings 	   prConfig    ALS    Auto lvl skills                          u[  †[   B   F @ ]€€ [    €F@@ G€Ŕ GŔŔ G Á [   €€F@A ‡€A ÇŔA Ç Â]€€[   Ŕ €L@B ]@ F€B ]@€ FŔB ]€€ [@   €F@@ G Ă G@Ă [    €F@@ G Ă G Á [   Ŕ €L@B ]@ F€B ]@€ F€C ]€€ [    €F@@ GŔĂ G Ä [   Ŕ €L@B ]@ F€B ]@€ F€C ]€€ [    €F@@ G@Ä G€Ä ŔÄ Ŕ €L@B ]@ F€B ]@€  €       ComboActive 
   MenuPoppy    comboConfig    qConfig    USEQ    ValidTarget    Cel    Q    range    CastQ    ResetAA 
   HarassActive 
   harrasConfig 
   HTEnabled    FarmActive    jf    QJF    farm    QF       @                         [  •[   '   F @ †@@ ]@ G€@ LŔŔ ]@ G A X@Á Ŕ€F€A ‡ A ÇŔA Ç Â]€€[    €G A 
@€„G A 
@ …€€FŔB ‡ C ]€ 
@€„G€@ G@Ă 
@ …F@@ G€Ă GŔĂ [    €F D [@  @ €L@D ]@  €       CheckOB 
   MenuPoppy    ETargetSelector    update    SelectedTarget     ValidTarget    E    range    Cel    ECel    GetCustomTarget    TargetSelector    target 	   exConfig    AS    recall    AutoE                          —[  ©[   a   F @ ]€€ [   Ŕ€F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡€A‡ŔA@  €G B [@  @€F@B ‡€B ]€ [   @€GŔB L Ă Ç€B AA AC]@ F@A G€Á G€Ă GŔĂ [    €F@B ‡€B Ç D Ç@Ä]€€[   @ €L€D ]@ F@A G€Á GŔÄ G Ĺ [   Ŕ€F@B ‡@E Ç€E Ç@Ä]€€[    €F@A G€Á GŔÄ GŔĹ [@  € €L F Ç@E ]@€F@A G€Á GŔÄ G Ĺ [   Ŕ€F@B ‡@E Ç€E Ç@Ä]€€[    €F@A G€Á GŔÄ GŔĹ [   € €L@F Ç@E ]@€F@A G€Á G€Ć GŔĆ [   @ €L G ]@  €       ComboActive    myHero    mana    maxMana       Y@
   MenuPoppy    comboConfig    manac    recall    ValidTarget    Cel    it 
   CastItems 
   iteConfig    wConfig    USEW    W    range    CastW    eConfig    USEE    ECel    E    USEE2    CastE    CheckWallStun    rConfig    USER    CastR                          «[  ±[   '   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €F A G@Á † A ‡€AP€€ OŔÁ † @ ‡@@‡ B@ @€G@B [@  €€F @ G@Ŕ G€Â [   @€FŔB ‡ C Ç@C Ç€Ă]€€[   € €LŔC Ç C ]@€ €    
   MenuPoppy 
   harrasConfig 
   HTEnabled 
   HarassActive    myHero    mana    maxMana       Y@   manah    recall    USEE    ValidTarget    ECel    E    range    CastE                          ł[  Î[   
a   F @ ]€€ [   Ŕ€F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡€A‡ŔA@  €G B [@  @€G@B L€Â ]@ F@A G€Á GŔÂ †@A ‡€A‡ CĆ@C AB CÝ @€ŔĂ €€X Ä €BD @€‡‚D ‡ÂD‚€  @€ĹFBE ‚ Ŕ€C@ ]‚ @@€‚E B B@ ÂE€€B€ F €X Ä €BD @€‡BF ‡ÂD‚€  @€‚F €€B€@€ŔCŔ€X Ä@€BD @€‡BF ‡ÂD‚€  €€ĹFBE B Ŕ€C@ ]‚ @€ €‚F €€B€â€  cÁď €       FarmActive    myHero    mana    maxMana       Y@
   MenuPoppy    farm    manaf    recall 
   EnemyMinions    update    QF    EF    pairs    objects        @    ValidTarget    Q    range    health    getDmg    CastQ    Attack       @   E    CastE                          Đ[  Ű[   	.   F @ ]€€ [    
€F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡€A‡ŔA@ @€G B [@  €€G@B L€Â ]@ FŔB ‡@B ‡ C]  €†AA ‡A‡AC›  Ŕ€X€Ă@€†ÁC Ŕ€D BDť€›  € €ŚD  €ťA€b€  ă ű €       FarmActive    myHero    mana    maxMana       Y@
   MenuPoppy    jf    manajf    recall    JungleMinions    update    pairs    objects    EJF     ValidTarget    E    range    CastE                          Ý[  ĺ[   	   F @ †@@ ť € ]  @€X€ŔŔ€‡ÁŔ›A   €†A Ŕ€BA ‚Ať€›  @€†ÁA ‡B‡ABÇÂ‡Á›  € €ŚÁB  €ťA€b€  ăŔů €       pairs    GetEnemyHeroes     dead    ValidTarget    E    range 
   MenuPoppy 	   exConfig    EL 	   charName    CheckWallStun                          ç[  ň[   *   † @ Ś@@ € A  Á  ĆA   ť Ŕ€‚€€AA  ÁÁ aA€FB € ]‚ †B Ŕ ť‚ ĆA ŽÂŚBBť‚ ŹM‚‚†‚B ĆÂB ĂGCĂ‡ĂÝ ť‚  ›   €†ÂC ĆD  € ťB€  €`ů €       VP    GetPredictedPos       Đ?     @Ź@   myHero       đ?     €v@      4@   Vector    normalized    IsWall    D3DXVECTOR3    x    y    z 
   CastSpell    _E                          ô[  ú[   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuPoppy 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         ü[  \   u   F @ †@@ ť € ]   €‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€F‚A Â Ŕ€B ]‚ X ĂŔ€†BC Ŕ€ ť‚€›  @€‡ÂC ›B  €€†D ŚBD ť‚€ŔŔ€ĆÂD ÇĹÇBĹŰ  €€ĆBC  €GĂA GĹÝ‚€Ű  Ŕ€ÇÂA ÇBÄÝ‚€ Ű  €€ĚÂE ÝB ĆB ĚĆ@€ÝB€ €  €ĆÂD ÇĹÇBĆŰ  Ŕ€ĆBC  €GB GĹÝ‚€Ű   €Ç‚B ÇBÄÝ‚€ Ű  Ŕ €Ě‚F @€ÝB€@€›  Ŕ€@@€ĆÂD ÇĹÇÂĆŰ   €ĆBC  €A Ý‚€Ű  €€ĆBG D G €@€ÝB€b€  ă ä €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    IGNITE     ValidTarget      p—@   recall    SSpells    Ready    summonerdot 
   MenuPoppy 	   ksConfig    QKS    range    CastQ    Attack    EKS    CastE    IKS      Ŕ‚@
   CastSpell    GetSlot                          \  \   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          \  \   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          \   \   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       E    Ready 
   CastSpell    _E                          "\  <\   
ž   F @ †@@ ť € ]  @%€X€ŔŔ$€‡ÁŔ›A   $€†A Ŕ€BA ‚Ať€›  @"€†ÁA ‡B‡ABÇÂ‡Á›  € €†ÁA ‡B‡AB‡ÁB C €†AC ĆC  €ťA€Ŕ€†ÁA ‡B‡AB‡ÁBŔC €†D ‡ADĆD ÇÄÁŹÁDĆÁA ÇÂÇAÂÇĹŔ €†AC ĆC  €ťA€ €†ÁA ‡B‡AB‡ÁB@E €ŚE ť X€@€€ĆAC ‚C @ ÝA€@€†ÁA ‡B‡AB‡ÁB@EŔ€†ÁE ĆD BA ‚Ať€ĆÁA ÇÂÇAÂÇĆ€ €†AC ĆC  €ťA€Ŕ€†ÁA ‡B‡AB‡ÁB@F €ŚE ť X€@@€ĆD ÇAÄD ‚DĐ‚ĎÁÄÂA BBBE ‚@	€ĆAC ‚C @ ÝA€ €†ÁA ‡B‡AB‡ÁB€F€€†ÁE ĆD BA ‚Ať€ĆÁA ÇÂÇAÂÇĆ€Ŕ€†D ‡ADĆD ÇÄÁŹÁDĆÁA ÇÂÇAÂÇĹŔŔ €†AC ĆC ÂF ťA€b€  ăŔŮ €       pairs    GetEnemyHeroes     dead    ValidTarget    R    range 
   MenuPoppy    comboConfig    rConfig 	   charName    RM       đ?
   CastSpell    _R        @   myHero    health 
   maxHealth       Y@   HP       @	   FindRCel    EnemyCount    X       @      @   x                          >\  J\   
(   D   † @ Ć@@ Ý € ť  @€X€@Ŕ€ÇÁ@A Â@X ‚€€ÇAAŰA  Ŕ€ĆA   Ý ÂA B ‚ €€Ŕ @ €@   €ÇAÂ ‚Â Í‚BBG‚B
BŔ  €@  ˘€  #Á÷_   €       pairs    GetEnemyHeroes     team    myHero 
   invulnerable    GetDistance    R    range 
   addDamage    ap                          L\  a\   
—   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    	€LŔD ]@ F E †@E ť € ]  Ŕ€†E Ŕ€ť ›  €€‡ÁE ÇĆ‡ÁX€A@€†AF ĆF BÂG‚Â‡ÂÂÝ ť  ĆÁF ÂE GĆBA ‡BBŽBGÇ‚BÎ‚ÇĂ ÝA b€  ă@řF @ G@Ŕ G Č [    €G@H G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGAH GÉ†AC Ć@ ÇAŔÇAÉÇÁĂ@ B@BIDF@ GBŔGBÉGBÄť ]@  F @ G@Ŕ G€É [    €GŔI G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGÁI GÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@   € )   
   MenuPoppy    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DER    E    Ready    myHero    range    DERC    DRR    R    DRRC                          c\  z\   Ú   †@@ Á€  ť€ € €†@@ Á  ť€ €€†@@ Á€ ť€ €€‚†@@ Á  ť€ €€†@@ Á€ ť€ €€„†@@ Á  ť€ €€…†@@ Á€ ť€ €€†† @ X D€€†@D Ś€D@ ť€€ĆŔD XŔ   €@   € €€‡†Ŕ@ X D€€†@D Ś€DÁ@ ť€€ĆŔD XŔ   €@   € € Š†@A X D€€†@D Ś€DAA ť€€ĆŔD XŔ   €@   € €€Š†ŔA X D€€†@D Ś€DÁA ť€€ĆŔD XŔ   €@   € € ‹†@B X D€€†@D Ś€DAB ť€€ĆŔD XŔ   €@   € €€‹†ŔB X D€€†@D Ś€DÁB ť€€ĆŔD XŔ   €@   € € Ś†@C X D€€†@D Ś€DAC ť€€ĆŔD XŔ   €@   € €€Ś†ŔC ›   €€†ŔF Á   € FAD ť€ ›@    €@ € Ť† E ›   €€†ŔF ÁŔ  € FAD ť€ ›@    €@ € Ź†€E ›   €€†ŔF Á@  € FAD ť€ ›@    €@ € †@E ›   €€†ŔF ÁŔ  € FAD ť€ ›@    €@ € ‘†ŔE ›   €€†ŔF Á@	  € FAD ť€ ›@    €@ € ’† F ›   €€†ŔF ÁŔ	  € FAD ť€ ›@    €@ € “†@F ›   €€†ŔF Á@
  € FAD ť€ ›@    €@ € ”†€F Ć€G ŤŔ Ć H ŤŔ Ć€H ŤŔ Ć I ŤŔ Ć€I ŤŔ Ć J ŤŔ ź   € *      tiamatslot    GetInventorySlotItem      
¨@
   hydraslot      ¨@   brkslot      ˘¨@   bwcslot      ¨@   dfgslot      p¨@   hgbslot      ”¨@   bftslot      č¨@   tiamatready     myHero    CanUseSpell    READY    hydraready 	   brkready 	   bwcready 	   dfgready 	   hgbready 	   bftready    tmt    getDmg    TIAMAT            hyd    HYDRA    bwc    BWC    brk    RUINEDKING    dfg    DFG    hgb    HXG    bft 
   BLACKFIRE                          |\  ž\   
ş   F @ †@@ ť € ]  @,€‡Ŕ›A  €+€‡ÁŔ›  Ŕ*€†A ÁA  €F‚A Â ť€ĆA  @€†‚A ÁÂ Ý€‚A BB…
‚…A ‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂÍ‚ÍB‚€‚Ŕ €‡BD Ç‚ÄŠÂÄŔ"€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂ@Ŕ €‡BD Ç‚ÄŠĹŔ€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂ Ŕ €‡BD Ç‚ÄŠBĹŔ€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂ€Ŕ €‡BD Ç‚ÄŠ‚ĹŔ€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍBŔŔ €‡BD Ç‚ÄŠÂĹ€€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍŔŔ €‡BD Ç‚ÄŠĆ@€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂŔŔ €‡BD Ç‚ÄŠBĆ@€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍB‚ŔŔ €‡BD Ç‚ÄŠ‚Ć 
€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍ‚ŔŔ €‡BD Ç‚ÄŠÂĆŔ	€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂŔŔ €‡BD Ç‚ÄŠÇ€€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂÍB‚ŔŔ €‡BD Ç‚ÄŠBÇ €‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂÍ‚Ŕ€ €‡BD Ç‚ÄŠ‚Çb€  ăŔŇ €       pairs    GetEnemyHeroes    dead    visible    getDmg    Q    myHero       đ?   R    level       4@      I@           health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Items Kill! 
   Ignite Kill!    Q Kill!    Q+Items Kill!    Q+Ignite Kill!    E Kill!    E+Items Kill!    E+Ignite Kill! 
   Q+E Kill!    Q+E+Items Kill!    Q+E+Ignite Kill!                           \  ¤\      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         ¦\  Ş\      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          ¬\  ¶\   4   Ć @ Ç@ŔÇ€ŔŰ   @€ÇŔ@ Ç ÁÝ€€ Ű    
€Ć@A A Ý €€[    €ÂÁ FB GÂÁX@Ŕ€BÂ FB GBÂ@€€›    €‚BGÂÂ@ €@ B@CGÂÂB  @€BC @€ ‡Â@ ‡‚C‚€  € €ÂC €€ B€â€  cö €    
   MenuPoppy 	   exConfig    UI    E    Ready    pairs    InterruptList    team    myHero    type    name 
   spellName    ES    ValidTarget    range    CastE                          ¸\  Ň\   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuPoppy    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ü\  ]   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    â\  â\           @ @  €       AfterAA                         ĺ\  ĺ\           @ @  €    	   BeforeAA                         ě\  ě\           @ @  €       AfterAA                         ď\  ď\           @ @  €    	   BeforeAA                         ő\  ő\        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ő\  ő\           @ @  €       AfterAA                                               ř\  ř\           @ @  €    	   BeforeAA                         ý\  ý\           @ @  €       AfterAA                          ]   ]           @ @  €    	   BeforeAA                              	
                ]  ]   O   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚K€  JŔÂ‚Ą@  J€€„
@ …K€ J@Ă‚J€ĂJ Ä‡J€ÄJ Ĺ‰Ą€  J€€„
@ †KŔ J€Ĺ‚JŔĹJ Ć‡J€ÄJ@Ć‰J€CŤĄŔ  J€€„
@€Š
 ÇŤF€G †ŔG Ç C ÇŔÁH FAH ]€€
@€ŽF€G †ŔH Ç C ÇŔÁH FAH ]€€
@ ‘FŔ@ †@I Ç A ÇŔÁI C  ]€€
@ ’FŔ@ †@I Ç C ÇŔÁI C  ]€€
@€“FŔ@ †@I Á@
 I C  ]€€
@ ”K   
@ •F K ]€€ 
@€• € -      SelectedTarget     Cel    TargetSelector    Q    name 
   Flamespitter    range      Ŕ‚@   Ready    W 
   Scrap Shield    E    Electro-Harpoon       Ś@   speed      Ŕ’@   delay       Đ?   width      €V@   R    The Equalizer      š@     P¤@      Y@   wall    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    RTargetSelector      @ź@   killstring    it 
   ItemsCast    	]  	]        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          
]  
]        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ]  ]        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ]  ]        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ]  T]     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ L Á Á  A ]@ F @ GŔĆ G@Ç LŔÁ Á€ Á GH GÁĹA FH € ]@ F @ GŔĆ L Á ÁŔ 	 ]@ F @ GŔĆ G É LŔÁ Á@	 Á GI GÁĹÁ	 FJ A
 Á
 Â
 A‚
 ]@€F @ GŔĆ L Á Á  A ]@ F @ GŔĆ G@Ë LŔÁ Á€ Á GÁK GÁĹ FH € ]@ F @ GŔĆ L Á Á@  ]@ F @ GŔĆ G€Ě LŔÁ ÁŔ Á GM GÁĹA
 FH € ]@ F @ GŔĆ G€Ě LŔÁ Á€
 Á
 FB  Ë€B A‚ Â äA€]@€F @ GŔĆ G€Ě LŔÁ Á  A FJ  ÁÁ Â A‚
 ]@€F @ GŔĆ G€Ě LŔÁ Á  A FP   ĆÁP ÇŃB Ý ]@  F @ GŔĆ LŔÁ Á€ Á FR A ]@ F @ GŔĆ LŔÁ Á€ Á FH   ]@ F @ GŔĆ LŔÁ Á  A FJ A
 ÁÁ Â
 A‚
 ]@€F€S † @ Á    C  € Ă€ ]@€F @ L Á ÁŔ  ]@ F @ G Ô LŔÁ Á@  FB Á Ë€Â A B äA€]@€F @ G Ô LŔÁ Á€ Á FR A ]@ F @ G Ô LŔÁ Á€ Á FV   ĆÁP ÇŃB Ý ]@  F @ G Ô LŔÁ Á   FJ A
 ÁÁ Â
 A‚
 ]@€F @ L Á ÁŔ  ]@ G@W L€× Ć @ Ç ×]@€F @ L Á ÁŔ  ]@ F @ G Ř LŔÁ Á@  FH € ]@ F @ G Ř LŔÁ ÁŔ Á GH GÁĹ FH € ]@ F @ G Ř LŔÁ Á@ Á GÁK GÁĹ FH € ]@ F @ G Ř LŔÁ ÁŔ Á GM GÁĹ FH   ]@ F @ L Á Á@  ]@ F @ G€Ú LŔÁ ÁŔ Á GH GÁĹA FB  Ë€ AB ‚ äA€]@€F @ G€Ú LŔÁ ÁŔ Á GÁK GÁĹ FB  Ë€ AB ‚ äA€]@€F @ G€Ú LŔÁ Á€ Á FR A ]@ F @ G€Ú LŔÁ Á   FJ A
 ÁÁ Â
 A‚
 ]@€F @ L Á Á@  ]@ F @ G€Ü LŔÁ ÁŔ Á GH GÁĹA FH € ]@ F @ G€Ü LŔÁ Á  Á GÁK GÁĹ FH € ]@ F @ G€Ü LŔÁ Á€ Á FR A ]@ F @ G€Ü LŔÁ Á  A FJ A
 ÁÁ Â
 A‚
 ]@€F @ L Á Á€ Á ]@ F @ GŔÝ LŔÁ Á  A FH € ]@ F @ GŔÝ LŔÁ Á€ Á FH € ]@ F @ GŔÝ LŔÁ Á€ Á FR A ]@ F @ GŔÝ LŔÁ Á  A FH € ]@ F @ GŔÝ LŔÁ Á€ Á F` ‹ ÁA  ‚
 A‚
 B  ¤A ]@ F @ GŔÝ LŔÁ Á€ Á FR A ]@ F @ GŔÝ LŔÁ Á€  Á  FH € ]@ F @ GŔÝ LŔÁ Á ! A! F` ‹ ÁA  ‚
 A‚! ‚
 ¤A ]@ F @ GŔÝ LŔÁ Á€ Á FR A ]@ F @ GŔÝ LŔÁ ÁŔ! " FH € ]@ F @ GŔÝ LŔÁ Á@" " F` ‹ ÁA  ‚
 AB  ‚
 ¤A ]@ F @ L Á ÁŔ" # ]@ F @ G ă LŔÁ Á@# # FH   ]@ F @ G Ô LŔă Á€ ]@€ €       MenuRumble 
   scriptConfig    MasterSeries: Rumble    Rumble1    addSubMenu    [Rumble]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Rumble    addTS    [Rumble]: Combo Settings    comboConfig    [Rumble]: Q Settings    qConfig    USEQ    Use     Q     (Q)    SCRIPT_PARAM_ONOFF    [Rumble]: W Settings    wConfig    USEW    W     (W)    SCRIPT_PARAM_SLICE       T@              Y@   [Rumble]: E Settings    eConfig    USEE    E     (E)    [Rumble]: R Settings    rConfig    USER    R     (R)    RM    Cast (R) Mode        @   Normal 	   Killable 
   Can Hit X    RXC    X =        @      @   CRKD    Cast (R) Key Down    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        ST    Focus Selected Target    HEAT    Use Combo If Heat <  
   AddSpellMenu    [Rumble]: Harras Settings 
   harrasConfig    HM    Harrass Mode:    |Q|    |E|    |Q|E| 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    L    Use Harass If Heat <     [Rumble]: Items Settings 
   iteConfig    it    LoadToMenu    [Rumble]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    (Q)    EKS    (E)    RKS    (R)    [Rumble]: Farm Settings    farm    QF    No 	   Freezing 
   LaneClear    EF    Farm If Heat <     [Rumble]: Jungle Farm Settings    jf    QJF    EJF    Jungle Farm If Heat <     [Rumble]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color       i@   DRR 
   Draw R Range    DRRC    Draw R Range Color    [Rumble]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          V]  m]   C   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A LŔŔ ]@ G€A XŔÁ Ŕ€F B ‡€A Ç@B Ç€Â]€€[    €G€A 
@€…G€A 
@ †G€A 
@€†G€A 
@ ‡ €FŔC ‡ D ]€ 
@€…G€@ G@Ä 
@ †G A G@Ä 
@€†G@A G@Ä 
@ ‡F@@ G€Ä GŔÄ G Ĺ [   Ŕ€G€C [    €G@E [@  @€F€E [   Ŕ €LŔE Ç€C ]@€€ €L F Ç€C ]@€ €       CheckOB    MenuRumble    QTargetSelector    update    ETargetSelector    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    RCel    GetCustomTarget    TargetSelector    target    comboConfig    rConfig    CRKD    recall 	   VIP_USER 	   CastRVIP 
   CastRFREE                          o]  §]     F @ ]€€ [   @C€G@@ [@  €B€F€@ ‡Ŕ@ ]€ [   @€G A L@Á ÇŔ@ A ÁA]@ F B G@Â †€A ‡€B‡ŔB€€  €F€@ ‡ C ]€ [   Ŕ€F€A G€Â G@Ă G€Ă [   @€FŔC ‡ C ]€ ‡ D ‡@D€€ € €L€D Ç C ]@€F B G@Â †€A ‡€B‡ŔB€€  €F€@ ‡ŔD ]€ [   Ŕ€F€A G€Â G Ĺ G@Ĺ @ ‹@€F B GŔĹ † B ‡ FP€€ O@Ć †€A ‡€B‡ E‡@E€€ @ €L€F ]@ F B G@Â †€A ‡€B‡ŔBY€€ @€FŔF   Ć B ]€€[    €F€@ ‡@G ]€ [   Ŕ€F€A G€Â G€Ç GŔÇ [   @€FŔC ‡@G ]€ ‡ H ‡@D€€ € €L@H Ç@G ]@€F€A G€Â G€Č GŔČ [   Ŕ&€G I G@É ]€€ [   €%€F€@ ‡ŔD ]€ [   @$€F€A G€Â G€Č G€É ŔÉ Ŕ€F J @
 ÇŔD ]€€@€“€€L€J ÇŔD ] XŔĘ  €XŔJ€€XŔĘ €K FAK †K ÇÁË Ě GBĚ ť ĆK ÂKGL‡BLÝ A  € €L€L ÇŔD ]@€F€A G€Â G€Č G€É ŔĚ @€F B G@Â @ šŔ€F€M  	 ÇŔD B AÁ ]€€@€š€€F€M  	 ÇŔD B AÁ	 ]€€@€šGŔD GŔĹ †ŔM ‡ NÇŔD Ç@Îť€ M€€ †@M €€ Ŕ€F J @
 ÇŔD ]€€@€“€€L€J ÇŔD ] XŔĘ  €XŔJ€€XŔĘ €K FAK †K ÇÁË Ě GBĚ ť ĆK ÂKGL‡BLÝ A  € €L€L ÇŔD ]@€F€A G€Â G€Č G€É €Î @€F J @
 ÇŔD ]€€@€“Ŕ€L€J ÇŔD ] XŔĘ €€XŔJ €XŔĘ€€A BHÁNŔ  €K FAK †K ÇÁË Ě GBĚ ť ĆK ÂKGL‡BLÝ A   € <      ComboActive    recall    ValidTarget    Cel    it 
   CastItems    MenuRumble 
   iteConfig    myHero    mana    comboConfig    HEAT    QCel    qConfig    USEQ    GetDistance    Q    range    CastQ    RCel    wConfig    USEW            health 
   maxHealth       Y@   CastW    TargetHaveBuff2    RumbleGrenade    ECel    eConfig    USEE    E    CastE    rConfig    USER    R    Ready    RM       đ?   CountEnemyHeroInRange      @Ź@   CalculateUltMultiple     CastSpell3    _R    D3DXVECTOR3    x    y    z 	   CastRVIP        @      I@   r    getDmg    math    floor    shield       @   RXC                          ©]  ľ]   d   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @€G A [@  €€F@A G€Á † @ ‡@@‡ŔA€€  €F B ‡@B ]€ [   Ŕ€F @ G@Ŕ G€Â ŔÂ € €L C Ç@B ]@€F@A G€Á † @ ‡@@‡ŔAY€€ @€F@C € Ć@A ]€€[    €F B ‡ŔC ]€ [   Ŕ€F @ G@Ŕ G€Â  Ä € €L@D ÇŔC ]@€F @ G@Ŕ G€Â €Ä Ŕ€F@A G€Á † @ ‡@@‡ŔA€€ Ŕ€F B ‡@B ]€ [   € €L C Ç@B ]@€F B ‡ŔC ]€ [   €€F@A G€Á † @ ‡@@‡ŔAY€€ @€F@C € Ć@A ]€€[   € €L@D ÇŔC ]@€ €       MenuRumble 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    myHero    mana    HEAT    ValidTarget    QCel    HM       đ?   CastQ    TargetHaveBuff2    RumbleGrenade    ECel        @   CastE       @                         Ŕ]  ŕ]   d   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A G@Á G€Á † A ‡@A‡ŔAĆ B Ç@ÂA AAB Ŕ€ĆŔB @ CÝ  €@Ă Ŕ€X€Ă€€ÂC @€‚   @€D FBD €€B€ €€Ä €€X€Ă €ÂC @€‚   Ŕ€ÂÄFE B Ŕ€B ]‚ @Ŕ €D FBD €€B€@C€€X€Ă@€ÂC @€‚    €‚E €€B€ €€D€€X€Ă €ÂC @€‚   Ŕ€ÂÄFE Â Ŕ€B AC ]‚€@€ €‚E €€B€â€  cî €       FarmActive    recall 
   EnemyMinions    update    MenuRumble    farm    QF    EF    myHero    mana    HEAT    pairs    objects       @    ValidTarget 
   CastSpell    _Q        @   health    getDmg    Q    CastE    E                          â]  ô]   	8   F @ ]€€ [   €€G@@ [@  Ŕ€F€@ GŔŔ † A ‡@A‡€A€€  
€GŔA L Â ]@ F@B ‡ŔA ‡€B] €€†A ‡AA‡ÁB›  @€X ĂŔ€†AC Ŕ€ť ›  € €ŚC  €ťA€†A ‡AA‡ÁC›  €€X Ă €†AC Ŕ€ť ›  Ŕ €†D ĆAD  €ťA€b€  ă€÷ €       FarmActive    recall    myHero    mana    MenuRumble    jf    HEAT    JungleMinions    update    pairs    objects    EJF     ValidTarget    CastE    QJF 
   CastSpell    _Q                          ö]  ü]   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €       MenuRumble 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         ţ]  ^   ą   A   †@@ ‡€@Á   a@,€FA@ LÁŔŔ ]€†A ‡AA€€€†B ÁA  €FA ‚ ť€€†B Á  €FA ‚ ť€€…†B Á  €FA Â ť€€††A ‡ADŹ‰Ť€@€†B ÁA  €FA   ť€€†B Á  €FA   ť€€…†B Á  €FA   ť€€††A ‡ADŹ‰Ť€†ÁD Ŕ€ť ›  Ŕ€X Ĺ@€‡AE ›A  €€†E ŚÁE ť€ÇAĆ‚F ÂFGÇ‚ Í‚D  ‚Ŕ€›  @€ĆAG  €Ý €Ç €ĆÁG ÇČÇAČŰ  Ŕ€ĆH ‚E ÂH ‚€@€ÝA€@€ÇAĆ‚F ÂFGÇ‚ Í‚ÂA  ‚Ŕ€ĆAG  €Ý BB I ‚ €ĆÁG ÇČÇAÉŰ  Ŕ €ĚI @€ÝA€ €ÇAĆ‚F ÂFGÇ‚ Í‚ÂB  ‚Ŕ€ĆAG  €Ý C I ‚ €ĆÁG ÇČÇÁÉŰ  Ŕ €ĚJ @€ÝA€Ŕ€ÇAĆ‚F ÂFGÇ‚ Í‚BC  ‚€€ĆAG  €Ý ‚C I ‚Ŕ€ĆÁG ÇČÇAĘŰ  € €ĚJ @€ÝA€` Ó € +         đ?   heroManager    iCount    getHero    myHero    mana       I@   QDMG    getDmg    Q       @   EDMG    E    RDMG    R        @   IDMG    level       4@   ValidTarget     recall    SSpells    Ready    summonerdot    health    math    floor    shield    GetDistance      Ŕ‚@   MenuRumble 	   ksConfig    IKS 
   CastSpell    GetSlot    range    QKS    CastQ    EKS    CastE    RKS 	   CastRVIP                          ^  ^      ‡ @ ‡@@ť€€ ›   €€†€@ Ŕ € @ Á@ť€€›   Ŕ €† A Ć@A  € ť@€ €       Q    Ready    ValidTarget    range 
   CastSpell    _Q                          !^  %^   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          '^  -^   .   ‡ @ ‡@@ť€€ ›   Ŕ	€†€@ Ŕ € ť€ ›   €€†Ŕ@ Ć A Ç@ÁÇ€ÁÇŔÁ € G@ GÂ‡@ ‡ABÇ@ ÇÂ@ ÂBFC B Ă€   D    ĆA ÇCÁÇÁÇĂť XŔC@ €Ű@    € € FD †AD ÇDÂD]A  €       E    Ready    ValidTarget    GetPrediction2    MenuRumble 	   spConfig    eConfig    EP    delay    width    range    speed    myHero    line    ECH  
   CastSpell    _E    x    z                          /^  C^      Ś @  € ťŔ€X@@€€X@Ŕ €@ FÁ@ †A ÇAA‚AGÂAť ĆA BÁG‚Á‡ÂÁÝ A   €       CalculateUltSingle     CastSpell3    _R    D3DXVECTOR3    x    y    z                          E^  Ą^   (  X Ŕ €H€†@@ Ŕ € ť€ ›   @G€‡€Ŕ ›@  €F€†Ŕ@ Ŕ € ť€  A@E€„ €   FAA GÁ€ ĆÁA Â AB ‡‚Â Ý ]A  GÁÂ ‡Ă ÁA aA€LÂĂ Ŕ ]‚€@‡F‚C X Ŕ€€F‚C GÂ[  €€FBA G‚Á€ ĆÂA C BAC †C ‡BÝ ]B  `úe  € Ő Ŕ€€ÁA  BCAB á€Ć‚D ĂA GCC FĂA • ‡] †ĂA Çť Ý [  €€X Ŕ €X @€€†Ă@ Ŕ€  ť€€‰  €  ŕAůŐ ŔŔ)€Ă  B ›   €AB • ŽBCÁB aÂ€FĂ@ ‡ÍCCÇĂ]€‡Ĺ P
B`‚ý ‚Š  €Ă€ KÂ  ‡BC‡BŐ ÇÂÇÂŤÂBDJ‚„JBB‹‡BC‡‚BŐ ÇÂÇ‚ÂŤÂBDJ‚…†ÂA ĆÂA  Ý‚ ĂA GCC Îť‚ ŚÂEť‚ ĆÂ@ CC@€Ý‚€ŔŚ@€ĆÂA  €Ý‚ ĂA GCC OĂDC@€€ Ŕ€]€[C  Ŕ€@ €€_€Ŕ€ĆÂ@ CCU GCÝ‚€CF F @€ ‚ŤŔ€ĆÂA  €Ý‚ GÍĂA @€ OCGC@€€ Ŕ€]€[C   €@ €€_€ €ĆÂ@ CCU GCÝ‚€CF F @€ ŹŔ€ĆÂA  €Ý‚ ĂGÍĂA @€ OHC@€€ Ŕ€]€[C  @€@ €€_€@€ĆÂ@ CCU GCÝ‚€CF F  
€ ‚„€€ĆÂA  €Ý‚ CHÍĂA @€ OHC@€€ Ŕ€]€[C  €€@ €€_€€€ĆÁA ÂA @€ ‚ FÂA †ÂH ]‚ BÝ ĚÁĹÝ Â@ @€ ‚ GBF GÉ@ €ÂA @€ ‚ OBÉ
BFÂA €€ ]‚ ŹBÉN‚‚€ Ŕ€ź€Ä€ ß€„ € ź € € &       ValidTarget    dead    GetDistance       ™@   table    insert    Vector    x            z 
   pathIndex 
   pathCount       đ?   path    GetPath       @       @#   VectorPointProjectionOnLineSegment       i@   ms       č?   y    normalized      z@   R    wall ffffffć?      |@     @z@š™™™™™Ů?      y@     €{@     ŕu@     Ŕ|@   myHero    range      €v@   P^  e^   :   ‹Ŕ  Ç @ @ Í Đ@ŔŠŔ €Ç€@ Ŕ Í Đ@ŔŠŔ ÇŔ@ ÁŔ Í Đ@ŔŠŔ€Ć A A @€  FA €  ] AÝ€ Ě@ÁÝ€  AÁ  ÁA  ˇÁ€ŹB…ĆA    Ý‚ ‚ÍĂB FC ‡ŔÇŔÄŔ]       €MÂ ű@†€ €€ ź @ €  ź  €       x        @   y    z    Vector    normalized       >@              đ?      4@      N@   IsWall    D3DXVECTOR3        @                                              §^  O_   ÷  X Ŕ @|€†@@ Ŕ € ť€ ›    {€„ €   F@ GÁŔ€ ĆA BÁ A‚ ‡ÂÁ Ý ]A  GÂ ‡AÂ Á aA€LĂ Ŕ ]‚€@‚…FÂB X Ŕ€€FÂB GBÁ[  €€F‚@ GÂŔ€ ĆA ĂB CAA †ĂB ‡ĂAÝ ]B  `úe  ĄA  ĆAC Ý€ € ‚ X Ŕ @€Ć‚C ĚÂĂ@€  ÇCD ÇÄÄD C  Ý‚€@ €ĂB  Ă€ E @€@€X Ŕ Ŕ€X @@€FD@ € ]„ [   €GDE[D  @€G„E‡„Ĺ X€„@€F„C LÄĂŔ  FĹE GĆ
†ĹD Ă  ]„€†DF Ŕ  € ť„€€F	€€†DF Ŕ€ €ť„€ÇDD ÇÄĆ	Ŕ	€	€X Ŕ 	€X Ŕ€€ŚG  €@€ť„ ĆA A @€… FA €€]… E
Ý„ ĚDÇ	Ý„ ED ĹF
…G
…	
	GED GĹĆ
P…Ç
OE…	NE	€ Ŕ 
 €
@€ ť… €€ €€   
@€
"  ŁĂë€Ź@€X @Ŕ€X Ŕ@€ €@ €€€C  Ŕ €  @€ŤB € U @Ź@€A • ŽBÁ aĂ€FH †A Ç„Bť„ ĆA  Ý„ A G ] Ű  @€X ŔŔ€X @	@€EF @€€ 	…€GED GEČ
M…Č
 …
  €  `řU @ŹŔ/€C      €Á  „BA„ áĂ€ĆDF …M…B	GEÝ„€ĹČ Đ…	ŤĂŕý€’  €C€ ËĂ  „BDAU GDGDÁ
D„GĘ„‚ĘÁ’„BÄAU GDGÄÁ
D„GĘ„A FA • ‡„]„ †A Ç„Bť„ N„„„ DG„ FDF ‡„BŔ€]„€@“Ŕ€FA €€]„ †A Ç„Bť„ ĎÄIŽÄ	Ŕ€  	@€Ý„€ŰD   7€Ŕ   	@€€€ Ý„   	@€Ť…Â	 €4€FDF ‡„BŐ ÇÄ]„€‡DD ‡ÄF	€„Ŕ€€”@€FA €€]„ ŹDJM„„†A Ŕ€ť„ Ď„JŽÄ	Ŕ€  	@€Ý„€ŰD  Ŕ-€Ŕ   	@€€€ Ý„   	@€Ť…Â	 @+€FDF ‡„BŐ ÇÄ]„€‡DD ‡ÄF	€„Ŕ€€•@€FA €€]„ ŹKM„„†A Ŕ€ť„ ĎDKŽÄ	Ŕ€  	@€Ý„€ŰD  €$€Ŕ   	@€€€ Ý„   	@€Ť…Â	  "€FDF ‡„BŐ ÇÄ]„€‡DD ‡ÄF	€„Ŕ€€@€FA €€]„ Ź„KM„„†A Ŕ€ť„ Ď„KŽÄ	Ŕ€  	@€Ý„€ŰD  @€Ŕ   	@€€€ Ý„   	@€Ť…Â	 Ŕ€LĂK Ŕ€ ]Ă€X ŔŔ€X @@€€FŔ€ĆA A @€ „ FA €€]„ DÝ ĚCÇÝ G €€ Ŕ€„ FDF €€ ]„ ‡DD ‡L	€„ €FA € ]„ ŹDĚM„„†A Ŕ ť„ ĎDĚŽÄ	Ŕ€ €@ 	Ý„€ŰD   
€Ŕ  €@ 	€€ Ý„  €@ 	Ť…Â	 €
€ĆA A @€ „ FA †ÄD ]„ DÝ ĚCÇÝ DF @€ „ GDD GĚ@ €A @€ „ ODĚ
DFA €€ ]„ ŹDĚN„„€€Ŕ  €ť„€›D   €€ Ŕ  €@€ ť„ Ŕ  €M…B	ß D _ „  ź   € 2       ValidTarget    table    insert    Vector    x            z 
   pathIndex 
   pathCount       đ?   path    GetPath    GetEnemyHeroes    VP    GetPredictedPos       Đ?   R    speed    myHero    ipairs    dead 
   networkID    math    huge    GetDistance      @Ź@   wall    GetMidPoint    normalized        @      @#   VectorPointProjectionOnLineSegment    width       Y@   ms       č?   y      z@      i@ffffffć?      |@     @o@š™™™™™Ů?      y@     Ŕr@     ŕu@   GetClosestEnemy    range      €v@   ˛^  Ç^   :   ‹Ŕ  Ç @ @ Í Đ@ŔŠŔ €Ç€@ Ŕ Í Đ@ŔŠŔ ÇŔ@ ÁŔ Í Đ@ŔŠŔ€Ć A A @€  FA €  ] AÝ€ Ě@ÁÝ€  AÁ  ÁA  ˇÁ€ŹB…ĆA    Ý‚ ‚ÍĂB FC ‡ŔÇŔÄŔ]       €MÂ ű@†€ €€ ź @ €  ź  €       x        @   y    z    Vector    normalized       >@              đ?      4@      N@   IsWall    D3DXVECTOR3        @                         Č^  â^   q   X @@€Ć@@   Ý€ Ű    €X @ €€X Ŕ  €ËŔ  @ GŔ 
AÁ@Ę Ę@A‚A GÁ 
AÁ@Ę ÁA FÁA €€ ] †ÁA Ŕ  ť N B FAÂ GÂPÁŔ†ÁA Ŕ€ť ĎAŤÁĆÁA  €Ý BÎ‚ÂB ‚€ AB †C Ŕ ť€
€ĆC@   Ý Ű  @€X @Ŕ€ÇCCDCX „Ŕ
€ĆC   @ Ý€ŔĂ@	€ĆD ĚCÄ@ „ ĆÄD ÇĹ	EE C  Ý€X Ŕ€€„E FÄA € ]„ †ÄA Ŕ€ť„ ĆÄA  €Ý  ›  @€X @Ŕ€X Ŕ@€Ć„C   @€Ý„€EÂ ĹE

F
 …	  €MBĆ˘‚  #ń_  €        ValidTarget    x        @   y            z    Vector    normalized    R    wall    GetEnemyHeroes    ipairs 
   networkID    GetDistance      @Ź@   VP    GetPredictedPos       Đ?   math    huge    myHero #   VectorPointProjectionOnLineSegment    width       N@      đ?                                               Q_  `_   
+   X Ŕ Ŕ	€†@@ ť€€ Ä   @ Á@FA € ] €†BA Ŕ€ť‚ ›  Ŕ€‡‚ÁÇ‚Á XŔŔ€†ÂA Ŕ€ € ť‚€ @€†ÂA Ŕ€ € ť‚€  Ŕ €b  ăúFB X Ŕ €X @€ €FB € _€ € 	       GetEnemyHeroes    math    huge    ipairs    ValidTarget 
   networkID    GetDistance    enemy                          b_  i_      ËŔ  Ŕ G@
AA@Ę €ĘŔ@Á GA
AA@Ę ‚ß   €       x        @   y            z                         k_  _   
ą   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    	€LŔD ]@ F E †@E ť € ]  Ŕ€†E Ŕ€ť ›  €€‡ÁE ÇĆ‡ÁX€A@€†AF ĆF BÂG‚Â‡ÂÂÝ ť  ĆÁF ÂE GĆBA ‡BBŽBGÇ‚BÎ‚ÇĂ ÝA b€  ă@řF @ G@Ŕ G Č [    €G@H G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGAH GÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G@É [    €G€I G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGI GÉ†AC Ć@ ÇAŔÇÁÉÇÁĂ@ B@ÂIDF@ GBŔGÂÉGBÄť ]@  F @ G@Ŕ G Ę [    €G@J G€Č ]€€ [   Ŕ€F B †ŔH ‡@BĆŔH Ç€ÂÁH ÁBGAJ GÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@‚JDF@ GBŔG‚ĘGBÄť ]@   € +      MenuRumble    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    DmgCalc    pairs    GetEnemyHeroes    ValidTarget    killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          …_  ź_      A   †@@ ‡€@Á   aŔ€FA@ LÁŔŔ ]€‡Á›A   €‡AÁ›  @€†A ‡ÁA€„€€†B ÁÁ  €F‚A  ť€€„†B Á  €F‚A  ť€€††B Á  €F‚A B ť€€‡†A ‡ÁDŹŠŤ„€‰@€†B ÁÁ  €F‚A   ť€€„†B Á  €F‚A   ť€€††B Á  €F‚A   ť€€‡†A ‡ÁDŹŠŤ„€‰‡AĹĆE ÇÁĹĆÝ ŤÁĆAB BC Í‚ÂC Í‚‚D Í‚€Ŕ €‡AF ÇĆŠÁĆ@	€‡AĹĆE ÇÁĹĆÝ ŤÁĆAB ŔŔ €‡AF ÇĆŠÇ €‡AĹĆE ÇÁĹĆÝ ŤÁĆAC ŔŔ €‡AF ÇĆŠAÇŔ€‡AĹĆE ÇÁĹĆÝ ŤÁĆÁC Ŕ€ €‡AF ÇĆŠÇ`€ŕ €          đ?   heroManager    iCount    GetHero    dead    visible    myHero    mana       I@   QDMG    getDmg    Q       @   EDMG    E    RDMG    R        @   IDMG    level       4@   health    math    floor    shield    killstring 
   networkID    Harass Him!!!    Q Kill!    E Kill!    R Kill!                          ˇ_  Ą_      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         §_  «_      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          ­_  Ç_   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN    MenuRumble    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ń_  ``   Ů  
@@€
@@
@Ŕ
@@‚
@Ŕ‚
@@
@ŔKŔ  J€Â„J Ă…Ą   J€€†
@ „KŔ  JŔĂ„J Ä…Ą@  J€€†
@ ‡KŔ  J€Ä„JŔÄ…Ą€  J€€†
@€KŔ  J@Ĺ„†€E ‡ŔBŤŔEJ€€…ĄŔ  J€€†
@ ŠK@ J@Ć„J€Ć…J ÇŤJ€ÇŽJ ČŹ
@ ŚFŔA †€H Ç B ÇŔÂĎŔČI C  ]€€
@€K   
@€’
ŔI“F@J †€J Ç B ÇŔÂE FÁJ ]€€
@ ”F@J †@K Ç B ÇŔÂE FÁJ ]€€
@ –KŔ  Ą  J€€—Ą@ J€€‘Ą€ J€ 
@ —F€L ]€€ 
@€D   
@@š
@€™F@M [   @`€F€M ]€€ LŔÍ ÁŔ  ]€ @Î €
€F€N Ŕ ]€ 
@€GŔ@ J@OžGŔ@ L€Ď Ć€E ÇŔĎ]@€GŔ@ L Đ ÁŔ ]@€GŔ@ L@Đ ÁŔ	 ]@€GŔ@ 
@ F€N Ŕ ]€ 
@€‚G@A J@OžG@A L€Ď Ć€E ÇŔĎ]@€G@A L Đ Á€ ]@€G@A L Đ ÁŔ ]@€G@A L Đ Á  ]@€G@A L Đ Á@ ]@€G@A L Đ Á€ ]@€G@A 
@ ‚€P€F€M ]€€ LŔÍ ÁŔ  ]€ ŔŃ  €F€N   ]€ 
@€GŔ@ J@RžGŔ@ L€Ď Ć€E ÇŔĎ]@€GŔ@ L Đ ÁŔ	 ]@€GŔ@ L Đ Á€ ]@€GŔ@ L Đ ÁŔ ]@€GŔ@ L Đ Á  ]@€GŔ@ L Đ Á@ ]@€GŔ@ J€R§GŔ@ 
@ G€@ L Đ ÁŔ ]@€F€N   ]€ 
@€‚G@A J@RžG@A L€Ď Ć€E ÇŔĎ]@€G@A L Đ Á  ]@€G@A L Đ ÁŔ ]@€G@A L Đ Á@ ]@€G@A L Đ Á€ ]@€G@A L Đ ÁŔ ]@€G@A 
@ ‚@<€F€M ]€€ LŔÍ ÁŔ  ]€  Ő  €F€N   ]€ 
@€GŔ@ J@UžGŔ@ L€Ď Ć€E ÇŔĎ]@€GŔ@ L Đ ÁŔ	 ]@€GŔ@ L Đ Á€ ]@€GŔ@ L Đ ÁŔ ]@€GŔ@ L Đ Á  ]@€GŔ@ L Đ Á@ ]@€GŔ@ J€R§GŔ@ 
@ G€@ L Đ ÁŔ ]@€F€N   ]€ 
@€‚G@A J@UžG@A L€Ď Ć€E ÇŔĎ]@€G@A L Đ Á  ]@€G@A L Đ ÁŔ ]@€G@A L Đ Á@ ]@€G@A L Đ Á€ ]@€G@A L Đ ÁŔ ]@€G@A 
@ ‚ (€F€M ]€€ LŔÍ ÁŔ  ]€ €Ő  €F€N Ŕ ]€ 
@€GŔ@ J VžGŔ@ L€Ď Ć€E ÇŔĎ]@€GŔ@ L Đ ÁŔ	 ]@€GŔ@ L Đ Á€ ]@€GŔ@ L Đ Á@ ]@€GŔ@ L Đ Á  ]@€GŔ@ L Đ Á€ ]@€GŔ@ J€R§GŔ@ 
@ G€@ L Đ ÁŔ ]@€F€N Ŕ ]€ 
@€‚G@A J VžG@A L€Ď Ć€E ÇŔĎ]@€G@A L Đ Á  ]@€G@A L Đ ÁŔ ]@€G@A L Đ Á@ ]@€G@A L Đ Á€ ]@€G@A L Đ Á€ ]@€G@A 
@ ‚Ŕ€F€M ]€€ LŔÍ ÁŔ  ]€ Ŕ× Ŕ€F€N   ]€ 
@€GŔ@ J@XžGŔ@ L€Ď Ć€E ÇŔĎ]@€GŔ@ L Đ ÁŔ	 ]@€GŔ@ L Đ Á€ ]@€GŔ@ L Đ Á€ ]@€GŔ@ L Đ Á€ ]@€GŔ@ L Đ ÁŔ ]@€GŔ@ J€R§GŔ@ 
@ G€@ L Đ Á  ]@€F€N   ]€ 
@€‚G@A J@XžG@A L€Ď Ć€E ÇŔĎ]@€G@A L Đ Á@ ]@€G@A L Đ ÁŔ ]@€G@A L Đ Á€ ]@€G@A L Đ Á€ ]@€G@A L Đ ÁŔ ]@€G@A 
@ ‚ € h      SelectedTarget     qpacket 	   qpacket2    lpacket 	   lpacket2    Cel    TargetSelector    Q    name 
   Broken Wings    range      ŕp@   Ready    W 	   Ki Burst      @o@   E    Valor      Pt@   R    Blade of the Exile    myHero      @P@   R2 
   Static Field       Ś@   delay       ŕ?   angle      €F@   speed      Ŕ’@   TargetSelectorH    TARGET_NEAR_MOUSE        @   DAMAGE_PHYSICAL    killstring    QCount         
   EnemyMinions    minionManager 
   MINION_ENEMY    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    AnimationCancel       đ?      @   it 
   ItemsCast    p1    p2 	   VIP_USER    GetGameVersion    sub       $@   5.24.0.249    CLoLPacket      @e@   vTable     ťYmA   EncodeF 
   networkID    Encode1    Encode4       M@      @     €k@      n@     €H@   5.23.0.247      0t@   €C=lA      @     €o@      n@     Ŕf@   pos      @Z@      d@     €`@     @n@      (@   5.23.0.239     
FlA   5.22.0.289      ŕk@    ŚlmA      Q@     €T@      ^@     @^@     €n@     €m@   5.21.0.297       i@    ±‚kA      R@      e@      b@      5@      `@      &@   Ů_  Ů_        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          Ú_  Ú_        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          Ű_  Ű_        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Ü_  Ü_        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                          ä_  ę_    (    @    €€@Ŕ    Ŕ €€@ F@Ŕ @  €Ŕ@  A †@A ĆŔ@ ť€ Ś€AAA FÁA  FB †ÁA ] PA„ť€ ‡€BĆ@A Á@ Ý€ Ě€ÁFAA †ÁA ] †B ĆÁA ť „Ý€ ÇŔÂ@  €    	   VIP_USER    qpacket    SendPacket    myHero    MoveTo    Vector    lerp 	   mousePos    GetDistance      @o@   x    z                           ë_  ď_    
    @    @€@Ŕ    € €€@ F@Ŕ @  €    	   VIP_USER    lpacket    SendPacket                           đ_  đ_        €                                                  b`  h`      Ä   Î € ĎŔ ÍŔ  ß   €                             j`  Í`   3  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F B †@B ]€ @€FŔA L€Â Ć @ Ç€Á]@€FŔA LŔÂ ĺ   ]@€F C †@C Á€ ÁC C  ]€€
@ †G C J@DF @ L€Ä Ç C ]@€F @ L Á ÁŔ  ]@ F @ G Ĺ L Á Á@  ]@ F @ G Ĺ G€Ĺ LŔĹ Á  A GF GÄÁ FG € ]@ F @ G Ĺ G€Ĺ LŔĹ Á@ A GF GÄ FG € ]@ F @ G Ĺ G€Ĺ LŔĹ ÁŔ  FAH  ]@ F @ G Ĺ G€Ĺ LŔĹ ÁŔ 	 FAI 	 Ë€Â	 A
 B
 äA€]@€F @ G Ĺ L Á Á€
 Á
 ]@ F @ G Ĺ GŔĘ LŔĹ Á  A GAK GÄ FG € ]@ F @ G Ĺ L Á ÁŔ  ]@ F @ G Ĺ G Ě LŔĹ Á@ A GL GÄÁ FG € ]@ F @ G Ĺ G Ě LŔĹ Á 
 A
 FAI 
 Ë Â
 A B Á‚ äA ]@€F @ G Ĺ G Ě LŔĹ ÁŔ  FAO  ÁÁ  AÂ ]@€F @ G Ĺ L Á Á@  ]@ F @ G Ĺ G€Đ LŔĹ ÁŔ  FG € ]@ F @ G Ĺ G€Đ LŔĹ Á@  FG € ]@ F @ G Ĺ L Á ÁŔ  ]@ F @ G Ĺ G Ň LŔĹ ÁŔ A FG € ]@ F @ G Ĺ G Ň LŔĹ Á@  FG € ]@ F @ G Ĺ G Ň LŔĹ Á€ Á FG € ]@ F @ G Ĺ G Ň LŔĹ Á  A FAO  Á	 Â AÂ ]@€F @ G Ĺ LŔĹ ÁŔ  FAH  ]@ F @ G Ĺ LŔĹ Á  A FG   ]@ F @ L Á Á€ Á ]@ F @ GŔÔ LŔĹ Á  A GF GÄÁ FG € ]@ F @ GŔÔ LŔĹ Á  A GAK GÄ FG € ]@ F @ GŔÔ LŔĹ Á@ A GL GÄÁ FG € ]@ F @ L Á Á  A ]@ G€U L€Â Ć @ Ç@Ő]@€F @ L Á ÁŔ  ]@ F @ G Ö L Á Á@  ]@ FŔV † W ť € ]   €†@ ‡V‡VŚÁEB×GB×†G Ă€ ťA b€  ă ýF @ G Ö LŔĹ Á€ Á FG € ]@ F @ L Á Á  A ]@ F @ G@Ř LŔĹ Á€ Á FG € ]@ F @ G@Ř LŔĹ ÁŔ  FAH  ]@ F @ G@Ř LŔĹ Á  A GAK GÄ FG € ]@ F @ G@Ř LŔĹ ÁŔ  FAH  ]@ F @ G@Ř LŔĹ Á@ A GY GÄÁ FG € ]@ F @ L Á Á  A ]@ F @ G@Ú LŔĹ Á€ A GF GÄÁ FG € ]@ F @ G@Ú LŔĹ ÁŔ  FAH  ]@ F @ G@Ú LŔĹ ÁŔ A GAK GÄ FG € ]@ F @ G@Ú LŔĹ Á  A FAO 
 Á	 ‚ AÂ ]@€F @ G@Ú LŔĹ ÁŔ  FAH  ]@ F @ G@Ú LŔĹ ÁŔ A GL GÄÁ FG € ]@ F @ L Á Á  A ]@ F @ G@Ü LŔĹ Á€ A GF GÄÁ FG € ]@ F @ G@Ü LŔĹ ÁŔ  FAH  ]@ F @ G@Ü LŔĹ ÁŔ A GAK GÄ FG € ]@ F @ G@Ü LŔĹ Á  A FAO 
 Á	 ‚ AÂ ]@€F @ G@Ü LŔĹ ÁŔ  FAH  ]@ F @ G@Ü LŔĹ Á@ A GL GÄÁ FG € ]@ F @ L Á Á€ Á ]@ F @ GŔÝ L Á Á  A ]@ F @ GŔÝ G@Ţ LŔĹ Á€ Á FG € ]@ F @ GŔÝ LŔĹ Á  A FG € ]@ F @ GŔÝ LŔĹ ÁŔ  FAH  ]@ F @ GŔÝ LŔĹ Á€ Á F`   ĆA` ÇŕÂ  Ý ]@  F @ L Á Á ! A! ]@ F @ G@á LŔĹ Á€! Á! FG € ]@ F @ G@á LŔĹ Á " A" FG € ]@ F @ G@á LŔĹ ÁŔ  FAH  ]@ F @ G@á LŔĹ Á€" Á" FG € ]@ F @ G@á LŔĹ Á # A# Fc ‹ ÁÁ# Â# AÂ Â# ¤A ]@ F @ G@á LŔĹ ÁŔ  FAH  ]@ F @ G@á LŔĹ Á $ A$ FG € ]@ F @ G@á LŔĹ Á€$ Á$ FG € ]@ F @ G@á LŔĹ Á % A% Fc ‹ Á% Â AÂ ‚% ¤A ]@ F @ G@á LŔĹ ÁŔ  FAH  ]@ F @ G@á LŔĹ ÁŔ% & FG € ]@ F @ G@á LŔĹ Á@& & Fc ‹ Á% Â AÂ& Â ¤A ]@ F @ G@á LŔĹ ÁŔ  FAH  ]@ F @ G@á LŔĹ Á ' A' FG € ]@ F @ G@á LŔĹ Á€' Á' Fc ‹ Á% ‚% AÂ Â ¤A ]@ F @ G@á LŔĹ ÁŔ  FAH  ]@ F @ G@á LŔĹ Á ( A( FG € ]@ F @ G@á LŔĹ Á€( Á( Fc ‹ Á% Â A) Â ¤A ]@ F @ L Á Á@) ) ]@ F @ G€é LŔĹ ÁŔ) * FG   ]@ F @ G€é LŔĹ Á@* * FAI 	 Ë Â* A+ äA ]@€F @ L Á Á@+ + ]@ F @ G€ë LŔĹ ÁŔ+ , FG € ]@ F @ G€ë LŔĹ Á@, , Fc ‹ Á% Â AÂ# Â ¤A ]@ F @ G€ë LŔĹ ÁŔ, - F`   ĆA` ÇŕB- Ý ]@  FŔm ]€€ 
@ ŰG n [   € €G@n [@  € €F€n Ŕ. ]@  € Ľ   
   MenuRiven 
   scriptConfig    MasterSeries: Riven    Riven1    addSubMenu    [Riven]: Orbwalking    Orbwalking    orb 
   _RivenORB    VP    LoadToMenu    RegisterAfterAttackCallback    TargetSelector    TARGET_LESS_CAST_PRIORITY      Ŕ‚@   DAMAGE_PHYSICAL    name    Riven    addTS    [Riven]: Combo Settings    comboConfig    [Riven]: Q Settings    qConfig 	   addParam    USEQ    Use     Q     (Q)    SCRIPT_PARAM_ONOFF    USEQ2     (Q) Gapclose    qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        qaca    Animation Cancel    SCRIPT_PARAM_LIST       đ?   Move    Laugh    Nothing    [Riven]: W Settings    wConfig    USEW    W     (W)    [Riven]: E Settings    eConfig    USEE    E     (E)    EM 
   E Cast Mode:        @   Normal    If Cant AA    If HP <    If Cant AA or If HP <    USEE3HP    HP %    SCRIPT_PARAM_SLICE      €Q@              Y@   [Riven]: R1 Settings 	   r1Config    USER1    Use In Animation    USER2    Use If Can Kill Enemy    [Riven]: R2 Settings 	   r2Config    Use After Last Q    USER3    Use If Can Hit X Enemy    RX    X =        @      @   ST    Focus Selected Target    [Riven]: Harass Settings    hConfig    [Riven]: Items Settings 
   iteConfig    it    [Riven]: Stun Settings    sConfig    Enemy List    uso    pairs    GetEnemyHeroes 	   charName    UAS    Use Auto Stun    [Riven]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    WKS    RKS    R2     (R2)    [Riven]: LaneClear Settings    farm    QF    WF    WFMC    Min. Minions To Cast       @   EF    [Riven]: Jungle Farm Settings    jf    QJF    WJF    WJFMC    EJF    [Riven]: Extra Settings 	   exConfig    Auto E Spells    ES    turrets    Turret Shot    UAE    Use Auto E    escape 
   Escape (E>Q)    SCRIPT_PARAM_ONKEYDOWN    string    byte    T    [Riven]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Circle On Selected Target    DCT    Draw Circle On Target    DCTC    Draw Circle On Target Color    SCRIPT_PARAM_COLOR      `c@   DQR 
   Draw Q Range    DQMR    Draw Q Max Range    DQRC    Draw Q Range Color      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color       n@   DER 
   Draw E Range    DERC    Draw E Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color      €f@   [Riven]: Misc Settings 	   prConfig    ALS    Auto lvl skills    ACM    Animation Cancel Mode 	   In Combo    Always    [Riven]: Wall Jump 	   wjConfig    dwjs    Draw Jump Spot    dwjsc    Draw Color    Enable    Jump    N    AutoShield    _AutoShield    qpacket    lpacket    print |   <b><font color="#ff6600">MasterSeries: </font></b> <font color="#ff0000">Packets Are Outdated Pls Wait For Update!!!</font>    o`  o`           @ @  €       AfterAA                                              Ď`  ä`   X   F @ G@Ŕ G€Ŕ [    €FŔ@ G Á G@Á G€Á [   €€FŔA ‡ B Ç@B Ç€Â]€€[   Ŕ€G@B GŔÂ ]€€ [   € €L C Ç B ]@€F @ G@Ŕ G@Ă [   Ŕ€FŔ@ G€Ă G€Á [   €€FŔA ‡ŔC Ç@B Ç€Â]€€[   Ŕ€G@B GŔÂ ]€€ [   € €L C ÇŔC ]@€F @ G@Ŕ G Ä [    €FŔ@ G@Ä G€Ä [   Ŕ€G@B GŔÂ ]€€ [   € €L C ĆŔD ]@€F @ G@Ŕ G Ĺ [    €FŔ@ G@Ĺ G€Ĺ [   Ŕ€G@B GŔÂ ]€€ [   € €L C ĆŔD ]@€ €       orb    Menu    Combo 
   MenuRiven    comboConfig    qConfig    USEQ    ValidTarget    Cel    Q    range    Ready    CastQ    Harass    hConfig    CelH 
   LaneClear    farm    QF 	   mousePos    JungleClear    jf    QJF                          ć`  a   Ž   G @ L@Ŕ ]@ G @ GŔŔ 
@ F A G@Á G€Á GŔÁ [   @€G B G@Â ]€€ [   €€G€B G@Â ]€€ [   @€GŔB †@C ‡ CĆ@C Ç€ĂŤŔ Ç€B Ç ĂŤŔ Ç B Ç ĂŤŔ J€ †Ŕ€G B G@Â ]€€ [@  €€GŔB †@C ‡ CĆ@C Ç€ĂŤŔ Ç€B Ç ĂŤŔ J€ †Ŕ
€G€B G@Â ]€€ [@  €€GŔB †@C ‡ CĆ@C Ç€ĂŤŔ Ç B Ç ĂŤŔ J€ †Ŕ€G€B G@Â ]€€ [@  €€G B G@Â ]€€ [@  @€GŔB †@C ‡ CĆ@C Ç€ĂŤŔ J€ †@€GŔB †@C ‡ CĆ@C Ç€ĂŤŔ Ç€B Ç ĂŤŔ J€ †GŔC X Ä @€F@D ‡ŔC ÇŔB Ç Ă]€€[   € €GŔC 
@ ‰Ŕ €FŔD ‡ŔB ]€ 
@ ‰F E L@Ĺ Ç€D ]@€G€E [@  €€F A GŔĹ G Ć [   @ €L@F ]@ F A G€Ć GŔĆ [   @ €L G ]@ F A G@Ç G€Ç [   @ €LŔG ]@  €        TargetSelectorH    update    CelH    target 
   MenuRiven    comboConfig    qConfig    USEQ2    Q    Ready    E    TargetSelector    range    myHero    boundingRadius    SelectedTarget     ValidTarget    Cel    GetCustomTarget    orb    ForceTarget    recall    sConfig    UAS 	   AutoStun 	   exConfig    escape    Escape 	   wjConfig    Enable    Jump                          a  3a   Ć   G @ X@Ŕ @0€F€@ GŔŔ G Á [    /€F@A ‡ @ ]€ [   @€G€A LŔÁ Ç @ B AB]@ F B G€Â GŔÂ G Ă [   @ €L@C ]@ F@A ‡ @ Ç€C ÇŔĂ]€€[    €F B G€Â G Ä G@Ä [   € €L€D Ç @ ]@€F B G€Â GŔÄ G Ĺ [   @ €L@E ]@ F B G€Â G€Ĺ GŔĹ [    €F@A ‡ @ ]€ [   Ŕ€F F ‡ @ ]€ ‡ @ ‡@FŤ€F@ Ŕ€GŔF G Ç ]€€ [   €€F@G †€G Ç @ ÇŔÇ@ H]@ F B G€Â G@Č G Ă [   @
€F€H †ŔH ť € ]  €€ŚI  €ť€ÇAÉ‚I ÂIGĘ‚ Í‚€Ŕ€ĆAA  €GBJ GÂĂÝ€Ű   €ĆJ ĚÁĘFK Ý€ÇAË€Ë@€ĆÁK ĚĚ@€‡BJ ‡BLÇBJ Ç‚ĚCJ ĂCGCJ GĂĚ†J ÝAX@Ŕ€€ š €ĆBG K GĂÇ‡ČÝB b€  ă€óF B G€Â G@Č G@Í [    €F€H †ŔH ť € ]  @
€†AA Ŕ€BJ ÂCť€›  €€†J ŚÁJK ť€‡AK€KŔ€†ÁK ŚL €GBJ GBĚ‡BJ ‡‚LÇBJ ÇÂĂCJ ĂLFJ ťAX@@ €†B ‡‚B‡BH‡‚M €€Ŕš €†BG ĆK ĂGGHťB b€  ăŔô € 7      Cel     orb    Menu    Combo    ValidTarget    it 
   CastItems 
   MenuRiven 
   iteConfig    comboConfig 	   r1Config    USER2    CastRCombo    W    range    wConfig    USEW    CastW    eConfig    USEE    CastECombo    qConfig    USEQ2    GetDistance    boundingRadius      Đg@   Q    Ready 
   CastSpell    _Q    x    z 	   r2Config    pairs    GetEnemyHeroes    GetRDMG    health    math    floor    shield    R2    myHero 
   GetSpellData    _R    name    rivenizunablade    VP    GetConeAOECastPosition    delay    angle    speed        @   USER3    RX                          5a  =a   !   † @ Ś@@@ ť€€‡Ŕ@Ź€ ‚Ť€ ‚Ć @ Ç@ÁĎ€ÁŤŔ ÇŔÁ Â Đ ÎŔ€„Ŕ …@ €ŹŔB€€Ď CÁÁ GÂ A„Ď ŤŔ Ć @ Ě@Ă@€ € Ţ  ß    €       myHero 
   GetSpellData    _R    level       D@
   addDamage 333333ă?   health 
   maxHealth       đ?      č?      @UUUUUU@   CalcDamage                          ?a  Ha   )   G @ X@Ŕ  	€F€@ GŔŔ G Á [   Ŕ€F@A G€Á GŔÁ [   @€F B ‡ @ Ç@B Ç€Â]€€[   € €LŔB Ç @ ]@€F@A G€Á G Ă [   Ŕ€G@C G€Ă ]€€ [@  €€FŔC † D Ć@D Ç€ÄAD ÁD]@  €       CelH     orb    Menu    Harass 
   MenuRiven    hConfig    USEW    ValidTarget    W    range    CastW    USEE    Q    Ready 
   CastSpell    _E 	   mousePos    x    z                          Ja  ba   >   F @ G@Ŕ G€Ŕ [   Ŕ
€GŔ@ L Á ]@ F @ L@Á ]€ [   Ŕ€†€A ‡ŔA‡ B›   €€†@B Ç€B ÇŔÂB ÁBGÁ@ GĂťŔ A ÁAACŔ @€C @€  GB GÁÂ@€ €ÁC €€ A€Ś D  € ť@€†€A ‡ŔA‡@D›   € €Ś€D  € ť@€†€A ‡ŔA‡ŔD›   Ŕ €† E ‡@E›   Ŕ˙ €       orb    Menu 
   LaneClear 
   EnemyMinions    update    FarmMinion 
   MenuRiven    farm    WF    GetBestCircleFarmPosition    W    range    objects    WFMC    GetDistance    CastW    UseTAH    EF    CastE    QF    _G    Reborn_Initialised                          da  wa   5   F @ G@Ŕ G€Ŕ [   €€GŔ@ L Á ]@ F @ L@Á ]€ [   €	€†€A ‡ŔA‡ B›   €€†@B Ç€B ÇŔÂB ÁBGÁ@ GĂťŔ A ÁAACŔ @€C @€  GB GÁÂ@€ €ÁC €€ A€Ś D  € ť@€†€A ‡ŔA‡@D›   € €Ś€D  € ť@€ €       orb    Menu 
   LaneClear    JungleMinions    update 
   JungleMinion 
   MenuRiven    jf    WJF    GetBestCircleFarmPosition    W    range    objects    WJFMC    GetDistance    CastW    UseTAH    EJF    CastE                          ya  €a      † @ Á@  ť€ ›@  € €† @ Á€  ť€ XŔ@ €Ć A  € Ý€ Î@Á€Á€ €ĆŔA   Ý@  €       GetInventorySlotItem      ¨@     
¨@    GetDistance      @P@     ŕu@
   CastSpell                          ‚a  a   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FÂA †‚A ĆÂA CB FĂA †ĂA ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuRiven 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         Ša  Ąa     F @ †@@ ť € ]  €E€†@ ‡Á@‡A›A  @€†@ ‡Á@‡AA›A   €†@ ‡Á@‡A›  ŔA€†ÁA Ŕ€B BBť€›   @€‡B ›A  @?€†ÁB Á  €FBC ‚ ť€ĆÁB Â @€†BC Á‚ Ý€D €€‚€FBC GBÄOB‰MB‚‰‡ĹĆBE Ç‚ĹĂĹÝ‚ ŤÂŔ €†‚@ ‡Â@‡A›  Ŕ€†F Ŕ€ť‚ ÇÂC ÇBÂŔ €‡ÂC ‡BFť‚€ ›  Ŕ €Ś‚F  €ťB€@3€‡ĹĆBE Ç‚ĹĂĹÝ‚ ŤÂ @€†‚@ ‡Â@‡BA›   €†F Ŕ€ť‚ ÇB ÇBÂŔ@€‡ÂF ‡BFť‚€ ›   €†BC ŚGCG ť‚€‡‚GŔG@€†H ĆBG CČGČťB Ŕ)€‡ĹĆBE Ç‚ĹĂĹÝ‚ ŤÂÍB‚Ŕ €†‚@ ‡Â@‡‚A›  Ŕ€†‚@ ‡Â@‡A›  €€†F Ŕ€ť‚ ÇÂC ÇBÂŔŔ€†ÂH ›   €‡ÂC ‡BFť‚€ ›  Ŕ€Ś‚F  €ťB€†H ĆI  €ťB€@€‡ĹĆBE Ç‚ĹĂĹÝ‚ ŤÂÍ‚Ŕ€
€†‚@ ‡Â@‡BA›  @	€†‚@ ‡Â@‡A›   €†F Ŕ€ť‚ ÇÂC ÇBÂŔ@€‡ÂF ‡BFť‚€ ›   €‡ÂC ‡BFť‚€ ›  Ŕ€†BC ŚGCG ť‚€‡‚GŔG €Ś‚F  €ťB€†H ĆBG CČGČťB @€‡ĹĆBE Ç‚ĹĂĹÝ‚ ŤÂÍ‚ŔŔ	€†‚@ ‡Â@‡BA›  €€†‚@ ‡Â@‡‚A›  @€†F Ŕ€ť‚ @I €‡ÂF ‡BFť‚€ ›  Ŕ€†ÂH ›   €†BC ŚGCG ť‚€‡‚GŔG@€†H ĆI  €ťB€†H ĆBG CČGČťB  €‡ĹĆBE Ç‚ĹĂĹÝ‚ ŤÂ@ €†‚@ ‡Â@‡‚A›  Ŕ€†F Ŕ€ť‚ @I€€†ÂH ›  Ŕ €†H ĆI  €ťB€b€  ă€ą € &      pairs    GetEnemyHeroes 
   MenuRiven 	   ksConfig    WKS    RKS    IKS    ValidTarget    R2    range    recall    getDmg    Q    myHero       đ?   W    GetRDMG    level       4@      I@   health    math    floor    shield    GetDistance    Ready    CastW    R 
   GetSpellData    _R    name    rivenizunablade 
   CastSpell    x    z    IReady 
   IgniteKey      Ŕ‚@                         §a  Ża   	   F @ †@@ ť € ]  @€†@ ‡Á@‡A›   €†AA Ŕ€‚A ÂAť€›  @€†@ ‡Á@‡BÇAÂ‡Á›  € €ŚB  €ťA€b€  ăŔů €       pairs    GetEnemyHeroes 
   MenuRiven    sConfig    UAS    ValidTarget    W    range    uso 	   charName    CastW                          ±a  »a      F @ L@Ŕ Ć€@ ÇŔŔ@ A]@ G@A G€Á ]€€ [   €€FŔA † B Ć€@ ÇŔŔ@ A]@ G@B G€Á ]€€ [   Ŕ €F€B Ą   ÁŔ ]@€ €       myHero    MoveTo 	   mousePos    x    z    E    Ready 
   CastSpell    _E    Q    DelayAction       ŕ?   ·a  ąa        @ F@@ †€@ ‡Ŕ@Ć€@ Ç Á@  €    
   CastSpell    _Q 	   mousePos    x    z                                               ˝a  ża      † @ Ć@@ Ŕ GÁŔ ť@  €    
   CastSpell    _Q    x    z                          Áa  Ĺa   	   ‡ @ ‡@@ť€€ ›   € €†€@ ĆŔ@ ť@  €       W    Ready 
   CastSpell    _W                          Ça  Ëa      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       E    Ready 
   CastSpell    _E    x    z                          Ía  Ýa   h   F @ G@Ŕ G€Ŕ GŔŔ  Á Ŕ €L@A Ç€A ]@€ €F @ G@Ŕ G€Ŕ GŔŔ ŔÁ Ŕ€F B ‡€A ]€ †@B ‡€BŤŔB@ €€F B ‡€A ]€ ‡ C ‡€BĆ@B Ç€ÂŤŔ ŤŔBŽ@C€€ €€L@A Ç€A ]@€€€F @ G@Ŕ G€Ŕ GŔŔ €Ă Ŕ€F@B GŔĂ †@B ‡ DP€€ O@Ä † @ ‡@@‡€@‡€D€€  €L@A Ç€A ]@€ 
€F @ G@Ŕ G€Ŕ GŔŔ ŔÄ €€F B ‡€A ]€ †@B ‡€BŤ E@ Ŕ€F B ‡€A ]€ ‡ C ‡€BĆ@B Ç€ÂŤŔ ŤŔBŽ@CZ€€ Ŕ€F@B GŔĂ †@B ‡ DP€€ O@Ä † @ ‡@@‡€@‡€D€€ € €L@A Ç€A ]@€ €    
   MenuRiven    comboConfig    eConfig    EM       đ?   CastE    Cel        @   GetDistance    myHero    range      @P@   E       >@      @   health 
   maxHealth       Y@   USEE3HP       @     ŔR@                         ßa  ća   +   L @ Ç@@ ]@€G€@ GŔŔ ]€€ [   @€F A L@Á Ć€A ]€€GŔÁ  Â €€F@B ‡@@ Ç€B ÇŔÂ]€€[   Ŕ€F C O@Ă †€C Ź@CM€€ †ŔC M€€ † D M€€ †@D M€€ †€D M€€ ‡@@ ‡ŔD@ € €F E †€A ]@  €       CalcDMGult    Cel    R    Ready    myHero 
   GetSpellData    _R    name    RivenFengShuiEngine    ValidTarget    Q    range    ra       @   rq    rw    rr    ri    ritems    health 
   CastSpell                          ča  ńa   ,   F @ †@@ ť € ]  Ŕ€†@ Ŕ€Â@ Ať€›   €†AA ŚAÂA ť€‡B@B@€†B ŚÁB €GÂ@ GĂ‡Â@ ‡BCÇÂ@ ÇÁĂ@ CFCA ťAXŔC€€Ŕ €†BD ĆÂA DGĂDťB b€  ă@ö €       pairs    GetEnemyHeroes    ValidTarget    R2    range    myHero 
   GetSpellData    _R    name    rivenizunablade    VP    GetConeAOECastPosition    delay    angle    speed         @
   CastSpell    x    z                          óa  b   Ř   †@@ Á€  ť€ € €†@@ Á  ť€ €€†@@ Á€ ť€ €€‚†@@ Á  ť€ €€† @ X€B€€†ŔB Ś C@ ť€€Ć@C XŔ   €@   € €€„†Ŕ@ X€B€€†ŔB Ś CÁ@ ť€€Ć@C XŔ   €@   € € ‡†@A X€B€€†ŔB Ś CAA ť€€Ć@C XŔ   €@   € €€‡†ŔA X€B€€†ŔB Ś CÁA ť€€Ć@C XŔ   €@   € € ‹  	Á€  AÁ Á ÁÁ  A  ÁB C AC  Á „ AÄ Ä ÁÄ  A ¤@€	€€†€F ÁŔ  € FÁB ť€ €€Ś†@F Ć@F AD FÁB GAÇAGĎ ŤŔ € Ž‡ H ‡@Hť€€ ›    €Ś€H  € ť€€›@    €Ŕ €€Ź‡@I ‡@Hť€€ ›   Ŕ€†€F Á@	  € FÁB 	 ť€€›@    €Ŕ € ’‡ J ‡@Hť€€ ›   Ŕ€†€F Á 
  € FÁB 	 ť€€›@    €Ŕ €€“†€J ›   @€†ŔB ‡@GŹ€ ‰Ť€ Ś›@    €Ŕ €€”†@B ›   €€†€F Á   € FÁB ť€ ›@    €Ŕ €€•†€C ›   €€†€F Á€  € FÁB ť€ ›@    €Ŕ €€–† D ›   €€†€F Á   € FÁB ť€ ›@    €Ŕ €€—†ŔC ›   €€†€F Á€  € FÁB ť€ ›@    €Ŕ €€†ŔJ Ć@K ŤŔ ĆŔK ŤŔ Ć@L ŤŔ €€™ € 4      tiamatslot    GetInventorySlotItem      
¨@
   hydraslot      ¨@   brkslot      ˘¨@   bwcslot      ¨@   tiamatready     myHero    CanUseSpell    READY    hydraready 	   brkready 	   bwcready 
   runicpassive       4@      9@      >@     €A@      D@     €F@      I@   aaa    getDmg    AD    ra    level       Y@   rr    R    Ready    GetRDMG            rq    Q       đ?   rw    W    ri    IReady    tmt    TIAMAT    hyd    HYDRA    bwc    BWC    brk    RUINEDKING    ritems                          
b  1b   
^  F @ G@Ŕ G€Ŕ [   Ŕ€FŔ@ ‡ A ]€ [   €€F@A ‡ A ‡€AÇ A ÇŔÁA BAA †B Ć@ ÇAŔÇÁÂÇĂ@ B@ÂBBCF@ GBŔGÂÂG‚Ăť ]@  F @ G@Ŕ GŔĂ [   €€F @ G Ä G@Ä [   @€G€D XŔÄ €€G€D G Ĺ [@  €€F@A ‡€D ‡€AÇ€D ÇŔÁD BAA †B Ć@ ÇAŔÇAĹÇĂ@ B@BEBCF@ GBŔGBĹG‚Ăť ]@  F @ G@Ŕ G€Ĺ [   @	€LŔE ]@ F F †@F ť € ]   €†Á@ Ŕ€‚ ť€›  €€‡ÁF ÇÇ‡ÁXŔD@€†AG ĆG ‚ÁGÂÁ‡ÂÝ ť  ĆÁG ÂF GÇBA ‡‚AŽBHÇÂAÎ‚ČĂ ÝA b€  ă řF @ G@Ŕ G É [    €G@I G€É ]€€ [   Ŕ€F@A †ŔI ‡€AĆŔI ÇŔÁÁI BGAI GĘ†B Ć@ ÇAŔÇAĹÇĂ@ B@BEBCF@ GBŔGBĹG‚Ăť ]@  F @ G@Ŕ G@Ę [   @€G@I G€É ]€€ [    €F@A †ŔI ‡€AĆŔI ÇŔÁÁI BGAI GĘOAĂ†B Ć@ ÇAŔÇAĹÇĂ@ B@BEBCF@ GBŔGBĹG‚Ăť ]@  F @ G@Ŕ G€Ę [    €GŔJ G€É ]€€ [   Ŕ€F@A †ŔI ‡€AĆŔI ÇŔÁÁI BGÁJ GĘ†B Ć@ ÇAŔÇËÇĂ@ B@KBCF@ GBŔGËG‚Ăť ]@  F @ G@Ŕ G@Ë [    €G€K G€É ]€€ [   Ŕ€F@A †ŔI ‡€AĆŔI ÇŔÁÁI BGK GĘ†B Ć@ ÇAŔÇÁËÇĂ@ B@ÂKBCF@ GBŔGÂËG‚Ăť ]@  F @ G@Ŕ G Ě [    €G@L G€É ]€€ [   Ŕ€F@A †ŔI ‡€AĆŔI ÇŔÁÁI BGL GĘ†B Ć@ ÇAŔÇÁĚÇĂ@ B@ÂLBCF@ GBŔGÂĚG‚Ăť ]@  F @ G Í G@Í [    €F @ G Í G€Í [   Ŕ€GŔM XŔÄ  €G N XŔÄ @€F@A ‡ŔM ‡€AÇŔM ÇŔÁÁM BAA †B Ć@ ÇÍÇÎÇĂ@ M‚NBCF@ GÍG‚ÎG‚Ăť ]@  F@A ‡ N ‡€AÇ N ÇŔÁN BAA †B Ć@ ÇÍÇÎÇĂ@ M‚NBCF@ GÍG‚ÎG‚Ăť ]@   € ;   
   MenuRiven    drawConfig    DCT    ValidTarget    Cel    DrawCircle2    x    y    z       Y@   RGB    DCTC        @      @      @   DST    comboConfig    ST    SelectedTarget     dead    DQRC    DD    DmgCalc    pairs    GetEnemyHeroes      Ŕ’@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DQMR    DWR    W    DWRC    DER    E    DERC    DRR    R    R2    DRRC 	   wjConfig    dwjs    Enable    p1    p2      @U@   dwjsc                          3b  eb   
+  F @ †@@ ť € ]  €H€‡Ŕ›A  ŔG€‡ÁŔ›   G€†A ÁA  €F‚A Â ť€ĆA  @€†‚A ÁÂ Ý€BB €€‚€F‚A G‚ÂOB‚…MB†‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂĎBD
‚
CÍ€‚Ŕ €‡‚D ÇÂÄŠĹ@>€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂ@Ŕ €‡‚D ÇÂÄŠBĹ@;€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂ€Ŕ €‡‚D ÇÂÄŠ‚Ĺ@8€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂĎÂEŔŔ €‡‚D ÇÂÄŠĆ 5€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂĎBDŔŔ €‡‚D ÇÂÄŠBĆŔ1€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂŔŔ €‡‚D ÇÂÄŠ‚ĆŔ.€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂ Ŕ €‡‚D ÇÂÄŠÂĆŔ+€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂŔŔ €‡‚D ÇÂÄŠÇ€(€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍŔŔ €‡‚D ÇÂÄŠBÇ@%€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍ‚ŔŔ €‡‚D ÇÂÄŠ‚Ç "€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍBŔŔ €‡‚D ÇÂÄŠÂÇŔ€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂĎÂEÍB‚ŔŔ €‡‚D ÇÂÄŠČ@€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂĎBDÍB‚ŔŔ €‡‚D ÇÂÄŠBČŔ€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍB‚ŔŔ €‡‚D ÇÂÄŠ‚Č€€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍBŔŔ €‡‚D ÇÂÄŠÂČ@€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂÍB‚ŔŔ €‡‚D ÇÂÄŠÉŔ
€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÍB‚ŔŔ €‡‚D ÇÂÄŠBÉ@
€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍ‚ÍB‚ŔŔ €‡‚D ÇÂÄŠ‚ÉŔ€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂÍ‚ŔŔ €‡‚D ÇÂÄŠÂÉ@€‡BĂĆ‚C ÇÂĂÄÝ‚ ŤÂÍÂÍ‚ÍB‚Ŕ€ €‡‚D ÇÂÄŠĘb€  ă€¶ € )      pairs    GetEnemyHeroes    dead    visible    getDmg    Q    myHero       đ?   W    GetRDMG    level       4@      I@   health    math    floor    shield       @   killstring 
   networkID    Harass Him!!! 
   Ignite Kill!    Q Kill!        @
   (2x Q) Kill! 
   (3x Q) Kill!    W Kill!    R Kill! 
   Q+W Kill! 
   Q+R Kill! 
   W+R Kill!    Q+Ignite Kill!    (2x Q)+Ignite Kill!    (3x Q)+Ignite Kill!    W+Ignite Kill!    R+Ignite Kill!    Q+W+Ignite Kill!    Q+R+Ignite Kill!    W+R+Ignite Kill!    Q+W+R Kill!    Q+W+R+Ignite Kill!                          gb  sb      [    €Ç Ŕ Ű   @€Ě@@A  Ý€€Ű   @ €
 Á€€Ě@@AA Ý€€Ű   @ €
€ÁŔ€Ě@@AÁ Ý€€Ű   @ €
 Â  €
@Â € 
      isMe    find    Spell1a    QCount       đ?   Spell1b        @   Spell1c       @                                ub  yb      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         {b  b      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          b  ‰b      [   @€† @ Ŕ € ť€ @@ €‡€Ŕ ŚŔ@ť€ Ś AA ť€€›    €†€A ›   @€‡ŔA ›   € €† B ÇŔA ť@  € 	      GetDistanceSqr      #A   name    lower    find 	   detonate 	   VIP_USER    qpacket    SendPacket                          ‹b  ¨b   u   Ç Ŕ Ű    €Ć@@ Ç€ŔÇŔŔŰ   €
€Ç A Ű   Ŕ	€Ç@A€ÁŔ€ĆŔA Ç ÂÇ@ÂÇ€ÂŰ   @€ÇŔB  Ă€ €Ě@C Ý@  € Ç@A€Ă@€ĆŔA Ç ÂÇŔĂÇ€ÂŰ   Ŕ€Ç D Ç@ÄÝ€€ Ű   €€Ć€D ĚŔÄFE Ý€€Ç@ÁX@ĹŔ €Ć€E E Ý@  € Ć@@ Ç€ŔÇŔŔŰ   Ŕ€ĆŔE A A Ý€€Ű   @€Ç@AX€ÁŔ€Ç@AX@Ć €Ç@AX€Ă@€Ç@AX€Ć€ €Ç@A@Ĺ€ €ĚŔF GA Ý@€ĆŔA Ç ÇÇ@Ç€ÇŔ€Ć@@ Ç€ŔÇŔŔŰ   €€Ç@A€Á€€ÇŔG ÁA BHAHÇ Ý@€ €€ĆŔA Ç ÇÇ@Ç€Č@€Ç@A€Á€€ÇŔG ÁA BHAHÇ Ý@€  € #      isMe    orb    Menu    Combo    Cel    name    RivenTriCleave 
   MenuRiven    comboConfig 	   r2Config    USER1    QCount       @   CastRCombo2    RivenFeint 	   r1Config    R    Ready    myHero 
   GetSpellData    _R    rivenizunablade 
   CastSpell    ValidTarget      ŕp@   RivenMartyr    RivenFengShuiEngine    UseTAH 	   prConfig    ACM       đ?   AnimationCancel    qConfig    qaca        @                         Şb  Äb   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuRiven    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Ćb  ăb   	}   L @ ]Ŕ Á@  X€Ŕ Ŕ€X€@@€Á@ FA €€ €OÁ€  €A AA‡Á ÇÁÁ A Á@ @€ †A €GB NA„‡B ‡ÁBO‡C ‡ÁBM‡B Ž„ÇB ÇÁÂŹÁÇC ÇÁÂŤÁO@@€B AC  @€B €CŔ
€Á@ FA €€ €GB GÁÂMÁĂ‡B ‡ÁBŤÁCO €€D FAD ‡Á ÇÁÁ A  € €
€D GÁ †A ‡ANÁ ÇÁÁ A ÂAÎ‚ E GB GÁÂA FD †AD ÇAÂA]A  € €€Á@ FA €€ €OÁ€@Ŕ€Á@ FA €€ €FÁ@ †A Ŕ ]€@@€D FAD ‡AÇÁAA  € €€A AA†AE ‡AĆAE ÇÁÁA  €       GetWallNear       N@    GetDistanceSqr    myHero    MoveTo    x    z    QCount       @   Q    range    E    Ready        @      I@
   CastSpell    _Q    Vector            normalized 	   mousePos                          ĺb  řb   /   A   @  Ä € A  €€ Ŕ a€FÂ@ †A ĆBA Ç‚ÁĂ@ AÎ  FCA GĂÁ†Ă@ ‡ĂANť‚ ŚBť‚ ŹM‚‚†BB Ć‚B ÁGĂÂ‡ĂÁÝ ť‚  ›  Ŕ € Ă@€Ŕ €Ŕ €X Ă@ € €  €`Áö@€€ _€ € 
        @Ź@      $@           myHero    Vector 	   mousePos    x    z    normalized    IsWall    D3DXVECTOR3    y                           úb  c   C   F @ †@@ Ć€@ ]€€Ŕ  Ě A ÝŔ 
€Á‚
€ÁX€ÁŔ€X€A@€FB €€Ŕ ]€‡AB ‡BÇAB ÇÂŹÁ€€	€FB €€Ŕ ]€@… €Ŕ †FAC ‡CÇĂŽÁÁÁ DGÄB] LAÄ] ‡AB ‡BĆD ĚÁÄFB@ Ý€ĐĹŤÁOMA†AE ĆE ‚ĂGÂĹ‡ÄÝ ť  ›A  @ €
Ŕ€‚
@GAA ‡ÁA _€ €       GetDistance    myHero 	   mousePos       $@   GetStartEnd    p1     p2    GetDistanceSqr    Q    range      ă@   output    Vector    x            z    normalized    VP 
   GetHitBox        @   IsWall    D3DXVECTOR3    y                          c  4c   '   @@€
@ ‹   
€€
@A‚
@A
@Á
@A„
@Á„
@A…
@Á…
@A††€C ĆŔC  FAD †D ť€€€€††€C Ć E  FAD †D ť€€€€‰†@E ĺ   ť@ †€E ĺ@  ť@ †ŔE ›   Ŕ˙† F ĺ€  ť@  €       BaseWindup       @   VP    AfterAttackCallbacks    LastAttack            LastAttack2    lastq    dyn    AnimationTime2    UpTime2    tta    ttm    EEnemyMinions    minionManager 
   MINION_ENEMY      ŕp@   myHero    MINION_SORT_MAXHEALTH_DEC    JJungleMinions    MINION_JUNGLE    AddProcessSpellCallback    AddProcessAttackCallback 	   VIP_USER    AddCreateObjCallback    c  c      …   Ś @   @€ ť@  €       OnProcessSpell                         c  c      …   Ś @   @€ ť@  €       OnProcessAttack                         ,c  3c          €F @ €   ]€ @Ŕ Ŕ€G€@ LŔŔ ]€ L Á Á@ ]€€[   Ŕ€FŔA G Â S € H@ FŔA G Â S € H@€„ € 
      GetDistanceSqr      #A   name    lower    find 	   detonate    tta    math    huge    ttm                                                5c  >c   
<   
@ €‡ @ Ś@@  A  †Á@ Ă€ ť@ ‡ @ Ś@@ AA †A ÁA ť@ ‡ @ Ś@@Á A †AB Ă  ‚ ť@€‡ @ Ś@@Á AÁ †AB Ă  C BCA‚  ť@  ‡ @ Ś@@Á A †AB Ă  C BCAB  ť@  ‡ @ Ś@@ AÁ †AB Ă  C BCA  ť@  †@E ĺ   ť@  €       Menu 	   addParam    Enabled    SCRIPT_PARAM_ONOFF    Hotkeys        SCRIPT_PARAM_INFO    Combo    Combo Mode    SCRIPT_PARAM_ONKEYDOWN       @@   Harass    string    byte    C 
   LaneClear    Lane/Jungle Clear    V    LastHit 	   Last Hit    X    AddTickCallback    =c  =c           @ @  €       OnTick                                              ?c  Oc   8   G @ G@Ŕ [@    € € G @ G€Ŕ [    €GŔ@ Ś A  € ť@€Ŕ€G @ G@Á [   @€G€A ]€€ [@  @ €GŔA ]€€ Ś A  € ť@€@€G @ G Â [   @€G@B ]€€ Ś A  € ť@€Ŕ€G @ G€Â [   Ŕ€G@B ]€€ [@    €GŔ@ Ś A  € ť@€F C G@Ă ]€€ N€Ă 
@€… €       Menu    Enabled    Combo    forcetarget    OrbWalk 
   LaneClear    FarmMinion 
   JungleMinion    LastHit    KillableMinion    Harass    dyn    os    clock ńhăµřä>                         Pc  ac   @   Ç Ŕ Ű   Ŕ€Ç@@Ě€ŔAÁ  Ý€€Ű   @
€Ć A Ç@ÁÝ€€ A Î Ŕ€€€Ç@BB ÁBĎ ĐŔ †Ŕ „Ě€C Ý€ 
Ŕ€†Ě€C Ý€ 
Ŕ€‡Ç@D
Ŕ Ç@B
Ŕ ‰Ć€B ÇŔÂĎ ĹĐŔ †
Ŕ€‰Ć€B ÇŔÂĎ€ĹĐŔ †
Ŕ€ŠĆ A Ç@ÁÝ€€ ÁD Í AC Î 
Ŕ€‹Ć A Ç@ÁÝ€€ AE Í AC Î ÍŔÁ
Ŕ ŚĆ@F %  AÁ Ý@€ €       isMe    name    find    RivenBasicAttack    os    clock    lastq µ¦yÇ):‚?   BaseWindup    windUpTime    myHero    attackSpeed       đ?   LastAttack    GetTime    LastAttack2    AnimationTime2    animationTime    UpTime2    lat       ä?   lwt ÇťŇÁú˙
@   tta    ttm    DelayAction    ^c  ^c           @ †@@ @€ €       AfterAttack    forcetarget                                              bc  kc      Ç Ŕ Ű   €€Ç@@Ě€ŔAÁ  Ý€€Ű    €Ć@A Ç€ÁÝ€€ 
Ŕ ‚Ć B Ç@ÂÓ €
Ŕ€Ć B Ç@ÂÓ €
Ŕ …
 Ă… € 
      isMe    name    find    RivenTriCleave    lastq    os    clock    tta    math    huge    ttm    LastAttack2                                  mc  sc      A   †@@ Ŕ   ť€ ›    €†€@ ÇŔ@    ť€€P A†@A ‡€AĆ€@ AA FAA GÁŔÝ€€ŤŔ Ť@ ź   €          I@   ValidTarget    GetDistance    minBBox        @   myHero    range                          tc  yc      † @ ‡@@Ć @ Ç€ŔŤŔ ĆŔ@  € Ý€ Ŕ 
AY   €A  €   €       myHero    range    boundingRadius    GetDistance      Đg@                         zc  c   
€   ‡ @ ‡@@›   €
€[   €€Ś€@ ť€ ›   €€†Ŕ@ Ŕ € ť€ ›   @€Ś A  € ť€€›    €†@A Ś€A € ť@€@€ŚŔA ť€ ›   @€†@A Ś BAB FAA  B†AB ĆÁB ť ĆC ÂB Ý ĐÁ† CFAB †AA ] LÂĆAB ÂB Ý C FÂB ‚ ‚†] GÁĂť@ Ŕ€[   Ŕ€† D ‡@Dť€€ Ç€D ÁD Í Î Ĺ€€€€†Ŕ@ Ŕ € ť€ ›   @€Ś A  € ť€€›    €†@A Ś€A € ť@€@
€† D ‡@Dť€€ Ç€D AE Í €€@€† C ĆŔB ť€ € ‹ €†@A Ś BAB FAA  B†AB ĆÁB ť ĆC ÂB Ý ĐÁ† CFAB †AA ] LÂĆAB ÂB Ý C FÂB ‚ ‚†] GÁĂť@  €       Menu    Combo 
   CanAttack    ValidTarget 
   isInRange    myHero    Attack    CanMove    MoveTo    Vector    lerp 	   mousePos    GetDistance      @o@   x    z    os    clock    LastAttack2    AnimationTime2 š™™™™™Ů?   UpTime2       ^@                         ‰c  ‹c      
@ € €       forcetarget                         Śc  Žc      F @ G@Ŕ ^ € _    €       os    clock                          Źc  ’c   
   G @ G@Ŕ †€@ ‡Ŕ@Ç A ŹŔ €€‚Ç @ Ç@ŔĐ€ÁŤŔ ź   €       Menu    AAD    myHero    attackSpeed    BaseWindupTime       đ?     @Ź@                         “c  c      G @ ‡@@ Ç€@ ŽŔ @ @ €C € _  C   _   €       dyn    tta    LastAttack                         ™c  žc      G @ ‡@@ Ç€@ ŽŔ @ €€FŔ@ † A ]€ @€‚@ €C € _  C   _   €       dyn    ttm    LastAttack    GetDistance 	   mousePos      @P@                         źc  ˇc      F @ G@Ŕ [@  Ŕ€F @ G€Ŕ [@  Ŕ€F @ GŔŔ [   @€F @ GŔŔ G Á @ €C@  C € _   €       _G    evade    Evade    EzEvade    Evading                          ˘c  ¦c   	
   † @ Ç@@ ť € €Ŕ  € ÝA ˘€  #ţ €       ipairs    AfterAttackCallbacks                          §c  ©c      † @ ‡@@Ç€@  € ť@€ €       table    insert    AfterAttackCallbacks                          Şc  ´c   .   F @ L@Ŕ ]@ F€@ † @ ‡Ŕ@] €€†A ‡AAĆA ŹÁŤBĆAB ĚÂ@€†ÂB ť‚€ CÝ BB BC†A Ŕ€C  
ĂC‡A ‚ FD €€ĆA ÇBÄÍ‚ÄÍ‚Ä]‚€[   € ‚€ €Ŕ‰  €_ b€  ă€ö €       EEnemyMinions    update    pairs    objects    myHero    attackSpeed    BaseWindup       đ?           VP    GetPredictedHealth    GetLatency      @Ź@   CalcDamageOfAttack    name    Basic    ValidTarget    range      @P@      4Ŕ                         µc  Ľc   	   F @ L@Ŕ ]@ F€@ † @ ‡Ŕ@] @€†A Ŕ€BA ‚A
ÂA
ÂAť€›    €_ b€  ăŔü €       EEnemyMinions    update    pairs    objects    ValidTarget    myHero    range      @P@                         ˝c  Äc   	   F @ L@Ŕ ]@ F€@ † @ ‡Ŕ@] @€†A Ŕ€BA ‚A
ÂA
ÂAť€›    €_ b€  ăŔü €       JJungleMinions    update    pairs    objects    ValidTarget    myHero    range      @P@                         Çc  Oe   1	  K 
 ‹Ŕ  ŠŔ@Š@A‚ŠŔAJ€€€‹Ŕ  ŠŔ@Š@B‚ŠŔAJ€ „‹Ŕ  ŠŔBŠ@A‚ŠŔAJ€ …‹Ŕ  ŠŔBŠ@B‚ŠŔAJ€ †‹Ŕ  ŠŔBŠ€C‚ŠŔAJ€€†‹Ŕ  Š DŠ@A‚Š@DJ€€‡‹Ŕ  Š DŠ@B‚ŠŔAJ€ ‰‹Ŕ  Š DŠ€C‚Š@DJ€€‰‹Ŕ  Š@EŠ@A‚Š@DJ€ Š‹Ŕ  Š@EŠŔE‚Š@DJ€ ‹‹Ŕ  Š@FŠ@A‚ŠŔAJ€ Ś‹Ŕ  Š@FŠŔE‚ŠŔAJ€ Ť‹Ŕ  Š@FŠ@B‚ŠŔAJ€€Ť‹Ŕ  Š@FŠ€C‚ŠŔAJ€ Ž‹Ŕ  Š€GŠ@A‚ŠŔAJ€€Ž‹Ŕ  Š€GŠ@B‚Š@DJ€€Ź‹Ŕ  Š€GŠ€C‚ŠŔAJ€ ‹Ŕ  Š€HŠ@A‚Š@DJ€€‹Ŕ  Š€HŠŔE‚Š@DJ€€‘‹Ŕ  Š€HŠ€C‚Š@DJ€ ’‹Ŕ  Š€IŠŔE‚ŠŔAJ€€’‹Ŕ  Š€IŠ€C‚ŠŔAJ€€“‹Ŕ  Š@JŠ@A‚ŠŔAJ€ ”‹Ŕ  Š@JŠ@B‚ŠŔAJ€ •‹Ŕ  Š@JŠ€C‚ŠŔAJ€€•‹Ŕ  Š@KŠ@A‚ŠŔAJ€ –‹Ŕ  Š@KŠŔE‚ŠŔAJ€ —‹Ŕ  Š@KŠ@B‚Š@DJ€€—‹Ŕ  Š@KŠ€C‚Š@DJ€ ‹Ŕ  Š€LŠ@A‚ŠŔAJ€€‹Ŕ  Š€LŠ@A‚ŠŔAJ€€™‹Ŕ  Š€LŠ€C‚ŠŔAJ€ š‹Ŕ  Š€MŠ@A‚ŠŔAJ€€š‹Ŕ  Š€MŠŔE‚ŠŔAJ€€›‹Ŕ  Š€MŠ@B‚ŠŔAJ€ ś‹Ŕ  Š€MŠ€C‚Š@DJ€€ś‹Ŕ  ŠŔNŠ@A‚ŠŔAJ€ ť‹Ŕ  ŠŔNŠŔE‚ŠŔAJ€ ž‹Ŕ  ŠŔNŠ@B‚Š@DJ€€ž‹Ŕ  ŠŔNŠ€C‚ŠŔAJ€ ź‹Ŕ  Š PŠ@A‚ŠŔAJ€€ź‹Ŕ  Š PŠŔE‚ŠŔAJ€€ ‹Ŕ  Š PŠ@B‚Š@DJ€ ˇ‹Ŕ  Š PŠ€C‚Š@DJ€€ˇ‹Ŕ  Š@QŠ@A‚ŠŔAJ€ ˘‹Ŕ  Š@QŠŔE‚ŠŔAJ€ Ł‹Ŕ  Š@QŠ@B‚ŠŔAJ€€Ł‹Ŕ  Š@QŠ€C‚ŠŔAJ€ ¤‹Ŕ  Š€RŠ@A‚Š@DJ€€¤‹Ŕ  Š€RŠ@B‚Š@DJ€€Ą‹Ŕ  Š€RŠ€C‚Š@DJ€ ¦‹Ŕ  Š€SŠ@A‚ŠŔAJ€€¦‹Ŕ  Š€SŠŔE‚ŠŔAJ€€§‹Ŕ  Š€SŠ@B‚ŠŔAJ€ ¨‹Ŕ  Š€SŠ€C‚Š@DJ€€¨‹€  ŠŔTŠ@A‚J€ ©‹Ŕ  ŠŔTŠŔE‚ŠŔAJ€ Ş‹Ŕ  Š€UŠ@B‚Š@DJ€€Ş‹Ŕ  Š€UŠ€C‚Š@DJ€€«‹Ŕ  Š@VŠ@A‚Š@DJ€ ¬‹Ŕ  Š@VŠŔE‚ŠŔAJ€ ­‹Ŕ  Š@VŠ@B‚ŠŔAJ€€­‹Ŕ  Š@VŠ@A‚ŠŔAJ€ ®‹Ŕ  Š@VŠŔE‚ŠŔAJ€€®‹Ŕ  Š@VŠ@B‚Š@DJ€ Ż‹Ŕ  Š@VŠ@B‚Š@DJ€€Ż‹Ŕ  Š@XŠ@A‚ŠŔAJ€ °‹Ŕ  Š@XŠ@B‚Š@DJ€ ±‹Ŕ  Š@XŠ€C‚ŠŔAJ€€±‹Ŕ  Š@YŠ@A‚ŠŔAJ€ ˛‹Ŕ  Š@YŠŔE‚ŠŔAJ€ ł‹Ŕ  Š@YŠ@B‚Š@DJ€€ł‹Ŕ  Š@YŠ€C‚ŠŔAJ€ ´‹Ŕ  Š€ZŠ@A‚Š@DJ€€´‹Ŕ  Š€ZŠŔE‚Š@DJ€€µ‹Ŕ  Š€ZŠ@B‚Š@DJ€ ¶‹Ŕ  Š€ZŠ€C‚ŠŔAJ€€¶‹Ŕ  ŠŔ[Š@A‚Š@DJ€ ·‹Ŕ  ŠŔ[Š€C‚Š@DJ€ ¸‹Ŕ  Š€\Š@A‚Š@DJ€€¸‹Ŕ  Š€\Š@B‚ŠŔAJ€€ą‹Ŕ  Š€\Š@B‚ŠŔAJ€ ş‹Ŕ  Š€\Š€C‚ŠŔAJ€€ş‹Ŕ  ŠŔ]Š@A‚ŠŔAJ€ »‹Ŕ  ŠŔ]Š@B‚ŠŔAJ€ Ľ‹Ŕ  ŠŔ]Š€C‚ŠŔAJ€€Ľ‹Ŕ  ŠŔ^Š@A‚Š@DJ€ ˝‹Ŕ  ŠŔ^Š€C‚ŠŔAJ€ ľ‹Ŕ  Š€_Š@A‚ŠŔAJ€€ľ‹Ŕ  Š€_Š@B‚ŠŔAJ€€ż‹Ŕ  Š€_Š€C‚Š@DJ€ Ŕ‹Ŕ  Š€`Š@A‚ŠŔAJ€€Ŕ‹Ŕ  Š€`Š@A‚ŠŔAJ€€Á‹Ŕ  Š€`ŠŔE‚Š@DJ€ Â‹Ŕ  Š€`ŠŔE‚ŠŔAJ€€Â‹Ŕ  Š€`Š@B‚ŠŔAJ€ Ă‹Ŕ  Š€`Š€C‚ŠŔAJ€€Ă‹Ŕ  Š@bŠ@A‚ŠŔAJ€ Ä‹Ŕ  Š@bŠ@A‚ŠŔAJ€ Ĺ‹Ŕ  Š@bŠ@B‚ŠŔAJ€€Ĺ‹Ŕ  Š@bŠ€C‚ŠŔAJ€ Ć‹Ŕ  Š€cŠ@A‚ŠŔAJ€€Ć‹Ŕ  Š€cŠŔE‚ŠŔAJ€€Ç‹Ŕ  Š€cŠŔE‚ŠŔAJ€ Č‹Ŕ  Š€cŠ€C‚ŠŔAJ€€Č‹Ŕ  ŠŔdŠ@A‚ŠŔAJ€ É‹Ŕ  ŠŔdŠŔE‚ŠŔAJ€ Ę‹Ŕ  ŠŔdŠ€C‚ŠŔAJ€€Ę‹Ŕ  ŠŔeŠ@A‚ŠŔAJ€ Ë‹Ŕ  ŠŔeŠŔE‚ŠŔAJ€ Ě‹Ŕ  ŠŔeŠ@B‚ŠŔAJ€€Ě‹Ŕ  ŠŔfŠ@A‚Š@DJ€ Í‹Ŕ  ŠŔfŠ@B‚Š@DJ€ Î‹Ŕ  ŠŔfŠ€C‚ŠŔAJ€€Î‹Ŕ  ŠŔgŠ@A‚ŠŔAJ€ Ď‹Ŕ  ŠŔgŠŔE‚Š@DJ€ Đ‹Ŕ  Š€hŠ@A‚ŠŔAJ€€Đ‹Ŕ  Š€hŠ@B‚ŠŔAJ€€Ń‹Ŕ  Š€hŠ€C‚ŠŔAJ€ Ň‹Ŕ  Š€iŠ@A‚Š@DJ€€Ň‹Ŕ  Š€iŠ@BÔŠŔAJ€€Ó‹Ŕ  Š€jŠ@A‚Š@DJ€€Ô‹Ŕ  Š€jŠŔE‚ŠŔAJ€€Ő‹Ŕ  Š€jŠ@B‚Š@DJ€ Ö‹Ŕ  Š€jŠ@A‚ŠŔAJ€€Ö‹Ŕ  Š€jŠŔE‚ŠŔAJ€ ×‹Ŕ  Š€jŠ@B‚ŠŔAJ€€×‹Ŕ  Š@lŠŔE‚ŠŔAJ€ Ř‹Ŕ  Š@lŠ€C‚ŠŔAJ€ Ů‹Ŕ  Š mŠ@A‚ŠŔAJ€€Ů‹Ŕ  Š mŠŔE‚ŠŔAJ€€Ú‹Ŕ  Š mŠ@B‚ŠŔAJ€ Ű‹Ŕ  Š mŠ€C‚ŠŔAJ€€Ű‹Ŕ  Š@nŠ@A‚ŠŔAJ€ Ü‹Ŕ  Š@nŠŔE‚Š@DJ€ Ý‹Ŕ  Š oŠ@A‚Š@DJ€€Ý‹Ŕ  Š oŠŔE‚ŠŔAJ€€Ţ‹Ŕ  Š oŠ@B‚ŠŔAJ€ ß‹Ŕ  Š oŠ€C‚ŠŔAJ€€ß‹Ŕ  Š@pŠ@A‚Š@DJ€ ŕ‹Ŕ  Š@pŠŔE‚ŠŔAJ€ á‹Ŕ  Š@pŠ@B‚Š@DJ€€á‹Ŕ  Š@pŠ€C‚ŠŔAJ€ â‹Ŕ  Š€qŠ@A‚Š@DJ€€â‹Ŕ  Š€qŠ@B‚ŠŔAJ€€ă‹€  Š@rŠ@A‚J€ ä‹Ŕ  Š@rŠŔE‚ŠŔAJ€ ĺ‹Ŕ  Š@rŠ€C‚ŠŔAJ€€ĺ‹Ŕ  Š@sŠ@A‚Š@DJ€ ć‹Ŕ  Š@sŠŔE‚ŠŔAJ€ ç‹Ŕ  Š@sŠ@B‚ŠŔAJ€€ç‹Ŕ  Š@sŠ@A‚Š@DJ€ č‹Ŕ  Š@sŠŔE‚ŠŔAJ€€č‹Ŕ  Š@sŠ@B‚ŠŔAJ€ é‹Ŕ  Š uŠ@A‚ŠŔAJ€€é‹Ŕ  Š uŠŔE‚ŠŔAJ€€ę‹Ŕ  Š uŠ@B‚ŠŔAJ€ ë‹Ŕ  Š uŠ€C‚ŠŔAJ€€ë‹Ŕ  Š@vŠ@A‚Š@DJ€ ě‹Ŕ  Š@vŠŔE‚ŠŔAJ€ í‹Ŕ  Š@vŠ@B‚ŠŔAJ€€í‹Ŕ  Š@vŠ€C‚Š@DJ€ î‹Ŕ  Š@vŠ€C‚ŠŔAJ€€î‹Ŕ  Š@vŠ€C‚ŠŔAJ€ ď‹Ŕ  Š xŠ@A‚ŠŔAJ€€ď‹Ŕ  Š xŠŔE‚ŠŔAJ€€đ‹Ŕ  Š xŠ@B‚ŠŔAJ€ ń‹Ŕ  Š xŠ€C‚Š@DJ€€ń‹Ŕ  Š xŠ@A‚Š@DJ€ ň‹Ŕ  Š xŠŔE‚ŠŔAJ€€ň‹Ŕ  Š xŠ@B‚ŠŔAJ€ ó‹Ŕ  Š zŠ@A‚ŠŔAJ€€ó‹Ŕ  Š zŠ@B‚ŠŔAJ€€ô‹Ŕ  Š zŠ@B‚ŠŔAJ€ ő‹Ŕ  Š zŠ€C‚ŠŔAJ€€ő‹Ŕ  Š@{Š@A‚ŠŔAJ€ ö‹Ŕ  Š@{ŠŔE‚ŠŔAJ€ ÷‹Ŕ  Š@{Š@B‚ŠŔAJ€€÷‹Ŕ  Š@{Š€C‚ŠŔAJ€ ř‹Ŕ  Š€|Š@A‚Š@DJ€€ř‹Ŕ  Š€|ŠŔE‚ŠŔAJ€€ů‹Ŕ  Š€|Š€C‚ŠŔAJ€ ú‹Ŕ  Š€}Š@A‚ŠŔAJ€€ú‹Ŕ  Š€}ŠŔE‚Š@DJ€€ű‹Ŕ  Š€}Š@B‚Š@DJ€ ü‹Ŕ  Š€~Š@A‚ŠŔAJ€€ü‹Ŕ  Š€~Š@B‚ŠŔAJ€€ý‹Ŕ  Š€~Š@B‚ŠŔAJ€ ţ‹Ŕ  Š€~Š€C‚ŠŔAJ€€ţ‹Ŕ  ŠŔŠ@A‚Š@DJ€ ˙ @ ËŔ  ĘŔĘ@B‚ĘŔAJŔ @@ ËŔ  ĘŔĘ€C‚ĘŔAJŔ €@ ËŔ  Á@ Ę Ę@A‚Ę@DJŔ  A ËŔ  Á@ Ę ĘŔE‚ĘŔAJŔ @A ËŔ  Á@ Ę Ę@B‚Ę@DJŔ €A ËŔ  Á@ Ę Ę€C‚Ę@DJŔ ŔA ËŔ  B Ę Ę@A‚ĘŔAJŔ @B ËŔ  B Ę ĘŔE‚Ę@DJŔ €B ËŔ  B Ę Ę@B‚ĘŔAJŔ ŔB ËŔ  B Ę Ę€C‚ĘŔAJŔ  C ËŔ  AC Ę Ę@A‚Ę@DJŔ €C ËŔ  ÁC Ę Ę@A‚Ę@DJŔ  D ËŔ  ÁC Ę Ę@B‚ĘŔAJŔ @D ËŔ  ÁC Ę Ę€C‚ĘŔAJŔ €D ËŔ  ÁD Ę Ę@A‚ĘŔAJŔ  E ËŔ  ÁD Ę Ę@B‚ĘŔAJŔ @E ËŔ  ÁD Ę Ę€C‚Ę@DJŔ €E ËŔ  ÁE Ę Ę@A‚ĘŔAJŔ  F ËŔ  ÁE Ę ĘŔE‚ĘŔAJŔ @F ËŔ  ÁE Ę Ę€C‚ĘŔAJŔ €F ËŔ  ÁF Ę Ę@A‚ĘŔAJŔ  G ËŔ  ÁF Ę ĘŔE‚Ę@DJŔ @G ËŔ  ÁF Ę Ę@B‚ĘŔAJŔ €G ËŔ  ÁF Ę Ę€C‚ĘŔAJŔ ŔG ËŔ  H Ę Ę@A‚ĘŔAJŔ @H ËŔ  H Ę ĘŔE‚Ę@DJŔ €H ËŔ  H Ę Ę@B‚ĘŔAJŔ ŔH ËŔ  I Ę Ę@A‚ĘŔAJŔ @I ËŔ  I Ę Ę@B‚ĘŔAJŔ €I ËŔ  I Ę Ę€C‚Ę@DJŔ ŔI ËŔ  J Ę Ę@A‚ĘŔAJŔ @J ËŔ  J Ę ĘŔE‚ĘŔAJŔ €J ËŔ  J Ę Ę@B‚ĘŔAJŔ ŔJ ËŔ  J Ę Ę@A‚ĘŔAJŔ  K ËŔ  J Ę ĘŔE‚ĘŔAJŔ @K ËŔ  J Ę Ę@B‚ĘŔAJŔ €K ËŔ  ÁK Ę Ę@A‚ĘŔAJŔ  L ËŔ  ÁK Ę Ę@B‚Ę@DJŔ @L ËŔ  L Ę Ę@B‚Ę@DJŔ ŔL ËŔ  L Ę Ę€C‚ĘŔAJŔ  M ËŔ  AM Ę Ę@A‚ĘŔAJŔ €M ËŔ  AM Ę Ę@B‚Ę@DJŔ ŔM ËŔ  N Ę Ę@A‚ĘŔAJŔ @N ËŔ  N Ę ĘŔE‚ĘŔAJŔ €N ËŔ  N Ę Ę€C‚ĘŔAJŔ ŔN ËŔ  O Ę Ę@A‚Ę@DJŔ @O ËŔ  O Ę ĘŔE‚Ę@DJŔ €O ËŔ  O Ę Ę@B‚ĘŔAJŔ ŔO ËŔ  P Ę Ę@A‚ĘŔAJŔ @P ËŔ  P Ę Ę@B‚Ę@DJŔ €P ËŔ  ÁP Ę Ę@A‚ĘŔAJŔ  Q ËŔ  ÁP Ę Ę@B‚Ę@DJŔ @Q ËŔ  Q Ę Ę@A‚ĘŔAJŔ ŔQ ËŔ  Q Ę Ę@B‚Ę@DJŔ  R ËŔ  Q Ę Ę€C‚ĘŔAJŔ @R ËŔ  R Ę Ę@A‚ĘŔAJŔ ŔR ËŔ  R Ę ĘŔE‚ĘŔAJŔ  S ËŔ  R Ę Ę@B‚ĘŔAJŔ @S ËŔ  S Ę Ę@A‚ĘŔAJŔ ŔS ËŔ  S Ę Ę@B‚ĘŔAJŔ  T ËŔ  AT Ę Ę@A‚ĘŔAJŔ €T ËŔ  AT Ę Ę@A‚ĘŔAJŔ ŔT ËŔ  AT Ę ĘŔE‚ĘŔAJŔ  U ËŔ  AT Ę Ę€C‚ĘŔAJŔ @U ËŔ  AT Ę Ę€C‚ĘŔAJŔ €U ËŔ  ÁU Ę Ę@A‚ĘŔAJŔ  V ËŔ  ÁU Ę Ę@B‚ĘŔAJŔ @V ËŔ  ÁU Ę Ę€C‚ĘŔAJŔ €V ËŔ  ÁV Ę Ę@A‚Ę@DJŔ  W ËŔ  ÁV Ę ĘŔE‚Ę@DJŔ @W ËŔ  ÁV Ę Ę@B‚Ę@DJŔ €W ËŔ  ÁW Ę Ę@A‚ĘŔAJŔ  X ËŔ  ÁW Ę Ę€C‚ĘŔAJŔ @X ËŔ  X Ę Ę@A‚ĘŔAJŔ ŔX ËŔ  X Ę ĘŔE‚ĘŔAJŔ  Y ËŔ  X Ę Ę@B‚Ę@DJŔ @Y ËŔ  Y Ę Ę@A‚Ę@DJŔ ŔY ËŔ  Y Ę Ę@B‚ĘŔAJŔ  Z ËŔ  AZ Ę Ę@B‚ĘŔAJŔ €Z ËŔ  AZ Ę Ę€C‚ĘŔAJŔ ŔZ ËŔ  [ Ę Ę@A‚ĘŔAJŔ @[ ËŔ  [ Ę ĘŔE‚ĘŔAJŔ €[ ËŔ  [ Ę Ę@B‚Ę@DJŔ Ŕ[ ËŔ  \ Ę Ę@A‚Ę@DJŔ @\ ËŔ  \ Ę Ę@A‚ĘŔAJŔ Ŕ\ ËŔ  ] Ę Ę@A‚ĘŔAJŔ @] ËŔ  ] Ę Ę@B‚ĘŔAJŔ €] ËŔ  ] Ę Ę€C‚Ę@DJŔ Ŕ] ËŔ  ^ Ę Ę@A‚Ę@DJŔ @^ ËŔ  ^ Ę ĘŔE‚ĘŔAJŔ €^ ËŔ  ^ Ę Ę@B‚ĘŔAJŔ Ŕ^ ËŔ  ^ Ę Ę€C‚ĘŔAJŔ  _ ËŔ  A_ Ę Ę@A‚ĘŔAJŔ €_ ËŔ  A_ Ę Ę@B‚Ę@DJŔ Ŕ_ ËŔ  ` Ę Ę@A‚Ę@DJŔ @` ËŔ  ` Ę ĘŔE‚ĘŔAJŔ €` ËŔ  ` Ę Ę@B‚Ę@DJŔ Ŕ` ËŔ  ` Ę Ę€C‚ĘŔAJŔ  a ËŔ  Aa Ę Ę@A‚ĘŔAJŔ €a ËŔ  Aa Ę ĘŔE‚ĘŔAJŔ Ŕa ËŔ  Aa Ę Ę@B‚ĘŔAJŔ  b ËŔ  Aa Ę Ę€C‚Ę@DJŔ @b ËŔ  b Ę ĘŔE‚ĘŔAJŔ Ŕb ËŔ  b Ę Ę@B‚Ę@DJŔ  c ËŔ  Ac Ę ĘŔE‚ĘŔAJŔ €c ËŔ  Ac Ę Ę@B‚Ę@DJŔ Ŕc ËŔ  Ac Ę Ę€C‚ĘŔAJŔ  d ËŔ  Ad Ę Ę@A‚Ę@DJŔ €d ËŔ  Ád Ę Ę@A‚ĘŔAJŔ  e ËŔ  Ád Ę Ę@B‚ĘŔAJŔ @e ËŔ  Ád Ę Ę€C‚ĘŔAJŔ €e ËŔ  Áe Ę ĘŔE‚ĘŔAJŔ  f ËŔ  Áe Ę Ę@B‚Ę@DJŔ @f ËŔ  Áe Ę Ę€C‚Ę@DJŔ €f ËŔ  Áf Ę Ę@A‚Ę@DJŔ  g ËŔ  Áf Ę Ę€C‚Ę@DJŔ @g ËŔ  g Ę Ę@B‚ĘŔAJŔ Ŕg ËŔ  h Ę Ę@A‚ĘŔAJŔ @h ËŔ  h Ę ĘŔE‚ĘŔAJŔ Ŕh ËŔ  h Ę ĘŔE‚ĘŔAJŔ  i ËŔ  h Ę Ę@B‚ĘŔAJŔ @i ËŔ  i Ę Ę@A‚ĘŔAJŔ Ŕi ËŔ  i Ę ĘŔE‚ĘŔAJŔ  j ËŔ  i Ę Ę@B‚ĘŔAJŔ @j ËŔ  i Ę Ę€C‚ĘŔAJŔ €j ËŔ  Áj Ę Ę@A‚ĘŔAJŔ  k ËŔ  Áj Ę Ę@B‚ĘŔAJŔ @k ËŔ  Áj Ę Ę€C‚Ę@DJŔ €k ËŔ  Ák Ę Ę@A‚ĘŔAJŔ  l ËŔ  Ák Ę Ę@B‚ĘŔAJŔ @l ËŔ  Ák Ę Ę€C‚ĘŔAJŔ €l ËŔ  Ál Ę Ę@B‚Ę@DJŔ  m ËŔ  Am Ę Ę@A‚Ę@DJŔ €m ËŔ  Am Ę ĘŔE‚ĘŔAJŔ Ŕm ËŔ  Am Ę Ę@B‚ĘŔAJŔ  n ËŔ  Am Ę Ę€C‚Ę@DJŔ @n ËŔ  n Ę Ę@A‚Ę@DJŔ Ŕn ËŔ  n Ę Ę@A‚Ę@DJŔ  o ËŔ  n Ę Ę@A‚Ę@DJŔ @o ËŔ  n Ę ĘŔE‚ĘŔAJŔ €o ËŔ  n Ę Ę@B‚ĘŔAJŔ Ŕo ËŔ  n Ę Ę€C‚ĘŔAJŔ  p ËŔ  Ap Ę Ę@A‚ĘŔAJŔ €p ËŔ  Ap Ę Ę€C‚Ę@DJŔ Ŕp ËŔ  q Ę Ę@A‚Ę@DJŔ @q ËŔ  q Ę ĘŔE‚ĘŔAJŔ €q ËŔ  q Ę Ę@B‚ĘŔAJŔ Ŕq ËŔ  q Ę Ę€C‚ĘŔAJŔ  r ËŔ  Ar Ę Ę@A‚Ę@DJŔ €r ËŔ  Ar Ę Ę@B‚ĘŔAJŔ Ŕr ËŔ  Ar Ę Ę€C‚ĘŔAJŔ  s ËŔ  As Ę Ę@A‚ĘŔAJŔ €s ËŔ  As Ę ĘŔE‚Ę@DJŔ Ŕs ËŔ  As Ę Ę@B‚ĘŔAJŔ  t ËŔ  At Ę Ę@A‚Ę@DJŔ €t ËŔ  At Ę Ę€C‚Ę@DJŔ Ŕt ËŔ  u Ę Ę@A‚ĘŔAJŔ @u ËŔ  u Ę Ę@B‚Ę@DJŔ €u ËŔ  u Ę Ę€C‚ĘŔAJŔ Ŕu ËŔ  u Ę Ę€C‚ĘŔAJŔ  v ËŔ  Av Ę Ę@A‚ĘŔAJŔ €v ËŔ  Av Ę ĘŔE‚ĘŔAJŔ Ŕv ËŔ  Av Ę Ę@B‚ĘŔAJŔ  w ËŔ  Av Ę Ę€C‚Ę@DJŔ @w ËŔ  w Ę Ę@B‚Ę@DJŔ Ŕw ËŔ  w Ę Ę€C‚ĘŔAJŔ  x ËŔ  Ax Ę Ę@A‚ĘŔAJŔ €x ËŔ  Ax Ę Ę@A‚ĘŔAJŔ Ŕx ËŔ  Ax Ę Ę@A‚ĘŔAJŔ  y ËŔ  Ax Ę Ę@B‚Ę@DJŔ @y ËŔ  Ax Ę Ę€C‚ĘŔAJŔ €y ËŔ  Áy Ę Ę@A‚ĘŔAJŔ  z ËŔ  Áy Ę ĘŔE‚ĘŔAJŔ @z ËŔ  Áy Ę Ę@B‚Ę@DJŔ €z ËŔ  Áz Ę Ę@A‚ĘŔAJŔ  { ËŔ  Áz Ę ĘŔE‚ĘŔAJŔ @{ ËŔ  Áz Ę Ę@B‚ĘŔAJŔ €{ ËŔ  Á{ Ę Ę@A‚ĘŔAJŔ  | ËŔ  Á{ Ę Ę€C‚Ę@DJŔ @| ËŔ  | Ę Ę@A‚ĘŔAJŔ Ŕ| ËŔ  | Ę ĘŔE‚ĘŔAJŔ  } ËŔ  | Ę Ę@B‚ĘŔAJŔ @} ËŔ  | Ę Ę€C‚ĘŔAJŔ €} ËŔ  Á} Ę Ę@A‚Ę@DJŔ  ~ ËŔ  Á} Ę Ę@B‚Ę@DJŔ @~ ËŔ  ~ Ę Ę@A‚ĘŔAJŔ Ŕ~ ËŔ  ~ Ę Ę@B‚ĘŔAJŔ   ËŔ  ~ Ę Ę€C‚ĘŔAJŔ 
@ €A@ ‹  Á€ ĆŔ  Á  A€ FA A€ † ¤@ 
€€ A€€ ‹  Á@ Á AA  ¤@ 
€€ AŔ€   †€  ť€€ 
€€ A@ F@  Ŕ€ ‡€  ] €€A † ÁA ÇÁ ť€
€Ç@  € €AĂ CÇŰ   €Á‚ ĆÂ C‚ Ç‚ ÇAĂ‚ ĚBA FC „ Ś„  ť€ÁĂ ‡Ă]  † ÇŔť ÁC   A„€ GD GD‚„ –Á ĆĂ € ÝB ˘  #‚ôb€  ă€ňAŔ F@  Ą   ]@  €   
   Shieldspells    AatroxQ 	   charName    Aatrox 
   spellSlot    Q 
   SpellType 
   skillshot    AatroxE    E    AhriOrbofDeception    Ahri    AhriSeduce    AhriTumble    R 
   AkaliMota    Akali    castcel    AkaliShadowSwipe    AkaliShadowDance 
   Pulverize    Alistar 	   Headbutt    W    BandageToss    Amumu    AuraofDespair    Tantrum    CurseoftheSadMumm    FlashFrost    Anivia 
   Frostbite 
   GlacialStorm 
   Disintegrate    Annie    Incinerate    InfernalGuardian    Volley    Ashe    EnchantedCrystalArrow    RocketGrab    Blitzcrank 
   PowerFist    StaticField    BrandBlaze    Brand 
   BrandFissure    BrandConflagration    BrandWildfire    BraumQ    Braum 
   BraumQMissle    BraumR    CaitlynPiltoverPeacemaker    Caitlyn    CaitlynYordleTrap    CaitlynEntrapment    CaitlynAceintheHole    CassiopeiaNoxiousBlast    Cassiopeia    CassiopeiaMiasma    CassiopeiaTwinFang    CassiopeiaPetrifyingGaze    Rupture    Chogath    FeralScream 
   VorPalSpikes    Feast    PhosphorusBomb    Corki    CarpetBomb    GGun    MissileBarrage 
   DariusCleave    Darius    DariusAxeGrabCone    DariusExecute 	   DianaArc    Diana 
   DianaOrbs    DianaVortex    DianaTeleport    InfectedCleaverMissileCast    DrMundo 
   BurningAgony    DravenDoubleShot    Draven    DravenRCast    EliseHumanQ    Elise    EliseHumanW    EliseHumanE    EliseSpiderQCast 
   EliseSpiderW    EliseSpiderEInitial    elisespideredescent 	   EvelynnQ    Evelynn 	   EvelynnE 	   EvelynnR    EzrealMysticShot    Ezreal    EzrealEssenceFlux    EzrealArcaneShift    EzrealTruehotBarrage    Terrify 
   FiddleSticks    Drain    FiddlesticksDarkWind 
   Crowstorm    FioraQ    Fiora    FioraDance    FizzPiercingStrike    Fizz 	   FizzJump    FizzJumptwo    FizzMarinerDoom    GalioResoluteSmite    Galio    GalioRighteousGust    GalioIdolOfDurand    Parley 
   Gangplank    CannonBarrage    GarenQ    Garen    GarenE    GarenR    GnarQ    Gnar 	   GnarBigQ    GnarWStack 	   GnarBigW 	   GnarBigE 	   GnarBigR    GragasBarrelRoll    Gragas    gragasbarrelrolltoggle    GragasBodySlam    GragasExplosiveCask    GravesClusterShot    Graves    GravesSmokeGrenade    gravessmokegrenadeboom    GravesChargeShot    HecarimRapidSlash    Hecarim 	   HecarimW    HecarimUlt    HeimerdingerQ 
   Heimerdinger    HeimerdingerW    HeimerdingerE    IreliaGatotsu    Irelia    IreliaEquilibriumStrike    IreliaTranscendentBlades    HowlingGale    Janna    SowTheWind    JarvanIVDragonStrike 	   JarvanIV    JarvanIVDemacianStandard    JarvanIVCataclysm    JaxLeapStrike    Jax    JaxCounterStrike 
   spellslot    JayceToTheSkies    Jayce    JayceStaticField    JayceThunderingBlow    jayceshockblast    jaycehypercharge    jayceaccelerationgate    JinxW    Jinx 
   JinxRWrapper 	   LayWaste    Karthus    WallOfPain    Defile 
   FallenOne    KarmaQ    Karma    KarmaSpiritBind 
   NullLance 	   Kassadin    NetherBlade    ForcePulse 	   RiftWalk 
   KatarinaQ 	   Katarina 
   KatarinaW 
   KatarinaE 
   KatarinaR    JudicatorReckoning    Kayle    JudicatorRighteousFury    KennenShurikenHurlMissile1    Kennen    KennenBringTheLight    KennenShurikenStorm     KhazixQ    Khazix    KhazixW    KhazixE    khazixqlong    khazixwlong    khazixelong    KogMawCausticSpittle    KogMaw    KogMawBioArcanBarrage    KogMawVoidOoze    KogMawLivingArtillery    LeblancChaosOrb    Leblanc 
   LeblancSlide    LeblancSoulShackle    LeblancChaosOrbM    LeblancSlideM    LeblancSoulShackleM    BlindMonkQOne    LeeSin    BlindMonkWOne    BlindMonkEOne    BlindMonkRKick    blindmonkqtwo    blindmonkwtwo    blindmonketwo    LeonaShieldOfDaybreak    Leona    LeonaZenithBlade    LeonaZenithBladeMissle    LeonaSolarFlare    LissandraQ 
   Lissandra    LissandraW    LissandraE    LissandraR    LucianQ    Lucian    LucianW    LucianR    LuluQ    Lulu    LuluW    LuluE    LuxLightBinding    Lux    LuxLightStrikeKugel    luxlightstriketoggle    LuxMaliceCannon 
   SeismicShard 	   Malphite 
   Landslide    UFSlash    AlZaharCalloftheVoid 	   Malzahar    AlZaharNullZone    AlZaharMaleficVisions    AlZaharNetherGrasp    MaokaiTrunkLine    Maokai    MaokaiUnstableGrowth    MaokaiSapling2 
   MaokaiDrain3    AlphaStrike 	   MasterYi    MissFortuneRicochetShot    MissFortune    MissFortuneScattershot    MissFortuneBulletTime    MordekaiserMaceOfSpades    Mordekaiser     MordekaiserSyphoneOfDestruction    MordekaiserChildrenOfTheGrave    DarkBindingMissile    Morgana    TormentedSoil 
   SoulShackles    NamiQ    Nami    NamiW    NamiE    NamiR    NasusQ    Nasus    NasusW    NasusE    NautilusAnchorDrag 	   Nautilus    NautilusSplashZone    NautilusGandLine    JavelinToss    Nidalee 
   Bushwhack    PrimalSurge 	   Takedown    Pounce    Swipe    NocturneDuskbringer 	   Nocturne    NocturneUnspeakableHorror 	   IceBlast    Nunu 
   AbsoluteZero    OlafAxeThrowCast    Olaf    OlafRecklessStrike    OrianaIzunaCommand    Orianna    OrianaDissonanceCommand    OrianaDetonateCommand    Pantheon_Throw 	   Pantheon    Pantheon_LeaP2ash    Pantheon_Heartseeker    PoppyDevastatingBlow    Poppy    PoppyHeroicCharge    QuinnQ    Quinn    QuinnE 
   PowerBall    Rammus    PuncturingTaunt 	   Tremors2    RenektonCleave 	   Renekton    RenektonPreExecute    RenektonSliceAndDice    RengarQ    Rengar    RengarE    RivenTriCleav    Riven    RivenTriCleave_03    RivenMartyr    RivenFengShuiEngine    rivenizunablade    RumbleFlameThrower    Rumble 
   RumbeGrenade    RumbleCarpetBomb 	   Overload    Ryze    RunePrison 
   SpellFlux    SejuaniArcticAssault    Sejuani    SejuaniGlacialPrisonStart    Deceive    Shaco 
   JackInTheBox    TwoShivPoisen    ShenVorpalStar    Shen    ShenShadowDash    ShyvanaFireball    Shyvana    ShyvanaTransformCast    PoisenTrail    Singed 
   MegaAdhesive    Fling    CrypticGaze    Sion    SivirQ    Sivir    SkarnerVirulentSlash    Skarner    SkarnerFracture    SkarnerImpale    SonaHymnofValor    Sona    SonaAriaofPerseverance    SonaSongofDiscord    SonaCrescendo 	   Starcall    Soraka    InfuseWrapper    SwainDecrepify    Swain    SwainShadowGrasp 
   SwainTorment    SwainMetamorphism    SyndraQ    Syndra 	   SyndraW     SyndraE    SyndraR 
   TalonRake    Talon    TalonCutthroat    Shatter    Taric    Dazzle    TaricHammerSmash 
   BlindingDart    Teemo    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    RocketJump 	   Tristana    DetonatingShot    BusterShot    TrundleTrollSmash    Trundle    TrundlePain 
   slashCast    Tryndamere 
   WildCards    TwistedFate    TwitchVenomCask    Twitch    TwitchVenomCaskMissle    Expunge    UdyrTigerStance    Udyr    UdyrTurtleStance    UdyrBearStance    UdyrPhoenixStance    UrgotHeatseekingMissile    Urgot    UrgotPlasmaGrenade    UrgotSwap2    VarusQ    Varus    VarusE    VarusR 
   VayneCondemm    Vayne    VeigarBalefulStrike    Veigar    VeigarDarkMatter    VeigarEventHorizon    VeigarPrimordialBurst    VelkozQ    Velkoz    VelkozQMissle    velkozqplitactive    VelkozW    VelkozE    VelkozR    ViQ    Vi    ViR    ViktorPowerTransfer    Viktor    ViktorGravitonField    ViktorDeathRa    ViktorChaosStorm    VladimirTransfusion 	   Vladimir    VladimirTidesofBlood    VladimirHemoplague 
   VolibearQ 	   Volibear 
   VolibearW 
   VolibearE    HungeringStrike    Warwick    InfiniteDuress    MonkeyKingDoubleAttack    MonkeyKing    MonkeyKingNimbus    MonkeyKingSpinToWin    monkeykingspintowinleave    XerathArcanoPulseChargeUp    Xerath    XerathArcaneBarrage2    XerathMageSpear    XerathLocusOfPower2 
   XenZhaoSweep 	   Xin Zhao 
   XenZhaoParry    YasuoQW    Yasuo 	   yasuoq2w 	   yasuoq3w    YasuoDashWrapper    YasuoRKnockUpComboW    YorickSpectral    Yorick    YorickDecayed    YorickRavenous    ZacQ    Zac    ZacW    ZacE    ZedShuriken    Zed    zedult    ZiggsQ    Ziggs    ZiggsW    ZiggsE    ZiggsR 	   TimeBomb    Zilean 	   TimeWarp 
   ZyraQFissure    Zyra    ZyraGraspingRoots    ZyraBrambleZone    Spells    _Q    _W    _E    _R    Spells2    Enemies    GetEnemyHeroes    pairs 
   GetSpellData    name 
   MenuRiven 	   exConfig    ES 	   addParam 	   tostring     -     SCRIPT_PARAM_ONOFF    AddProcessSpellCallback    Ne  Ne      …   Ś @   @€ ť@  €       OnProcessSpell                                              Pe  ue   
	  Ć @ Ç@ŔÇ€ŔŰ   €@€ĆŔ@ Ě ÁFAA Ý€€A  Ŕ>€Ć @ Ç@ŔÇŔÁÇ ÂŰ   @€[   Ŕ€›   @€ĆŔ@ Ě ÁFAA Ý€€A  €€Ç@Â €ÂŔ€ÇŔBÁ@  Ŕ€Ć C ACÝ€ €Ă€€ĆŔC AA FD GAÄ†D ‡DÝ@ [   @5€ÇŔÄ Á@ ÁDX  4€ĆŔ@ Ç ĹŰ@   3€Ç@Â Á@ AB Ŕ1€›   @1€Á    Ć‹ ‹Ŕ€ŠÇ@Â Á@ AB  €Ç@F FÇ Ű   Ŕ
€Ć @ Ç@ŔÇŔÁFÇ Ű    	€ĆŔF  € GFÝŔ€X GŔ €X@G@ €€G  € € XŔÇ@€X ČŔ €X@Č@ €€Č@€FÁH ‡É GGÁ€GAÂ@ŠFÁH ‡É GGÁ€GĹ@‹FÁH ‡É GGÁ€GÁĹ@‹ĆŔ@ ÁÄFÁ@ GÁÄ@ !€ĹA  @ €AÉ Ś€€  GÉ†AE  F€€‡ÁB €€‡ÁB‡ÁIÇÁÉXŔ  €A  €  €†AE  J@€†AJ Ŕ€ BCF‚E †ÂE Ŕ€ €ť€  Ŕ€†AE €J@€†ÁJ Ŕ€ BCF‚E †ÂE Ŕ€ €ť€  €€†AE  K@€†AK Ŕ€ BCF‚E †ÂE Ŕ€ €ť€  @€†AE  G@€†K Ŕ€ BCF‚E †ÂE Ŕ€ €ť€   
€†AE @G@€†ÁK Ŕ€ BCF‚E †ÂE Ŕ€ €ť€  Ŕ	€†AE €G €†AJ Ŕ€ BCF‚E †ÂE Ŕ€ €ť€A @€†AJ Ŕ€ L @€ ‚ ‚JGBCBF‚E †ÂE Ŕ€ €ť€  Ŕ€†AE @L €†K ÇAC € F‚E †ÂE Ŕ€ €ť€    Ŕ €†L ĺ  Â ťA€ € 4   
   MenuRiven 	   exConfig    UAE    myHero    CanUseSpell    _E    READY    ES    turrets    type    obj_AI_Turret    target    GetDistance    endPos      @Ź@
   CastSpell 	   mousePos    x    z    team    dead 	   shottype    radius    maxdistance         
   Shieldspells    name 
   getSpellType       @      @      @   Q    W    E    R 
   skillData 	   charName    health    boundingRadius 
   networkID       đ?   checkhitlinepass        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   DelayAction       Đ?   ne  pe        @ F@@ †€@ ‡Ŕ@Ć€@ Ç Á@  €    
   CastSpell    _E 	   mousePos    x    z                                               ~e  Ąe   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    „e  „e           @ @  €       AfterAA                         ‡e  ‡e           @ @  €    	   BeforeAA                         Že  Že           @ @  €       AfterAA                         ‘e  ‘e           @ @  €    	   BeforeAA                         —e  —e        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    —e  —e           @ @  €       AfterAA                                               še  še           @ @  €    	   BeforeAA                         źe  źe           @ @  €       AfterAA                         ˘e  ˘e           @ @  €    	   BeforeAA                              	
                §e  ¶e   C   
@@€
@@
@ŔK€ J€Á‚J ÂJ€Â„J Ă…J€Ă†Ą   J€€‡
@ ‚KŔ  J@Ä‚J€ÄĄ@  J€€‡
@ KŔ  J Ĺ‚J@ĹĄ€  J€€‡
@€‰K€  JŔĹ‚ĄŔ  J€€‡
@ ‹
@FŚFŔF † G Ç A ÇŔÁAG FG ]€€
@ ŤFŔF † H Ç A ÇŔÁAG FG ]€€
@€Ź
@ĆFŔH ]€€ 
@ ‘FŔ@ †@I Ç A ÇŔÁI C  ]€€
@ ’FŔ@ †@I Ç D ÇŔÁI C  ]€€
@€“ € (      SelectedTarget     Cel    TargetSelector    Q    name    Infected Cleaver    range      @Ź@   speed      @ź@   delay       Đ?   width      ŔR@   Ready    W    Burning Agony      Pt@   E 
   Masochism       i@   R    Sadism    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    HaveW    it 
   ItemsCast    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    WTargetSelector    «e  «e        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ¬e  ¬e        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          ­e  ­e        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          ®e  ®e        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ¸e  çe   —  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á@ A GH GÁĹÁ FI A	 Á	 Â	 A‚	 ]@€F @ GŔĆ LŔÁ Á 
 A GAJ GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ ÁŔ
 A GK GÁĹA FI A	 Á	 Â	 A‚	 ]@€F @ GŔĆ LŔÁ Á€ Á FI  ÁÁ B A‚	 ]@€F @ GŔĆ LŔÁ Á€ Á FM A
 ]@ F @ GŔĆ LŔÁ Á€
 Á
 FH   ]@ F N † @ Á  € C    Ă  ]@€F @ L Á Á@  ]@ F @ G€Î LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ G€Î LŔÁ Á@ A GH GÁĹÁ FH € ]@ F @ G€Î LŔÁ Á€ Á FM A
 ]@ F @ G€Î LŔÁ Á  A FO   ĆÁO ÇĐB Ý ]@  F @ L Á Á€ Á ]@ F @ GŔĐ LŔÁ Á  A FH € ]@ F @ GŔĐ LŔÁ Á€ A GG GÁĹÁ FH € ]@ F @ L Á ÁŔ  ]@ G@R L€Ň Ć @ Ç Ň]@€F @ L Á ÁŔ  ]@ F @ G Ó LŔÁ Á  A GG GÁĹÁ FB A Ë€‚ AÂ  äA€]@€F @ G Ó LŔÁ Á@ A GH GÁĹÁ FH € ]@ F @ G Ó LŔÁ Á 
 A GAJ GÁĹ
 FH € ]@ F @ L Á Á@  ]@ F @ G€Ô LŔÁ ÁŔ A GG GÁĹÁ FH € ]@ F @ G€Ô LŔÁ Á  A GH GÁĹÁ FH € ]@ F @ G€Ô LŔÁ Á@ A GAJ GÁĹ
 FH € ]@ F @ L Á Á€ Á ]@ F @ GŔŐ LŔÁ Á  A FH € ]@ F @ GŔŐ LŔÁ Á€ Á FH € ]@ F @ GŔŐ LŔÁ Á€ Á FM A
 ]@ F @ GŔŐ LŔÁ Á  A FH € ]@ F @ GŔŐ LŔÁ Á€ Á FX ‹ ÁA ‚	 AB B ¤A ]@ F @ GŔŐ LŔÁ Á€ Á FM A
 ]@ F @ GŔŐ LŔÁ Á€ Á FH € ]@ F @ GŔŐ LŔÁ Á  A FX ‹ ÁA B A‚	 ‚	 ¤A ]@ F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FH   ]@ F @ G€Î L€Ú Á  ]@€ € k   
   MenuMundo 
   scriptConfig    MasterSeries: DrMundo 	   DrMundo1    addSubMenu    [DrMundo]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       d@   DAMAGE_PHYSICAL    name    DrMundo    addTS    [DrMundo]: Combo Settings    comboConfig    USEQ    Use     Q     (Q)    SCRIPT_PARAM_ONOFF    USEW    W     (W) HP% >=    SCRIPT_PARAM_SLICE       .@              Y@   USEE    E     (E)    USER    R     (R) HP% <=    USER2    Check For Enemy In Range:      Ŕ‚@     Ŕ’@   qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        ST    Focus Selected Target 
   AddSpellMenu    [DrMundo]: Harras Settings 
   harrasConfig     (W) 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [DrMundo]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    [DrMundo]: Items Settings 
   iteConfig    it    LoadToMenu    [DrMundo]: Farm Settings    farm        @   No 	   Freezing 
   LaneClear     [DrMundo]: Jungle Farm Settings    jf    QJF    WJF    EJF    [DrMundo]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    [DrMundo]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ée  öe   %   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ † €       CheckOB 
   MenuMundo    QTargetSelector    update    WTargetSelector    SelectedTarget     ValidTarget    Q    range    Cel    QCel    WCel    GetCustomTarget    TargetSelector    target                          ře  ˙e      F @ ]€€ [   @€G@@ [@  €€F€@ GŔŔ G Á [   @€F@A ‡€A ]€ [    €LŔA Ç€A ]@€F B ]@€  € 	      ComboActive    recall 
   MenuMundo    comboConfig    USEE    ValidTarget    Cel    CastE    ResetAA                          f  f   ^   F @ ]€€ [    €G@@ [@  @€F€@ GŔŔ G Á [   Ŕ€F@A †€A ÇŔA ]€€‡ B ‡@B€€ Ŕ€F€B ‡ŔA ]€ [   € €LŔB ÇŔA ]@€F€A G Ă †€A ‡@CP€€ O€Ă †€@ ‡Ŕ@‡ŔC@ Ŕ€F D †€A Ç@D Ç@Â]€€@ ‰ €GŔD [@  @ €L E ]@ GŔA [    €F D †€A Ç@D Ç@ÂÍ@Ĺ]€€€Ĺ  €GŔD [   @ €L E ]@ F€@ GŔŔ GŔĹ @ ‹ €F D †€A Ć€@ ÇŔŔÇ Ć]€€@ ‰ €F€A G Ă †€A ‡@CP€€ O€Ă †€@ ‡Ŕ@‡ŔE€€ @ €L@F ]@  €       ComboActive    recall 
   MenuMundo    comboConfig    USEQ    GetDistance    myHero    QCel    Q    range    ValidTarget    CastQ    health 
   maxHealth       Y@   USEW    EnemyCount    W       đ?   HaveW    CastW      Ŕb@           USER    USER2    CastR                          f   f   @   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   @
€G A [@  €€F @ G@Ŕ G@Á [   Ŕ€F€A †ŔA Ç B ]€€‡@B ‡€B€€ Ŕ€FŔB ‡ B ]€ [   € €L C Ç B ]@€F @ G@Ŕ G@Ă [   Ŕ€F€C †ŔA ÇŔC Ç€Â]€€@  €G@D [@  @ €L€D ]@ F€C †ŔA ÇŔC Ç€ÂÍŔÄ]€€ Ĺ  €G@D [   @ €L€D ]@  €    
   MenuMundo 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEQ    GetDistance    myHero    QCel    Q    range    ValidTarget    CastQ    USEW    EnemyCount    W       đ?   HaveW    CastW      Ŕb@                                 "f  8f      F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @ €ŚC ťA †A ‡ÁA‡ÁC›  @€†D ĆB BD CG‚@ GBÁť €‰ €‡ÁD ›A  @ €ŚE ťA †A ‡ÁA‡AE€E@€†AB ĆB  €ť€ÇÁE ÇĂŔ@	€†AC Ŕ€ť ›   €†F ŚAF €F‚F ]‚€ PÂĆť ĆG Â @€†‚B ÁB Ý€Ŕ@€‚G @€†‚B ÇÂE ÇÂÇCB FB €€€G@ ‚ B   €H FBH ‡‚ČÇÂČB †A ‡ÁA‡AE@G@€†AB ĆB  €ť€ÇÁE ÇĂŔ@€†AC Ŕ€ť ›   €†H ĆAH ‚ČGÂČťA b€  ă ă € $      FarmActive    recall 
   EnemyMinions    update    pairs    objects 
   MenuMundo    farm    USEE    GetDistance    myHero    E    range    ValidTarget    CastE    USEW    MinionCount    W       đ?   HaveW    CastW    USEQ        @   Q    VP    GetPredictedHealth    GetLatency      @Ź@   getDmg       @   GetMinionCollisionM    width 
   CastSpell    _Q    x    z                          :f  If   
P   F @ ]€€ [   €€G@@ [@  Ŕ€G€@ LŔŔ ]@ F A ‡€@ ‡@A] @€†A ‡ÁA‡B›  €€†AB ĆB  €ť€ÇÁB ÇĂŔ€€†AC Ŕ€ť ›  @ €ŚC ťA †A ‡ÁA‡ÁC›  @€†D ĆB BD CG‚@ GBÁť €‰ €‡ÁD ›A  @ €ŚE ťA †A ‡ÁA‡AE›  @€†AB ĆB  €ť€ÇE ÇĂŔ@€†AC Ŕ€ť ›   €†ÁE ĆF BĆG‚ĆťA b€  ăŔď €       FarmActive    recall    JungleMinions    update    pairs    objects 
   MenuMundo    jf    EJF    GetDistance    myHero    E    range    ValidTarget    CastE    WJF    MinionCount    W       đ?   HaveW    CastW    QJF    Q 
   CastSpell    _Q    x    z                          Kf  Qf   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA ÁA FB †ÁA ĆAB ÂA FB †ÂA ĆB CB FA †B ĆA „A FDB †„A ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuMundo 	   prConfig    ALS    myHero    level    GetHeroLeveled    _W    _Q    _E    _R    LevelSpell       đ?                         Sf  af   S   F @ †@@ ť € ]  €€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€B ‚B‚…
†FBC €€Á‚ ]‚€[   
€XŔĂ€€GD [B  Ŕ€FBD L‚ÄÁÂ ]‚€Ŕ €†E ‡BE‡‚E›  Ŕ€†ÂE Ŕ€ť‚ ÇÂA ÇĆŔ €‡ÂA ‡‚Dť‚€ ›  Ŕ €ŚBF  €ťB€ € €€†E ‡BE‡‚F›  @€†ÂE Ŕ€ť‚ ŔF €[  €€†G ĆBD ĚBÇAĂ Ý‚€ €ťB€b€  ă€ě €       pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 
   MenuMundo 	   ksConfig    QKS    GetDistance    range    CastQ    IKS      Ŕ‚@
   CastSpell    GetSlot                          cf  pf   W   † @ Ś@@ € G@ GÁŔ‡@ ‡AÇ@ ÇAÁ‚A ť ›   €€Ű    €FÁA € ] ‡@ ‡B€@€FAB †B ÇÁBC]A  € FAC †C ‡ÁC‡D‡ADŔ€ ‚@ Â@G‚@ GÁ‡‚@ ‡BÇ‚@ ÇBÁA A € Ă    A„  †„C ‡ÄC	‡D	‡ÄD	]X Ĺ@ €›A    € € BE @€‚ FBE †‚A ]‚ B‚E‚ ÂEÇÂÂCFÍŔŚÇÂĆCĆÍŔŤÇĂCFÍŔŽĆBB B FF †G ÝB  €       VP 
   IsDashing    Q    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _Q    x    z    GetPrediction2 
   MenuMundo 	   spConfig    qConfig    QP    line    QCH     Vector    normalized    unpack    posX       Y@   posY    y    posZ                          rf  vf   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          xf  |f   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       E    Ready 
   CastSpell    _E                          ~f  ‚f   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       R    Ready 
   CastSpell    _R                          „f  f   
m   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [    €GŔD G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGÁD GĹ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ GŔĹ [    €G F G Ĺ ]€€ [   Ŕ€F B †@E ‡@BĆ@E Ç€ÂAE ÁBGF GĹ†AC Ć@ ÇAŔÇAĆÇÁĂ@ B@BFDF@ GBŔGBĆGBÄť ]@   €    
   MenuMundo    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DQR    Q    Ready    myHero    range    DWR    W    DWRC                          ’f  ™f      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á[    €Ŕ   @€Ű   Ŕ €AŔ@A  €
 A €       isMe    name    find    recall 
   BurningAgony    HaveW                         ›f  ˘f      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á[    €Ç Ŕ Ű   @€›   Ŕ €Ç@@@Á  €
 A €       isMe    name    find    recall  
   BurningAgony    HaveW                         ¤f  ľf   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuMundo    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Çf  íf   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    Íf  Íf           @ @  €       AfterAA                         Đf  Đf           @ @  €    	   BeforeAA                         ×f  ×f           @ @  €       AfterAA                         Úf  Úf           @ @  €    	   BeforeAA                         ßf  ßf        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    ßf  ßf           @ @  €       AfterAA                                               âf  âf           @ @  €    	   BeforeAA                         çf  çf           @ @  €       AfterAA                         ęf  ęf           @ @  €    	   BeforeAA                              	
                ďf  7g   `  
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚KŔ  JŔÂ‚† C ‡ŔAŤ@CJ€€Ą@  J€€„
@ …K€ JŔĂ‚J ÄJ€ÄJ Ĺ‰J€ĹŠĄ€  J€€„
@ ‡K€  J Ć‚ĄŔ  J€€„
@€‹
€ĆŚF G †@G Ç€C ÇŔÁC FG ]€€
@€ŤF G † H Ç€C ÇŔÁC FG ]€€
@€ŹFŔ@ †€H Ç A ÇŔÁÁH C  ]€€
@€FŔ@ †€H Ç€C ÇŔÁÁH C  ]€€
@ ’K   
@€’FŔI ]€€ 
@ “K  †@J Ć€J ÁJ FK d@ 
@ ”K    Á€  AÁ d@ 
@€–K€ ‹Ŕ  Š@LŠŔE™Š Í™J€€—‹Ŕ  Š€MŠ€B™Š Í™J€€š‹Ŕ  Š€MŠŔE™Š Í™J€€›‹Ŕ  Š@NŠ A™Š Í™J€ ś‹Ŕ  Š@NŠŔE™Š Í™J€ ť‹Ŕ  Š OŠ A™Š Í™J€€ť‹Ŕ  Š€OŠ€B™Š Í™J€€ž‹Ŕ  Š PŠ€C™Š Í™J€€ź‹Ŕ  Š PŠ€C™Š Í™J€€ ‹Ŕ  Š PŠŔE™Š Í™J€ ˇ‹Ŕ  Š QŠ€C™Š Í™J€€ˇ‹Ŕ  Š€QŠ€C™Š Í™J€€˘‹Ŕ  Š€QŠŔE™Š Í™J€€Ł‹Ŕ  Š@RŠ€B™Š Í™J€ ¤‹Ŕ  ŠŔRŠ€B™Š Í™J€ Ą‹Ŕ  ŠŔRŠŔE™Š Í™J€ ¦‹Ŕ  Š€SŠŔE™Š Í™J€€¦‹Ŕ  Š TŠ A™Š Í™J€€§‹Ŕ  Š TŠŔE™Š Í™J€€¨‹Ŕ  ŠŔTŠŔE™Š Í™J€ ©‹Ŕ  Š@UŠ€C™Š Í™J€ Ş‹Ŕ  ŠŔUŠ€C™Š Í™J€ «‹Ŕ  Š@VŠŔE™Š Í™J€ ¬‹Ŕ  ŠŔVŠ€B™Š Í™J€ ­‹Ŕ  Š@WŠŔE™Š Í™J€ ®‹Ŕ  ŠŔWŠŔE™Š Í™J€ Ż‹Ŕ  Š@XŠ€C™Š Í™J€ °‹Ŕ  ŠŔXŠ€C™Š Í™J€ ±‹Ŕ  Š@YŠ€B™Š Í™J€ ˛‹Ŕ  ŠŔYŠ A™Š Í™J€ ł‹Ŕ  ŠŔYŠ€C™Š Í™J€ ´‹Ŕ  ŠŔYŠŔE™Š Í™J€€´‹Ŕ  ŠŔZŠ€C™Š Í™J€ µ‹Ŕ  Š@[Š A™Š Í™J€ ¶‹Ŕ  Š@[ŠŔE™Š Í™J€ ·‹Ŕ  Š \Š A™Š Í™J€€·‹Ŕ  Š€\ŠŔE™Š Í™J€€¸‹Ŕ  Š ]Š A™Š Í™J€€ą‹Ŕ  Š€]Š€C™Š Í™J€€ş‹Ŕ  Š ^ŠŔE™Š Í™J€€»‹Ŕ  Š ^ŠŔE™Š Í™J€€Ľ‹Ŕ  ŠŔ^ŠŔE™Š Í™J€ ˝‹Ŕ  Š@_Š€C™Š Í™J€ ľ‹Ŕ  Š@_ŠŔE™Š Í™J€ ż‹Ŕ  Š `Š A™Š Í™J€€ż‹Ŕ  Š `ŠŔE™Š Í™J€€Ŕ‹Ŕ  ŠŔ`Š€C™Š Í™J€ Á‹Ŕ  Š@aŠ A™Š Í™J€ Â‹Ŕ  Š@aŠ€B™Š Í™J€ Ă‹Ŕ  Š bŠŔE™Š Í™J€€Ă‹Ŕ  Š€bŠŔE™Š Í™J€€Ä‹Ŕ  Š cŠŔE™Š Í™J€€Ĺ‹Ŕ  Š€cŠŔE™Š Í™J€€Ć
@ — € Ź      SelectedTarget     Cel    TargetSelector    Q    name    Cull the Meek    range       t@   Ready    W    Ruthless Predator    myHero       ^@   E    Slice       |@   speed      ŕ•@   delay       Đ?   width       N@   R    Dominus    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    killstring    it 
   ItemsCast    Spells    _Q    _W    _E    _R    Spells2    DodgeTable    GalioIdolOfDurand 	   charName    Galio 
   spellSlot 
   SpellType 
   skillshot 	   GnarBigW    Gnar 	   GnarBigR    NamiQ    Nami    NamiR    LuxLightBinding    Lux    RenektonPreExecute 	   Renekton    LeonaZenithBlade    Leona    LeonaZenithBladeMissle    LeonaSolarFlare    RengarE    Rengar    LeblancSoulShackle    Leblanc    LeblancSoulShackleM    RivenMartyr    Riven    LissandraW 
   Lissandra    LissandraR    UFSlash 	   Malphite    DarkBindingMissile    Morgana 
   SoulShackles    VarusR    Varus    VeigarEventHorizon    Veigar    VelkozE    Velkoz    BraumR    Braum    ViktorGravitonField    Viktor    SejuaniGlacialPrisonStart    Sejuani    SonaCrescendo    Sona    InfuseWrapper    Soraka    ShenShadowDash    Shen    SwainShadowGrasp    Swain    ThreshQ    Thresh    ThreshE 
   ThreshRPenta    AhriSeduce    Ahri    BandageToss    Amumu    CurseoftheSadMummy    FlashFrost    Anivia    EnchantedCrystalArrow    Ashe 	   yasuoq3w    Yasuo    EliseHumanE    Elise    MonkeyKingSpinToWin    MonkeyKing    monkeykingspintowinleave    OrianaDetonateCommand    Orianna    ZyraGraspingRoots    Zyra    ZyraBrambleZone    HowlingGale    Janna    ReapTheWhirlwind    XerathMageSpear    Xerath    Rupture    Chogath    FeralScream    CassiopeiaPetrifyingGaze    Cassiopeia    KennenShurikenStorm     Kennen    FizzMarinerDoom    Fizz    HecarimUlt    Hecarim    óf  óf        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          ôf  ôf        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          őf  őf        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          öf  öf        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               9g  sg   Ů  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á@ A GH GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á 	 A GAI GÁĹ	 FH € ]@ F @ GŔĆ LŔÁ ÁŔ	 A GJ GÁĹA
 FJ Á
 Á B A ]@€F @ GŔĆ LŔÁ Á€ A GJ GÁĹÁ FJ  ÁÁ B A ]@€F @ GŔĆ LŔÁ Á€ Á FM A
 ]@ F @ GŔĆ LŔÁ Á€
 Á
 FH   ]@ F N † @ Á    C  € Ă  ]@€F @ L Á Á@  ]@ F @ G€Î LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ G€Î LŔÁ Á 	 A GAI GÁĹ	 FH € ]@ F @ G€Î LŔÁ Á€ Á FM A
 ]@ F @ G€Î LŔÁ ÁŔ  FAO   ĆO ÇÁĎ Ý ]@  F @ L Á Á@  ]@ F Q ]€€ @€ˇF@Q †ŔP ] Ŕ€†AQ ÇQ ť@€ÇÂQ Ň€ €ĂEÇŰ  @€Ć@ Ç‚ĐĚÂÁFCR ŚŇ  ť€‡ĂE]  ĆCR ÄŇÝ  FDR ‡DS ‡D	]„ –CĆH € ÝB ˘  #Â÷b€  ă@öF @ G€Đ LŔÁ Á€ Á FH € ]@ F @ L Á Á  A ]@ F @ G@Ô LŔÁ Á€ Á FH € ]@ F @ G@Ô LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ G@Ô LŔÁ Á@ A GAI GÁĹ	 FH € ]@ F @ L Á Á€ Á ]@ G V L@Ö Ć @ ÇŔŐ]@€F @ L Á Á€ Á ]@ F @ GŔÖ LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ GŔÖ LŔÁ Á@ A GH GÁĹÁ FH € ]@ F @ GŔÖ LŔÁ Á 	 A GAI GÁĹ	 FH € ]@ F @ L Á Á  A ]@ F @ G@× LŔÁ Á€ A GG GÁĹÁ FH € ]@ F @ G@× LŔÁ ÁŔ A GH GÁĹÁ FH € ]@ F @ G@× LŔÁ Á  A GAI GÁĹ	 FH € ]@ F @ L Á Á@  ]@ F @ G€Ř LŔÁ ÁŔ  FH € ]@ F @ G€Ř LŔÁ Á@  FH € ]@ F @ G€Ř LŔÁ Á€ Á FM A
 ]@ F @ G€Ř LŔÁ ÁŔ  FH € ]@ F @ G€Ř LŔÁ Á@  FÁZ ‹ Á  A  ¤A ]@ F @ G€Ř LŔÁ Á€ Á FM A
 ]@ F @ G€Ř LŔÁ Á@  FH € ]@ F @ G€Ř LŔÁ ÁŔ  FÁZ ‹ Á  A  ¤A ]@ F @ L Á Á@  ]@ F @ G€Ü LŔÁ ÁŔ  FH   ]@ F @ G€Î L@Ý ÁŔ ]@€ € v   	   MenuRene 
   scriptConfig    MasterSeries: Renekton 
   Renekton1    addSubMenu    [Renekton]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name 	   Renekton    addTS    [Renekton]: Combo Settings    comboConfig    USEQ    Use     Q     (Q)    SCRIPT_PARAM_ONOFF    USEW    W     (W)    USEE    E     (E)    USER    R     (R) HP% <=    SCRIPT_PARAM_SLICE       .@              Y@   USER2     (R) X Enemy Around       @      @   qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        ST    Focus Selected Target 
   AddSpellMenu    [Renekton]: Harras Settings 
   harrasConfig 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Renekton]: Dodge Spells    dspells    Enemies    GetEnemyHeroes    pairs    Spells    DodgeTable 
   GetSpellData 	   tostring    Dodge  	   charName     Spell     Spells2    ED    Dodge Enemy Spells    [Renekton]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    EKS    [Renekton]: Items Settings 
   iteConfig    it    LoadToMenu    [Renekton]: Farm Settings    farm !   [Renekton]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Renekton]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    [Renekton]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ug  ‚g   %   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ † €       CheckOB 	   MenuRene    QTargetSelector    update    ETargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    GetCustomTarget    TargetSelector    target                          „g  ‹g      F @ ]€€ [    €G@@ [@  @€F€@ GŔŔ G Á [    €F@A †€A ÇŔA ]€€‡ B ‡@B€€  €F€B ‡ŔA ]€ [   Ŕ €LŔB ]@ F C ]@€  € 
      ComboActive    recall 	   MenuRene    comboConfig    USEW    GetDistance    myHero    Cel    W    range    ValidTarget    CastW    ResetAA                          Ťg  śg   S   F @ ]€€ [   @€G@@ [@  €€F€@ GŔŔ G Á [   €€F@A †€A ÇŔA ]€€‡ B ‡@B€€ €€F€B ‡ŔA ]€ [   @ €LŔB ]@ F€@ GŔŔ G Ă [   Ŕ€F@A †€A Ç@C ]€€‡€C ‡@B€€ Ŕ€F€B ‡@C ]€ [   € €LŔC Ç@C ]@€F€@ GŔŔ G Ä @€ €F€A G€Ä †€A ‡ŔDP€€ O Ĺ †€@ ‡Ŕ@‡ D€€ @ €L@E ]@ F€@ GŔŔ G€Ĺ @€€€FŔE †€A Á  ]€€†€@ ‡Ŕ@‡€E@ @ €L@E ]@  €       ComboActive    recall 	   MenuRene    comboConfig    USEQ    GetDistance    myHero    QCel    Q    range    ValidTarget    CastQ    USEE    ECel    E    CastE    USER            health 
   maxHealth       Y@   CastR    USER2    EnemyCount      Ŕ‚@                         žg  §g   6   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   Ŕ
€G A [@   
€F @ G@Ŕ G@Á [   Ŕ€F€A †ŔA Ç B ]€€‡@B ‡€B€€ Ŕ€FŔB ‡ B ]€ [   € €L C Ç B ]@€F @ G@Ŕ G@Ă [   €€F€A †ŔA Ç€C ]€€‡ŔC ‡€B€€ €€FŔB ‡€C ]€ [   @ €L D ]@  €    	   MenuRene 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEE    GetDistance    myHero    ECel    E    range    ValidTarget    CastE    USEQ    QCel    Q    CastQ                          ©g  ¸g   	O   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ĆB  €ť€ÇÁB ÇĂŔŔ€†AC Ŕ€ť ›  € €ŚC  €ťA€†A ‡ÁA‡ÁC›  €€†AB ĆB  €ť€ÇD ÇĂŔ€€†AC Ŕ€ť ›  @ €ŚAD ťA †A ‡ÁA‡D›  €€†AB ĆB  €ť€ÇÁD ÇĂŔ€€†AC Ŕ€ť ›  @ €ŚE ťA b€  ă đ €       FarmActive    recall 
   EnemyMinions    update    pairs    objects 	   MenuRene    farm    USEE    GetDistance    myHero    E    range    ValidTarget    CastE    USEW    W    CastW    USEQ    Q    CastQ                          şg  Ég   	O   F @ ]€€ [   @€G@@ [@  €€G€@ LŔŔ ]@ F A ‡€@ ‡@A]  €†A ‡ÁA‡B›  Ŕ€†AB ĆB  €ť€ÇÁB ÇĂŔŔ€†AC Ŕ€ť ›  € €ŚC  €ťA€†A ‡ÁA‡ÁC›  €€†AB ĆB  €ť€ÇD ÇĂŔ€€†AC Ŕ€ť ›  @ €ŚAD ťA †A ‡ÁA‡D›  €€†AB ĆB  €ť€ÇÁD ÇĂŔ€€†AC Ŕ€ť ›  @ €ŚE ťA b€  ă đ €       FarmActive    recall    JungleMinions    update    pairs    objects 	   MenuRene    jf    EJF    GetDistance    myHero    E    range    ValidTarget    CastE    WJF    W    CastW    QJF    Q    CastQ                          Ëg  Ńg   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA B FA †A ĆAB ‚A FB †‚A ĆB CB FB †B ĆĂA ÄA FDB †ÄA ĆÄA d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuRene 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _W    _E    _R    LevelSpell       đ?                         Óg  äg   o   F @ †@@ ť € ]  €€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€FB GÂÂOB†MB‚††‚C Ŕ€Ă ť‚€›  €€X Ä €‡BD ›B  @€†‚D ŚÂD ť‚€ŔŔ€ĆBE Ç‚ĹÇÂĹŰ  €€ĆF  €Ý‚ ĂA CF Ŕ€ÇÂA ÇÂÄÝ‚€ Ű  € €Ě‚F ÝB Ŕ
€  €ĆBE Ç‚ĹÇÂĆŰ  Ŕ€ĆF  €Ý‚ B CF  €Ç‚B ÇÂÄÝ‚€ Ű  Ŕ €ĚG @€ÝB€ €@€€ĆBE Ç‚ĹÇBÇŰ  @€ĆF  €Ý‚ €Ç €›  €€ĆÂG D H €@€ÝB€b€  ă€ĺ € !      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 	   MenuRene 	   ksConfig    QKS    GetDistance    range    CastQ    EKS    CastE    IKS      Ŕ‚@
   CastSpell    GetSlot                          ćg  ęg   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       Q    Ready 
   CastSpell    _Q                          ěg  đg   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          ňg  ýg   E   ‡ @ ‡@@ť€€ ›   €€†€@ ŚŔ@ € G@ GÁ‡@ ‡AAÇ@ ÇÁÂA ť ›   €€Ű    €FB € ] ‡@ ‡AB€@€FB †ÁB ÇCBC]A  € FC †ÁC ‡D‡AD‡DŔ€ @ AG@ GBÁ‡@ ‡BBÇ@ Ç‚ÁĂA AĂ   Ă    A  †ÄC ‡D	‡DD	‡E	]X@Ĺ@ €›A    € € ‚B FÂB ‡ĂÇBĂB  €       E    Ready    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _E    x    z    GetPrediction2 	   MenuRene 	   spConfig    eConfig    EP    line    ECH                           ˙g  h   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       R    Ready 
   CastSpell    _R                          h  h   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@  F @ G@Ŕ G@Ę [    €G€J GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGJ GAÉ†AC Ć@ ÇAŔÇÁĘÇÁĂ@ B@ÂJDF@ GBŔGÂĘGBÄť ]@   € ,   	   MenuRene    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC    DRR    R    DRRC                          h  0h   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    E    myHero       @   Q    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    E Kill!    Q Kill! 
   E+Q Kill!                          2h  6h      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         8h  <h      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          >h  gh   î   Ć @ Ç@ŔÇ€ŔŰ   Ŕ9€[   @9€ÇŔŔ A Á@X  8€Ć A Ç@ÁŰ@   7€Ç€Á A A Ŕ5€›   @5€Á€  €Â„ „Ŕ€Ç€Á A A @
€Ć@C  € GCÝŔ€ †Ŕ€…Ć C XŔĂ@€Ć C X Ä€ €Ć C @Ä  € € ĆŔB X€Ä €ĆŔB XŔÄ@€ĆŔB X Ĺ€ €ĆŔB @Ĺ@€Ç€E CÇ Ű    €ĆŔE Ć Ç ÁB Ç Ç€ÁŔ€ĆŔE Ć Ç ÁB Ç Ç ÂŔ „ĆŔE Ć Ç ÁB Ç Ç@ÂŔ€„Ć A Ç@ÁŰ@  @$€Ć A Ç@ĆŔ …@#€Ć A Ç€Ć ÇŤÁA €B €AG  Ŕ€AGGFA GÇX@  €A  €  Ť €ÁA ŔG@€H @€ ‡AHĆB BB FA €€€ ŤŔ€ÁA €H@€ÁH @€ ‡AHĆB BB FA €€€ Ť€€ÁA  I@€AI @€ ‡AHĆB BB FA €€€ Ť@€ÁA ŔC@€I @€ ‡AHĆB BB FA €€€ Ť 
€ÁA  D@€ÁI @€ ‡AHĆB BB FA €€€ ŤŔ	€ÁA @D €H @€ ‡AHĆB BB FA €€€A   €H @€ †J Ŕ€ ť ŹHÇAHŽÁĆB BB FBJ €€€ ŤŔ€ÁA €J €I GAH€€ ĆB BB FA €€€ ŤÁF   €€E ÁJ€   @€@ A@GCA  Ŕ €K e  A A€ € .   	   MenuRene    dspells    ED    team    myHero    dead    type 	   shottype    radius    maxdistance         
   spelltype 	   casttype 
   getSpellType    name       @      @      @   Q    W    E    R    DodgeTable 
   skillData 	   charName    health    boundingRadius    hitchampion     target 
   networkID       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector    tar       @   Ready    DelayAction 333333Ó?   `h  bh        @ F@@ †€@ ‡Ŕ@Ć€@ Ç Á@  €    
   CastSpell    _E 	   mousePos    x    z                                               ih  h   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€
 †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuRene    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Śh  łh   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ’h  ’h           @ @  €       AfterAA                         •h  •h           @ @  €    	   BeforeAA                         śh  śh           @ @  €       AfterAA                         źh  źh           @ @  €    	   BeforeAA                         Ąh  Ąh        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    Ąh  Ąh           @ @  €       AfterAA                                               ¨h  ¨h           @ @  €    	   BeforeAA                         ­h  ­h           @ @  €       AfterAA                         °h  °h           @ @  €    	   BeforeAA                              	
                µh  Äh   @   
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚K€  JŔÂ‚Ą@  J€€„
@ …KŔ  J@Ă‚J€ĂĄ€  J€€„
@ †K€  J Ä‚ĄŔ  J€€„
@€‡FŔ@ †€D Ç A ÇŔÁÁD C  ]€€
@€FŔ@ †€D Ç C ÇŔÁÁD C  ]€€
@ Š
€ĹŠF F †@F Ç A ÇŔÁF FÁF ]€€
@€‹F F †@G Ç A ÇŔÁF FÁF ]€€
@ ŽK   
@ ŹF H ]€€ 
@€Ź € !      SelectedTarget     Cel    TargetSelector    Q    name 
   Vorpal Blade    range      °}@   Ready    W    Feint    E    Shadow Dash      Ŕ‚@   R 
   Stand United    QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    ETargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast    ąh  ąh        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          şh  şh        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          »h  »h        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          Ľh  Ľh        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               Ćh  üh   Â  F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @   C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ GŔĆ LŔÁ Á@ A GH GÁĹÁ FI A	 Á	 Â	 A‚	 ]@€F @ GŔĆ LŔÁ Á 
 A GAJ GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ ÁŔ
  FAK  ]@ F @ GŔĆ LŔÁ ÁŔ  FH   ]@ F @ L Á Á@  ]@ F @ G€Ě LŔÁ Á  A GG GÁĹÁ FH € ]@ F @ G€Ě LŔÁ Á 
 A GAJ GÁĹ
 FH € ]@ F @ G€Ě LŔÁ ÁŔ
  FAK  ]@ F @ G€Ě LŔÁ ÁŔ 
 FAM   ĆM ÇÁÍ Ý ]@  F @ L Á Á@  ]@ F @ G€Î LŔÁ ÁŔ A GO GÁĹA FH € ]@ AŔ †€O ‡ŔOÁŔ a €FO LĐŔ ]€‡AĐĆÁD ÇAĐŔŔ€†ÁD X€ €†@ ‡NŚÁA‚ĐG‚ĐÂ V‚‚†I Á 	 AĂ	 	 ťA€`@ůF @ G€Î LŔÁ Á@  FI Á ÁÁ  A‚	 ]@€F @ L Á Á@  ]@ F @ G€Ň LŔÁ ÁŔ  FH € ]@ F @ G€Ň LŔÁ Á@ A GG GÁĹÁ FH € ]@ F @ G€Ň LŔÁ Á€ A GAJ GÁĹ
 FH € ]@ F @ L Á ÁŔ  ]@ G@T L€Ô Ć @ Ç Ô]@€F @ L Á ÁŔ  ]@ F @ G Ő LŔÁ Á  A GG GÁĹÁ FB A Ë€‚ AÂ  äA€]@€F @ G Ő LŔÁ Á@ A GH GÁĹÁ FI A	 Á	 Â	 A‚	 ]@€F @ G Ő LŔÁ Á 
 A GAJ GÁĹ
 FH € ]@ F @ L Á Á@  ]@ F @ G€Ö LŔÁ ÁŔ A GG GÁĹÁ FH € ]@ F @ G€Ö LŔÁ Á  A GH GÁĹÁ FI A	 Á	 Â	 A‚	 ]@€F @ G€Ö LŔÁ Á@ A GAJ GÁĹ
 FH € ]@ F @ L Á Á€ Á ]@ F @ GŔ× LŔÁ Á  A FH € ]@ F @ GŔ× LŔÁ Á€ Á FH € ]@ F @ GŔ× LŔÁ ÁŔ
  FAK  ]@ F @ GŔ× LŔÁ Á  A FH € ]@ F @ GŔ× LŔÁ Á€ Á FZ ‹ ÁA ‚	 AB B ¤A ]@ F @ GŔ× LŔÁ ÁŔ
  FAK  ]@ F @ GŔ× LŔÁ Á€ Á FH € ]@ F @ GŔ× LŔÁ Á  A FZ ‹ ÁA B A‚	 ‚	 ¤A ]@ F @ L Á Á€ Á ]@ F @ GŔŰ LŔÁ Á  A FH   ]@ F @ G€Ě L€Ü ÁŔ ]@€ € s   	   MenuShen 
   scriptConfig    MasterSeries: Shen    Shen1    addSubMenu    [Shen]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Shen    addTS    [Shen]: Combo Settings    comboConfig    USEQ    Use     Q     (Q)    SCRIPT_PARAM_ONOFF    USEW    W     (W) HP% <=    SCRIPT_PARAM_SLICE      €Q@              Y@   USEE    E     (E)    qqq 9   --------------------------------------------------------    SCRIPT_PARAM_INFO        ST    Focus Selected Target    [Shen]: Harras Settings 
   harrasConfig 
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L    [Shen]: Ultimate Settings    uConfig    USER    R     (R)    heroManager    iCount    GetHero    team 	   charName     HP% <=       D@   USER2    Check For Enemy In Range:      Ŕ‚@     Ŕ’@   [Shen]: KS Settings 	   ksConfig    IKS    Use Ignite To KS    QKS    EKS    [Shen]: Items Settings 
   iteConfig    it    LoadToMenu    [Shen]: Farm Settings    farm        @   No    Normal    LastHit    [Shen]: Jungle Farm Settings    jf    QJF    WJF    EJF    [Shen]: Draw Settings    drawConfig    DD    Draw DMG Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DER 
   Draw E Range    DERC    Draw E Range Color    [Shen]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          ţh  i   '   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ †L D ]@  €       CheckOB 	   MenuShen    QTargetSelector    update    ETargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    ECel    GetCustomTarget    TargetSelector    target    ULT                          i  i   J   F @ ]€€ [    €G@@ [@  @€F€@ GŔŔ G Á [   Ŕ€F@A †€A ÇŔA ]€€‡ B ‡@B€€ Ŕ€F€B ‡ŔA ]€ [   € €LŔB ÇŔA ]@€F€@ GŔŔ G Ă [   Ŕ€F@A †€A Ç@C ]€€‡€C ‡@B€€ Ŕ€F€B ‡@C ]€ [   € €LŔC Ç@C ]@€F€@ GŔŔ G Ä @€€€F€A G€Ä †€A ‡ŔDP€€ O Ĺ †€@ ‡Ŕ@‡ D€€ Ŕ€F€B ‡ŔA Á@ ]€€[   @ €L€E ]@  €       ComboActive    recall 	   MenuShen    comboConfig    USEQ    GetDistance    myHero    QCel    Q    range    ValidTarget    CastQ    USEE    ECel    E    CastE    USEW            health 
   maxHealth       Y@     Ŕr@   CastW                          i  %i   7   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [    €G A [@  @
€F @ G@Ŕ G@Á [   Ŕ€F€A †ŔA Ç B ]€€‡@B ‡€B€€ Ŕ€FŔB ‡ B ]€ [   € €L C Ç B ]@€F @ G@Ŕ G@Ă [   Ŕ€F€A †ŔA Ç€C ]€€‡ŔC ‡€B€€ Ŕ€FŔB ‡€C ]€ [   € €L D Ç€C ]@€ €    	   MenuShen 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    USEE    GetDistance    myHero    ECel    E    range    ValidTarget    CastE    USEQ    QCel    Q    CastQ                          'i  =i   r   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  Ŕ€†AB ĆB  €ť€ÇÁB ÇĂŔŔ€†AC Ŕ€ť ›  € €ŚC  €ťA€†A ‡ÁA‡ÁC€ €†B ‡ADĆB ÇÄÁŹÁDĆA ÇÁÁÇÁĂŔ@ €ŚE ťA †A ‡ÁA‡AE€EŔ€†AB ĆB  €ť€ÇÁE ÇĂŔŔ€†AC Ŕ€ť ›  € €ŚF  €ťA€†A ‡ÁA‡AE@F€€†AB ĆB  €ť€ÇÁE ÇĂŔ€€†AC Ŕ€ť ›  @€†F ŚÁF €FG ]‚€ PBÇť ĆG Â @€†‚B ÁB Ý€Ŕ€ €F €€B€b€  ă@ç €       FarmActive    recall 
   EnemyMinions    update    pairs    objects 	   MenuShen    farm    USEE    GetDistance    myHero    E    range    ValidTarget    CastE    USEW            health 
   maxHealth       Y@   CastW    USEQ        @   Q    CastQ       @   VP    GetPredictedHealth    GetLatency      @Ź@   getDmg                          ?i  Ni   	N   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁA‡B›  Ŕ€†AB ĆB  €ť€ÇÁB ÇĂŔŔ€†AC Ŕ€ť ›  € €ŚC  €ťA€†A ‡ÁA‡ÁC€ €†B ‡ADĆB ÇÄÁŹÁDĆA ÇÁÁÇÁĂŔ@ €ŚE ťA †A ‡ÁA‡AE›  Ŕ€†AB ĆB  €ť€ÇE ÇĂŔŔ€†AC Ŕ€ť ›  € €ŚÁE  €ťA€b€  ă@đ €       FarmActive    recall    JungleMinions    update    pairs    objects 	   MenuShen    jf    EJF    GetDistance    myHero    E    range    ValidTarget    CastE    WJF            health 
   maxHealth       Y@   CastW    QJF    Q    CastQ                          Pi  [i   	;   F @ G@Ŕ G€Ŕ [    
€GŔ@ G Á ]€€ [   Ŕ€A@ †€A ‡ŔAÁ@ a@
€FA LÂŔ ]€†AB X€€€‡ÂĆAB ÇÂŔ@€†@ ‡A@ÇÁÂ‡Á€†Ŕ€‡AĂÇĂÁŹÁCĆ@ ÇAŔÂÂÇ‚Ŕ@€†D Ŕ€@ B@BDť€€‚@€‡Ä›A  € €ŚÁD  €ťA€` ő €    	   MenuShen    uConfig    USER    R    Ready       đ?   heroManager    iCount    GetHero    myHero    team 	   charName            health 
   maxHealth       Y@   EnemyCount    USER2    dead    CastR                          ]i  ci   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †ÂA ĆÂA CB FĂA †A ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    	   MenuShen 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         ei  vi   o   F @ †@@ ť € ]  €€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĆA Â @€†B ÁB Ý€‚A A‚ €€ĆB C ‚€FB GÂÂOB†MB‚††‚C Ŕ€Ă ť‚€›  €€X Ä €‡BD ›B  @€†‚D ŚÂD ť‚€ŔŔ€ĆBE Ç‚ĹÇÂĹŰ  €€ĆF  €Ý‚ ĂA CF Ŕ€ÇÂA ÇÂÄÝ‚€ Ű  € €Ě‚F ÝB Ŕ
€  €ĆBE Ç‚ĹÇÂĆŰ  Ŕ€ĆF  €Ý‚ B CF  €Ç‚B ÇÂÄÝ‚€ Ű  Ŕ €ĚG @€ÝB€ €@€€ĆBE Ç‚ĹÇBÇŰ  @€ĆF  €Ý‚ €Ç €›  €€ĆÂG D H €@€ÝB€b€  ă€ĺ € !      pairs    GetEnemyHeroes    health    math    floor    shield    getDmg    Q    myHero       @   E    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 	   MenuShen 	   ksConfig    QKS    GetDistance    range    CastQ    EKS    CastE    IKS      Ŕ‚@
   CastSpell    GetSlot                          xi  |i   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       Q    Ready 
   CastSpell    _Q                          ~i  ‚i   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       W    Ready 
   CastSpell    _W                          „i  i      ‡ @ ‡@@ť€€ ›    €†€@ ĆŔ@ Á GAÁ ť@  €       E    Ready 
   CastSpell    _E    x    z                          Ši  Ži   
   ‡ @ ‡@@ť€€ ›   Ŕ €†€@ ĆŔ@  € ť@€ €       R    Ready 
   CastSpell    _R                          i  Ąi   
   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [    €G€H GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGH GAÉ†AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [    €GŔI GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GAÉ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@JDF@ GBŔGĘGBÄť ]@   € )   	   MenuShen    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero    range    DER    E    DERC                          §i  ¸i   N   A   †@@ ‡€@Á   a€€FA@ LÁŔŔ ]€‡Á›A  Ŕ€‡AÁ›   €†A ÁÁ  €FB B ť€ĆA ‚ @€†B ÁB Ý€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ ‚Ŕ €ÂC GÄ
BÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
B€Ŕ €ÂC GÄ
‚ÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BŔŔ €ÂC GÄ
ÂÄŔ€ÂÂFC GBĂ‡‚Ă]‚ 
BMÂ@€ €ÂC GÄ
Ĺ`Ŕí €          đ?   heroManager    iCount    GetHero    dead    visible    getDmg    E    myHero       @   Q    health    math    floor    shield    killstring 
   networkID    Harass Him!!!    E Kill!    Q Kill! 
   E+Q Kill!                          şi  ľi      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         Ŕi  Äi      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          Ći  Či       €                             Ęi  äi   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€ †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 	   MenuShen    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          íi  j   d   Ŕ A@€@@€Á@ A A € 	€ AA A‡Ŕ A€›   Ŕ €AA ÁAĄ  A€Ű   @€AA BĄA  A€ €Ŕ A@@BŔ€Á@ A A € 	 C GŔ   …›    €ÁB AC†C ĺ  A Ű   €€ÁB AC†ÁC ĺÁ  A  €Ŕ A@ D €€ 	€›   Ŕ €AD e  A€Ű   €€ÁD E  €€ÁD EAEEĄA A€Ŕ€Ŕ A@ŔEŔ€€ 	 ›    €ÁD FAA Ą A€Ű    €ÁD FA ĄÁ A€ €       Orbwalking    LOAD       đ?   require 
   SxOrbWalk    SxOrb    LoadToMenu    RegisterAfterAttackCallback    RegisterBeforeAttackCallback        @   Nebelwolfi's Orb Walker    NOW    NebelwolfisOrbWalkerClass    AddCallback 
   AFTER_ATTACK    BEFORE_ATTACK       @   DelayAction        @   _G 
   AutoCarry    Plugins    RegisterPreAttack       @   MMA_RegisterCallback    AfterAttackCallbacks    BeforeAttackCallbacks    ói  ói           @ @  €       AfterAA                         öi  öi           @ @  €    	   BeforeAA                         ýi  ýi           @ @  €       AfterAA                          j   j           @ @  €    	   BeforeAA                         j  j        @ @@ €@ Ŕ@ Ą   @€ €       _G 
   AutoCarry    Plugins    RegisterOnAttacked    j  j           @ @  €       AfterAA                                               	j  	j           @ @  €    	   BeforeAA                         j  j           @ @  €       AfterAA                         j  j           @ @  €    	   BeforeAA                              	
                j  ¤j   
Ň  
@@€
@@
@ŔKŔ  J€Á‚J ÂĄ   J€€„
@ ‚K€ JŔÂ‚J ĂJ€Ă†J Ä‡J€ÄĄ@  J€€„
@ …KŔ  J Ĺ‚J@ĹĄ€  J€€„
@€‰KŔ  JŔĹ‚J ĆĄŔ  J€€„
@ ‹FŔ@ †€F Ç A ÇŔÁÁF C  ]€€
@€ŚFŔ@ †€F Ç€E ÇŔÁÁF C  ]€€
@ Ž
€ÇŽF H †@H Ç A ÇŔÁH FÁH ]€€
@€ŹF H †@I Ç A ÇŔÁH FÁH ]€€
@ ’K   
@ “F J ]€€ 
@€“K  €
 ÁŔ
  AA  ÁÁ  AB d@ 
@€”K  Ŕ Á 
 A
 A
 d@ 
@ ™K  † N Ć@N N FÁN d@ 
@€›K    Á€ Á A d@ 
@ žKŔ	 ‹Ŕ  Š ĐźŠ Á ŠŔPˇJ€ ź‹Ŕ  Š@ŃźŠŔÄ ŠŔPˇJ€ ˘‹Ŕ  ŠŔŃźŠ Á Š RˇJ€ Ł‹Ŕ  ŠŔŃźŠ€Ĺ Š RˇJ€€¤‹Ŕ  ŠŔŇźŠ Á Š RˇJ€ Ą‹Ŕ  ŠŔŇźŠ€Â Š RˇJ€ ¦‹Ŕ  Š€ÓźŠŔÄ Š RˇJ€€¦‹Ŕ  Š ÔźŠ Á Š RˇJ€€§‹Ŕ  Š ÔźŠ€Ĺ Š RˇJ€€¨‹Ŕ  ŠŔÔźŠ Á ŠŔPˇJ€ ©‹Ŕ  ŠŔÔźŠŔÄ ŠŔPˇJ€ Ş‹Ŕ  Š€ŐźŠŔÄ Š RˇJ€€Ş‹Ŕ  Š€ŐźŠ€Ĺ Š RˇJ€€«‹Ŕ  Š@ÖźŠ€Ĺ Š RˇJ€ ¬‹Ŕ  ŠŔÖźŠ€Ĺ Š RˇJ€ ­‹Ŕ  Š@×źŠŔÄ ŠŔPˇJ€ ®‹Ŕ  Š@×źŠ€Ĺ Š RˇJ€ Ż‹Ŕ  Š ŘźŠŔÄ Š RˇJ€€Ż‹Ŕ  Š€ŘźŠ Á Š RˇJ€€°‹Ŕ  Š€ŘźŠ Á ŠŔPˇJ€€±‹Ŕ  Š@ŮźŠŔÄ Š RˇJ€ ˛‹Ŕ  ŠŔŮźŠ Á Š RˇJ€ ł‹Ŕ  ŠŔŮźŠ€Â Š RˇJ€ ´‹Ŕ  ŠŔŮźŠŔÄ Š RˇJ€€´‹Ŕ  ŠŔÚźŠ Á Š RˇJ€ µ‹Ŕ  ŠŔÚźŠŔÄ ŠŔPˇJ€ ¶‹Ŕ  ŠŔÚźŠŔÄ ŠŔPˇJ€€¶‹Ŕ  ŠŔŰźŠ Á Š RˇJ€ ·‹Ŕ  Š@ÜźŠ Á ŠŔPˇJ€ ¸‹Ŕ  ŠŔÜźŠŔÄ ŠŔPˇJ€ ą‹Ŕ  Š@ÝźŠ€Ĺ ŠŔPˇJ€ ş‹Ŕ  ŠŔÝźŠ Á Š RˇJ€ »‹Ŕ  ŠŔÝźŠŔÄ Š RˇJ€ Ľ‹Ŕ  Š€ŢźŠ€Â Š RˇJ€€Ľ‹Ŕ  Š ßźŠ€Ĺ ŠŔPˇJ€€˝‹Ŕ  Š€ßźŠ Á Š RˇJ€€ľ‹Ŕ  Š€ßźŠŔDŔŠŔPˇJ€€ż‹Ŕ  Š€ŕźŠ Á Š RˇJ€€Ŕ‹Ŕ  Š€ŕźŠŔÄ Š RˇJ€€Á‹Ŕ  Š@áźŠ Á Š RˇJ€ Â‹Ŕ  ŠŔáźŠŔÄ Š RˇJ€ Ă‹Ŕ  Š@âźŠ Á Š RˇJ€ Ä‹Ŕ  ŠŔâźŠ€Â ŠŔPˇJ€ Ĺ‹Ŕ  Š@ăźŠ Á Š RˇJ€ Ć‹Ŕ  Š@ăźŠ Á Š RˇJ€ Ç‹Ŕ  Š äźŠ Á Š RˇJ€€Ç‹Ŕ  Š äźŠ€Ĺ Š RˇJ€€Č‹Ŕ  ŠŔäźŠ€Ĺ Š RˇJ€ É‹Ŕ  ŠŔäźŠ Á Š RˇJ€ Ę‹Ŕ  Š€ĺźŠ Á ŠŔPˇJ€€Ę‹Ŕ  Š ćźŠ€Ĺ ŠŔPˇJ€€Ë‹Ŕ  Š€ćźŠ€Â Š RˇJ€€Ě‹Ŕ  Š çźŠ Á Š RˇJ€€Í‹Ŕ  Š çźŠŔÄ ŠŔPˇJ€€Î‹Ŕ  ŠŔçźŠŔÄ Š RˇJ€ Ď‹Ŕ  ŠŔçźŠ€Ĺ Š RˇJ€ Đ‹Ŕ  Š€čźŠ€Â Š RˇJ€€Đ‹Ŕ  Š éźŠ Á Š RˇJ€€Ń‹Ŕ  Š€éźŠ Á Š RˇJ€€Ň‹Ŕ  Š ęźŠ Á ŠŔPˇJ€€Ó‹Ŕ  Š€ęźŠ€Â Š RˇJ€€Ô‹Ŕ  Š ëźŠ Á ŠŔPˇJ€€Ő‹Ŕ  Š ëźŠ€Â Š RˇJ€€Ö‹Ŕ  ŠŔëźŠŔÄ ŠŔPˇJ€ ×‹Ŕ  ŠŔëźŠ€Ĺ Š RˇJ€ Ř‹Ŕ  Š€ěźŠ Á ŠŔPˇJ€€Ř‹Ŕ  Š íźŠŔÄ Š RˇJ€€Ů‹Ŕ  Š€íźŠŔÄ Š RˇJ€€Ú‹Ŕ  Š îźŠ Á Š RˇJ€€Ű‹Ŕ  Š îźŠ€Â Š RˇJ€€Ü‹Ŕ  ŠŔîźŠ Á ŠŔPˇJ€ Ý‹Ŕ  ŠŔîźŠŔÄ Š RˇJ€ Ţ‹Ŕ  Š€ďźŠŔÄ Š RˇJ€€Ţ‹Ŕ  Š đźŠŔÄ Š RˇJ€€ß‹Ŕ  Š€đźŠ Á ŠŔPˇJ€€ŕ‹Ŕ  Š€đźŠ€Â ŠŔPˇJ€€á‹Ŕ  Š@ńźŠ Á ŠŔPˇJ€ â‹Ŕ  ŠŔńźŠ Á ŠŔPˇJ€ ă‹Ŕ  ŠŔńźŠ€Â ŠŔPˇJ€ ä‹Ŕ  Š€ňźŠ€Â Š RˇJ€€ä‹Ŕ  Š€ňźŠŔÄ Š RˇJ€€ĺ‹Ŕ  Š@óźŠ Á ŠŔPˇJ€ ć‹Ŕ  Š@óźŠŔÄ Š RˇJ€ ç‹Ŕ  Š ôźŠ Á Š RˇJ€€ç‹Ŕ  Š€ôźŠŔÄ Š RˇJ€€č‹Ŕ  Š őźŠ Á Š RˇJ€€é‹Ŕ  Š€őźŠ€Ĺ Š RˇJ€€ę‹Ŕ  Š öźŠ€Ĺ ŠŔPˇJ€€ë‹Ŕ  Š€öźŠ Á Š RˇJ€€ě‹Ŕ  Š€öźŠŔÄ Š RˇJ€€í‹Ŕ  Š@÷źŠ€Ĺ Š RˇJ€ î‹Ŕ  ŠŔ÷źŠŔÄ Š RˇJ€ ď‹Ŕ  Š@řźŠ Á Š RˇJ€ đ‹Ŕ  ŠŔřźŠ Á ŠŔPˇJ€ ń‹Ŕ  ŠŔřźŠŔÄ ŠŔPˇJ€ ň‹Ŕ  Š€ůźŠŔÄ Š RˇJ€€ň‹Ŕ  Š€ůźŠ€Ĺ Š RˇJ€€ó‹Ŕ  Š@úźŠ Á Š RˇJ€ ô‹Ŕ  ŠŔúźŠŔÄ ŠŔPˇJ€ ő‹Ŕ  Š@űźŠ€Ĺ Š RˇJ€ ö‹Ŕ  ŠŔűźŠ€Ĺ ŠŔPˇJ€ ÷‹Ŕ  Š@üźŠŔÄ Š RˇJ€ ř‹Ŕ  ŠŔüźŠ€Ĺ Š RˇJ€ ů‹Ŕ  Š@ýźŠŔÄ Š RˇJ€ ú‹Ŕ  Š@ýźŠ€Ĺ Š RˇJ€ ű‹Ŕ  Š ţźŠ Á Š RˇJ€€ű‹Ŕ  Š€ţźŠ Á ŠŔPˇJ€€ü‹Ŕ  Š€ţźŠ€Â Š RˇJ€€ý‹Ŕ  Š@˙źŠ Á Š RˇJ€ ţ‹Ŕ  ŠŔ˙źŠ Á ŠŔPˇJ€ ˙ @ ËŔ  ĘŔ˙źĘŔÄ Ę RˇJŔ @@ ËŔ  @ Ę źĘŔÄ Ę RˇJŔ Ŕ@ ËŔ  @ Ę źĘ€Ĺ ĘŔPˇJŔ  A ËŔ  AA Ę źĘ Á ĘŔPˇJŔ €A ËŔ  AA Ę źĘŔÄ Ę RˇJŔ ŔA ËŔ  B Ę źĘ Á ĘŔPˇJŔ @B ËŔ  B Ę źĘŔÄ Ę RˇJŔ €B ËŔ  ÁB Ę źĘ€Â ĘŔPˇJŔ  C ËŔ  ÁB Ę źĘ€Ĺ ĘŔPˇJŔ @C ËŔ  C Ę źĘŔÄ Ę RˇJŔ 
@€ž €      SelectedTarget     Cel    TargetSelector    Q    name    Lunge    range      ŕ…@   Ready    W    Riposte      p‡@   speed      @ź@   delay       č?   width       T@   E 
   Bladework       i@   R    Grand Challenge      @@   QTargetSelector    TARGET_LESS_CAST_PRIORITY    DAMAGE_PHYSICAL    RTargetSelector    recall  
   EnemyMinions    minionManager 
   MINION_ENEMY    myHero    MINION_SORT_MAXHEALTH_DEC    JungleMinions    MINION_JUNGLE    killstring    it 
   ItemsCast 
   PassiveNames    Fiora_Base_Passive_NE.troy    Fiora_Base_Passive_SE.troy    Fiora_Base_Passive_NW.troy    Fiora_Base_Passive_SW.troy #   Fiora_Base_Passive_NE_Timeout.troy #   Fiora_Base_Passive_SE_Timeout.troy #   Fiora_Base_Passive_NW_Timeout.troy #   Fiora_Base_Passive_SW_Timeout.troy    UltiPassiveNames $   Fiora_Base_R_Mark_NW_FioraOnly.troy $   Fiora_Base_R_Mark_NE_FioraOnly.troy $   Fiora_Base_R_Mark_SW_FioraOnly.troy $   Fiora_Base_R_Mark_SE_FioraOnly.troy    Spells    _Q    _W    _E    _R    Spells2    AutoWSpells    AatroxQ 	   charName    Aatrox 
   spellSlot 
   SpellType 
   skillshot    AhriSeduce    Ahri 
   AkaliMota    Akali    castcel    AkaliShadowDance 
   Pulverize    Alistar 	   Headbutt 
   Frostbite    Anivia 
   Disintegrate    Annie    InfernalGuardian    RocketGrab    Blitzcrank 
   PowerFist    BrandConflagration    Brand    BrandWildfire    CaitlynAceintheHole    Caitlyn    Feast    Chogath    DianaVortex    Diana    DianaTeleport    DravenDoubleShot    Draven    EliseHumanQ    Elise    EliseSpiderQCast 	   EvelynnE    Evelynn    Terrify 
   FiddleSticks    Drain    FiddlesticksDarkWind    FizzPiercingStrike    Fizz 	   FizzJump    FizzJumptwo    Parley 
   Gangplank    GarenQ    Garen    GragasBodySlam    Gragas    HecarimUlt    Hecarim    IreliaGatotsu    Irelia    IreliaEquilibriumStrike    SowTheWind    Janna    JarvanIVCataclysm 	   JarvanIV    JaxLeapStrike    Jax    JaxCounterStrike 
   spellslot    JayceToTheSkies    Jayce    JayceThunderingBlow 
   NullLance 	   Kassadin 
   KatarinaE 	   Katarina    JudicatorReckoning    Kayle    KennenBringTheLight    Kennen    KhazixQ    Khazix    khazixqlong    LeblancChaosOrb    Leblanc    LeblancChaosOrbM    BlindMonkRKick    LeeSin    blindmonkqtwo    LeonaShieldOfDaybreak    Leona    LissandraR 
   Lissandra    LuluW    Lulu 
   SeismicShard 	   Malphite 
   Landslide    AlZaharMaleficVisions 	   Malzahar    AlZaharNetherGrasp    MaokaiUnstableGrowth    Maokai    AlphaStrike 	   MasterYi    MissFortuneRicochetShot    MissFortune    DarkBindingMissile    Morgana    NamiW    Nami    NasusQ    Nasus    NasusW    NautilusSplashZone 	   Nautilus    NautilusGandLine 	   Takedown    Nidalee 	   IceBlast    Nunu    OlafRecklessStrike    Olaf    Pantheon_Throw 	   Pantheon    Pantheon_LeapBash    PoppyDevastatingBlow    Poppy    PoppyHeroicCharge    QuinnE    Quinn    PuncturingTaunt    Rammus    RenektonCleave 	   Renekton    RenektonPreExecute    RengarQ    Rengar    RivenTriCleave_03    Riven    RivenMartyr    RunePrison    Ryze 
   SpellFlux    Deceive    Shaco    TwoShivPoisen    ShenVorpalStar    Shen    Fling    Singed    CrypticGaze    Sion    SkarnerImpale    Skarner    SonaCrescendo    Sona    SwainDecrepify    Swain 
   SwainTorment    SyndraR    Syndra    Dazzle    Taric 
   BlindingDart    Teemo    ThreshQ    Thresh    ThreshE    DetonatingShot 	   Tristana    BusterShot    TrundleTrollSmash    Trundle    UdyrBearStance    Udyr    UrgotSwap2    Urgot    VarusR    Varus 
   VayneCondemm    Vayne    VeigarPrimordialBurst    Veigar    ViE    Vi    ViR    ViktorPowerTransfer    Viktor 
   VolibearQ 	   Volibear 
   VolibearW    HungeringStrike    Warwick    MonkeyKingDoubleAttack    MonkeyKing    MonkeyKingNimbus 
   XenZhaoSweep 	   Xin Zhao 
   XenZhaoParry 	   yasuoq3w    Yasuo    YasuoDashWrapper    YorickSpectral    Yorick    YorickRavenous    ZacW    Zac    ZacR 	   TimeWarp    Zilean    j  j        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _Q    READY                          j  j        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _W    READY                          j  j        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _E    READY                          j  j        @ @@ †€@ €€FŔ@ X@    €@   €    €       myHero    CanUseSpell    _R    READY                                               ¦j  k     F@@ €  ÁŔ  ]€€@ €F @ L Á Á@  ]@ F @ G€Á LŔÁ Á  A FB Á Ë  AB ‚ ÁÂ äA ]@€L D Ć @ € C  ]@€F@D †€D ĆŔD Ç ĹÍ@ĹE C  ]€€
@€G@D J Ć‹F @ L@Ć Ç@D ]@€F @ L Á Á€ Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH   ]@ F @ GŔĆ LŔÁ ÁŔ 	 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ GŔĆ LŔÁ Á@
 	 GJ GÁĹÁ
 FH € ]@ F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á  A FH € ]@ F @ GŔĆ LŔÁ Á€ Á FH € ]@ F @ GŔĆ LŔÁ Á  A FL Á Á
 B
 A
 ]@€F @ GŔĆ LŔÁ Á  Á FG Á ]@ F @ GŔĆ LŔÁ Á  A FG Á ]@ F @ GŔĆ LŔÁ Á€
 Á
 FL  Á
 B
 A
 ]@€F @ GŔĆ LŔÁ Á@  FL Á Á
 B
 A
 ]@€F @ L Á Á  A ]@ F @ G@Ď LŔÁ Á  A FG Á ]@ F @ G@Ď LŔÁ Á@	 	 GÁI GÁĹ
 FH € ]@ F @ G@Ď LŔÁ Á@
 	 GJ GÁĹÁ
 FH   ]@ F @ G@Ď LŔÁ Á  Á FG Á ]@ F @ G@Ď LŔÁ Á  A FG Á ]@ F @ G@Ď LŔÁ Á€
 Á
 FL  Á
 B
 A
 ]@€F @ G@Ď LŔÁ Á@  FL Á Á
 B
 A
 ]@€F @ G@Ď LŔÁ Á  Á FG Á ]@ F @ G@Ď LŔÁ Á  A FG Á ]@ F @ G@Ď LŔÁ Á  A FP   ĆÁP ÇŃB Ý ]@  F€Q † @ Á    C€   Ă  ]@€F @ L Á ÁŔ  ]@ F @ G Ň LŔÁ Á  A FG Á ]@ F@R †€R ť € ]  Ŕ€†AR ÇÁR ť@€ÇS CÓ€ €ĂEÇŰ  @€Ć@ ÇŇĚÂÁFS ŚCÓ  ť€‡ĂE] Ă ĆS ÔÝ D F„S ‡„T ‡D	]„ –CĆH € ÝB ˘  #Â÷b€  ă@öF @ G Ň LŔÁ Á  Á FG Á ]@ F @ G Ň LŔÁ Á  A FG Á ]@ F @ G Ň LŔÁ ÁŔ  FH € ]@ F @ G Ň LŔÁ Á  Á FG Á ]@ F @ G Ň LŔÁ Á  A FG Á ]@ F @ G Ň LŔÁ Á@  FH € ]@ F @ G Ň LŔÁ ÁŔ  FL A Á
 B
 A
 ]@€F @ L Á Á€ Á ]@ F @ GŔÖ LŔÁ Á  A FG Á ]@ F @ GŔÖ LŔÁ Á  A FH € ]@ F @ GŔÖ LŔÁ Á€ 	 GÁI GÁĹ
 FH € ]@ F @ GŔÖ LŔÁ ÁŔ 	 GX GÁĹA FH   ]@ F @ L Á Á€ Á ]@ G Y L@Ů Ć @ ÇŔŘ]@€F @ L Á Á€ Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á@	 	 GÁI GÁĹ
 FB  Ë€B A‚ Â äA€]@€F @ GŔŮ LŔÁ Á@
 	 GJ GÁĹÁ
 FH € ]@ F @ GŔŮ LŔÁ Á  Á FG Á ]@ F @ GŔŮ LŔÁ Á  A FG Á ]@ F @ GŔŮ LŔÁ Á€
 Á
 FL A Á
 B
 A
 ]@€F @ GŔŮ LŔÁ Á@  FL Á Á
 B
 A
 ]@€F @ L Á Á  A ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á€ 	 GÁI GÁĹ
 FH € ]@ F @ G@Ű LŔÁ ÁŔ 	 GJ GÁĹÁ
 FH € ]@ F @ G@Ű LŔÁ Á  Á FG Á ]@ F @ G@Ű LŔÁ Á  A FG Á ]@ F @ G@Ű LŔÁ Á€
 Á
 FL A Á
 B
 A
 ]@€F @ G@Ű LŔÁ Á@  FL Á Á
 B
 A
 ]@€F @ L Á Á  A ]@ F @ G@Ü LŔÁ Á  A FG Á ]@ F @ G@Ü LŔÁ Á€ Á FH € ]@ F @ G@Ü LŔÁ Á  A FH € ]@ F @ G@Ü LŔÁ Á  Á FG Á ]@ F @ G@Ü LŔÁ Á  A FG Á ]@ F @ G@Ü LŔÁ Á€ Á FH € ]@ F @ G@Ü LŔÁ Á  A F^ ‹ ÁÁ 
 AÂ Â ¤A ]@ F @ G@Ü LŔÁ Á  Á FG Á ]@ F @ G@Ü LŔÁ Á  A FG Á ]@ F @ G@Ü LŔÁ Á  A FH € ]@ F @ G@Ü LŔÁ Á€ Á F^ ‹ ÁÁ B
 AÂ 
 ¤A ]@ F @ G@Ü LŔÁ Á  Á FG Á ]@ F @ G@Ü LŔÁ Á  A FG Á ]@ F @ G@Ü LŔÁ Á   A  FH € ]@ F @ G@Ü LŔÁ Á€  Á  F^ ‹ ÁÁ Â A
 
 ¤A ]@ F @ L Á Á ! A! ]@ F @ G@á LŔÁ Á  A FG Á ]@ F @ G@á LŔÁ Á€! Á! FH   ]@ F @ G@Ď L â Á  ]@€ € ‰   
   MenuFiora 
   scriptConfig    MasterSeries: Fiora    Fiora1    addSubMenu    [Fiora]: Orbwalking    Orbwalking 	   addParam    LOAD    Orbwalker:    SCRIPT_PARAM_LIST       đ?
   SxOrbwalk    NebelwolfisOrbWalker    SAC    MMA    LoadOrb    TargetSelector    TARGET_LESS_CAST_PRIORITY    myHero    range       ^@
   DAMAGE_MAGIC    name    Fiora    addTS    [Fiora]: Combo Settings    comboConfig    qqq    ||----------------||    SCRIPT_PARAM_INFO        ST    Focus Selected Target    SCRIPT_PARAM_ONOFF    FO     Force Orbwalk To Passive Points    USEQ    Use     Q     (Q)    USEE    E     (E)    USER    Focus Target With R Buff    USER2    Use (R) When Target Killable    USER3    Use (R) When My HP% <     SCRIPT_PARAM_SLICE       9@              Y@   QMANA    Min. Mana % To Use (Q)       $@   EMANA    Min. Mana % To Use (E)       .@   [Fiora]: Harras Settings 
   harrasConfig       D@      I@
   HTEnabled    Harass Toggle Key    SCRIPT_PARAM_ONKEYTOGGLE    string    byte    L 
   AddSpellMenu    [Fiora]: Riposte Settings    riposteConfig    pairs    GetEnemyHeroes    Spells    AutoWSpells 
   GetSpellData 	   tostring    Block  	   charName     Spell     Spells2    USE    Enable    USE2    Riposte All Spells In Game    HP    If My HP% <       4@   [Fiora]: KS Settings 	   ksConfig    IKS    Use Summoner Ignite    QKS    WKS    W     (W)    [Fiora]: Items Settings 
   iteConfig    it    LoadToMenu    [Fiora]: Farm Settings    farm        @   No    Clear    LastHit    [Fiora]: Jungle Farm Settings    jf    QJF    EJF    [Fiora]: Draw Settings    drawConfig    DD    Draw Damage Text    DST    Draw Selected Target    DQR 
   Draw Q Range    DQRC    Draw Q Range Color    SCRIPT_PARAM_COLOR      ŕo@   DWR 
   Draw W Range    DWRC    Draw W Range Color    DRR 
   Draw R Range    DRRC    Draw R Range Color    [Fiora]: Misc Settings 	   prConfig    ALS    Auto lvl skills 
   permaShow                          k  (k   	w   F @ †@@ ]@ G€@ LŔŔ ]@ G A LŔŔ ]@ G@A X€Á @€FŔA ‡@A Ç B Ç@Â]€€[   €€G@A 
@ …G@A 
@€…G@A 
@ †@€F@C ‡€C ]€ 
@ …G€@ GŔĂ 
@€…G A GŔĂ 
@ †F D ]€€ [   Ŕ€G@D [@   €F@@ G€Ä GŔÄ [   Ŕ€FŔA ‡ŔB ]€ [   €€L E ÇŔB ]€€[@  € €L@E ÇŔB ]€€[    €†€E Ŕ € ť€ ŔEŔ €† F Ŕ € ť@ €€† F Ä   ť@ € €F F „   ]@ F D ]€€ [   €€G@D [@  Ŕ€F@@ G€Ä G@Ć [   €€F€F †ŔF ť € ]  Ŕ€†ÁA Ŕ€ť ›  €€†E Ŕ€ť ÇG ÇAÂŔŔ€ŚAG  €ť€›  € €
@…
@…
@†b€  ă@ú €       CheckOB 
   MenuFiora    QTargetSelector    update    RTargetSelector    SelectedTarget     ValidTarget    E    range    Cel    QCel    RCel    GetCustomTarget    TargetSelector    target    ComboActive    recall    comboConfig    FO    PassiveRadiusPoint    UltimatePassivePos    GetDistance      @o@   ForceOrbwalkPosition    USER    pairs    GetEnemyHeroes    R    HaveUltimatePassive                          *k  7k   K   F @ ]€€ [    €F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡€A‡ŔA@ @€F@A G€Á G Â [    €F@B †@@ Ç€B ]€€‡ŔB ‡ C€€  €F@C ‡€B ]€ [   Ŕ €L€C ]@ FŔC ]@€ F D ]€€ [    €F@@ G€Ŕ †@@ ‡Ŕ@P€€ O Á †@A ‡@D‡ŔA@ @€F@A G@Ä G Â [    €F@B †@@ Ç€D ]€€‡ŔD ‡ C€€  €F@C ‡€D ]€ [   Ŕ €L€C ]@ FŔC ]@€  €       ComboActive    myHero    mana    maxMana       Y@
   MenuFiora    comboConfig    EMANA    USEE    GetDistance    QCel    Q    range    ValidTarget    CastE    ResetAA 
   HarassActive 
   harrasConfig    Cel    E                          9k  Ok   y   F @ ]€€ [   Ŕ€G@@ [@   €F€@ GŔŔ †€@ ‡ AP€€ O@Á †€A ‡ŔA‡ B@  €F€A GŔÁ G@Â [   Ŕ€F€B †€@ ÇŔB ]€€‡ C ‡@C€€ Ŕ€F€C ‡ŔB ]€ [   € €LŔC ÇŔB ]@€F€C ‡ŔB ]€ [   @€G D L@Ä ÇŔB A D]@ F€A GŔÁ GŔÄ [    €F€B †€@ Ç E ]€€‡@E ‡@C€€  €F€C ‡ E ]€ [   Ŕ€L€E Ç E ]€€OŔĹ Ś F E ť€€ŹŔEM€€ Ś@F E ť€€M€€ ‡ E ‡€F@ € €ŚŔF E ť@€F€A GŔÁ G Ç @€Ž€€F€B †€@ Ç E ]€€‡@E ‡@C€€ €€F€C ‡ E ]€ [   @€F€@ G€Ć †€@ ‡€GP€€ O@Á †€A ‡ŔA‡ G€€ € €LŔF Ç E ]@€ €       ComboActive    recall    myHero    mana    maxMana       Y@
   MenuFiora    comboConfig    QMANA    USEQ    GetDistance    QCel    Q    range    ValidTarget    CastQ    it 
   CastItems 
   iteConfig    USER2    RCel    R    AADMG        @   QDMG    WDMG    health    CastR    USER3         
   maxHealth                          Qk  Yk   -   F @ G@Ŕ G€Ŕ [@  Ŕ €FŔ@ ]€€ [   €€G A [@  Ŕ€F@A G€Á †@A ‡ŔAP€€ O Â † @ ‡@@‡@B@  €F @ G@Ŕ G€Â [   Ŕ€FŔB †@A Ç C ]€€‡@C ‡€C€€ Ŕ€FŔC ‡ C ]€ [   € €L D Ç C ]@€ €    
   MenuFiora 
   harrasConfig 
   HTEnabled 
   HarassActive    recall    myHero    mana    maxMana       Y@   QMANA    USEQ    GetDistance    QCel    Q    range    ValidTarget    CastQ                          [k  tk      F @ ]€€ [   Ŕ€G@@ [@   €G€@ LŔŔ ]@ F A ‡€@ ‡@A] €€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇĂ€ €†B ‡ÁB‡AC›  Ŕ€†C ĆA  €ť€ÇÁC ÇÄŔŔ€†AD Ŕ€ť ›  € €ŚD  €ťA€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇÁÄ€ €†B ‡ÁB‡E@EŔ€†C ĆA  €ť€ÇE ÇÄŔŔ€†AD Ŕ€ť ›  € €ŚÁE  €ťA€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇÁÄ€Ŕ€†B ‡ÁB‡E F€€†C ĆA  €ť€ÇE ÇÄŔ€€†AD Ŕ€ť ›  @€†AF ŚF €FÂF ]‚€ PÇť ĆAG ‚ @€†‚A Á Ý€Ŕ€ €ÂE €€B€b€  ă€ă €       FarmActive    recall 
   EnemyMinions    update    pairs    objects    myHero    mana    maxMana       Y@
   MenuFiora    farm    EMANA    USEE    GetDistance    E    range    ValidTarget    CastE    QMANA    USEQ        @   Q    CastQ       @   VP    GetPredictedHealth    GetLatency      @Ź@   getDmg                          vk  †k   	R   F @ ]€€ [    €G@@ [@  @€G€@ LŔŔ ]@ F A ‡€@ ‡@A] Ŕ€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇĂ€ €†B ‡ÁB‡AC›  Ŕ€†C ĆA  €ť€ÇÁC ÇÄŔŔ€†AD Ŕ€ť ›  € €ŚD  €ťA€†A ‡ÁAĆA ÇÂÁŹABĆB ÇÁÂÇÁÄ€ €†B ‡ÁB‡E›  Ŕ€†C ĆA  €ť€ÇAE ÇÄŔŔ€†AD Ŕ€ť ›  € €ŚE  €ťA€b€  ă@ď €       FarmActive    recall    JungleMinions    update    pairs    objects    myHero    mana    maxMana       Y@
   MenuFiora    jf    EMANA    EJF    GetDistance    E    range    ValidTarget    CastE    QMANA    QJF    Q    CastQ                          k  Žk   '   F @ G@Ŕ G€Ŕ [@    € € FŔ@ G Á †@A ť€€ @ @€K €†€A ĆŔA A FB †A ĆAB ‚A FÂA †ÂA ĆÂA CB FĂA †A ĆB B FDB †B ĆB d@ 	†€B Ć@A Ý€€ ÍŔÂÇŔ€ ť@  €    
   MenuFiora 	   prConfig    ALS    myHero    level    GetHeroLeveled    _Q    _E    _W    _R    LevelSpell       đ?                         k  ˇk   j   F @ †@@ ť € ]  @€‡ŔĆÁ@ ÇÁBÁÝ ŤÁĚA @€Ý€ÂA €€‚€FB GBÂOB…MB‚…†C Ŕ€C ť‚€›  Ŕ€X€Ă@€‡ÂC ›B  €€†D ŚBD ť‚€Ŕ €ĆÂD ÇĹÇBĹŰ  Ŕ€Ć‚E  €Ý‚ ĂE F  €ÇÂE ÇBÄÝ‚€ Ű  Ŕ €ĚBF @€ÝB€Ŕ
€  €ĆÂD ÇĹÇ‚ĆŰ  Ŕ€Ć‚E  €Ý‚ ĂF F  €ÇÂF ÇBÄÝ‚€ Ű  Ŕ €ĚG @€ÝB€ €@€€ĆÂD ÇĹÇBÇŰ  @€Ć‚E  €Ý‚ €Ç €›  €€ĆÂG D H €@€ÝB€b€  ăŔć € !      pairs    GetEnemyHeroes    health    math    floor    shield    QDMG    WDMG    myHero    level       4@      I@   ValidTarget      p—@    recall    SSpells    Ready    summonerdot 
   MenuFiora 	   ksConfig    QKS    GetDistance    Q    range    CastQ    WKS    W    CastW    IKS      Ŕ‚@
   CastSpell    GetSlot                          Łk  ­k   
*   † @ Ŕ € A@ @
Á@ť€€›    €  Ć@A Ç€Á ˇ €†AA ŚÁA €ť€›  €€ÇBŰ  Ŕ€ĆAB  € @ Ý€€Â@€ĆÁB ÇĂBC G‚CÝ€Ű  € €Ă€ ‚Cß€ @ů   ź   €       ValidTarget    Q    range       i@      đ?   objManager    maxObjects 
   getObject    valid    GetDistanceSqr      Ł@   table 	   contains 
   PassiveNames    name                          Żk  ąk   
*   † @ Ŕ € A@ @
Á@ť€€›    €  Ć@A Ç€Á ˇ €†AA ŚÁA €ť€›  €€ÇBŰ  Ŕ€ĆAB  € @ Ý€€Â@€ĆÁB ÇĂBC G‚CÝ€Ű  € €Ă€ ‚Cß€ @ů   ź   €       ValidTarget    R    range       i@      đ?   objManager    maxObjects 
   getObject    valid    GetDistanceSqr      Ł@   table 	   contains    UltiPassiveNames    name                          »k  Ëk   
l   Ś @  € ťŔ€›   @€Ű   Ŕ€AŔ  €  €€Á@ GÁ †AA ‡AÁÁ ť „M‡AÂ ÇÂ BA ‚AAÂ ‚ ‚…Í‚   @€AŔ €  €€Á@ GÁ †AA ‡AÁÁ ť …M‡AÂ ÇÂ BA ‚AAÂ ‚ ‚†Í‚   @€AŔ €  €€Á@ GÁ †AA ‡AÁÁ ť …N‡AÂ ÇÂ BA ‚AAÂ ‚ „Î‚   @€AŔÁ €   €Á@ GÁ †AA ‡AÁÁ ť „M‡AÂ ÇÂ BA ‚AAÂ ‚ ‚…Î‚   @ €       €       HavePassive    find    NE    Vector    x    math    sqrt        @           y    z      Ŕb@   NW       I@   SE    SW                          Ík  ăk   M   Ś @  € ťŔ€›    €Ű   €€AŔ  €  Ŕ€Á  Á 
ÁA ‚B FÁ@ ‡AÂ ĆAA    @€AŔ €  Ŕ€Á ÁA Á  ‚B FÁ@ ‡AÂ ĆAA     €AŔÁ €  Ŕ€Á 
ÁA Á  ‚B FÁ@ ‡AÂ ĆAA    Ŕ€AŔ €  €€Á  Á ÁA ‚B FÁ@ ‡AÂ ĆAA        € 
      HaveUltimatePassive    find    NE    pos1X    x    pos1Y    z       i@   Vector    y    SE    NW    SW                          ĺk  ˙k   v   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€ŚŔ@  € ť€€›   @
€Ś A  € ť€€›   €€Ć@A   @€ Ý€€@ A €€ĆŔA B GAB‡BÇÁB Ý€  Ű@  @€Ć C AC GAB‡ÁBÝ@ @€Ć@A C @€ Ý€€@ A @€Ć C AC GAÂ ‡ÁÂ Ý@ Ŕ€ŚŔC  € ť€€›   @
€Ś D  € ť€€›   €€Ć@A   @€ Ý€€@ A €€ĆŔA B GAB‡BÇÁB Ý€  Ű@  @€Ć C AC GAB‡ÁBÝ@ €€Ć@A C @€ Ý€€@ A €€Ć C AC GAÂ ‡ÁÂ Ý@  €†@A Ć€C  € ť€€Ç @ Ç€ÁŔ  €† C Ć@C AÂ GÁÂ ť@  €       Q    Ready    ValidTarget    HavePassive    PassiveRadiusPoint    GetDistance    range    IsWall    D3DXVECTOR3    x    y    z 
   CastSpell    _Q    myHero    HaveUltimatePassive    UltimatePassivePos                          l  l   J   ‡ @ ‡@@ť€€ ›   Ŕ€†€@ Ŕ € ť€ ›   €€†Ŕ@ Ś A € G@ GAÁ‡@ ‡AÇ@ ÇÁÁB ť ›   €€Ű    €FAB € ] ‡@ ‡B€@€FÁB †C ÇAC‚C]A  € FÁC †D ‡AD‡D‡ÁDŔ€ @ BAG@ G‚Á‡@ ‡‚BÇ@ ÇÂÁB A   Ă    A  †D ‡DD	‡„D	‡DE	]X€Ĺ@ €›A    € € ÂB FC ‡BĂÇ‚ĂB  €       W    Ready    ValidTarget    VP 
   IsDashing    delay    width    speed    myHero    GetDistance    range 
   CastSpell    _W    x    z    GetPrediction2 
   MenuFiora 	   spConfig    wConfig    WP    line    WCH                           l  l   	   G @ G@Ŕ ]€€ [   € €F€@ †Ŕ@ ]@  €       E    Ready 
   CastSpell    _E                          l  l      ‡ @ ‡@@ť€€ ›    €†€@ Ŕ € ť€ ›   Ŕ €†Ŕ@ Ć A  € ť@€ €       R    Ready    ValidTarget 
   CastSpell    _R                          l  l      ‡ Ŕ Ź@@Ć€@ ÇŔŔĎŔ ‚ÍŔ€‚@ A€€ Ć@ ÇÁÁÍ€ÍÁ€    €    
   maxHealth ¸…ëQ¸ž?   myHero    level š™™™™™ą?š™™™™™@   CalcDamage    totalDamage                           l  #l   &   ‹ €Á   A  A  Á  Á ¤@€Ç@A Ç€ÁÝ€€ Ű   €€ĆŔA Ě Â@€ †ÁA ŚAB‚B ť€‡ÁBŹ†ŤACĆÁA ÇĂÂA BB†‚B ‚€ÂBĎ‚ŤÁÝ€ Ű@    €ÁŔ ß   €    š™™™™™á?ffffffć?333333ë?š™™™™™ą?q=
×Łp˝?   Q    Ready    myHero    CalcDamage 
   GetSpellData    _Q    level       $@     €K@
   addDamage                                  %l  'l      ‡ @ ‡@@ť€€ ›   Ŕ€†€@ ŚŔ@ € F@ LÁĆAA ]€GÁOAMÂ†@ ‡ABMť€ ›@    €€ ź   €       W    Ready    myHero    CalcMagicDamage 
   GetSpellData    _W    level       D@      I@   ap                                  )l  Al   
ş   F @ G@Ŕ G€Ŕ [   €€F @ GŔŔ G Á [   @€G@A X€Á €€G@A GŔÁ [@  €€F B ‡@A ‡@BÇ@A Ç€ÂAA ÁBA †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€Ä [   @	€FŔD † E ť € ]  €€ŚAE ťA †E Ŕ€Â ť€›  €€‡F ÇAĆ‡ÁX€A@€†F ĆÁF BÂG‚Â‡ÂÂÝ ť  ĆG F GBĆBAB ‡BBŽ‚GÇ‚BÎÂÇ ÝA b€  ă€÷F @ G@Ŕ G@Č [   Ŕ€G€H GŔČ ]€€ [   €€F B † I ‡@BĆ I Ç€ÂI ÁBAA	 †AC Ć@ ÇAŔÇĂÇÁĂ@ B@‚CDF@ GBŔG‚ĂGBÄť ]@  F @ G@Ŕ G€É [   @€GŔI GŔČ ]€€ [    €F B † I ‡@BĆ I Ç€ÂI ÁBGÁI GĘMAĘ†AC Ć@ ÇAŔÇĘÇÁĂ@ B@‚JDF@ GBŔG‚ĘGBÄť ]@  F @ G@Ŕ GŔĘ [    €G K GŔČ ]€€ [   Ŕ€F B † I ‡@BĆ I Ç€ÂI ÁBGK GĘ†AC Ć@ ÇAŔÇAËÇÁĂ@ B@BKDF@ GBŔGBËGBÄť ]@   € .   
   MenuFiora    drawConfig    DST    comboConfig    ST    SelectedTarget     dead    DrawCircle2    x    y    z       Y@   RGB    DQRC        @      @      @   DD    pairs    GetEnemyHeroes    DmgCalc    ValidTarget      p—@   killstring 
   networkID    WorldToScreen    D3DXVECTOR3 	   DrawText       4@     €A@      $@   ŕ˙˙ďA   DQR    Q    Ready    myHero      p‡@   DWR    W    range       I@   DWRC    DRR    R    DRRC                          Cl  ]l   €   A   †@@ ‡€@Á   a €FA@ LÁŔŔ ]€‡Á›A  @€‡AÁ›  €€ŚA  €ť€ĚÁA @€Ý€B €€‚€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚ŤÂŤ@Ŕ €GBC ‡‚ĂJÂCŔ€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚ ‚Ŕ €GBC ‡‚ĂJDŔ€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚€Ŕ €GBC ‡‚ĂJBDŔ€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚ŔŔ €GBC ‡‚ĂJ‚DŔ€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚Ť‚€‚Ŕ €GBC ‡‚ĂJÂD€	€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚ŤÂ€‚Ŕ €GBC ‡‚ĂJE@€GBÂ†‚B ‡ÂBÇĂť‚ M‚‚ŤÂ€‚Ŕ €GBC ‡‚ĂJBE €GBÂ†‚B ‡ÂBÇĂť‚ M‚‚Ť‚ŤÂ€‚€ €GBC ‡‚ĂJ‚E`@á €          đ?   heroManager    iCount    GetHero    dead    visible    WDMG    QDMG    AADMG    health    math    floor    shield    killstring 
   networkID    Harass Him!!! 	   AA Kill!    W Kill!    Q Kill!    AA+W Kill!    AA+Q Kill! 
   W+Q Kill! 
   AA+W+Q Kill!                          _l  cl      [   Ŕ€Ŕ    €Ű   €€AŔ@Á  €    €
 Á €       isMe    name    find    recall                         el  il      [   Ŕ€Ç Ŕ Ű    €›   €€Ç@@Ě€ŔAÁ  Ý€€Ű     €
 Á €       isMe    name    find    recall                          kl  łl   
  Ç Ŕ Ű   Ŕ€Ç@@Ě€ŔAÁ  Ý€€Ű   @ €Ć A Ý@€ Ć@A Ç€ÁÇŔÁŰ    >€Ç B Ç@ÂÝ€€ Ű   Ŕ<€[   €€Ç€Â ÁB BX @€›   Ŕ€Ç CŰ    €Ć@A Ç€ÁA@Ç Ű   €€Ç CÇ@ĂŰ   € €Ě€C @€ Ý@€[    6€Ç€Â ÁB BX Ŕ4€ĆŔB ÇŔĂŰ@  Ŕ3€Ç Ä ÁB D €2€›    2€Á    Ĺ‰ ‰Ŕ€Ç Ä ÁB D Ŕ€Ç@E A@Ç Ű   €
€Ć@A Ç€ÁA@Ç Ű    €Ć F  € GA@ÝŔ€ ‹Ŕ ‹ĆŔE X@Ć@€ĆŔE X€Ć€ €ĆŔE ŔĆ  € € Ć€E X Ç €Ć€E X Â@€Ć€E X@Ç€ €Ć€E €Ç €ĆŔG Č Ç E Ç Ç ÄŔ€ĆŔG Č Ç E Ç Ç€ÄŔ ‰ĆŔG Č Ç E Ç ÇŔÄŔ€‰ĆŔB Ű   Ŕ€ÂFÁB GÂ@€€ÁĂA  Ŕ€AČ Š €  GČ†AD  E@ €C €†AD ŔH@€†I Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  Ŕ€†AD €I@€†ÁI Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  €€†AD  J@€†AJ Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  @€†AD @F@€†J Ŕ€ BIF‚D †ÂD Ŕ€ €ť€   
€†AD €F@€†ÁJ Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  Ŕ	€†AD ŔF €†I Ŕ€ BIF‚D †ÂD Ŕ€ €ť€A @€†I Ŕ€ K @€ ‚ ‚IGBIBF‚D †ÂD Ŕ€ €ť€  Ŕ€†AD @K €†J ÇAI € F‚D †ÂD Ŕ€ €ť€    € €ŚC  € ťA€Ć@A Ç€ÁÇ€ËŰ   €?€Ç B Ç@ÂÝ€€ Ű   @>€ĆŔB Ç@ČÁB ÁKĐ Ď ĚAA AAL €;€[   €€Ç€Â ÁB BX @€›   Ŕ€Ç CŰ    €Ç CÇ@ĂŰ    €Ç@@Ě€ŔA Ý€€Ű@  € €Ě€C @€ Ý@€[   Ŕ4€Ç€Â ÁB BX €3€ĆŔB ÇŔĂŰ@  €2€Ç Ä ÁB D @1€›   Ŕ0€Á    Ĺ‰ ‰Ŕ€Ç Ä ÁB D €
€Ç@@Ě€ŔA Ý€€Ű@   €Ć F  € GA@ÝŔ€ ‹Ŕ ‹ĆŔE X@Ć@€ĆŔE X€Ć€ €ĆŔE ŔĆ  € € Ć€E X Ç €Ć€E X Â@€Ć€E X@Ç€ €Ć€E €Ç €ĆŔG Č Ç E Ç Ç ÄŔ€ĆŔG Č Ç E Ç Ç€ÄŔ ‰ĆŔG Č Ç E Ç ÇŔÄŔ€‰ĆŔB Ű   Ŕ€ÂFÁB GÂ@€€ÁĂA  Ŕ€AČ Š €  GČ†AD  E@ €C €†AD ŔH@€†I Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  Ŕ€†AD €I@€†ÁI Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  €€†AD  J@€†AJ Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  @€†AD @F@€†J Ŕ€ BIF‚D †ÂD Ŕ€ €ť€   
€†AD €F@€†ÁJ Ŕ€ BIF‚D †ÂD Ŕ€ €ť€  Ŕ	€†AD ŔF €†I Ŕ€ BIF‚D †ÂD Ŕ€ €ť€A @€†I Ŕ€ K @€ ‚ ‚IGBIBF‚D †ÂD Ŕ€ €ť€  Ŕ€†AD @K €†J ÇAI € F‚D †ÂD Ŕ€ €ť€    € €ŚC  € ťA€ € 3      IsMe    name    find    FioraE    ResetAA 
   MenuFiora    riposteConfig    USE    W    Ready    team    myHero    target    isMe    CastW    dead    type 	   shottype    radius    maxdistance            AutoWSpells 
   spelltype 	   casttype 
   getSpellType       @      @      @   Q    E    R 
   skillData 	   charName    health    boundingRadius       đ?   checkhitlinepass    endPos        @   checkhitlinepoint       @   checkhitaoe 
   checkhitcone 
   checkhitwall    Vector       @   USE2 
   maxHealth       Y@   HP    autoattack                          µl  Ďl   
H   Ć @ Ŕ€ Ŕ€Ć@@ Ç€ŔÇŔŔŰ   €€Á    FAA †A ť€ ] €€†ÂA Ŕ€ť‚ ›  @€†B Ŕ€CB ť‚€ZŔ @ €€B@€†B Ŕ€CB ť‚€Ŕ   €b  ăú   €ŔÂ€€GC [   €GAC‡C ‡AC€Ŕ€
€B†FA@ GŔGÁŔ[   €FC Á ÇAC–Á]A €€ †FA@ GŔGÁŔ[   €FC  ÇAC–Á]A  €       WM_LBUTTONDOWN 
   MenuFiora    comboConfig    ST            ipairs    GetEnemyHeroes    ValidTarget    GetDistance 	   mousePos       Ŕr@   SelectedTarget 	   charName    print b   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">Target unselected:</font> d   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">New target selected:</font>                          Öl  Ül      F @ ]€€ L@Ŕ Á€  Á  ]€  Á  €G@A €Á @ €LŔA ]@  €       GetGameVersion    sub       đ?      $@   5.24.0.249    header       h@   Block                          Ýl  âl      G @ G@Ŕ †€@ X€€ @€FŔ@   ]@ G @ G@Ŕ @  €       Orbwalking    LOAD    lastorb    print ~   <b><font color="#ff6600">MasterSeries:</font></b> <font color="#FFFFFF">You Change Orbwalker Pls RELOAD SCRIPT (2x F9)</font>                          ăl  ďl   3      Ŕ€E   [    €F Ŕ G@Ŕ [    €F@Ŕ L€Ŕ Ŕ   ]@€Ŕ€E  [   @€F Ŕ GŔŔ [   @€F Ŕ G Á L@Á Ŕ   ]@€€€E €[    €F Ŕ G€Á [    €FŔÁ L Â Ŕ   ]@€€€E  [   Ŕ€F Ŕ G@Â [   Ŕ €FŔÁ L Â Ŕ   ]@€ € 
      _G    SxOrb    ForceTarget    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker 
   SetTarget 
   AutoCarry    myHero    Attack 
   MMA_IsLoaded          	
                đl  úl    /         Ŕ€ Ŕ @@    Ŕ €@Ŕ €@ @ €€      € Ŕ Ŕ@     € Ŕ  A €@ @ €€ €   @€ Ŕ @A    @€ Ŕ @A €A ŔA @ @€     €€ Ŕ  B    € € Ŕ @B @€  € 
      _G    SxOrb    ResetAA    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker 
   AutoCarry 
   Orbwalker    ResetAttackTimer 
   MMA_IsLoaded    MMA_ResetAutoAttack          	
                űl  m    2         Ŕ€ Ŕ @@    Ŕ €@Ŕ €@ @ @	€     @€ Ŕ Ŕ@    @€ Ŕ  A @A    @€ € €   €€ Ŕ €A    €€ Ŕ €A ŔA  B    @€€€     Ŕ€ Ŕ @B    Ŕ € Ŕ €B C € @  €       _G    SxOrb    DisableMove    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    SetMove 
   AutoCarry    MyHero    MovementEnabled 
   MMA_IsLoaded    MMA_AvoidMovement          	
                m  m    2         Ŕ€ Ŕ @@    Ŕ €@Ŕ €@ @ @	€     @€ Ŕ Ŕ@    @€ Ŕ  A @A  € @€ € €   €€ Ŕ €A    €€ Ŕ €A ŔA  B  € @€€€     Ŕ€ Ŕ @B    Ŕ € Ŕ €B C   @  €       _G    SxOrb    EnableMove    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    SetMove 
   AutoCarry    MyHero    MovementEnabled 
   MMA_IsLoaded    MMA_AvoidMovement          	
                m  m    2         Ŕ€ Ŕ @@    Ŕ €@Ŕ €@ @ @	€     @€ Ŕ Ŕ@    @€ Ŕ  A @A    @€ € €   €€ Ŕ €A    €€ Ŕ €A ŔA  B    @€€€     Ŕ€ Ŕ @B    Ŕ € Ŕ €B C € @  €       _G    SxOrb    DisableAttacks    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    SetAA 
   AutoCarry    MyHero    AttacksEnabled 
   MMA_IsLoaded    MMA_StopAttacks          	
                m  &m    2         Ŕ€ Ŕ @@    Ŕ €@Ŕ €@ @ @	€     @€ Ŕ Ŕ@    @€ Ŕ  A @A  € @€ € €   €€ Ŕ €A    €€ Ŕ €A ŔA  B  € @€€€     Ŕ€ Ŕ @B    Ŕ € Ŕ €B C   @  €       _G    SxOrb    EnableAttacks    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    SetAA 
   AutoCarry    MyHero    AttacksEnabled 
   MMA_IsLoaded    MMA_StopAttacks          	
                'm  1m    2          € Ŕ @@     €@Ŕ €@       	€     @€ Ŕ Ŕ@    @€ Ŕ  A @A      Ŕ€ €   €€ Ŕ €A    €€ Ŕ €A ŔA €@      @€     €€ Ŕ  B    € € Ŕ @B    € 
      _G    SxOrb    CanMove    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker    TimeToMove 
   AutoCarry 
   Orbwalker 
   MMA_IsLoaded    MMA_CanMove          	
                2m  <m    2          € Ŕ @@     €@Ŕ €@       	€     @€ Ŕ Ŕ@    @€ Ŕ  A @A      Ŕ€ €   €€ Ŕ €A    €€ Ŕ €A ŔA  B      @€     €€ Ŕ @B    € € Ŕ €B    €       _G    SxOrb 
   CanAttack    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker 
   TimeToAttack 
   AutoCarry 
   Orbwalker 	   CanShoot 
   MMA_IsLoaded    MMA_CanAttack          	
                =m  Sm   j       
€E   [   @€F Ŕ G@Ŕ [   @€F@Ŕ L€Ŕ ÇŔ@ A ]@ @€E  [   @€F Ŕ G@Á [   @€F Ŕ G€Á LŔÁ Ŕ   ]@€ €E €[   €€F Ŕ G Â [   €€F Ŕ G Â G@Â L€Â Ŕ   ]@€€€E  [   Ŕ€F Ŕ GŔÂ [   Ŕ
€F Ŕ G Ă ‡Ŕ@ Ç A ]@€@€E   [    €F Ŕ G@Ŕ [    €F@Ŕ L€Ŕ Ä   ]@€@	€E  [   @€F Ŕ G@Á [   @€F Ŕ G€Á LŔÁ Ä   ]@€ €E €[   €€F Ŕ G Â [   €€F Ŕ G Â G@Â L€Â Ä   ]@€€€E  [   Ŕ€F Ŕ GŔÂ [   Ŕ €F Ŕ G Ă „   ]@  € 
      _G    SxOrb    ForcePoint    x    z    NebelwolfisOrbWalkerLoaded    NebelwolfisOrbWalker 	   ForcePos 
   AutoCarry 
   Orbwalker    OverrideOrbwalkLocation 
   MMA_IsLoaded    MMA_MoveTo          	
                Tm  vm   ô   Ś@ B  @€ ‚  ‚AÂ  ťA  A €‡Á@ Ś@B  @€ B ‚A‚ ťA ‡Á@ ‡AŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡AŚÁA AB †‚C ÁÂ  A C Á Ä $C ťA€‡Á@ ‡AŚÁA AÂ †‚B ÁÂ ťA ‡Á@ ‡AŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡AŚÁA AB †‚E ÁÂ Ă A Ă ťA€ Á €‡Á@ Ś@B  @€ B ‚A‚ ťA ‡Á@ ‡FŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡FŚÁAÂ AB †‚C ÁÂ  A C Á Ä $C ťA€‡Á@ ‡FŚÁA AÂ †‚B ÁÂ ťA ‡Á@ ‡FŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡FŚÁA AB †‚E ÁÂ Ă A Ă ťA€ A €‡Á@ Ś@B  @€ B ‚A‚ ťA ‡Á@ ‡GŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡GŚÁAÂ AB †‚C ÁÂ  A C Á Ä $C ťA€‡Á@ ‡GŚÁA AÂ †‚B ÁÂ ťA ‡Á@ ‡GŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡GŚÁA AB †‚E ÁÂ Ă A Ă ťA€ Á €‡Á@ Ś@B  @€ B ‚A‚ ťA ‡Á@ ‡HŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡HŚÁAÂ AB †‚C ÁÂ  A C Á Ä $C ťA€‡Á@ ‡HŚÁA AÂ †‚B ÁÂ ťA ‡Á@ ‡HŚÁA AB †‚B ÁÂ ťA ‡Á@ ‡HŚÁA	 AB †‚E ÁÂ Ă A Ă ťA€ € %      addSubMenu    [    ]: Prediction Settings 	   spConfig    ]: Spell Q    qConfig 	   addParam    qqq    ||----------------||    SCRIPT_PARAM_INFO        QP    Prediction:    SCRIPT_PARAM_LIST       đ?   VPrediction    DivinePred    HPrediction    SPrediction    QCH 
   Hit Chance:     SCRIPT_PARAM_SLICE        @      @   ]: Spell W    wConfig    WP    WCH    ]: Spell E    eConfig    EP    ECH    ]: Spell R    rConfig    RP    RCH                          wm  m   4   L @ ]@ F@@ G€Ŕ XŔŔ Ŕ€F@@ G€Ŕ [   Ŕ €F@@ G Á ^ € _   F@@ G@Á [   @€F@@ G€Á [   @€F@@ G@Á GŔÁ L Â ^  _   F@@ G@Â [    €F@@ G€Â [    €FŔB G Ă X@Ă  €FŔB G Ă X€Ă  €F@@ GŔĂ L Â ^  _   G D _   €       update    _G    MMA_Loaded     MMA_Target 
   AutoCarry    Reborn_Initialised 
   Crosshair 
   GetTarget    NebelwolfisOrbWalkerInit    NebelwolfisOrbWalkerLoaded    myHero 	   charName    Fizz    Zed    NebelwolfisOrbWalker    target                          „m  †m      F @ ‡@@ Ç€@ ]€€PŔŔ _   €       GetDistance    minBBox    maxBBox        @                         ‡m  –m   '   Ä     FA@ € ]€€†‚@ ĆÂ@ ť‚ Ć‚@  €Ý‚ @ FĂ@  ÎĚÁÝ‚ ĎÂ ŤÂĆBA Ă@ @ €€ Ŕ Ý‚€Ŕ € €Ŕ € X @ €b  ăř@€€ _€ €               ipairs    Vector    myHero    normalized    CountObjectsOnLineSegment                          —m   m   "     FA@ €€] €†‚@ Ŕ   € @€ť  @€FĂ@ € Ŕ€]€Ź €€€FĂ@ €  Ŕ€ ]€†Ă@ Ŕ   €ť€@  €
Ab  ăů  €               ipairs #   VectorPointProjectionOnLineSegment    GetDistanceSqr       đ?                         ˇm  ©m      Á   A@ @ Ŕ€F‚@ €  Ŕ ]‚€ŹB€ €‚  €ÍŔŔ"  ŁAýß   €               ipairs    GetDistanceSqr       đ?                         Şm  ¸m      Ä     FA@ € ]@€†‚@ ÜB€  €Ŕ€ € @ ť‚ € €  Ŕ €Ő XŔ@ €b  ăÁű@€€ _€ €               ipairs    CountObjectsNearPos                          ąm  Ám      Á   A@ @  €  €€G‚@[B  Ŕ€FÂ@ €  Ŕ ]‚€’Á €‚  €Í@Á"  Łüß   €               pairs    dead    GetDistanceSqr        @      đ?                         Âm  Ëm         Á@  @ Á@AA  á €Ć@ ĚÁ@ Ý€Ű  €€BÁF‚A GBÁ@@€ÂÁB  €€B @  €€‚€@   €Ť@@ŕ@úź   € 	                 đ?   heroManager    iCount    getHero    team    myHero    dead    GetDistance                          Ěm  Ôm         Ć@@ @ € Ý  Ŕ€Ű  @€ÂŔB  €€A @  €€‚€@   €Ť@Aâ€  cAüź   €               pairs    GetEnemyHeroes    dead    GetDistance       đ?                         Őm  ám   4   L@]A K  †A@ Ç@ťŔ€ÇÂ@Ű   €ÇAŰB  @€ĆBA A @ Ý‚€Ŕ€Ŕ€ĆÂA    @€ € ÝÂ    €FCA €€Ŕ ]€‡BŤ € €FCB GÂ€€Ŕ ]C€˘  #B÷•€€…Ŕ €€ Ŕ€ź€€ €  Ŕ€ź€ €       update    pairs    objects    valid    dead    GetDistance    myHero #   VectorPointProjectionOnLineSegment    boundingRadius    table    insert                                  âm  ôm   J     K    ĆA@ ÇŔ  ˇ€†B@ ŚÂ@ €ť‚€ÇACA AX Ŕ€Ç‚AŰB   €ĆÂA ÇÂ €@ ÝB€ Aű†AB Ŕ€ťŔ€Ç‚BŰ   €Ç‚AŰB  @€ĆÂB CA @ Ý‚€Ŕ€Ŕ€ĆC    @€ € ÝÂ    €FĂB €€Ŕ ]€‡CCŤ € €FĂA GÂ€ Ŕ ]C€˘  #B÷• €‡Ŕ €€ Ŕ ź€€ €  Ŕ ź€ €          đ?   heroManager    iCount    GetHero    team    myHero    dead    table    insert    pairs    valid    GetDistance #   VectorPointProjectionOnLineSegment    boundingRadius                                  őm  ÷m      F @ €   Ç@@ ]€€P€Ŕ _   €       GetDistance    minBBox        @                         řm  n   F   Ű@    €Á   Ć@ ÇÁŔ FBA †‚@ ‡‚AĆ‚@ ÇÂÁĂ „Ý‚ ť‚ ‚‚„] Ý  Ŕ€Ć@ ÇÂĎÁ„B@ Đ‚Ŕ€ĎŔÂË   F‚@ G‚ÂOB„†B@ M‚‚†B@ !Â€CC FC †@ ‡ĂCŔ€ť ŹŤ Ŕ€ „@ D@€„ „]   U€MCÄ†D ÇĂDEť€Ę ‚ůBE @€śB   €B ÜB€  €Á‚ B  €         Ŕr@   quality    math    max        @   round    deg    asin        @     €f@   pi q=
×Łpí?           WorldToScreen    D3DXVECTOR3    cos    sin       đ?   D3DXVECTOR2    x    y    DrawLines2   ŕ˙˙˙ďA                         n  n        €@€F@@ G€Ŕ ŤŔ@ ^  _    €F@@ G Á ŽŔ@ ^  _    €               math    floor       ŕ?   ceil                          	n  n   1   F@ €  Ŕ€   ] †@ ĆA@ ÇŔB@ Â@FB@ GÁť ÎĚAÁÝ ĎÁ€ÎÁ‚A FÂA ‡‚ŔÇÂŔÁ] ‚  FB ‹‚  Ç‚@ŠÂÇÂ@ŠÂ‚Ë‚  @ĘĂ@Ę]‚€[   €FBB €  Ŕ€   @€ Ŕ Ä ]B  €       Vector 
   cameraPos    x    y    z    normalized    WorldToScreen    D3DXVECTOR3 	   OnScreen    DrawCircleNextLvl       đ?     ŔR@                         n  %n    	"    @ @@ E € €  €€   @€AŔ  I  A  … €•  Á  a@€E A Ć‚ V‚I ` ţE  Ŕ V€€ I  F ÁX Â  €L@B Ĺ  ]@€L€B ]@  €       io    open    w 	   return {       đ?   '    ',     }     write    close          
                4n  ˇn   	r     ‰   H€Ŕ€XŔ@ €M€‡ A @AŔL€XŔŔ Ŕ€Ś€A ÁÁ ť€€‡ BXŔ@@€Ś€A AÂ ť€€‡ BXŔ@Ŕ€Ś€A Â ť€€‡ BXŔ@@€Ś€A ÁÂ ť€€‡ BŔ@€ €  Ć@Ŕ ź €Ś@Ă  ť€€›@   €Ś@Ă Á ť€€›   € €  ‰   @6€Ś@Ă A ť€€›   @ €€Ä Ŕ€Ś@Ă Á ť€€›@  €€Ś@Ă  ť€€›@  @€X@Ĺ Ŕ€X€Ĺ @€XŔĹ Ŕ €X Ć @ €@Ć € €€ ‰   Ŕ.€Ś@Ă Á ť€€›@   €Ś@Ă  ť€€›   € €@ ‰   €+€Ś€A ÁÁ ť€€‡ BŚ@C € ť€€›   € €€ ‰   €(€Ś€A AÂ ť€€‡ BŚ@C € ť€€›   € €Ŕ ‰   €%€Ś€A Â ť€€‡ BŚ@C € ť€€›   € €  ‰   €"€Ś€A ÁÂ ť€€‡ BŚ@C € ť€€›   € €@ ‰   €€Ś@Ă  ť€€›@  €€Ś@Ă Á ť€€›@  @ € É € €€ ‰   Ŕ€…    @ €€  Ĺ  Ő €  ˇ€€ŚAĂ Bť€›  @ €A	 ‰   Ŕý…    @ €€  Ĺ €Ő €  ˇ€€ŚAĂ Bť€›  @ €	 ‰   Ŕý…    @ €€  Ĺ  Ő €  ˇ€€ŚAĂ Bť€›  @ € ‰   Ŕý…    @ €€  Ĺ €Ő €  ˇ€€ŚAĂ Bť€›  @ € ‰   Ŕý…    @ €€  Ĺ  Ő €  ˇ€€ŚAĂ Bť€›  @ €Á ‰   Ŕý…    @ €€  Ĺ €Ő €  ˇ€€ŚAĂ Bť€›  @ € ‰   Ŕý…    @ €€  Ĺ  Ő €  ˇ€€ŚAĂ Bť€›  @ €A ‰   Ŕý€  Ĺ €Ő €  ˇ€€†A€ Ŕ €…  ÁÁ	 –Á‰   Ŕý…    @  €@   € Ĺ  Ő €Ŕ ”Ŕ€›@  @€Á€    A  áŔ €ĆŔ   € € ŕ€ţ›@  Ŕ€Ć@Ę Ç€Ę @€ Ý@€ĆŔĘ Ý@€ Ć Ë A @€ AÝ@ €  Ĺ €Ő €  ˇŔ €†A€   €H€Ë€ €ţ€  Ĺ  Ő €  ˇŔ €†A€   €HŔË€ €ţ€  Ĺ €Ő €  ˇŔ €†A€   €H Ě€ €ţ€  Ĺ  Ő €  ˇŔ €†A€   €H@Ě€ €ţ€  Ĺ €Ő €  ˇŔ €†A€   €H€Ě€ €ţ…   Ć@Ŕ ź € € 3      Unknown 	   casttype       đ?    type 
   AIHeroClient 
   GetSpellData    _Q    name    _W    _E    _R    Error name nil    find    SionBasicAttackPassive    zyrapassive    P    BasicAttack    SejuaniBasicAttackW    basicattack    JayceRangedAttack    SonaQAttack    SonaWAttack    SonaEAttack    ObduracyAttack    GnarBigAttackTower    BAttack    CritAttack    critattack    CAttack    Q    W    E    R 	   Summoner 	   summoner    teleportcancel    Other    Item    M            table    insert    writeConfigsspells    print !   Skill Detector - Unknown spell:         @      @      @      @      @         
                ¨n  Şn   	   K €@  Á€  Á  A A d@€@ € €       names    summonerdot    summonerflash    summonerexhaust 
   summonerheal    summonersmite                          «n  °n         Ě @ @€ Ý€€X@Ŕ€€@ Á@€€€FA X@  €@   € ź   €       GetSlot     myHero    CanUseSpell    READY                          ±n  ¸n      † @ Ś@@@ ť€€‡Ŕ@Ś A € ť€€›   @ €†€@ ź  † @ Ś@@AA ť€€‡Ŕ@Ś A € ť€€›   @ €†@A ź   €       myHero 
   GetSpellData    SUMMONER_1    name    find    SUMMONER_2                          żn  o   _   K@ J€Ŕ€J€ŔJ@A‚JŔAJ@B„JŔB…J@C†JŔC‡J@DJŔD‰J@EŠJŔE‹J@FŚJŔFŤJ@GŽJŔGŹJ@HJŔH‘J@I’JŔI“J@J”JŔJ•J@K–JŔK—J@LJŔL™JŔKšJ€ÍšJ Î›J€ÎśJ ĎťJ€ĎžJ€ĎźJ@P JŔPˇJ@Q˘JŔQŁJ@R¤JŔRĄJ@S¦JŔS§J@T¨JŔT©J@CŞJ€ŐŞJ€Ő«JŔT¬J@Ä¬JŔV­JŔB®J€×®J ŘŻJŔË°JŔS±J Ů±J Ů˛JŔYłJŔY´J€Ú´JŔĂµJ@[¶JŔ[·J@\¸J@[ąJ ÝąJ€ÝşJ Ţ»J€ŢĽJ ß˝J€ßľ@ €FŔ_ J@`ŔFŔ_ JŔ`ÁFŔ_ J@aÂFŔ_ JŔaĂFŔ_ J@bÄFŔ_ JŔbĹFŔ_ J@cĆFŔc †Ŕ_ Á $ ]€€@ ÇFŔ_ †@d J€ Č € ’   
   ItemNames      Î©@   ArchAngelsDummySpell      ~§@     ¨@   BilgewaterCutlass      č¨@   ItemBlackfireTorch      ˘¨@   ItemSwordOfFeastAndFamine      šŞ@   TrinketSweeperLvl1      ¦Ş@   TrinketOrbLvl1      Ľ¨@   TrinketTotemLvl1      ôŞ@   OdinTrinketRevive      äź@   ItemCrystalFlask       @   ItemKingPoroSnack      ´ @
   ElixirOfIron      ˛ @
   ElixirOfRuin      ¶ @   ElixirOfSorcery      ¸ @   ElixirOfWrath      ŕ¨@   OdinEntropicClaymore       @
   ItemMiniWard      ’Ş@   HealthBomb      FŞ@   TrinketOrbLvl3      (¨@   ItemGlacialSpikeCast      «@   AscWarp      BŞ@   TrinketTotemLvl3      DŞ@   TrinketTotemLvl4      ®¨@   HextechSweeper       @	   ItemHorn      ”¨@   HextechGunblade      ć¨@     ě¨@   IronStylus      Pź@   FlaskOfCrystalWater      †¨@   ItemMercurial      ,©@   ItemMorellosBane      Ä§@	   Muramana      Ć§@     Ř¨@
   OdynsVeil      ŕ§@   ItemFaithShaker      üź@   OracleExtractSight      HŞ@   TrinketSweeperLvl3       @   ItemPoroSnack      ¨@   QuicksilverSash      Ž¨@
   RanduinsOmen      ¨@   ItemTiamatCleave      °­@   ItemRighteousGlory      ôź@   ItemGhostWard      Ş@     Ŕ§@   ItemSeraphsEmbrace      Đ§@      @     "Ş@     đź@
   SightWard      Ş@     ú§@   shurelyascrest      ¬@   KalistaPSpellCast      â¨@     
¨@     dź@   ItemMiniRegenPotion      hź@     ž§@   ItemWraithCollar      ´©@     ěź@   VisionWard      Ş@     $¨@   ZhonyasHourglass      ¤¨@   wrigglelantern      Ś¨@   YoumusBlade      Ş¨@     p«@
   ItemVoidGate      v¨@	   ItemSoTD      ‚¨@   ItemDervishBlade      0Ş@
   RelicSpotter      ,Ş@   TrinketTotemLvl2      H­@   ItemTitanicHydraCleave    _G    ITEM_1       @   ITEM_2       @   ITEM_3        @   ITEM_4       "@   ITEM_5       $@   ITEM_6       &@   ITEM_7       (@   ___GetInventorySlotItem    rawget    GetInventorySlotItem    GetSlotItem                          o  o   "   [@    €F @ †@@ ‡  ›@   €†€@ Ŕ    € ž €ź   †@@ ‡  ĆŔ@ A AA á@€ĚÁ @ Ý€ÇÁÁ€ „€€BÂ‚ LBB]‚ @  €ź ŕ ü € 
      myHero 
   ItemNames    ___GetInventorySlotItem    ITEM_1    ITEM_7       đ?
   GetSpellData    name            lower                           o  Bo   ç   [@    € € Ś Ŕ A  A  ť@ ‡€Ŕ ŚŔ@ AA †A Ă€ ť@ ‡€Ŕ ŚŔ@Á A †AB Á Â A Â ť@€‡€Ŕ ŚŔ@A A †AB ÁÁ Â A Â ť@€Ś Ŕ  AA ť@ ‡@Ä ŚŔ@ AÁ †A Ă€ ť@ ‡@Ä ŚŔ@ A †AB Á Â A Â ť@€‡@Ä ŚŔ@A A †AB ÁÁ Â A Â ť@€Ś Ŕ  AÁ ť@ ‡ŔĹ ŚŔ@ AA †A Ă€ ť@ ‡ŔĹ ŚŔ@ A †AB Á Â A Â ť@€‡ŔĹ ŚŔ@Á A †AB ÁÁ Â A Â ť@€Ś Ŕ  AA ť@ ‡@Ç ŚŔ@ AÁ †A Ă€ ť@ Ś Ŕ  AA ť@ ‡@Č ŚŔ@ AÁ †A Ă€ ť@ Ś Ŕ 	 AA	 ť@ ‡@É ŚŔ@	 AÁ	 †A Ă€ ť@ ‡@É ŚŔ@
 AA
 †AB Á
 Â AÂ
 Â ť@€‡@É ŚŔ@ AA †AB Á Â AÂ Â ť@€Ś Ŕ  AA ť@ ‡@Ě ŚŔ@ AÁ †A Ă€ ť@ Ś Ŕ 
 AA
 ť@ ‡@Í ŚŔ@
 AÁ
 †A Ă€ ť@ ‡@Í ŚŔ@ AA †A Ă€ ť@ ‡@Í ŚŔ@ AÁ †A Ă€ ť@ ‡@Í ŚŔ@ AA †A Ă€ ť@ ‡@Í ŚŔ@ AÁ †A Ă€ ť@ Ś Ŕ  AA ť@ ‡@Đ ŚŔ@ AÁ †A Ă€ ť@ ‡@Đ ŚŔ@ AA †AB Á Â A Â ť@€‡@Đ ŚŔ@Á A †AB ÁA Â A‚ Â ť@€ € K      addSubMenu    Blade of the Ruined King    botrks 	   addParam 	   USEBOTRK    Use Blade of the Ruined King    SCRIPT_PARAM_ONOFF    USEBOTRKMHP    My Hero Min. HP%    SCRIPT_PARAM_SLICE      €V@              Y@   USEBOTRKEHP    Enemy Min. HP%      €Q@   Bilgewater Cutlass    bcs    USEBC    Use Bilgewater Cutlass 	   USEBCMHP 	   USEBCEHP    Hextech Gunblade    hgbs    USEHGB    Use Hextech Gunblade 
   USEHGBHPM 
   USEHGBHPE    Ravenous/Titanic Hydra    rhs    USERH    Use Ravenous/Titanic Hydra    Tiamat    tis    USETI    Use Tiamat    Youmuu's Ghostblade    ygs    USEYG    Use Youmuu's Ghostblade    USEYGD    Range For Scan Enemy      Ŕ’@     p§@   USEYGC    Min. Enemy Count       đ?      @   Randuin's Omen    ros    USERO    Use Randuin's Omen    QSS    mss    USEMS    Use QSS    USEMSS    Stun    USEMST    Taunt    USEMSR    Root    USEMSC    Charm    Zhonya's Hourglass    zh    USEZH    Use Zhonya's Hourglass    USEZHHP    Min HP To Cast Zhonya       4@   USEZHR    Must Have 0 Enemy In Range:       Ś@     p—@                         Co  ko   ˛   Ç @Ç@ŔŰ    €Ç€Ŕ ÁŔ Đ Ď Á@AA  €Ć€A Ç€ŔA Á@Đ Ď Á@ÁA € €Ě B @€ Ý@€Ç@BÇ€ÂŰ    €Ç€Ŕ ÁŔ Đ Ď ÁABÁB  €Ć€A Ç€ŔA Á@Đ Ď ÁABC € €Ě@C @€ Ý@€Ç€CÇŔĂŰ    €Ç€Ŕ ÁŔ Đ Ď ÁCD  €Ć€A Ç€ŔA Á@Đ Ď ÁCAD € €Ě€D @€ Ý@€ÇŔDÇ ĹŰ   € €Ě@E @€ Ý@€Ç€EÇŔĹŰ   € €Ě F @€ Ý@€Ç@FÇ€ĆŰ   Ŕ€ĆŔF A GAFGÇÝ€€AFAGŔ € €Ě€G @€ Ý@€ÇŔGÇ ČŰ   € €Ě@H @€ Ý@€Ç€HÇŔČŰ   @	€Ě I FA Ý€€Ű   Ŕ €Ç€HÇ@ÉŰ@  €€Ě€I FA Ý€€Ű   Ŕ €Ç€HÇŔÉŰ@  @€Ě J FA Ý€€Ű   Ŕ €Ç€HÇ@ĘŰ@   €Ě€J FA Ý€€Ű   @€Ç€HÇŔĘŰ   @ €Ě K Ý@ Ç@KÇ€ËŰ   €€Ć€A Ç€ŔA Á@Đ Ď ÁAKÁK  €ĆŔF A GAKGĚÝ€€@Ě@ €Ě€L Ý@  € 3      botrks 	   USEBOTRK    health 
   maxHealth       Y@   USEBOTRKEHP    myHero    USEBOTRKMHP 	   UseBotrk    bcs    USEBC 	   USEBCEHP 	   USEBCMHP    UseBc    hgbs    USEHGB 
   USEHGBHPE 
   USEHGBHPM    UseHgb    rhs    USERH    UseRh    tis    USETI    UseTi    ygs    USEYG    EnemyCount    USEYGD    USEYGC    UseYg    ros    USERO    UseRo    mss    USEMS 	   HaveStun    USEMSS 
   HaveTaunt    USEMST 	   HaveRoot    USEMSR 
   HaveCharm    USEMSC    UseMs    zh    USEZH    USEZHHP    USEZHR            UseZh                          lo  so   	      Ç@Ŕ   ˇ€€ŚŔ  €ť€ÇÁ@ Á €ÇAA€Á@ €Ă€ ß  Ŕü €          đ?
   buffCount    getBuff    valid    type       @                        to  {o   	      Ç@Ŕ   ˇ€€ŚŔ  €ť€ÇÁ@ Á €ÇAA€Á@ €Ă€ ß  Ŕü €          đ?
   buffCount    getBuff    valid    type        @                        |o  o   	      Ç@Ŕ   ˇ€€ŚŔ  €ť€ÇÁ@ Á €ÇAA€Á@ €Ă€ ß  Ŕü €          đ?
   buffCount    getBuff    valid    type       &@                        „o  ‹o   	      Ç@Ŕ   ˇ€€ŚŔ  €ť€ÇÁ@ Á €ÇAA€Á@ €Ă€ ß  Ŕü €          đ?
   buffCount    getBuff    valid    type       6@                        Śo  “o   	      Ç@Ŕ   ˇ€€ŚŔ  €ť€ÇÁ@ Á €ÇAA€Á@ €Ă€ ß  Ŕü €          đ?
   buffCount    getBuff    valid    type       $@                        ”o  ›o      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű    €A @€  ŔAŔ €B @ €€ A€ € 	      GetInventorySlotItem      ˘¨@    myHero    CanUseSpell    READY    GetDistance       |@
   CastSpell                          śo  Ło      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű    €A @€  ŔAŔ €B @ €€ A€ € 	      GetInventorySlotItem      ¨@    myHero    CanUseSpell    READY    GetDistance       |@
   CastSpell                          ¤o  «o      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű    €A @€  ŔAŔ €B @ €€ A€ € 	      GetInventorySlotItem      ”¨@    myHero    CanUseSpell    READY    GetDistance      ŕ…@
   CastSpell                          ¬o  ło   !   [@    € € † @ Á@  ť€ ›@  € €† @ Á€  ť€ XŔ@€€Ć A Ě@Á@ Ý€€A X   €Ă@  Ă € Ű   Ŕ€ÁA @€   B€ €AB @ A  € 
      GetInventorySlotItem      ¨@     H­@    myHero    CanUseSpell    READY    GetDistance      ŕu@
   CastSpell                          ´o  »o      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű   Ŕ€A @€  ŔA€ €B @ A  € 	      GetInventorySlotItem      
¨@    myHero    CanUseSpell    READY    GetDistance      ŕu@
   CastSpell                          Ľo  Ăo      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű   € €A @ A  €       GetInventorySlotItem      Ś¨@    myHero    CanUseSpell    READY 
   CastSpell                          Äo  Ëo   !   [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű    €A @€  FÁA LÂŔ€ ]€MA„@€ €B @ A  €       GetInventorySlotItem      Ž¨@    myHero    CanUseSpell    READY    GetDistance    VP 
   GetHitBox      0q@
   CastSpell                          Ěo  Óo      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű   € €A @ A  €       GetInventorySlotItem      †¨@    myHero    CanUseSpell    READY 
   CastSpell                          Ôo  Űo      [@    € € † @ Á@  ť€ X€@€€ĆŔ@ Ě Á@ Ý€€AA X   €Ă@  Ă € Ű   € €A @ A  €       GetInventorySlotItem      Ş¨@    myHero    CanUseSpell    READY 
   CastSpell                          ŕo  ço       A   ‡@@ Á   a@€L@ Ŕ ]€‡ÁŔ AŔ€‡AÁX€A€€‡AÁXŔAŔ€‡AÁX B €‡AÁX@B@€‡AÁX€B€ €‡AÁŔB@ €€ ź ` ů €          đ?
   buffCount    getBuff    valid    type       @      &@      8@      6@      5@       @                        čo  őo   4   F @ @  ]€ X€Ŕ €€†Ŕ@ Ś A € ť€€Ć@A XŔ   €@   € Á€ ÁA BA á€€ĆÁA ĚAÂ@ Ý€‚ÂFÂ@ G‚Â@@€ÂB @€ ‚€  Ŕ€BĂG‚ĂBÂCY   €D @€‚    €›   € €BD @€ B ŕŔ÷ €       GetInventorySlotItem      ,©@    myHero    CanUseSpell    READY       đ?   heroManager    iCount    GetHero    team    ValidTarget      p‡@   health 
   maxHealth       Y@	   HaveBuff 
   CastSpell                          öo   p   )   F @ @  ]€ X€Ŕ €€†Ŕ@ Ś A € ť€€Ć@A XŔ   €@   € Ć€A ÁA € Ý  €€B @€B ‚€   €‚ÂGÂÂBC  €€›    €BC @€ ‡‚ĂÇÂĂB â€  cú €       GetInventorySlotItem      (¨@    myHero    CanUseSpell    READY    ipairs    GetEnemyHeroes    ValidTarget      €‹@   health 
   maxHealth       Y@
   CastSpell    x    z                          p  p   /   F @ @  ]€ X€Ŕ €€†Ŕ@ Ś A € ť€€Ć@A XŔ   €@   € Á€ ÁA BA á@€ĆÁA ĚAÂ@ Ý€‚ÂFÂ@ G‚Â@ €ÂB @€ ‚€  €€BĂG‚ĂBÂC   €›   € €D @€ B ŕ ů €       GetInventorySlotItem      ě¨@    myHero    CanUseSpell    READY       đ?   heroManager    iCount    GetHero    team    ValidTarget      ŕ…@   health 
   maxHealth       Y@
   CastSpell                          p  p   '   F @ @  ]€ X€Ŕ €€†Ŕ@ Ś A € ť€€Ć@A XŔ   €@   € Ć€A ÁA € Ý   €B @€B ‚€  €€‚ÂGÂÂBC   €›   € €BC @€ B â€  cű €       GetInventorySlotItem      ž§@    myHero    CanUseSpell    READY    ipairs    GetEnemyHeroes    ValidTarget      @Ź@   health 
   maxHealth       Y@
   CastSpell                          p  #p   !   F @ †@@ ť € ]   €†@ Ŕ€Â  ť€›  €€‡ÁÇAÁÁŹA   €†ÁA ŚBB ť€›  €€ĆB ÂA ÂBB ‚€@€ÝA€b€  ă ů €       ipairs    GetEnemyHeroes    ValidTarget      0@   health 
   maxHealth       Y@   SSpells    Ready    summonerexhaust 
   CastSpell    GetSlot                          $p  0p   )   A   †@@ ‡€@Á   a@€FA@ LÁŔŔ ]€‡ÁĆAA ÇÁŔ €†A Ŕ€Â ť€›  €€‡ÂÇAÂÁŹB   €†ÁB ŚCB ť€›  €€ĆC ÂB ÂCB ‚€FD ÝA€` ÷ €          đ?   heroManager    iCount    GetHero    team    myHero    ValidTarget      ŕ…@   health 
   maxHealth       Y@   SSpells    Ready 
   summonerheal 
   CastSpell    GetSlot    enemy                          6p  Îp  
 !Ń  F@ €€ ] [  €p€X@@@ €\C   €A  X@Ŕ@ €śC€  €Ă  X@@@ €ÜC @ €ĆA ÇCÁX@Ŕ@ €D€@ €A DAX@Ŕ@ €\D€  €A„ X@@@ €śD   €  X@Ŕ@ €ÜD€  €Ă  ĹA X@@
€ €ĹA E    € X@@@ €\E   €FEB X@@@ €€ @ €E  € X@@@ €ÜE   €Á… Ŕ@ @%€€   €$€ŔÂ€€Ű  €€C FC€€ Ŕ€  @€€ Ŕ€
F@†@€  C€ € 
Ŕ€
€ [€  C  € 
Ŕ€
€€Y€C †C€€ Ŕ€  @€€ Ŕ€
  	@† €Ŕ € @ 
ß @U€Ŕ   @ 
ß  T€€Á€€Ű  €€C ĆC€€ Ŕ€  @€€ Ŕ€
F@†@€  C€ € 
Ŕ€
€ŔN€  C  € 
Ŕ€
€@M€C D€€ Ŕ€  @€€ Ŕ€
  	@† €Ŕ € @ 
ß  I€Ŕ   @ 
ß ŔG€@Ä@G€Ű  €€C †D€€ Ŕ€  @€€ Ŕ€
F@†@€  C€ € 
Ŕ€
€€B€  C  € 
Ŕ€
€ A€C †C€€ Ŕ€  @€€ Ŕ€
  	@† €Ŕ € @ 
ß Ŕ<€Ŕ   @ 
ß €;€€B Ŕ€    €  ›  € €A†  [F  @ €FA GFÁŔÂ €†ĆD Ŕ  €@ ŹĹŔ€ť†   
 €€Á €†FE Ŕ  €@ ŹĹŔ€ť†   
@€@ÄŔ€††E Ŕ  €@ ŹĹŔ€ť†   
†ĆE ŚF
 €@ G ťF€†ĆE Ś†F
 €@€ †ÇF Ŕ€
ť ť @€
€ ĆÇF  € Ý _   +€ G  $€€  @#€F K  XŔÂ@ €@Ä€€Ź…†A ‡FA
X€€ €† J„Ź  € ›  @ €J†„J†‘†ĆH @D
@€†A ‡I
ĆFI  € @€
Ý†€ĐĆ
Ç  ť†€ŹJ†“ŔIŔ€JFJ”@€€ÁŔ€J†•†A ‡FA
X€€ €Ć
 J„Ź  €F  K  €JFJ”JĆ–JF—J†—Ű  @€›   €†L ŚFL
  @€ €€
Ŕ€	ťŔ†@€@ 
€ Ŕ   
_€€€@ 
  Ŕ   
_€ €†L ŚFL
‡L @€‡ @€ €€
Ŕ€	ťŔ†@€@ 
€ Ŕ   
_€Ŕ€@ 
  Ŕ   
_€@€›  @€†L ŚFL
  @€ €€
ťĆ€Ŕ† €  
C€ € 
 €€  
C  € 
 @€†L ŚFL
‡L @€‡ @€ €€
ťĆ€Ŕ† €  
C€ € 
 €€  
C  € 
 @€ŔL Ŕ€    €M FM€€ Ŕ€  @€€ Ŕ 	 €
@† €Ŕ € @ 
ß Ŕ €Ŕ   @ 
ß FĂF €€ ]   ĆĂF  € Ý _   € 6      ValidTarget                đ?   math    huge    circle 	   accuracy      €K@   myHero        @   line    VP    GetLineAOECastPosition    GetLineCastPosition    GetCircularAOECastPosition    GetCircularCastPosition    cone    GetConeAOECastPosition    LineSS      @Ź@	   CircleSS    ConeSS    DP    bindSS       I@   predict    Vector       @
   PromptCircle 
   DelayLine    speed    PromptLine    collisionM    collisionH    sskilltype    min    GetDistance    width       ^@   IsVeryLowAccuracy    radius    DelayCircle      €V@   range    delay    type    HP    GetPredict    HPSkillshot       @   SP    Predict                          Ôp  0q   
X  F @ ]€€ L@Ŕ Á€  Á  ]€  Á €€K  †@A J€A†ŔA J B†@B J€B†ŔB J C†@C Á€ ť€ Š Ä‡Ě@DFD GÁÄÝ@€Ě EAA Ý@€Ě EG€ Ý@€Á€   A  á€ €ĚEAÂ ÝA€ŕŔţÁ€   A  á€ €ĚEA ÝA€ŕŔţÁ€   A  á€ €ĚEAB ÝA€ŕŔţÁ€   A  á€ €ĚEA‚ ÝA€ŕŔţĆŔF   Ý@ ŔD€F @ ]€€ L@Ŕ Á€  Á  ]€  Ç €€K  †@A J@G†ŔA J€G†@B JŔG†ŔB J@E†@C Á  ť€ Š@Č‡Ě@DFD GÁÄÝ@€Ě EA Ý@€Á€   A  á€ €ĚEAÂ ÝA€ŕŔţÁ€   A  á€ €ĚEA‚ ÝA€ŕŔţĚ EG€ Ý@€Á€   A  á€ €ĚEA	 ÝA€ŕŔţÁ€   A  á€ €ĚEA‚ ÝA€ŕŔţĆŔF   Ý@  4€F @ ]€€ L@Ŕ Á€  Á  ]€ @É €€K  †@A J@G†ŔA J€G†@B JŔG†ŔB J@E†@C Á  ť€ Š€É‡Ě@DFD GÁÄÝ@€Ě EA Ý@€Á€   A  á€ €ĚEAÂ ÝA€ŕŔţÁ€   A  á€ €ĚEA‚ ÝA€ŕŔţĚ EG€ Ý@€Á€   A  á€ €ĚEA	 ÝA€ŕŔţÁ€   A  á€ €ĚEA‚ ÝA€ŕŔţĆŔF   Ý@ @#€F @ ]€€ L@Ŕ Á€  Á  ]€ ŔÉ €€K  †@A J J†ŔA J@J†@B J€J†ŔB JŔJ†@C Á  ť€ Š@Ë‡Ě@DFD GÁÄÝ@€Ě EG€ Ý@€Ě EA Ý@€Á€   A  á€ €ĚEAÂ ÝA€ŕŔţÁ€   A  á€ €ĚEA ÝA€ŕŔţÁ€   A  á€ €ĚEAB ÝA€ŕŔţĚ EA Ý@€Ě EAÁ Ý@€Ě EA
 Ý@€Ě EA Ý@€ĆŔF   Ý@ €€F @ ]€€ L@Ŕ Á€  Á  ]€ @Í €€K  †@A J€M†ŔA JŔM†@B J N†ŔB J F„   Ć@C A Ý€ € €Š€Î‡Ě@DFD GÁÄÝ@€Á€   A  á€ €ĚEAÂ ÝA€ŕŔţÁ€   A  á€ €ĚEA ÝA€ŕŔţĚ EG€ Ý@€Ě EAA Ý@€Á€   A  á€ €ĚEA‚ ÝA€ŕŔţĚ EA  Ý@€Á€  Á A  á€ €ĚEA‚ ÝA€ŕŔţĆŔF   Ý@  € @      GetGameVersion    sub       đ?      $@   5.24.0.249    _Q       >@   _W      `j@   _E       M@   _R       e@   CLoLPacket      Ŕf@   vTable    €$ĆoA   EncodeF    myHero 
   networkID    Encode1       h@      @     ŔX@      h@     €Z@           SendPacket    5.23.0.247      @X@      `@      d@     €I@   €ÂŮmA     Ŕ\@      o@      c@   5.23.0.239     ÝŞlA   5.22.0.289       g@     @g@     @^@     Ŕ^@      T@   €µqnA      N@     Ŕn@     €W@      l@      B@      n@     €C@   5.21.0.297       `@     @Q@      5@      s@    l¶mA     @U@      ]@     `f@     ŔS@      @                                             "), FILE_NAME, "bt", _ENV)()
--COPY LINE